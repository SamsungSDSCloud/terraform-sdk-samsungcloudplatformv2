/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"encoding/json"
)

// checks if the VolumeSnapshotScheduleResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeSnapshotScheduleResponse{}

// VolumeSnapshotScheduleResponse struct for VolumeSnapshotScheduleResponse
type VolumeSnapshotScheduleResponse struct {
	// Day of week
	DayOfWeek *DayOfWeek `json:"day_of_week,omitempty"`
	// Frequency DAILY|WEEKLY|NONE
	Frequency *SnapshotFrequency `json:"frequency,omitempty"`
	// Hour
	Hour *int32 `json:"hour,omitempty"`
	// Volume id
	VolumeId *string `json:"volume_id,omitempty"`
}

// NewVolumeSnapshotScheduleResponse instantiates a new VolumeSnapshotScheduleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeSnapshotScheduleResponse() *VolumeSnapshotScheduleResponse {
	this := VolumeSnapshotScheduleResponse{}
	var dayOfWeek DayOfWeek = ""
	this.DayOfWeek = &dayOfWeek
	return &this
}

// NewVolumeSnapshotScheduleResponseWithDefaults instantiates a new VolumeSnapshotScheduleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeSnapshotScheduleResponseWithDefaults() *VolumeSnapshotScheduleResponse {
	this := VolumeSnapshotScheduleResponse{}
	var dayOfWeek DayOfWeek = ""
	this.DayOfWeek = &dayOfWeek
	return &this
}

// GetDayOfWeek returns the DayOfWeek field value if set, zero value otherwise.
func (o *VolumeSnapshotScheduleResponse) GetDayOfWeek() DayOfWeek {
	if o == nil || IsNil(o.DayOfWeek) {
		var ret DayOfWeek
		return ret
	}
	return *o.DayOfWeek
}

// GetDayOfWeekOk returns a tuple with the DayOfWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshotScheduleResponse) GetDayOfWeekOk() (*DayOfWeek, bool) {
	if o == nil || IsNil(o.DayOfWeek) {
		return nil, false
	}
	return o.DayOfWeek, true
}

// HasDayOfWeek returns a boolean if a field has been set.
func (o *VolumeSnapshotScheduleResponse) HasDayOfWeek() bool {
	if o != nil && !IsNil(o.DayOfWeek) {
		return true
	}

	return false
}

// SetDayOfWeek gets a reference to the given DayOfWeek and assigns it to the DayOfWeek field.
func (o *VolumeSnapshotScheduleResponse) SetDayOfWeek(v DayOfWeek) {
	o.DayOfWeek = &v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *VolumeSnapshotScheduleResponse) GetFrequency() SnapshotFrequency {
	if o == nil || IsNil(o.Frequency) {
		var ret SnapshotFrequency
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshotScheduleResponse) GetFrequencyOk() (*SnapshotFrequency, bool) {
	if o == nil || IsNil(o.Frequency) {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *VolumeSnapshotScheduleResponse) HasFrequency() bool {
	if o != nil && !IsNil(o.Frequency) {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given SnapshotFrequency and assigns it to the Frequency field.
func (o *VolumeSnapshotScheduleResponse) SetFrequency(v SnapshotFrequency) {
	o.Frequency = &v
}

// GetHour returns the Hour field value if set, zero value otherwise.
func (o *VolumeSnapshotScheduleResponse) GetHour() int32 {
	if o == nil || IsNil(o.Hour) {
		var ret int32
		return ret
	}
	return *o.Hour
}

// GetHourOk returns a tuple with the Hour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshotScheduleResponse) GetHourOk() (*int32, bool) {
	if o == nil || IsNil(o.Hour) {
		return nil, false
	}
	return o.Hour, true
}

// HasHour returns a boolean if a field has been set.
func (o *VolumeSnapshotScheduleResponse) HasHour() bool {
	if o != nil && !IsNil(o.Hour) {
		return true
	}

	return false
}

// SetHour gets a reference to the given int32 and assigns it to the Hour field.
func (o *VolumeSnapshotScheduleResponse) SetHour(v int32) {
	o.Hour = &v
}

// GetVolumeId returns the VolumeId field value if set, zero value otherwise.
func (o *VolumeSnapshotScheduleResponse) GetVolumeId() string {
	if o == nil || IsNil(o.VolumeId) {
		var ret string
		return ret
	}
	return *o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshotScheduleResponse) GetVolumeIdOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeId) {
		return nil, false
	}
	return o.VolumeId, true
}

// HasVolumeId returns a boolean if a field has been set.
func (o *VolumeSnapshotScheduleResponse) HasVolumeId() bool {
	if o != nil && !IsNil(o.VolumeId) {
		return true
	}

	return false
}

// SetVolumeId gets a reference to the given string and assigns it to the VolumeId field.
func (o *VolumeSnapshotScheduleResponse) SetVolumeId(v string) {
	o.VolumeId = &v
}

func (o VolumeSnapshotScheduleResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeSnapshotScheduleResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DayOfWeek) {
		toSerialize["day_of_week"] = o.DayOfWeek
	}
	if !IsNil(o.Frequency) {
		toSerialize["frequency"] = o.Frequency
	}
	if !IsNil(o.Hour) {
		toSerialize["hour"] = o.Hour
	}
	if !IsNil(o.VolumeId) {
		toSerialize["volume_id"] = o.VolumeId
	}
	return toSerialize, nil
}

type NullableVolumeSnapshotScheduleResponse struct {
	value *VolumeSnapshotScheduleResponse
	isSet bool
}

func (v NullableVolumeSnapshotScheduleResponse) Get() *VolumeSnapshotScheduleResponse {
	return v.value
}

func (v *NullableVolumeSnapshotScheduleResponse) Set(val *VolumeSnapshotScheduleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeSnapshotScheduleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeSnapshotScheduleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeSnapshotScheduleResponse(val *VolumeSnapshotScheduleResponse) *NullableVolumeSnapshotScheduleResponse {
	return &NullableVolumeSnapshotScheduleResponse{value: val, isSet: true}
}

func (v NullableVolumeSnapshotScheduleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeSnapshotScheduleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
