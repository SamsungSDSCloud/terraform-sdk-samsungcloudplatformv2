/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"encoding/json"
)

// checks if the VolumeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeResponse{}

// VolumeResponse struct for VolumeResponse
type VolumeResponse struct {
	// Volume detail
	Result *VolumeModel `json:"result,omitempty"`
}

// NewVolumeResponse instantiates a new VolumeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeResponse() *VolumeResponse {
	this := VolumeResponse{}
	return &this
}

// NewVolumeResponseWithDefaults instantiates a new VolumeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeResponseWithDefaults() *VolumeResponse {
	this := VolumeResponse{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *VolumeResponse) GetResult() VolumeModel {
	if o == nil || IsNil(o.Result) {
		var ret VolumeModel
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeResponse) GetResultOk() (*VolumeModel, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *VolumeResponse) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given VolumeModel and assigns it to the Result field.
func (o *VolumeResponse) SetResult(v VolumeModel) {
	o.Result = &v
}

func (o VolumeResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableVolumeResponse struct {
	value *VolumeResponse
	isSet bool
}

func (v NullableVolumeResponse) Get() *VolumeResponse {
	return v.value
}

func (v *NullableVolumeResponse) Set(val *VolumeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeResponse(val *VolumeResponse) *NullableVolumeResponse {
	return &NullableVolumeResponse{value: val, isSet: true}
}

func (v NullableVolumeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
