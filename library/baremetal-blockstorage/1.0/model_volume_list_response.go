/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"encoding/json"
)

// checks if the VolumeListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeListResponse{}

// VolumeListResponse struct for VolumeListResponse
type VolumeListResponse struct {
	// Total count
	TotalCount *int32 `json:"total_count,omitempty"`
	// List of volumes
	Volumes []VolumeListModel `json:"volumes,omitempty"`
}

// NewVolumeListResponse instantiates a new VolumeListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeListResponse() *VolumeListResponse {
	this := VolumeListResponse{}
	var totalCount int32 = 0
	this.TotalCount = &totalCount
	return &this
}

// NewVolumeListResponseWithDefaults instantiates a new VolumeListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeListResponseWithDefaults() *VolumeListResponse {
	this := VolumeListResponse{}
	var totalCount int32 = 0
	this.TotalCount = &totalCount
	return &this
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *VolumeListResponse) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeListResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *VolumeListResponse) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *VolumeListResponse) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *VolumeListResponse) GetVolumes() []VolumeListModel {
	if o == nil || IsNil(o.Volumes) {
		var ret []VolumeListModel
		return ret
	}
	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeListResponse) GetVolumesOk() ([]VolumeListModel, bool) {
	if o == nil || IsNil(o.Volumes) {
		return nil, false
	}
	return o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *VolumeListResponse) HasVolumes() bool {
	if o != nil && !IsNil(o.Volumes) {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []VolumeListModel and assigns it to the Volumes field.
func (o *VolumeListResponse) SetVolumes(v []VolumeListModel) {
	o.Volumes = v
}

func (o VolumeListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalCount) {
		toSerialize["total_count"] = o.TotalCount
	}
	if !IsNil(o.Volumes) {
		toSerialize["volumes"] = o.Volumes
	}
	return toSerialize, nil
}

type NullableVolumeListResponse struct {
	value *VolumeListResponse
	isSet bool
}

func (v NullableVolumeListResponse) Get() *VolumeListResponse {
	return v.value
}

func (v *NullableVolumeListResponse) Set(val *VolumeListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeListResponse(val *VolumeListResponse) *NullableVolumeListResponse {
	return &NullableVolumeListResponse{value: val, isSet: true}
}

func (v NullableVolumeListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
