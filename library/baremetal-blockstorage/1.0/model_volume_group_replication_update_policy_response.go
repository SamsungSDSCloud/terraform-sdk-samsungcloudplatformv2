/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"encoding/json"
)

// checks if the VolumeGroupReplicationUpdatePolicyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeGroupReplicationUpdatePolicyResponse{}

// VolumeGroupReplicationUpdatePolicyResponse struct for VolumeGroupReplicationUpdatePolicyResponse
type VolumeGroupReplicationUpdatePolicyResponse struct {
	// Replication cycle
	Cycle *ReplicationCycle `json:"cycle,omitempty"`
	// Replication state
	SyncState *string `json:"sync_state,omitempty"`
}

// NewVolumeGroupReplicationUpdatePolicyResponse instantiates a new VolumeGroupReplicationUpdatePolicyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeGroupReplicationUpdatePolicyResponse() *VolumeGroupReplicationUpdatePolicyResponse {
	this := VolumeGroupReplicationUpdatePolicyResponse{}
	return &this
}

// NewVolumeGroupReplicationUpdatePolicyResponseWithDefaults instantiates a new VolumeGroupReplicationUpdatePolicyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeGroupReplicationUpdatePolicyResponseWithDefaults() *VolumeGroupReplicationUpdatePolicyResponse {
	this := VolumeGroupReplicationUpdatePolicyResponse{}
	return &this
}

// GetCycle returns the Cycle field value if set, zero value otherwise.
func (o *VolumeGroupReplicationUpdatePolicyResponse) GetCycle() ReplicationCycle {
	if o == nil || IsNil(o.Cycle) {
		var ret ReplicationCycle
		return ret
	}
	return *o.Cycle
}

// GetCycleOk returns a tuple with the Cycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupReplicationUpdatePolicyResponse) GetCycleOk() (*ReplicationCycle, bool) {
	if o == nil || IsNil(o.Cycle) {
		return nil, false
	}
	return o.Cycle, true
}

// HasCycle returns a boolean if a field has been set.
func (o *VolumeGroupReplicationUpdatePolicyResponse) HasCycle() bool {
	if o != nil && !IsNil(o.Cycle) {
		return true
	}

	return false
}

// SetCycle gets a reference to the given ReplicationCycle and assigns it to the Cycle field.
func (o *VolumeGroupReplicationUpdatePolicyResponse) SetCycle(v ReplicationCycle) {
	o.Cycle = &v
}

// GetSyncState returns the SyncState field value if set, zero value otherwise.
func (o *VolumeGroupReplicationUpdatePolicyResponse) GetSyncState() string {
	if o == nil || IsNil(o.SyncState) {
		var ret string
		return ret
	}
	return *o.SyncState
}

// GetSyncStateOk returns a tuple with the SyncState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupReplicationUpdatePolicyResponse) GetSyncStateOk() (*string, bool) {
	if o == nil || IsNil(o.SyncState) {
		return nil, false
	}
	return o.SyncState, true
}

// HasSyncState returns a boolean if a field has been set.
func (o *VolumeGroupReplicationUpdatePolicyResponse) HasSyncState() bool {
	if o != nil && !IsNil(o.SyncState) {
		return true
	}

	return false
}

// SetSyncState gets a reference to the given string and assigns it to the SyncState field.
func (o *VolumeGroupReplicationUpdatePolicyResponse) SetSyncState(v string) {
	o.SyncState = &v
}

func (o VolumeGroupReplicationUpdatePolicyResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeGroupReplicationUpdatePolicyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cycle) {
		toSerialize["cycle"] = o.Cycle
	}
	if !IsNil(o.SyncState) {
		toSerialize["sync_state"] = o.SyncState
	}
	return toSerialize, nil
}

type NullableVolumeGroupReplicationUpdatePolicyResponse struct {
	value *VolumeGroupReplicationUpdatePolicyResponse
	isSet bool
}

func (v NullableVolumeGroupReplicationUpdatePolicyResponse) Get() *VolumeGroupReplicationUpdatePolicyResponse {
	return v.value
}

func (v *NullableVolumeGroupReplicationUpdatePolicyResponse) Set(val *VolumeGroupReplicationUpdatePolicyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeGroupReplicationUpdatePolicyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeGroupReplicationUpdatePolicyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeGroupReplicationUpdatePolicyResponse(val *VolumeGroupReplicationUpdatePolicyResponse) *NullableVolumeGroupReplicationUpdatePolicyResponse {
	return &NullableVolumeGroupReplicationUpdatePolicyResponse{value: val, isSet: true}
}

func (v NullableVolumeGroupReplicationUpdatePolicyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeGroupReplicationUpdatePolicyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
