/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"encoding/json"
)

// checks if the VolumeGroupReplicationUpdateCycleResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeGroupReplicationUpdateCycleResponse{}

// VolumeGroupReplicationUpdateCycleResponse struct for VolumeGroupReplicationUpdateCycleResponse
type VolumeGroupReplicationUpdateCycleResponse struct {
	// Replication cycle
	Cycle *ReplicationCycle `json:"cycle,omitempty"`
	// Volume group id
	VolumeGroupId *string `json:"volume_group_id,omitempty"`
}

// NewVolumeGroupReplicationUpdateCycleResponse instantiates a new VolumeGroupReplicationUpdateCycleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeGroupReplicationUpdateCycleResponse() *VolumeGroupReplicationUpdateCycleResponse {
	this := VolumeGroupReplicationUpdateCycleResponse{}
	return &this
}

// NewVolumeGroupReplicationUpdateCycleResponseWithDefaults instantiates a new VolumeGroupReplicationUpdateCycleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeGroupReplicationUpdateCycleResponseWithDefaults() *VolumeGroupReplicationUpdateCycleResponse {
	this := VolumeGroupReplicationUpdateCycleResponse{}
	return &this
}

// GetCycle returns the Cycle field value if set, zero value otherwise.
func (o *VolumeGroupReplicationUpdateCycleResponse) GetCycle() ReplicationCycle {
	if o == nil || IsNil(o.Cycle) {
		var ret ReplicationCycle
		return ret
	}
	return *o.Cycle
}

// GetCycleOk returns a tuple with the Cycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupReplicationUpdateCycleResponse) GetCycleOk() (*ReplicationCycle, bool) {
	if o == nil || IsNil(o.Cycle) {
		return nil, false
	}
	return o.Cycle, true
}

// HasCycle returns a boolean if a field has been set.
func (o *VolumeGroupReplicationUpdateCycleResponse) HasCycle() bool {
	if o != nil && !IsNil(o.Cycle) {
		return true
	}

	return false
}

// SetCycle gets a reference to the given ReplicationCycle and assigns it to the Cycle field.
func (o *VolumeGroupReplicationUpdateCycleResponse) SetCycle(v ReplicationCycle) {
	o.Cycle = &v
}

// GetVolumeGroupId returns the VolumeGroupId field value if set, zero value otherwise.
func (o *VolumeGroupReplicationUpdateCycleResponse) GetVolumeGroupId() string {
	if o == nil || IsNil(o.VolumeGroupId) {
		var ret string
		return ret
	}
	return *o.VolumeGroupId
}

// GetVolumeGroupIdOk returns a tuple with the VolumeGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupReplicationUpdateCycleResponse) GetVolumeGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeGroupId) {
		return nil, false
	}
	return o.VolumeGroupId, true
}

// HasVolumeGroupId returns a boolean if a field has been set.
func (o *VolumeGroupReplicationUpdateCycleResponse) HasVolumeGroupId() bool {
	if o != nil && !IsNil(o.VolumeGroupId) {
		return true
	}

	return false
}

// SetVolumeGroupId gets a reference to the given string and assigns it to the VolumeGroupId field.
func (o *VolumeGroupReplicationUpdateCycleResponse) SetVolumeGroupId(v string) {
	o.VolumeGroupId = &v
}

func (o VolumeGroupReplicationUpdateCycleResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeGroupReplicationUpdateCycleResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cycle) {
		toSerialize["cycle"] = o.Cycle
	}
	if !IsNil(o.VolumeGroupId) {
		toSerialize["volume_group_id"] = o.VolumeGroupId
	}
	return toSerialize, nil
}

type NullableVolumeGroupReplicationUpdateCycleResponse struct {
	value *VolumeGroupReplicationUpdateCycleResponse
	isSet bool
}

func (v NullableVolumeGroupReplicationUpdateCycleResponse) Get() *VolumeGroupReplicationUpdateCycleResponse {
	return v.value
}

func (v *NullableVolumeGroupReplicationUpdateCycleResponse) Set(val *VolumeGroupReplicationUpdateCycleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeGroupReplicationUpdateCycleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeGroupReplicationUpdateCycleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeGroupReplicationUpdateCycleResponse(val *VolumeGroupReplicationUpdateCycleResponse) *NullableVolumeGroupReplicationUpdateCycleResponse {
	return &NullableVolumeGroupReplicationUpdateCycleResponse{value: val, isSet: true}
}

func (v NullableVolumeGroupReplicationUpdateCycleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeGroupReplicationUpdateCycleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
