/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"encoding/json"
)

// checks if the VolumeGroupMemberResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeGroupMemberResponse{}

// VolumeGroupMemberResponse struct for VolumeGroupMemberResponse
type VolumeGroupMemberResponse struct {
	// Volume group id
	Id *string `json:"id,omitempty"`
	// List of member volumes
	MemberVolumes []MemberVolume `json:"member_volumes,omitempty"`
}

// NewVolumeGroupMemberResponse instantiates a new VolumeGroupMemberResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeGroupMemberResponse() *VolumeGroupMemberResponse {
	this := VolumeGroupMemberResponse{}
	return &this
}

// NewVolumeGroupMemberResponseWithDefaults instantiates a new VolumeGroupMemberResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeGroupMemberResponseWithDefaults() *VolumeGroupMemberResponse {
	this := VolumeGroupMemberResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VolumeGroupMemberResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupMemberResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VolumeGroupMemberResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VolumeGroupMemberResponse) SetId(v string) {
	o.Id = &v
}

// GetMemberVolumes returns the MemberVolumes field value if set, zero value otherwise.
func (o *VolumeGroupMemberResponse) GetMemberVolumes() []MemberVolume {
	if o == nil || IsNil(o.MemberVolumes) {
		var ret []MemberVolume
		return ret
	}
	return o.MemberVolumes
}

// GetMemberVolumesOk returns a tuple with the MemberVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupMemberResponse) GetMemberVolumesOk() ([]MemberVolume, bool) {
	if o == nil || IsNil(o.MemberVolumes) {
		return nil, false
	}
	return o.MemberVolumes, true
}

// HasMemberVolumes returns a boolean if a field has been set.
func (o *VolumeGroupMemberResponse) HasMemberVolumes() bool {
	if o != nil && !IsNil(o.MemberVolumes) {
		return true
	}

	return false
}

// SetMemberVolumes gets a reference to the given []MemberVolume and assigns it to the MemberVolumes field.
func (o *VolumeGroupMemberResponse) SetMemberVolumes(v []MemberVolume) {
	o.MemberVolumes = v
}

func (o VolumeGroupMemberResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeGroupMemberResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MemberVolumes) {
		toSerialize["member_volumes"] = o.MemberVolumes
	}
	return toSerialize, nil
}

type NullableVolumeGroupMemberResponse struct {
	value *VolumeGroupMemberResponse
	isSet bool
}

func (v NullableVolumeGroupMemberResponse) Get() *VolumeGroupMemberResponse {
	return v.value
}

func (v *NullableVolumeGroupMemberResponse) Set(val *VolumeGroupMemberResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeGroupMemberResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeGroupMemberResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeGroupMemberResponse(val *VolumeGroupMemberResponse) *NullableVolumeGroupMemberResponse {
	return &NullableVolumeGroupMemberResponse{value: val, isSet: true}
}

func (v NullableVolumeGroupMemberResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeGroupMemberResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
