/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"encoding/json"
)

// checks if the VolumeReplicationModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeReplicationModel{}

// VolumeReplicationModel struct for VolumeReplicationModel
type VolumeReplicationModel struct {
	// List of related volumes
	RelatedVolumes []RelationVolumeModel `json:"related_volumes,omitempty"`
	// Replication cycle
	SyncCycle *ReplicationCycle `json:"sync_cycle,omitempty"`
	// Replication state
	SyncState *string `json:"sync_state,omitempty"`
}

// NewVolumeReplicationModel instantiates a new VolumeReplicationModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeReplicationModel() *VolumeReplicationModel {
	this := VolumeReplicationModel{}
	return &this
}

// NewVolumeReplicationModelWithDefaults instantiates a new VolumeReplicationModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeReplicationModelWithDefaults() *VolumeReplicationModel {
	this := VolumeReplicationModel{}
	return &this
}

// GetRelatedVolumes returns the RelatedVolumes field value if set, zero value otherwise.
func (o *VolumeReplicationModel) GetRelatedVolumes() []RelationVolumeModel {
	if o == nil || IsNil(o.RelatedVolumes) {
		var ret []RelationVolumeModel
		return ret
	}
	return o.RelatedVolumes
}

// GetRelatedVolumesOk returns a tuple with the RelatedVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeReplicationModel) GetRelatedVolumesOk() ([]RelationVolumeModel, bool) {
	if o == nil || IsNil(o.RelatedVolumes) {
		return nil, false
	}
	return o.RelatedVolumes, true
}

// HasRelatedVolumes returns a boolean if a field has been set.
func (o *VolumeReplicationModel) HasRelatedVolumes() bool {
	if o != nil && !IsNil(o.RelatedVolumes) {
		return true
	}

	return false
}

// SetRelatedVolumes gets a reference to the given []RelationVolumeModel and assigns it to the RelatedVolumes field.
func (o *VolumeReplicationModel) SetRelatedVolumes(v []RelationVolumeModel) {
	o.RelatedVolumes = v
}

// GetSyncCycle returns the SyncCycle field value if set, zero value otherwise.
func (o *VolumeReplicationModel) GetSyncCycle() ReplicationCycle {
	if o == nil || IsNil(o.SyncCycle) {
		var ret ReplicationCycle
		return ret
	}
	return *o.SyncCycle
}

// GetSyncCycleOk returns a tuple with the SyncCycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeReplicationModel) GetSyncCycleOk() (*ReplicationCycle, bool) {
	if o == nil || IsNil(o.SyncCycle) {
		return nil, false
	}
	return o.SyncCycle, true
}

// HasSyncCycle returns a boolean if a field has been set.
func (o *VolumeReplicationModel) HasSyncCycle() bool {
	if o != nil && !IsNil(o.SyncCycle) {
		return true
	}

	return false
}

// SetSyncCycle gets a reference to the given ReplicationCycle and assigns it to the SyncCycle field.
func (o *VolumeReplicationModel) SetSyncCycle(v ReplicationCycle) {
	o.SyncCycle = &v
}

// GetSyncState returns the SyncState field value if set, zero value otherwise.
func (o *VolumeReplicationModel) GetSyncState() string {
	if o == nil || IsNil(o.SyncState) {
		var ret string
		return ret
	}
	return *o.SyncState
}

// GetSyncStateOk returns a tuple with the SyncState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeReplicationModel) GetSyncStateOk() (*string, bool) {
	if o == nil || IsNil(o.SyncState) {
		return nil, false
	}
	return o.SyncState, true
}

// HasSyncState returns a boolean if a field has been set.
func (o *VolumeReplicationModel) HasSyncState() bool {
	if o != nil && !IsNil(o.SyncState) {
		return true
	}

	return false
}

// SetSyncState gets a reference to the given string and assigns it to the SyncState field.
func (o *VolumeReplicationModel) SetSyncState(v string) {
	o.SyncState = &v
}

func (o VolumeReplicationModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeReplicationModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RelatedVolumes) {
		toSerialize["related_volumes"] = o.RelatedVolumes
	}
	if !IsNil(o.SyncCycle) {
		toSerialize["sync_cycle"] = o.SyncCycle
	}
	if !IsNil(o.SyncState) {
		toSerialize["sync_state"] = o.SyncState
	}
	return toSerialize, nil
}

type NullableVolumeReplicationModel struct {
	value *VolumeReplicationModel
	isSet bool
}

func (v NullableVolumeReplicationModel) Get() *VolumeReplicationModel {
	return v.value
}

func (v *NullableVolumeReplicationModel) Set(val *VolumeReplicationModel) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeReplicationModel) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeReplicationModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeReplicationModel(val *VolumeReplicationModel) *NullableVolumeReplicationModel {
	return &NullableVolumeReplicationModel{value: val, isSet: true}
}

func (v NullableVolumeReplicationModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeReplicationModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
