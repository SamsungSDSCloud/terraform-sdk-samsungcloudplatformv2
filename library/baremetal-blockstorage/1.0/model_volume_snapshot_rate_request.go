/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the VolumeSnapshotRateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeSnapshotRateRequest{}

// VolumeSnapshotRateRequest struct for VolumeSnapshotRateRequest
type VolumeSnapshotRateRequest struct {
	// Snapshot rate
	SnapshotRate int32 `json:"snapshot_rate"`
}

type _VolumeSnapshotRateRequest VolumeSnapshotRateRequest

// NewVolumeSnapshotRateRequest instantiates a new VolumeSnapshotRateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeSnapshotRateRequest(snapshotRate int32) *VolumeSnapshotRateRequest {
	this := VolumeSnapshotRateRequest{}
	this.SnapshotRate = snapshotRate
	return &this
}

// NewVolumeSnapshotRateRequestWithDefaults instantiates a new VolumeSnapshotRateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeSnapshotRateRequestWithDefaults() *VolumeSnapshotRateRequest {
	this := VolumeSnapshotRateRequest{}
	return &this
}

// GetSnapshotRate returns the SnapshotRate field value
func (o *VolumeSnapshotRateRequest) GetSnapshotRate() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SnapshotRate
}

// GetSnapshotRateOk returns a tuple with the SnapshotRate field value
// and a boolean to check if the value has been set.
func (o *VolumeSnapshotRateRequest) GetSnapshotRateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SnapshotRate, true
}

// SetSnapshotRate sets field value
func (o *VolumeSnapshotRateRequest) SetSnapshotRate(v int32) {
	o.SnapshotRate = v
}

func (o VolumeSnapshotRateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeSnapshotRateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["snapshot_rate"] = o.SnapshotRate
	return toSerialize, nil
}

func (o *VolumeSnapshotRateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"snapshot_rate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVolumeSnapshotRateRequest := _VolumeSnapshotRateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVolumeSnapshotRateRequest)

	if err != nil {
		return err
	}

	*o = VolumeSnapshotRateRequest(varVolumeSnapshotRateRequest)

	return err
}

type NullableVolumeSnapshotRateRequest struct {
	value *VolumeSnapshotRateRequest
	isSet bool
}

func (v NullableVolumeSnapshotRateRequest) Get() *VolumeSnapshotRateRequest {
	return v.value
}

func (v *NullableVolumeSnapshotRateRequest) Set(val *VolumeSnapshotRateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeSnapshotRateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeSnapshotRateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeSnapshotRateRequest(val *VolumeSnapshotRateRequest) *NullableVolumeSnapshotRateRequest {
	return &NullableVolumeSnapshotRateRequest{value: val, isSet: true}
}

func (v NullableVolumeSnapshotRateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeSnapshotRateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
