/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"encoding/json"
)

// checks if the VolumeGroupListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeGroupListResponse{}

// VolumeGroupListResponse struct for VolumeGroupListResponse
type VolumeGroupListResponse struct {
	// Total count
	TotalCount *int32 `json:"total_count,omitempty"`
	// List of volume groups
	VolumeGroups []VolumeGroupListModel `json:"volume_groups,omitempty"`
}

// NewVolumeGroupListResponse instantiates a new VolumeGroupListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeGroupListResponse() *VolumeGroupListResponse {
	this := VolumeGroupListResponse{}
	var totalCount int32 = 0
	this.TotalCount = &totalCount
	return &this
}

// NewVolumeGroupListResponseWithDefaults instantiates a new VolumeGroupListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeGroupListResponseWithDefaults() *VolumeGroupListResponse {
	this := VolumeGroupListResponse{}
	var totalCount int32 = 0
	this.TotalCount = &totalCount
	return &this
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *VolumeGroupListResponse) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupListResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *VolumeGroupListResponse) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *VolumeGroupListResponse) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetVolumeGroups returns the VolumeGroups field value if set, zero value otherwise.
func (o *VolumeGroupListResponse) GetVolumeGroups() []VolumeGroupListModel {
	if o == nil || IsNil(o.VolumeGroups) {
		var ret []VolumeGroupListModel
		return ret
	}
	return o.VolumeGroups
}

// GetVolumeGroupsOk returns a tuple with the VolumeGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupListResponse) GetVolumeGroupsOk() ([]VolumeGroupListModel, bool) {
	if o == nil || IsNil(o.VolumeGroups) {
		return nil, false
	}
	return o.VolumeGroups, true
}

// HasVolumeGroups returns a boolean if a field has been set.
func (o *VolumeGroupListResponse) HasVolumeGroups() bool {
	if o != nil && !IsNil(o.VolumeGroups) {
		return true
	}

	return false
}

// SetVolumeGroups gets a reference to the given []VolumeGroupListModel and assigns it to the VolumeGroups field.
func (o *VolumeGroupListResponse) SetVolumeGroups(v []VolumeGroupListModel) {
	o.VolumeGroups = v
}

func (o VolumeGroupListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeGroupListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalCount) {
		toSerialize["total_count"] = o.TotalCount
	}
	if !IsNil(o.VolumeGroups) {
		toSerialize["volume_groups"] = o.VolumeGroups
	}
	return toSerialize, nil
}

type NullableVolumeGroupListResponse struct {
	value *VolumeGroupListResponse
	isSet bool
}

func (v NullableVolumeGroupListResponse) Get() *VolumeGroupListResponse {
	return v.value
}

func (v *NullableVolumeGroupListResponse) Set(val *VolumeGroupListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeGroupListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeGroupListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeGroupListResponse(val *VolumeGroupListResponse) *NullableVolumeGroupListResponse {
	return &NullableVolumeGroupListResponse{value: val, isSet: true}
}

func (v NullableVolumeGroupListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeGroupListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
