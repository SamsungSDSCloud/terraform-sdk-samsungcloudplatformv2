/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the VolumeGroupMemberRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeGroupMemberRequest{}

// VolumeGroupMemberRequest struct for VolumeGroupMemberRequest
type VolumeGroupMemberRequest struct {
	// List of volume(Block Storage) id
	VolumeIds []string `json:"volume_ids"`
}

type _VolumeGroupMemberRequest VolumeGroupMemberRequest

// NewVolumeGroupMemberRequest instantiates a new VolumeGroupMemberRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeGroupMemberRequest(volumeIds []string) *VolumeGroupMemberRequest {
	this := VolumeGroupMemberRequest{}
	this.VolumeIds = volumeIds
	return &this
}

// NewVolumeGroupMemberRequestWithDefaults instantiates a new VolumeGroupMemberRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeGroupMemberRequestWithDefaults() *VolumeGroupMemberRequest {
	this := VolumeGroupMemberRequest{}
	return &this
}

// GetVolumeIds returns the VolumeIds field value
func (o *VolumeGroupMemberRequest) GetVolumeIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.VolumeIds
}

// GetVolumeIdsOk returns a tuple with the VolumeIds field value
// and a boolean to check if the value has been set.
func (o *VolumeGroupMemberRequest) GetVolumeIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumeIds, true
}

// SetVolumeIds sets field value
func (o *VolumeGroupMemberRequest) SetVolumeIds(v []string) {
	o.VolumeIds = v
}

func (o VolumeGroupMemberRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeGroupMemberRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["volume_ids"] = o.VolumeIds
	return toSerialize, nil
}

func (o *VolumeGroupMemberRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"volume_ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVolumeGroupMemberRequest := _VolumeGroupMemberRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVolumeGroupMemberRequest)

	if err != nil {
		return err
	}

	*o = VolumeGroupMemberRequest(varVolumeGroupMemberRequest)

	return err
}

type NullableVolumeGroupMemberRequest struct {
	value *VolumeGroupMemberRequest
	isSet bool
}

func (v NullableVolumeGroupMemberRequest) Get() *VolumeGroupMemberRequest {
	return v.value
}

func (v *NullableVolumeGroupMemberRequest) Set(val *VolumeGroupMemberRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeGroupMemberRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeGroupMemberRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeGroupMemberRequest(val *VolumeGroupMemberRequest) *NullableVolumeGroupMemberRequest {
	return &NullableVolumeGroupMemberRequest{value: val, isSet: true}
}

func (v NullableVolumeGroupMemberRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeGroupMemberRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
