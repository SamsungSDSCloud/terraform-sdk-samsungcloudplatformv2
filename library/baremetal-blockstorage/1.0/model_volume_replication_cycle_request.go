/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the VolumeReplicationCycleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeReplicationCycleRequest{}

// VolumeReplicationCycleRequest struct for VolumeReplicationCycleRequest
type VolumeReplicationCycleRequest struct {
	// Replication cycle
	Cycle ReplicationCycle `json:"cycle"`
}

type _VolumeReplicationCycleRequest VolumeReplicationCycleRequest

// NewVolumeReplicationCycleRequest instantiates a new VolumeReplicationCycleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeReplicationCycleRequest(cycle ReplicationCycle) *VolumeReplicationCycleRequest {
	this := VolumeReplicationCycleRequest{}
	this.Cycle = cycle
	return &this
}

// NewVolumeReplicationCycleRequestWithDefaults instantiates a new VolumeReplicationCycleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeReplicationCycleRequestWithDefaults() *VolumeReplicationCycleRequest {
	this := VolumeReplicationCycleRequest{}
	return &this
}

// GetCycle returns the Cycle field value
func (o *VolumeReplicationCycleRequest) GetCycle() ReplicationCycle {
	if o == nil {
		var ret ReplicationCycle
		return ret
	}

	return o.Cycle
}

// GetCycleOk returns a tuple with the Cycle field value
// and a boolean to check if the value has been set.
func (o *VolumeReplicationCycleRequest) GetCycleOk() (*ReplicationCycle, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cycle, true
}

// SetCycle sets field value
func (o *VolumeReplicationCycleRequest) SetCycle(v ReplicationCycle) {
	o.Cycle = v
}

func (o VolumeReplicationCycleRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeReplicationCycleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cycle"] = o.Cycle
	return toSerialize, nil
}

func (o *VolumeReplicationCycleRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cycle",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVolumeReplicationCycleRequest := _VolumeReplicationCycleRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVolumeReplicationCycleRequest)

	if err != nil {
		return err
	}

	*o = VolumeReplicationCycleRequest(varVolumeReplicationCycleRequest)

	return err
}

type NullableVolumeReplicationCycleRequest struct {
	value *VolumeReplicationCycleRequest
	isSet bool
}

func (v NullableVolumeReplicationCycleRequest) Get() *VolumeReplicationCycleRequest {
	return v.value
}

func (v *NullableVolumeReplicationCycleRequest) Set(val *VolumeReplicationCycleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeReplicationCycleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeReplicationCycleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeReplicationCycleRequest(val *VolumeReplicationCycleRequest) *NullableVolumeReplicationCycleRequest {
	return &NullableVolumeReplicationCycleRequest{value: val, isSet: true}
}

func (v NullableVolumeReplicationCycleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeReplicationCycleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
