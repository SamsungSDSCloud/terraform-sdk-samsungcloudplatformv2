/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"encoding/json"
	"time"
)

// checks if the VolumeGroupListModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeGroupListModel{}

// VolumeGroupListModel struct for VolumeGroupListModel
type VolumeGroupListModel struct {
	// Account id
	AccountId *string `json:"account_id,omitempty"`
	// Created at
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Created by
	CreatedBy *string `json:"created_by,omitempty"`
	// Id
	Id *string `json:"id,omitempty"`
	// Modified at
	ModifiedAt *time.Time `json:"modified_at,omitempty"`
	// Modified by
	ModifiedBy *string `json:"modified_by,omitempty"`
	// Volume group name
	Name *string `json:"name,omitempty"`
	// Number of volumes
	NumOfBlockStorages *int32 `json:"num_of_block_storages,omitempty"`
	// Purpose
	Purpose *string `json:"purpose,omitempty"`
	// Current state
	State *VolumeGroupState `json:"state,omitempty"`
}

// NewVolumeGroupListModel instantiates a new VolumeGroupListModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeGroupListModel() *VolumeGroupListModel {
	this := VolumeGroupListModel{}
	var numOfBlockStorages int32 = 1
	this.NumOfBlockStorages = &numOfBlockStorages
	return &this
}

// NewVolumeGroupListModelWithDefaults instantiates a new VolumeGroupListModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeGroupListModelWithDefaults() *VolumeGroupListModel {
	this := VolumeGroupListModel{}
	var numOfBlockStorages int32 = 1
	this.NumOfBlockStorages = &numOfBlockStorages
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *VolumeGroupListModel) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupListModel) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *VolumeGroupListModel) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *VolumeGroupListModel) SetAccountId(v string) {
	o.AccountId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *VolumeGroupListModel) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupListModel) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *VolumeGroupListModel) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *VolumeGroupListModel) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *VolumeGroupListModel) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupListModel) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *VolumeGroupListModel) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *VolumeGroupListModel) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VolumeGroupListModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupListModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VolumeGroupListModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VolumeGroupListModel) SetId(v string) {
	o.Id = &v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *VolumeGroupListModel) GetModifiedAt() time.Time {
	if o == nil || IsNil(o.ModifiedAt) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupListModel) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModifiedAt) {
		return nil, false
	}
	return o.ModifiedAt, true
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *VolumeGroupListModel) HasModifiedAt() bool {
	if o != nil && !IsNil(o.ModifiedAt) {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given time.Time and assigns it to the ModifiedAt field.
func (o *VolumeGroupListModel) SetModifiedAt(v time.Time) {
	o.ModifiedAt = &v
}

// GetModifiedBy returns the ModifiedBy field value if set, zero value otherwise.
func (o *VolumeGroupListModel) GetModifiedBy() string {
	if o == nil || IsNil(o.ModifiedBy) {
		var ret string
		return ret
	}
	return *o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupListModel) GetModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedBy) {
		return nil, false
	}
	return o.ModifiedBy, true
}

// HasModifiedBy returns a boolean if a field has been set.
func (o *VolumeGroupListModel) HasModifiedBy() bool {
	if o != nil && !IsNil(o.ModifiedBy) {
		return true
	}

	return false
}

// SetModifiedBy gets a reference to the given string and assigns it to the ModifiedBy field.
func (o *VolumeGroupListModel) SetModifiedBy(v string) {
	o.ModifiedBy = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VolumeGroupListModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupListModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VolumeGroupListModel) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VolumeGroupListModel) SetName(v string) {
	o.Name = &v
}

// GetNumOfBlockStorages returns the NumOfBlockStorages field value if set, zero value otherwise.
func (o *VolumeGroupListModel) GetNumOfBlockStorages() int32 {
	if o == nil || IsNil(o.NumOfBlockStorages) {
		var ret int32
		return ret
	}
	return *o.NumOfBlockStorages
}

// GetNumOfBlockStoragesOk returns a tuple with the NumOfBlockStorages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupListModel) GetNumOfBlockStoragesOk() (*int32, bool) {
	if o == nil || IsNil(o.NumOfBlockStorages) {
		return nil, false
	}
	return o.NumOfBlockStorages, true
}

// HasNumOfBlockStorages returns a boolean if a field has been set.
func (o *VolumeGroupListModel) HasNumOfBlockStorages() bool {
	if o != nil && !IsNil(o.NumOfBlockStorages) {
		return true
	}

	return false
}

// SetNumOfBlockStorages gets a reference to the given int32 and assigns it to the NumOfBlockStorages field.
func (o *VolumeGroupListModel) SetNumOfBlockStorages(v int32) {
	o.NumOfBlockStorages = &v
}

// GetPurpose returns the Purpose field value if set, zero value otherwise.
func (o *VolumeGroupListModel) GetPurpose() string {
	if o == nil || IsNil(o.Purpose) {
		var ret string
		return ret
	}
	return *o.Purpose
}

// GetPurposeOk returns a tuple with the Purpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupListModel) GetPurposeOk() (*string, bool) {
	if o == nil || IsNil(o.Purpose) {
		return nil, false
	}
	return o.Purpose, true
}

// HasPurpose returns a boolean if a field has been set.
func (o *VolumeGroupListModel) HasPurpose() bool {
	if o != nil && !IsNil(o.Purpose) {
		return true
	}

	return false
}

// SetPurpose gets a reference to the given string and assigns it to the Purpose field.
func (o *VolumeGroupListModel) SetPurpose(v string) {
	o.Purpose = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *VolumeGroupListModel) GetState() VolumeGroupState {
	if o == nil || IsNil(o.State) {
		var ret VolumeGroupState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupListModel) GetStateOk() (*VolumeGroupState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *VolumeGroupListModel) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given VolumeGroupState and assigns it to the State field.
func (o *VolumeGroupListModel) SetState(v VolumeGroupState) {
	o.State = &v
}

func (o VolumeGroupListModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeGroupListModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["created_by"] = o.CreatedBy
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ModifiedAt) {
		toSerialize["modified_at"] = o.ModifiedAt
	}
	if !IsNil(o.ModifiedBy) {
		toSerialize["modified_by"] = o.ModifiedBy
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NumOfBlockStorages) {
		toSerialize["num_of_block_storages"] = o.NumOfBlockStorages
	}
	if !IsNil(o.Purpose) {
		toSerialize["purpose"] = o.Purpose
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableVolumeGroupListModel struct {
	value *VolumeGroupListModel
	isSet bool
}

func (v NullableVolumeGroupListModel) Get() *VolumeGroupListModel {
	return v.value
}

func (v *NullableVolumeGroupListModel) Set(val *VolumeGroupListModel) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeGroupListModel) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeGroupListModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeGroupListModel(val *VolumeGroupListModel) *NullableVolumeGroupListModel {
	return &NullableVolumeGroupListModel{value: val, isSet: true}
}

func (v NullableVolumeGroupListModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeGroupListModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
