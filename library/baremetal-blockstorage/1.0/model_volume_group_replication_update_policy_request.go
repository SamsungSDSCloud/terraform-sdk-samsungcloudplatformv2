/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the VolumeGroupReplicationUpdatePolicyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeGroupReplicationUpdatePolicyRequest{}

// VolumeGroupReplicationUpdatePolicyRequest struct for VolumeGroupReplicationUpdatePolicyRequest
type VolumeGroupReplicationUpdatePolicyRequest struct {
	// Policy
	Policy ReplicationPolicyMode `json:"policy"`
}

type _VolumeGroupReplicationUpdatePolicyRequest VolumeGroupReplicationUpdatePolicyRequest

// NewVolumeGroupReplicationUpdatePolicyRequest instantiates a new VolumeGroupReplicationUpdatePolicyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeGroupReplicationUpdatePolicyRequest(policy ReplicationPolicyMode) *VolumeGroupReplicationUpdatePolicyRequest {
	this := VolumeGroupReplicationUpdatePolicyRequest{}
	this.Policy = policy
	return &this
}

// NewVolumeGroupReplicationUpdatePolicyRequestWithDefaults instantiates a new VolumeGroupReplicationUpdatePolicyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeGroupReplicationUpdatePolicyRequestWithDefaults() *VolumeGroupReplicationUpdatePolicyRequest {
	this := VolumeGroupReplicationUpdatePolicyRequest{}
	return &this
}

// GetPolicy returns the Policy field value
func (o *VolumeGroupReplicationUpdatePolicyRequest) GetPolicy() ReplicationPolicyMode {
	if o == nil {
		var ret ReplicationPolicyMode
		return ret
	}

	return o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value
// and a boolean to check if the value has been set.
func (o *VolumeGroupReplicationUpdatePolicyRequest) GetPolicyOk() (*ReplicationPolicyMode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Policy, true
}

// SetPolicy sets field value
func (o *VolumeGroupReplicationUpdatePolicyRequest) SetPolicy(v ReplicationPolicyMode) {
	o.Policy = v
}

func (o VolumeGroupReplicationUpdatePolicyRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeGroupReplicationUpdatePolicyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["policy"] = o.Policy
	return toSerialize, nil
}

func (o *VolumeGroupReplicationUpdatePolicyRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"policy",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVolumeGroupReplicationUpdatePolicyRequest := _VolumeGroupReplicationUpdatePolicyRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVolumeGroupReplicationUpdatePolicyRequest)

	if err != nil {
		return err
	}

	*o = VolumeGroupReplicationUpdatePolicyRequest(varVolumeGroupReplicationUpdatePolicyRequest)

	return err
}

type NullableVolumeGroupReplicationUpdatePolicyRequest struct {
	value *VolumeGroupReplicationUpdatePolicyRequest
	isSet bool
}

func (v NullableVolumeGroupReplicationUpdatePolicyRequest) Get() *VolumeGroupReplicationUpdatePolicyRequest {
	return v.value
}

func (v *NullableVolumeGroupReplicationUpdatePolicyRequest) Set(val *VolumeGroupReplicationUpdatePolicyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeGroupReplicationUpdatePolicyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeGroupReplicationUpdatePolicyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeGroupReplicationUpdatePolicyRequest(val *VolumeGroupReplicationUpdatePolicyRequest) *NullableVolumeGroupReplicationUpdatePolicyRequest {
	return &NullableVolumeGroupReplicationUpdatePolicyRequest{value: val, isSet: true}
}

func (v NullableVolumeGroupReplicationUpdatePolicyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeGroupReplicationUpdatePolicyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
