/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"encoding/json"
)

// checks if the VolumeReplicationCycleResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeReplicationCycleResponse{}

// VolumeReplicationCycleResponse struct for VolumeReplicationCycleResponse
type VolumeReplicationCycleResponse struct {
	// Replication cycle
	Cycle *ReplicationCycle `json:"cycle,omitempty"`
	// Volume id
	VolumeId *string `json:"volume_id,omitempty"`
}

// NewVolumeReplicationCycleResponse instantiates a new VolumeReplicationCycleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeReplicationCycleResponse() *VolumeReplicationCycleResponse {
	this := VolumeReplicationCycleResponse{}
	return &this
}

// NewVolumeReplicationCycleResponseWithDefaults instantiates a new VolumeReplicationCycleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeReplicationCycleResponseWithDefaults() *VolumeReplicationCycleResponse {
	this := VolumeReplicationCycleResponse{}
	return &this
}

// GetCycle returns the Cycle field value if set, zero value otherwise.
func (o *VolumeReplicationCycleResponse) GetCycle() ReplicationCycle {
	if o == nil || IsNil(o.Cycle) {
		var ret ReplicationCycle
		return ret
	}
	return *o.Cycle
}

// GetCycleOk returns a tuple with the Cycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeReplicationCycleResponse) GetCycleOk() (*ReplicationCycle, bool) {
	if o == nil || IsNil(o.Cycle) {
		return nil, false
	}
	return o.Cycle, true
}

// HasCycle returns a boolean if a field has been set.
func (o *VolumeReplicationCycleResponse) HasCycle() bool {
	if o != nil && !IsNil(o.Cycle) {
		return true
	}

	return false
}

// SetCycle gets a reference to the given ReplicationCycle and assigns it to the Cycle field.
func (o *VolumeReplicationCycleResponse) SetCycle(v ReplicationCycle) {
	o.Cycle = &v
}

// GetVolumeId returns the VolumeId field value if set, zero value otherwise.
func (o *VolumeReplicationCycleResponse) GetVolumeId() string {
	if o == nil || IsNil(o.VolumeId) {
		var ret string
		return ret
	}
	return *o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeReplicationCycleResponse) GetVolumeIdOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeId) {
		return nil, false
	}
	return o.VolumeId, true
}

// HasVolumeId returns a boolean if a field has been set.
func (o *VolumeReplicationCycleResponse) HasVolumeId() bool {
	if o != nil && !IsNil(o.VolumeId) {
		return true
	}

	return false
}

// SetVolumeId gets a reference to the given string and assigns it to the VolumeId field.
func (o *VolumeReplicationCycleResponse) SetVolumeId(v string) {
	o.VolumeId = &v
}

func (o VolumeReplicationCycleResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeReplicationCycleResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cycle) {
		toSerialize["cycle"] = o.Cycle
	}
	if !IsNil(o.VolumeId) {
		toSerialize["volume_id"] = o.VolumeId
	}
	return toSerialize, nil
}

type NullableVolumeReplicationCycleResponse struct {
	value *VolumeReplicationCycleResponse
	isSet bool
}

func (v NullableVolumeReplicationCycleResponse) Get() *VolumeReplicationCycleResponse {
	return v.value
}

func (v *NullableVolumeReplicationCycleResponse) Set(val *VolumeReplicationCycleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeReplicationCycleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeReplicationCycleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeReplicationCycleResponse(val *VolumeReplicationCycleResponse) *NullableVolumeReplicationCycleResponse {
	return &NullableVolumeReplicationCycleResponse{value: val, isSet: true}
}

func (v NullableVolumeReplicationCycleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeReplicationCycleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
