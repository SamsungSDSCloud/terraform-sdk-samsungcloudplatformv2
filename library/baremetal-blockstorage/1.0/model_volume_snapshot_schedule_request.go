/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the VolumeSnapshotScheduleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeSnapshotScheduleRequest{}

// VolumeSnapshotScheduleRequest struct for VolumeSnapshotScheduleRequest
type VolumeSnapshotScheduleRequest struct {
	// Day of week(If this field is excluded, the schedule frequency is set to DAILY.)
	DayOfWeek *DayOfWeek `json:"day_of_week,omitempty"`
	// Hour
	Hour int32 `json:"hour"`
}

type _VolumeSnapshotScheduleRequest VolumeSnapshotScheduleRequest

// NewVolumeSnapshotScheduleRequest instantiates a new VolumeSnapshotScheduleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeSnapshotScheduleRequest(hour int32) *VolumeSnapshotScheduleRequest {
	this := VolumeSnapshotScheduleRequest{}
	this.Hour = hour
	return &this
}

// NewVolumeSnapshotScheduleRequestWithDefaults instantiates a new VolumeSnapshotScheduleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeSnapshotScheduleRequestWithDefaults() *VolumeSnapshotScheduleRequest {
	this := VolumeSnapshotScheduleRequest{}
	return &this
}

// GetDayOfWeek returns the DayOfWeek field value if set, zero value otherwise.
func (o *VolumeSnapshotScheduleRequest) GetDayOfWeek() DayOfWeek {
	if o == nil || IsNil(o.DayOfWeek) {
		var ret DayOfWeek
		return ret
	}
	return *o.DayOfWeek
}

// GetDayOfWeekOk returns a tuple with the DayOfWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshotScheduleRequest) GetDayOfWeekOk() (*DayOfWeek, bool) {
	if o == nil || IsNil(o.DayOfWeek) {
		return nil, false
	}
	return o.DayOfWeek, true
}

// HasDayOfWeek returns a boolean if a field has been set.
func (o *VolumeSnapshotScheduleRequest) HasDayOfWeek() bool {
	if o != nil && !IsNil(o.DayOfWeek) {
		return true
	}

	return false
}

// SetDayOfWeek gets a reference to the given DayOfWeek and assigns it to the DayOfWeek field.
func (o *VolumeSnapshotScheduleRequest) SetDayOfWeek(v DayOfWeek) {
	o.DayOfWeek = &v
}

// GetHour returns the Hour field value
func (o *VolumeSnapshotScheduleRequest) GetHour() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Hour
}

// GetHourOk returns a tuple with the Hour field value
// and a boolean to check if the value has been set.
func (o *VolumeSnapshotScheduleRequest) GetHourOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hour, true
}

// SetHour sets field value
func (o *VolumeSnapshotScheduleRequest) SetHour(v int32) {
	o.Hour = v
}

func (o VolumeSnapshotScheduleRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeSnapshotScheduleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DayOfWeek) {
		toSerialize["day_of_week"] = o.DayOfWeek
	}
	toSerialize["hour"] = o.Hour
	return toSerialize, nil
}

func (o *VolumeSnapshotScheduleRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"hour",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVolumeSnapshotScheduleRequest := _VolumeSnapshotScheduleRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVolumeSnapshotScheduleRequest)

	if err != nil {
		return err
	}

	*o = VolumeSnapshotScheduleRequest(varVolumeSnapshotScheduleRequest)

	return err
}

type NullableVolumeSnapshotScheduleRequest struct {
	value *VolumeSnapshotScheduleRequest
	isSet bool
}

func (v NullableVolumeSnapshotScheduleRequest) Get() *VolumeSnapshotScheduleRequest {
	return v.value
}

func (v *NullableVolumeSnapshotScheduleRequest) Set(val *VolumeSnapshotScheduleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeSnapshotScheduleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeSnapshotScheduleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeSnapshotScheduleRequest(val *VolumeSnapshotScheduleRequest) *NullableVolumeSnapshotScheduleRequest {
	return &NullableVolumeSnapshotScheduleRequest{value: val, isSet: true}
}

func (v NullableVolumeSnapshotScheduleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeSnapshotScheduleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
