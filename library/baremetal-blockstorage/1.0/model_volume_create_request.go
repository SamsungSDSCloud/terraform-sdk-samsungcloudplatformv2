/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the VolumeCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeCreateRequest{}

// VolumeCreateRequest struct for VolumeCreateRequest
type VolumeCreateRequest struct {
	// List of server id and type
	Attachments []AttachmentListModel `json:"attachments"`
	// Disk type
	DiskType DiskType `json:"disk_type"`
	// Volume name
	Name string `json:"name"`
	// Volume capacity(GB)
	SizeGb int32      `json:"size_gb"`
	Tags   []TagModel `json:"tags,omitempty"`
}

type _VolumeCreateRequest VolumeCreateRequest

// NewVolumeCreateRequest instantiates a new VolumeCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeCreateRequest(attachments []AttachmentListModel, diskType DiskType, name string, sizeGb int32) *VolumeCreateRequest {
	this := VolumeCreateRequest{}
	this.Attachments = attachments
	this.DiskType = diskType
	this.Name = name
	this.SizeGb = sizeGb
	return &this
}

// NewVolumeCreateRequestWithDefaults instantiates a new VolumeCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeCreateRequestWithDefaults() *VolumeCreateRequest {
	this := VolumeCreateRequest{}
	return &this
}

// GetAttachments returns the Attachments field value
func (o *VolumeCreateRequest) GetAttachments() []AttachmentListModel {
	if o == nil {
		var ret []AttachmentListModel
		return ret
	}

	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value
// and a boolean to check if the value has been set.
func (o *VolumeCreateRequest) GetAttachmentsOk() ([]AttachmentListModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Attachments, true
}

// SetAttachments sets field value
func (o *VolumeCreateRequest) SetAttachments(v []AttachmentListModel) {
	o.Attachments = v
}

// GetDiskType returns the DiskType field value
func (o *VolumeCreateRequest) GetDiskType() DiskType {
	if o == nil {
		var ret DiskType
		return ret
	}

	return o.DiskType
}

// GetDiskTypeOk returns a tuple with the DiskType field value
// and a boolean to check if the value has been set.
func (o *VolumeCreateRequest) GetDiskTypeOk() (*DiskType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiskType, true
}

// SetDiskType sets field value
func (o *VolumeCreateRequest) SetDiskType(v DiskType) {
	o.DiskType = v
}

// GetName returns the Name field value
func (o *VolumeCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VolumeCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VolumeCreateRequest) SetName(v string) {
	o.Name = v
}

// GetSizeGb returns the SizeGb field value
func (o *VolumeCreateRequest) GetSizeGb() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SizeGb
}

// GetSizeGbOk returns a tuple with the SizeGb field value
// and a boolean to check if the value has been set.
func (o *VolumeCreateRequest) GetSizeGbOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SizeGb, true
}

// SetSizeGb sets field value
func (o *VolumeCreateRequest) SetSizeGb(v int32) {
	o.SizeGb = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VolumeCreateRequest) GetTags() []TagModel {
	if o == nil {
		var ret []TagModel
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VolumeCreateRequest) GetTagsOk() ([]TagModel, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *VolumeCreateRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagModel and assigns it to the Tags field.
func (o *VolumeCreateRequest) SetTags(v []TagModel) {
	o.Tags = v
}

func (o VolumeCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attachments"] = o.Attachments
	toSerialize["disk_type"] = o.DiskType
	toSerialize["name"] = o.Name
	toSerialize["size_gb"] = o.SizeGb
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

func (o *VolumeCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attachments",
		"disk_type",
		"name",
		"size_gb",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVolumeCreateRequest := _VolumeCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVolumeCreateRequest)

	if err != nil {
		return err
	}

	*o = VolumeCreateRequest(varVolumeCreateRequest)

	return err
}

type NullableVolumeCreateRequest struct {
	value *VolumeCreateRequest
	isSet bool
}

func (v NullableVolumeCreateRequest) Get() *VolumeCreateRequest {
	return v.value
}

func (v *NullableVolumeCreateRequest) Set(val *VolumeCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeCreateRequest(val *VolumeCreateRequest) *NullableVolumeCreateRequest {
	return &NullableVolumeCreateRequest{value: val, isSet: true}
}

func (v NullableVolumeCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
