/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"encoding/json"
)

// checks if the VolumeModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeModel{}

// VolumeModel struct for VolumeModel
type VolumeModel struct {
	// Account id
	AccountId *string `json:"account_id,omitempty"`
	// Attached server
	Attachments []AttachedServer `json:"attachments,omitempty"`
	// Created at
	CreatedAt *string `json:"created_at,omitempty"`
	// Created by
	CreatedBy *string `json:"created_by,omitempty"`
	// Disk type
	DiskType *DiskType `json:"disk_type,omitempty"`
	// Error during external call
	ExternalErrors []ExternalError `json:"external_errors,omitempty"`
	// Whether origin relation exists
	HasOrigin *bool `json:"has_origin,omitempty"`
	// Whether replication relation exists
	HasReplication *bool `json:"has_replication,omitempty"`
	// Id
	Id *string `json:"id,omitempty"`
	// Whether to apply encryption
	IsEncryption *bool `json:"is_encryption,omitempty"`
	// List of iscsi ips
	IscsiTargetIps []string `json:"iscsi_target_ips,omitempty"`
	// Modified at
	ModifiedAt *string `json:"modified_at,omitempty"`
	// Modified by
	ModifiedBy *string `json:"modified_by,omitempty"`
	// Volume name
	Name *string `json:"name,omitempty"`
	// Previous state
	PreviousState *BlockStorageState `json:"previous_state,omitempty"`
	// Volume purpose
	Purpose *BlockStoragePurpose `json:"purpose,omitempty"`
	// Size gb
	SizeGb *int32 `json:"size_gb,omitempty"`
	// Snapshot rate
	SnapshotRate *int32 `json:"snapshot_rate,omitempty"`
	// Snapshot schedule
	SnapshotSchedule *SnapshotSchedule `json:"snapshot_schedule,omitempty"`
	// SRN
	Srn *string `json:"srn,omitempty"`
	// Current state
	State *BlockStorageState `json:"state,omitempty"`
	// Storage volume name
	StorageVolumeName *string `json:"storage_volume_name,omitempty"`
	// Volume group
	VolumeGroup *VolumeGroupInfo `json:"volume_group,omitempty"`
}

// NewVolumeModel instantiates a new VolumeModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeModel() *VolumeModel {
	this := VolumeModel{}
	var snapshotRate int32 = 0
	this.SnapshotRate = &snapshotRate
	return &this
}

// NewVolumeModelWithDefaults instantiates a new VolumeModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeModelWithDefaults() *VolumeModel {
	this := VolumeModel{}
	var snapshotRate int32 = 0
	this.SnapshotRate = &snapshotRate
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *VolumeModel) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *VolumeModel) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *VolumeModel) SetAccountId(v string) {
	o.AccountId = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *VolumeModel) GetAttachments() []AttachedServer {
	if o == nil || IsNil(o.Attachments) {
		var ret []AttachedServer
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetAttachmentsOk() ([]AttachedServer, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *VolumeModel) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []AttachedServer and assigns it to the Attachments field.
func (o *VolumeModel) SetAttachments(v []AttachedServer) {
	o.Attachments = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *VolumeModel) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *VolumeModel) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *VolumeModel) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *VolumeModel) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *VolumeModel) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *VolumeModel) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetDiskType returns the DiskType field value if set, zero value otherwise.
func (o *VolumeModel) GetDiskType() DiskType {
	if o == nil || IsNil(o.DiskType) {
		var ret DiskType
		return ret
	}
	return *o.DiskType
}

// GetDiskTypeOk returns a tuple with the DiskType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetDiskTypeOk() (*DiskType, bool) {
	if o == nil || IsNil(o.DiskType) {
		return nil, false
	}
	return o.DiskType, true
}

// HasDiskType returns a boolean if a field has been set.
func (o *VolumeModel) HasDiskType() bool {
	if o != nil && !IsNil(o.DiskType) {
		return true
	}

	return false
}

// SetDiskType gets a reference to the given DiskType and assigns it to the DiskType field.
func (o *VolumeModel) SetDiskType(v DiskType) {
	o.DiskType = &v
}

// GetExternalErrors returns the ExternalErrors field value if set, zero value otherwise.
func (o *VolumeModel) GetExternalErrors() []ExternalError {
	if o == nil || IsNil(o.ExternalErrors) {
		var ret []ExternalError
		return ret
	}
	return o.ExternalErrors
}

// GetExternalErrorsOk returns a tuple with the ExternalErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetExternalErrorsOk() ([]ExternalError, bool) {
	if o == nil || IsNil(o.ExternalErrors) {
		return nil, false
	}
	return o.ExternalErrors, true
}

// HasExternalErrors returns a boolean if a field has been set.
func (o *VolumeModel) HasExternalErrors() bool {
	if o != nil && !IsNil(o.ExternalErrors) {
		return true
	}

	return false
}

// SetExternalErrors gets a reference to the given []ExternalError and assigns it to the ExternalErrors field.
func (o *VolumeModel) SetExternalErrors(v []ExternalError) {
	o.ExternalErrors = v
}

// GetHasOrigin returns the HasOrigin field value if set, zero value otherwise.
func (o *VolumeModel) GetHasOrigin() bool {
	if o == nil || IsNil(o.HasOrigin) {
		var ret bool
		return ret
	}
	return *o.HasOrigin
}

// GetHasOriginOk returns a tuple with the HasOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetHasOriginOk() (*bool, bool) {
	if o == nil || IsNil(o.HasOrigin) {
		return nil, false
	}
	return o.HasOrigin, true
}

// HasHasOrigin returns a boolean if a field has been set.
func (o *VolumeModel) HasHasOrigin() bool {
	if o != nil && !IsNil(o.HasOrigin) {
		return true
	}

	return false
}

// SetHasOrigin gets a reference to the given bool and assigns it to the HasOrigin field.
func (o *VolumeModel) SetHasOrigin(v bool) {
	o.HasOrigin = &v
}

// GetHasReplication returns the HasReplication field value if set, zero value otherwise.
func (o *VolumeModel) GetHasReplication() bool {
	if o == nil || IsNil(o.HasReplication) {
		var ret bool
		return ret
	}
	return *o.HasReplication
}

// GetHasReplicationOk returns a tuple with the HasReplication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetHasReplicationOk() (*bool, bool) {
	if o == nil || IsNil(o.HasReplication) {
		return nil, false
	}
	return o.HasReplication, true
}

// HasHasReplication returns a boolean if a field has been set.
func (o *VolumeModel) HasHasReplication() bool {
	if o != nil && !IsNil(o.HasReplication) {
		return true
	}

	return false
}

// SetHasReplication gets a reference to the given bool and assigns it to the HasReplication field.
func (o *VolumeModel) SetHasReplication(v bool) {
	o.HasReplication = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VolumeModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VolumeModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VolumeModel) SetId(v string) {
	o.Id = &v
}

// GetIsEncryption returns the IsEncryption field value if set, zero value otherwise.
func (o *VolumeModel) GetIsEncryption() bool {
	if o == nil || IsNil(o.IsEncryption) {
		var ret bool
		return ret
	}
	return *o.IsEncryption
}

// GetIsEncryptionOk returns a tuple with the IsEncryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetIsEncryptionOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEncryption) {
		return nil, false
	}
	return o.IsEncryption, true
}

// HasIsEncryption returns a boolean if a field has been set.
func (o *VolumeModel) HasIsEncryption() bool {
	if o != nil && !IsNil(o.IsEncryption) {
		return true
	}

	return false
}

// SetIsEncryption gets a reference to the given bool and assigns it to the IsEncryption field.
func (o *VolumeModel) SetIsEncryption(v bool) {
	o.IsEncryption = &v
}

// GetIscsiTargetIps returns the IscsiTargetIps field value if set, zero value otherwise.
func (o *VolumeModel) GetIscsiTargetIps() []string {
	if o == nil || IsNil(o.IscsiTargetIps) {
		var ret []string
		return ret
	}
	return o.IscsiTargetIps
}

// GetIscsiTargetIpsOk returns a tuple with the IscsiTargetIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetIscsiTargetIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.IscsiTargetIps) {
		return nil, false
	}
	return o.IscsiTargetIps, true
}

// HasIscsiTargetIps returns a boolean if a field has been set.
func (o *VolumeModel) HasIscsiTargetIps() bool {
	if o != nil && !IsNil(o.IscsiTargetIps) {
		return true
	}

	return false
}

// SetIscsiTargetIps gets a reference to the given []string and assigns it to the IscsiTargetIps field.
func (o *VolumeModel) SetIscsiTargetIps(v []string) {
	o.IscsiTargetIps = v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *VolumeModel) GetModifiedAt() string {
	if o == nil || IsNil(o.ModifiedAt) {
		var ret string
		return ret
	}
	return *o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetModifiedAtOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedAt) {
		return nil, false
	}
	return o.ModifiedAt, true
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *VolumeModel) HasModifiedAt() bool {
	if o != nil && !IsNil(o.ModifiedAt) {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given string and assigns it to the ModifiedAt field.
func (o *VolumeModel) SetModifiedAt(v string) {
	o.ModifiedAt = &v
}

// GetModifiedBy returns the ModifiedBy field value if set, zero value otherwise.
func (o *VolumeModel) GetModifiedBy() string {
	if o == nil || IsNil(o.ModifiedBy) {
		var ret string
		return ret
	}
	return *o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedBy) {
		return nil, false
	}
	return o.ModifiedBy, true
}

// HasModifiedBy returns a boolean if a field has been set.
func (o *VolumeModel) HasModifiedBy() bool {
	if o != nil && !IsNil(o.ModifiedBy) {
		return true
	}

	return false
}

// SetModifiedBy gets a reference to the given string and assigns it to the ModifiedBy field.
func (o *VolumeModel) SetModifiedBy(v string) {
	o.ModifiedBy = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VolumeModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VolumeModel) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VolumeModel) SetName(v string) {
	o.Name = &v
}

// GetPreviousState returns the PreviousState field value if set, zero value otherwise.
func (o *VolumeModel) GetPreviousState() BlockStorageState {
	if o == nil || IsNil(o.PreviousState) {
		var ret BlockStorageState
		return ret
	}
	return *o.PreviousState
}

// GetPreviousStateOk returns a tuple with the PreviousState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetPreviousStateOk() (*BlockStorageState, bool) {
	if o == nil || IsNil(o.PreviousState) {
		return nil, false
	}
	return o.PreviousState, true
}

// HasPreviousState returns a boolean if a field has been set.
func (o *VolumeModel) HasPreviousState() bool {
	if o != nil && !IsNil(o.PreviousState) {
		return true
	}

	return false
}

// SetPreviousState gets a reference to the given BlockStorageState and assigns it to the PreviousState field.
func (o *VolumeModel) SetPreviousState(v BlockStorageState) {
	o.PreviousState = &v
}

// GetPurpose returns the Purpose field value if set, zero value otherwise.
func (o *VolumeModel) GetPurpose() BlockStoragePurpose {
	if o == nil || IsNil(o.Purpose) {
		var ret BlockStoragePurpose
		return ret
	}
	return *o.Purpose
}

// GetPurposeOk returns a tuple with the Purpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetPurposeOk() (*BlockStoragePurpose, bool) {
	if o == nil || IsNil(o.Purpose) {
		return nil, false
	}
	return o.Purpose, true
}

// HasPurpose returns a boolean if a field has been set.
func (o *VolumeModel) HasPurpose() bool {
	if o != nil && !IsNil(o.Purpose) {
		return true
	}

	return false
}

// SetPurpose gets a reference to the given BlockStoragePurpose and assigns it to the Purpose field.
func (o *VolumeModel) SetPurpose(v BlockStoragePurpose) {
	o.Purpose = &v
}

// GetSizeGb returns the SizeGb field value if set, zero value otherwise.
func (o *VolumeModel) GetSizeGb() int32 {
	if o == nil || IsNil(o.SizeGb) {
		var ret int32
		return ret
	}
	return *o.SizeGb
}

// GetSizeGbOk returns a tuple with the SizeGb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetSizeGbOk() (*int32, bool) {
	if o == nil || IsNil(o.SizeGb) {
		return nil, false
	}
	return o.SizeGb, true
}

// HasSizeGb returns a boolean if a field has been set.
func (o *VolumeModel) HasSizeGb() bool {
	if o != nil && !IsNil(o.SizeGb) {
		return true
	}

	return false
}

// SetSizeGb gets a reference to the given int32 and assigns it to the SizeGb field.
func (o *VolumeModel) SetSizeGb(v int32) {
	o.SizeGb = &v
}

// GetSnapshotRate returns the SnapshotRate field value if set, zero value otherwise.
func (o *VolumeModel) GetSnapshotRate() int32 {
	if o == nil || IsNil(o.SnapshotRate) {
		var ret int32
		return ret
	}
	return *o.SnapshotRate
}

// GetSnapshotRateOk returns a tuple with the SnapshotRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetSnapshotRateOk() (*int32, bool) {
	if o == nil || IsNil(o.SnapshotRate) {
		return nil, false
	}
	return o.SnapshotRate, true
}

// HasSnapshotRate returns a boolean if a field has been set.
func (o *VolumeModel) HasSnapshotRate() bool {
	if o != nil && !IsNil(o.SnapshotRate) {
		return true
	}

	return false
}

// SetSnapshotRate gets a reference to the given int32 and assigns it to the SnapshotRate field.
func (o *VolumeModel) SetSnapshotRate(v int32) {
	o.SnapshotRate = &v
}

// GetSnapshotSchedule returns the SnapshotSchedule field value if set, zero value otherwise.
func (o *VolumeModel) GetSnapshotSchedule() SnapshotSchedule {
	if o == nil || IsNil(o.SnapshotSchedule) {
		var ret SnapshotSchedule
		return ret
	}
	return *o.SnapshotSchedule
}

// GetSnapshotScheduleOk returns a tuple with the SnapshotSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetSnapshotScheduleOk() (*SnapshotSchedule, bool) {
	if o == nil || IsNil(o.SnapshotSchedule) {
		return nil, false
	}
	return o.SnapshotSchedule, true
}

// HasSnapshotSchedule returns a boolean if a field has been set.
func (o *VolumeModel) HasSnapshotSchedule() bool {
	if o != nil && !IsNil(o.SnapshotSchedule) {
		return true
	}

	return false
}

// SetSnapshotSchedule gets a reference to the given SnapshotSchedule and assigns it to the SnapshotSchedule field.
func (o *VolumeModel) SetSnapshotSchedule(v SnapshotSchedule) {
	o.SnapshotSchedule = &v
}

// GetSrn returns the Srn field value if set, zero value otherwise.
func (o *VolumeModel) GetSrn() string {
	if o == nil || IsNil(o.Srn) {
		var ret string
		return ret
	}
	return *o.Srn
}

// GetSrnOk returns a tuple with the Srn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetSrnOk() (*string, bool) {
	if o == nil || IsNil(o.Srn) {
		return nil, false
	}
	return o.Srn, true
}

// HasSrn returns a boolean if a field has been set.
func (o *VolumeModel) HasSrn() bool {
	if o != nil && !IsNil(o.Srn) {
		return true
	}

	return false
}

// SetSrn gets a reference to the given string and assigns it to the Srn field.
func (o *VolumeModel) SetSrn(v string) {
	o.Srn = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *VolumeModel) GetState() BlockStorageState {
	if o == nil || IsNil(o.State) {
		var ret BlockStorageState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetStateOk() (*BlockStorageState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *VolumeModel) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given BlockStorageState and assigns it to the State field.
func (o *VolumeModel) SetState(v BlockStorageState) {
	o.State = &v
}

// GetStorageVolumeName returns the StorageVolumeName field value if set, zero value otherwise.
func (o *VolumeModel) GetStorageVolumeName() string {
	if o == nil || IsNil(o.StorageVolumeName) {
		var ret string
		return ret
	}
	return *o.StorageVolumeName
}

// GetStorageVolumeNameOk returns a tuple with the StorageVolumeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetStorageVolumeNameOk() (*string, bool) {
	if o == nil || IsNil(o.StorageVolumeName) {
		return nil, false
	}
	return o.StorageVolumeName, true
}

// HasStorageVolumeName returns a boolean if a field has been set.
func (o *VolumeModel) HasStorageVolumeName() bool {
	if o != nil && !IsNil(o.StorageVolumeName) {
		return true
	}

	return false
}

// SetStorageVolumeName gets a reference to the given string and assigns it to the StorageVolumeName field.
func (o *VolumeModel) SetStorageVolumeName(v string) {
	o.StorageVolumeName = &v
}

// GetVolumeGroup returns the VolumeGroup field value if set, zero value otherwise.
func (o *VolumeModel) GetVolumeGroup() VolumeGroupInfo {
	if o == nil || IsNil(o.VolumeGroup) {
		var ret VolumeGroupInfo
		return ret
	}
	return *o.VolumeGroup
}

// GetVolumeGroupOk returns a tuple with the VolumeGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeModel) GetVolumeGroupOk() (*VolumeGroupInfo, bool) {
	if o == nil || IsNil(o.VolumeGroup) {
		return nil, false
	}
	return o.VolumeGroup, true
}

// HasVolumeGroup returns a boolean if a field has been set.
func (o *VolumeModel) HasVolumeGroup() bool {
	if o != nil && !IsNil(o.VolumeGroup) {
		return true
	}

	return false
}

// SetVolumeGroup gets a reference to the given VolumeGroupInfo and assigns it to the VolumeGroup field.
func (o *VolumeModel) SetVolumeGroup(v VolumeGroupInfo) {
	o.VolumeGroup = &v
}

func (o VolumeModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["created_by"] = o.CreatedBy
	}
	if !IsNil(o.DiskType) {
		toSerialize["disk_type"] = o.DiskType
	}
	if !IsNil(o.ExternalErrors) {
		toSerialize["external_errors"] = o.ExternalErrors
	}
	if !IsNil(o.HasOrigin) {
		toSerialize["has_origin"] = o.HasOrigin
	}
	if !IsNil(o.HasReplication) {
		toSerialize["has_replication"] = o.HasReplication
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsEncryption) {
		toSerialize["is_encryption"] = o.IsEncryption
	}
	if !IsNil(o.IscsiTargetIps) {
		toSerialize["iscsi_target_ips"] = o.IscsiTargetIps
	}
	if !IsNil(o.ModifiedAt) {
		toSerialize["modified_at"] = o.ModifiedAt
	}
	if !IsNil(o.ModifiedBy) {
		toSerialize["modified_by"] = o.ModifiedBy
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PreviousState) {
		toSerialize["previous_state"] = o.PreviousState
	}
	if !IsNil(o.Purpose) {
		toSerialize["purpose"] = o.Purpose
	}
	if !IsNil(o.SizeGb) {
		toSerialize["size_gb"] = o.SizeGb
	}
	if !IsNil(o.SnapshotRate) {
		toSerialize["snapshot_rate"] = o.SnapshotRate
	}
	if !IsNil(o.SnapshotSchedule) {
		toSerialize["snapshot_schedule"] = o.SnapshotSchedule
	}
	if !IsNil(o.Srn) {
		toSerialize["srn"] = o.Srn
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.StorageVolumeName) {
		toSerialize["storage_volume_name"] = o.StorageVolumeName
	}
	if !IsNil(o.VolumeGroup) {
		toSerialize["volume_group"] = o.VolumeGroup
	}
	return toSerialize, nil
}

type NullableVolumeModel struct {
	value *VolumeModel
	isSet bool
}

func (v NullableVolumeModel) Get() *VolumeModel {
	return v.value
}

func (v *NullableVolumeModel) Set(val *VolumeModel) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeModel) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeModel(val *VolumeModel) *NullableVolumeModel {
	return &NullableVolumeModel{value: val, isSet: true}
}

func (v NullableVolumeModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
