/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"encoding/json"
)

// checks if the VolumeGroupSnapshotListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeGroupSnapshotListResponse{}

// VolumeGroupSnapshotListResponse struct for VolumeGroupSnapshotListResponse
type VolumeGroupSnapshotListResponse struct {
	// Whether to activate snapshot
	IsSnapshotPolicy *bool `json:"is_snapshot_policy,omitempty"`
	// List of snapshots
	Snapshots []VolumeGroupSnapshotListModel `json:"snapshots,omitempty"`
	// Volume group id
	VolumeGroupId *string `json:"volume_group_id,omitempty"`
}

// NewVolumeGroupSnapshotListResponse instantiates a new VolumeGroupSnapshotListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeGroupSnapshotListResponse() *VolumeGroupSnapshotListResponse {
	this := VolumeGroupSnapshotListResponse{}
	var isSnapshotPolicy bool = false
	this.IsSnapshotPolicy = &isSnapshotPolicy
	var volumeGroupId string = ""
	this.VolumeGroupId = &volumeGroupId
	return &this
}

// NewVolumeGroupSnapshotListResponseWithDefaults instantiates a new VolumeGroupSnapshotListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeGroupSnapshotListResponseWithDefaults() *VolumeGroupSnapshotListResponse {
	this := VolumeGroupSnapshotListResponse{}
	var isSnapshotPolicy bool = false
	this.IsSnapshotPolicy = &isSnapshotPolicy
	var volumeGroupId string = ""
	this.VolumeGroupId = &volumeGroupId
	return &this
}

// GetIsSnapshotPolicy returns the IsSnapshotPolicy field value if set, zero value otherwise.
func (o *VolumeGroupSnapshotListResponse) GetIsSnapshotPolicy() bool {
	if o == nil || IsNil(o.IsSnapshotPolicy) {
		var ret bool
		return ret
	}
	return *o.IsSnapshotPolicy
}

// GetIsSnapshotPolicyOk returns a tuple with the IsSnapshotPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshotListResponse) GetIsSnapshotPolicyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSnapshotPolicy) {
		return nil, false
	}
	return o.IsSnapshotPolicy, true
}

// HasIsSnapshotPolicy returns a boolean if a field has been set.
func (o *VolumeGroupSnapshotListResponse) HasIsSnapshotPolicy() bool {
	if o != nil && !IsNil(o.IsSnapshotPolicy) {
		return true
	}

	return false
}

// SetIsSnapshotPolicy gets a reference to the given bool and assigns it to the IsSnapshotPolicy field.
func (o *VolumeGroupSnapshotListResponse) SetIsSnapshotPolicy(v bool) {
	o.IsSnapshotPolicy = &v
}

// GetSnapshots returns the Snapshots field value if set, zero value otherwise.
func (o *VolumeGroupSnapshotListResponse) GetSnapshots() []VolumeGroupSnapshotListModel {
	if o == nil || IsNil(o.Snapshots) {
		var ret []VolumeGroupSnapshotListModel
		return ret
	}
	return o.Snapshots
}

// GetSnapshotsOk returns a tuple with the Snapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshotListResponse) GetSnapshotsOk() ([]VolumeGroupSnapshotListModel, bool) {
	if o == nil || IsNil(o.Snapshots) {
		return nil, false
	}
	return o.Snapshots, true
}

// HasSnapshots returns a boolean if a field has been set.
func (o *VolumeGroupSnapshotListResponse) HasSnapshots() bool {
	if o != nil && !IsNil(o.Snapshots) {
		return true
	}

	return false
}

// SetSnapshots gets a reference to the given []VolumeGroupSnapshotListModel and assigns it to the Snapshots field.
func (o *VolumeGroupSnapshotListResponse) SetSnapshots(v []VolumeGroupSnapshotListModel) {
	o.Snapshots = v
}

// GetVolumeGroupId returns the VolumeGroupId field value if set, zero value otherwise.
func (o *VolumeGroupSnapshotListResponse) GetVolumeGroupId() string {
	if o == nil || IsNil(o.VolumeGroupId) {
		var ret string
		return ret
	}
	return *o.VolumeGroupId
}

// GetVolumeGroupIdOk returns a tuple with the VolumeGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshotListResponse) GetVolumeGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeGroupId) {
		return nil, false
	}
	return o.VolumeGroupId, true
}

// HasVolumeGroupId returns a boolean if a field has been set.
func (o *VolumeGroupSnapshotListResponse) HasVolumeGroupId() bool {
	if o != nil && !IsNil(o.VolumeGroupId) {
		return true
	}

	return false
}

// SetVolumeGroupId gets a reference to the given string and assigns it to the VolumeGroupId field.
func (o *VolumeGroupSnapshotListResponse) SetVolumeGroupId(v string) {
	o.VolumeGroupId = &v
}

func (o VolumeGroupSnapshotListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeGroupSnapshotListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsSnapshotPolicy) {
		toSerialize["is_snapshot_policy"] = o.IsSnapshotPolicy
	}
	if !IsNil(o.Snapshots) {
		toSerialize["snapshots"] = o.Snapshots
	}
	if !IsNil(o.VolumeGroupId) {
		toSerialize["volume_group_id"] = o.VolumeGroupId
	}
	return toSerialize, nil
}

type NullableVolumeGroupSnapshotListResponse struct {
	value *VolumeGroupSnapshotListResponse
	isSet bool
}

func (v NullableVolumeGroupSnapshotListResponse) Get() *VolumeGroupSnapshotListResponse {
	return v.value
}

func (v *NullableVolumeGroupSnapshotListResponse) Set(val *VolumeGroupSnapshotListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeGroupSnapshotListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeGroupSnapshotListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeGroupSnapshotListResponse(val *VolumeGroupSnapshotListResponse) *NullableVolumeGroupSnapshotListResponse {
	return &NullableVolumeGroupSnapshotListResponse{value: val, isSet: true}
}

func (v NullableVolumeGroupSnapshotListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeGroupSnapshotListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
