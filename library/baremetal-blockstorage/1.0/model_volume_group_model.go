/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"encoding/json"
)

// checks if the VolumeGroupModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeGroupModel{}

// VolumeGroupModel struct for VolumeGroupModel
type VolumeGroupModel struct {
	// Account id
	AccountId *string `json:"account_id,omitempty"`
	// Created at
	CreatedAt *string `json:"created_at,omitempty"`
	// Created by
	CreatedBy *string `json:"created_by,omitempty"`
	// Whether origin relation exists
	HasOrigin *bool `json:"has_origin,omitempty"`
	// Whether replication relation exists
	HasReplication *bool `json:"has_replication,omitempty"`
	// Volume group id
	Id *string `json:"id,omitempty"`
	// List of member volumes
	MemberVolumes []MemberVolume `json:"member_volumes,omitempty"`
	// Modified at
	ModifiedAt *string `json:"modified_at,omitempty"`
	// Modified by
	ModifiedBy *string `json:"modified_by,omitempty"`
	// Volume group name
	Name *string `json:"name,omitempty"`
	// Volume group purpose
	Purpose *VolumeGroupPurpose `json:"purpose,omitempty"`
	// Snapshot schedule
	SnapshotSchedule *SnapshotSchedule `json:"snapshot_schedule,omitempty"`
	// SO Storage ID
	SoStorageId *int32 `json:"so_storage_id,omitempty"`
	// SO Volume Pool ID
	SoVolumePoolId *string `json:"so_volume_pool_id,omitempty"`
	// Current state
	State *VolumeGroupState `json:"state,omitempty"`
	// Volume group name
	StorageVolumeGroupName *string `json:"storage_volume_group_name,omitempty"`
}

// NewVolumeGroupModel instantiates a new VolumeGroupModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeGroupModel() *VolumeGroupModel {
	this := VolumeGroupModel{}
	return &this
}

// NewVolumeGroupModelWithDefaults instantiates a new VolumeGroupModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeGroupModelWithDefaults() *VolumeGroupModel {
	this := VolumeGroupModel{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *VolumeGroupModel) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupModel) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *VolumeGroupModel) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *VolumeGroupModel) SetAccountId(v string) {
	o.AccountId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *VolumeGroupModel) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupModel) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *VolumeGroupModel) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *VolumeGroupModel) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *VolumeGroupModel) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupModel) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *VolumeGroupModel) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *VolumeGroupModel) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetHasOrigin returns the HasOrigin field value if set, zero value otherwise.
func (o *VolumeGroupModel) GetHasOrigin() bool {
	if o == nil || IsNil(o.HasOrigin) {
		var ret bool
		return ret
	}
	return *o.HasOrigin
}

// GetHasOriginOk returns a tuple with the HasOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupModel) GetHasOriginOk() (*bool, bool) {
	if o == nil || IsNil(o.HasOrigin) {
		return nil, false
	}
	return o.HasOrigin, true
}

// HasHasOrigin returns a boolean if a field has been set.
func (o *VolumeGroupModel) HasHasOrigin() bool {
	if o != nil && !IsNil(o.HasOrigin) {
		return true
	}

	return false
}

// SetHasOrigin gets a reference to the given bool and assigns it to the HasOrigin field.
func (o *VolumeGroupModel) SetHasOrigin(v bool) {
	o.HasOrigin = &v
}

// GetHasReplication returns the HasReplication field value if set, zero value otherwise.
func (o *VolumeGroupModel) GetHasReplication() bool {
	if o == nil || IsNil(o.HasReplication) {
		var ret bool
		return ret
	}
	return *o.HasReplication
}

// GetHasReplicationOk returns a tuple with the HasReplication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupModel) GetHasReplicationOk() (*bool, bool) {
	if o == nil || IsNil(o.HasReplication) {
		return nil, false
	}
	return o.HasReplication, true
}

// HasHasReplication returns a boolean if a field has been set.
func (o *VolumeGroupModel) HasHasReplication() bool {
	if o != nil && !IsNil(o.HasReplication) {
		return true
	}

	return false
}

// SetHasReplication gets a reference to the given bool and assigns it to the HasReplication field.
func (o *VolumeGroupModel) SetHasReplication(v bool) {
	o.HasReplication = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VolumeGroupModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VolumeGroupModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VolumeGroupModel) SetId(v string) {
	o.Id = &v
}

// GetMemberVolumes returns the MemberVolumes field value if set, zero value otherwise.
func (o *VolumeGroupModel) GetMemberVolumes() []MemberVolume {
	if o == nil || IsNil(o.MemberVolumes) {
		var ret []MemberVolume
		return ret
	}
	return o.MemberVolumes
}

// GetMemberVolumesOk returns a tuple with the MemberVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupModel) GetMemberVolumesOk() ([]MemberVolume, bool) {
	if o == nil || IsNil(o.MemberVolumes) {
		return nil, false
	}
	return o.MemberVolumes, true
}

// HasMemberVolumes returns a boolean if a field has been set.
func (o *VolumeGroupModel) HasMemberVolumes() bool {
	if o != nil && !IsNil(o.MemberVolumes) {
		return true
	}

	return false
}

// SetMemberVolumes gets a reference to the given []MemberVolume and assigns it to the MemberVolumes field.
func (o *VolumeGroupModel) SetMemberVolumes(v []MemberVolume) {
	o.MemberVolumes = v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *VolumeGroupModel) GetModifiedAt() string {
	if o == nil || IsNil(o.ModifiedAt) {
		var ret string
		return ret
	}
	return *o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupModel) GetModifiedAtOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedAt) {
		return nil, false
	}
	return o.ModifiedAt, true
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *VolumeGroupModel) HasModifiedAt() bool {
	if o != nil && !IsNil(o.ModifiedAt) {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given string and assigns it to the ModifiedAt field.
func (o *VolumeGroupModel) SetModifiedAt(v string) {
	o.ModifiedAt = &v
}

// GetModifiedBy returns the ModifiedBy field value if set, zero value otherwise.
func (o *VolumeGroupModel) GetModifiedBy() string {
	if o == nil || IsNil(o.ModifiedBy) {
		var ret string
		return ret
	}
	return *o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupModel) GetModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedBy) {
		return nil, false
	}
	return o.ModifiedBy, true
}

// HasModifiedBy returns a boolean if a field has been set.
func (o *VolumeGroupModel) HasModifiedBy() bool {
	if o != nil && !IsNil(o.ModifiedBy) {
		return true
	}

	return false
}

// SetModifiedBy gets a reference to the given string and assigns it to the ModifiedBy field.
func (o *VolumeGroupModel) SetModifiedBy(v string) {
	o.ModifiedBy = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VolumeGroupModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VolumeGroupModel) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VolumeGroupModel) SetName(v string) {
	o.Name = &v
}

// GetPurpose returns the Purpose field value if set, zero value otherwise.
func (o *VolumeGroupModel) GetPurpose() VolumeGroupPurpose {
	if o == nil || IsNil(o.Purpose) {
		var ret VolumeGroupPurpose
		return ret
	}
	return *o.Purpose
}

// GetPurposeOk returns a tuple with the Purpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupModel) GetPurposeOk() (*VolumeGroupPurpose, bool) {
	if o == nil || IsNil(o.Purpose) {
		return nil, false
	}
	return o.Purpose, true
}

// HasPurpose returns a boolean if a field has been set.
func (o *VolumeGroupModel) HasPurpose() bool {
	if o != nil && !IsNil(o.Purpose) {
		return true
	}

	return false
}

// SetPurpose gets a reference to the given VolumeGroupPurpose and assigns it to the Purpose field.
func (o *VolumeGroupModel) SetPurpose(v VolumeGroupPurpose) {
	o.Purpose = &v
}

// GetSnapshotSchedule returns the SnapshotSchedule field value if set, zero value otherwise.
func (o *VolumeGroupModel) GetSnapshotSchedule() SnapshotSchedule {
	if o == nil || IsNil(o.SnapshotSchedule) {
		var ret SnapshotSchedule
		return ret
	}
	return *o.SnapshotSchedule
}

// GetSnapshotScheduleOk returns a tuple with the SnapshotSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupModel) GetSnapshotScheduleOk() (*SnapshotSchedule, bool) {
	if o == nil || IsNil(o.SnapshotSchedule) {
		return nil, false
	}
	return o.SnapshotSchedule, true
}

// HasSnapshotSchedule returns a boolean if a field has been set.
func (o *VolumeGroupModel) HasSnapshotSchedule() bool {
	if o != nil && !IsNil(o.SnapshotSchedule) {
		return true
	}

	return false
}

// SetSnapshotSchedule gets a reference to the given SnapshotSchedule and assigns it to the SnapshotSchedule field.
func (o *VolumeGroupModel) SetSnapshotSchedule(v SnapshotSchedule) {
	o.SnapshotSchedule = &v
}

// GetSoStorageId returns the SoStorageId field value if set, zero value otherwise.
func (o *VolumeGroupModel) GetSoStorageId() int32 {
	if o == nil || IsNil(o.SoStorageId) {
		var ret int32
		return ret
	}
	return *o.SoStorageId
}

// GetSoStorageIdOk returns a tuple with the SoStorageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupModel) GetSoStorageIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SoStorageId) {
		return nil, false
	}
	return o.SoStorageId, true
}

// HasSoStorageId returns a boolean if a field has been set.
func (o *VolumeGroupModel) HasSoStorageId() bool {
	if o != nil && !IsNil(o.SoStorageId) {
		return true
	}

	return false
}

// SetSoStorageId gets a reference to the given int32 and assigns it to the SoStorageId field.
func (o *VolumeGroupModel) SetSoStorageId(v int32) {
	o.SoStorageId = &v
}

// GetSoVolumePoolId returns the SoVolumePoolId field value if set, zero value otherwise.
func (o *VolumeGroupModel) GetSoVolumePoolId() string {
	if o == nil || IsNil(o.SoVolumePoolId) {
		var ret string
		return ret
	}
	return *o.SoVolumePoolId
}

// GetSoVolumePoolIdOk returns a tuple with the SoVolumePoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupModel) GetSoVolumePoolIdOk() (*string, bool) {
	if o == nil || IsNil(o.SoVolumePoolId) {
		return nil, false
	}
	return o.SoVolumePoolId, true
}

// HasSoVolumePoolId returns a boolean if a field has been set.
func (o *VolumeGroupModel) HasSoVolumePoolId() bool {
	if o != nil && !IsNil(o.SoVolumePoolId) {
		return true
	}

	return false
}

// SetSoVolumePoolId gets a reference to the given string and assigns it to the SoVolumePoolId field.
func (o *VolumeGroupModel) SetSoVolumePoolId(v string) {
	o.SoVolumePoolId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *VolumeGroupModel) GetState() VolumeGroupState {
	if o == nil || IsNil(o.State) {
		var ret VolumeGroupState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupModel) GetStateOk() (*VolumeGroupState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *VolumeGroupModel) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given VolumeGroupState and assigns it to the State field.
func (o *VolumeGroupModel) SetState(v VolumeGroupState) {
	o.State = &v
}

// GetStorageVolumeGroupName returns the StorageVolumeGroupName field value if set, zero value otherwise.
func (o *VolumeGroupModel) GetStorageVolumeGroupName() string {
	if o == nil || IsNil(o.StorageVolumeGroupName) {
		var ret string
		return ret
	}
	return *o.StorageVolumeGroupName
}

// GetStorageVolumeGroupNameOk returns a tuple with the StorageVolumeGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupModel) GetStorageVolumeGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.StorageVolumeGroupName) {
		return nil, false
	}
	return o.StorageVolumeGroupName, true
}

// HasStorageVolumeGroupName returns a boolean if a field has been set.
func (o *VolumeGroupModel) HasStorageVolumeGroupName() bool {
	if o != nil && !IsNil(o.StorageVolumeGroupName) {
		return true
	}

	return false
}

// SetStorageVolumeGroupName gets a reference to the given string and assigns it to the StorageVolumeGroupName field.
func (o *VolumeGroupModel) SetStorageVolumeGroupName(v string) {
	o.StorageVolumeGroupName = &v
}

func (o VolumeGroupModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeGroupModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["created_by"] = o.CreatedBy
	}
	if !IsNil(o.HasOrigin) {
		toSerialize["has_origin"] = o.HasOrigin
	}
	if !IsNil(o.HasReplication) {
		toSerialize["has_replication"] = o.HasReplication
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MemberVolumes) {
		toSerialize["member_volumes"] = o.MemberVolumes
	}
	if !IsNil(o.ModifiedAt) {
		toSerialize["modified_at"] = o.ModifiedAt
	}
	if !IsNil(o.ModifiedBy) {
		toSerialize["modified_by"] = o.ModifiedBy
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Purpose) {
		toSerialize["purpose"] = o.Purpose
	}
	if !IsNil(o.SnapshotSchedule) {
		toSerialize["snapshot_schedule"] = o.SnapshotSchedule
	}
	if !IsNil(o.SoStorageId) {
		toSerialize["so_storage_id"] = o.SoStorageId
	}
	if !IsNil(o.SoVolumePoolId) {
		toSerialize["so_volume_pool_id"] = o.SoVolumePoolId
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.StorageVolumeGroupName) {
		toSerialize["storage_volume_group_name"] = o.StorageVolumeGroupName
	}
	return toSerialize, nil
}

type NullableVolumeGroupModel struct {
	value *VolumeGroupModel
	isSet bool
}

func (v NullableVolumeGroupModel) Get() *VolumeGroupModel {
	return v.value
}

func (v *NullableVolumeGroupModel) Set(val *VolumeGroupModel) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeGroupModel) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeGroupModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeGroupModel(val *VolumeGroupModel) *NullableVolumeGroupModel {
	return &NullableVolumeGroupModel{value: val, isSet: true}
}

func (v NullableVolumeGroupModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeGroupModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
