/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"encoding/json"
	"time"
)

// checks if the VolumeListModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeListModel{}

// VolumeListModel struct for VolumeListModel
type VolumeListModel struct {
	// Attached server
	Attachments []map[string]interface{} `json:"attachments,omitempty"`
	// Created at
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Created by
	CreatedBy *string `json:"created_by,omitempty"`
	// Disk type
	DiskType *DiskType `json:"disk_type,omitempty"`
	// Whether relation exists
	HasRelation *bool `json:"has_relation,omitempty"`
	// Id
	Id *string `json:"id,omitempty"`
	// Whether to belong to the volume group
	IsInVolumeGroup *bool `json:"is_in_volume_group,omitempty"`
	// Whether to activate snapshot
	IsSnapshotActivated *bool `json:"is_snapshot_activated,omitempty"`
	// List of iscsi ips
	IscsiTargetIps []string `json:"iscsi_target_ips,omitempty"`
	// Modified at
	ModifiedAt *time.Time `json:"modified_at,omitempty"`
	// Modified by
	ModifiedBy *string `json:"modified_by,omitempty"`
	// Name
	Name *string `json:"name,omitempty"`
	// Purpose
	Purpose *BlockStoragePurpose `json:"purpose,omitempty"`
	// Size gb
	SizeGb *int32 `json:"size_gb,omitempty"`
	// State
	State *BlockStorageState `json:"state,omitempty"`
	// Volume group
	VolumeGroup map[string]interface{} `json:"volume_group,omitempty"`
}

// NewVolumeListModel instantiates a new VolumeListModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeListModel() *VolumeListModel {
	this := VolumeListModel{}
	return &this
}

// NewVolumeListModelWithDefaults instantiates a new VolumeListModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeListModelWithDefaults() *VolumeListModel {
	this := VolumeListModel{}
	return &this
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *VolumeListModel) GetAttachments() []map[string]interface{} {
	if o == nil || IsNil(o.Attachments) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeListModel) GetAttachmentsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *VolumeListModel) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []map[string]interface{} and assigns it to the Attachments field.
func (o *VolumeListModel) SetAttachments(v []map[string]interface{}) {
	o.Attachments = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *VolumeListModel) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeListModel) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *VolumeListModel) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *VolumeListModel) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *VolumeListModel) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeListModel) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *VolumeListModel) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *VolumeListModel) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetDiskType returns the DiskType field value if set, zero value otherwise.
func (o *VolumeListModel) GetDiskType() DiskType {
	if o == nil || IsNil(o.DiskType) {
		var ret DiskType
		return ret
	}
	return *o.DiskType
}

// GetDiskTypeOk returns a tuple with the DiskType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeListModel) GetDiskTypeOk() (*DiskType, bool) {
	if o == nil || IsNil(o.DiskType) {
		return nil, false
	}
	return o.DiskType, true
}

// HasDiskType returns a boolean if a field has been set.
func (o *VolumeListModel) HasDiskType() bool {
	if o != nil && !IsNil(o.DiskType) {
		return true
	}

	return false
}

// SetDiskType gets a reference to the given DiskType and assigns it to the DiskType field.
func (o *VolumeListModel) SetDiskType(v DiskType) {
	o.DiskType = &v
}

// GetHasRelation returns the HasRelation field value if set, zero value otherwise.
func (o *VolumeListModel) GetHasRelation() bool {
	if o == nil || IsNil(o.HasRelation) {
		var ret bool
		return ret
	}
	return *o.HasRelation
}

// GetHasRelationOk returns a tuple with the HasRelation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeListModel) GetHasRelationOk() (*bool, bool) {
	if o == nil || IsNil(o.HasRelation) {
		return nil, false
	}
	return o.HasRelation, true
}

// HasHasRelation returns a boolean if a field has been set.
func (o *VolumeListModel) HasHasRelation() bool {
	if o != nil && !IsNil(o.HasRelation) {
		return true
	}

	return false
}

// SetHasRelation gets a reference to the given bool and assigns it to the HasRelation field.
func (o *VolumeListModel) SetHasRelation(v bool) {
	o.HasRelation = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VolumeListModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeListModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VolumeListModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VolumeListModel) SetId(v string) {
	o.Id = &v
}

// GetIsInVolumeGroup returns the IsInVolumeGroup field value if set, zero value otherwise.
func (o *VolumeListModel) GetIsInVolumeGroup() bool {
	if o == nil || IsNil(o.IsInVolumeGroup) {
		var ret bool
		return ret
	}
	return *o.IsInVolumeGroup
}

// GetIsInVolumeGroupOk returns a tuple with the IsInVolumeGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeListModel) GetIsInVolumeGroupOk() (*bool, bool) {
	if o == nil || IsNil(o.IsInVolumeGroup) {
		return nil, false
	}
	return o.IsInVolumeGroup, true
}

// HasIsInVolumeGroup returns a boolean if a field has been set.
func (o *VolumeListModel) HasIsInVolumeGroup() bool {
	if o != nil && !IsNil(o.IsInVolumeGroup) {
		return true
	}

	return false
}

// SetIsInVolumeGroup gets a reference to the given bool and assigns it to the IsInVolumeGroup field.
func (o *VolumeListModel) SetIsInVolumeGroup(v bool) {
	o.IsInVolumeGroup = &v
}

// GetIsSnapshotActivated returns the IsSnapshotActivated field value if set, zero value otherwise.
func (o *VolumeListModel) GetIsSnapshotActivated() bool {
	if o == nil || IsNil(o.IsSnapshotActivated) {
		var ret bool
		return ret
	}
	return *o.IsSnapshotActivated
}

// GetIsSnapshotActivatedOk returns a tuple with the IsSnapshotActivated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeListModel) GetIsSnapshotActivatedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSnapshotActivated) {
		return nil, false
	}
	return o.IsSnapshotActivated, true
}

// HasIsSnapshotActivated returns a boolean if a field has been set.
func (o *VolumeListModel) HasIsSnapshotActivated() bool {
	if o != nil && !IsNil(o.IsSnapshotActivated) {
		return true
	}

	return false
}

// SetIsSnapshotActivated gets a reference to the given bool and assigns it to the IsSnapshotActivated field.
func (o *VolumeListModel) SetIsSnapshotActivated(v bool) {
	o.IsSnapshotActivated = &v
}

// GetIscsiTargetIps returns the IscsiTargetIps field value if set, zero value otherwise.
func (o *VolumeListModel) GetIscsiTargetIps() []string {
	if o == nil || IsNil(o.IscsiTargetIps) {
		var ret []string
		return ret
	}
	return o.IscsiTargetIps
}

// GetIscsiTargetIpsOk returns a tuple with the IscsiTargetIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeListModel) GetIscsiTargetIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.IscsiTargetIps) {
		return nil, false
	}
	return o.IscsiTargetIps, true
}

// HasIscsiTargetIps returns a boolean if a field has been set.
func (o *VolumeListModel) HasIscsiTargetIps() bool {
	if o != nil && !IsNil(o.IscsiTargetIps) {
		return true
	}

	return false
}

// SetIscsiTargetIps gets a reference to the given []string and assigns it to the IscsiTargetIps field.
func (o *VolumeListModel) SetIscsiTargetIps(v []string) {
	o.IscsiTargetIps = v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *VolumeListModel) GetModifiedAt() time.Time {
	if o == nil || IsNil(o.ModifiedAt) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeListModel) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModifiedAt) {
		return nil, false
	}
	return o.ModifiedAt, true
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *VolumeListModel) HasModifiedAt() bool {
	if o != nil && !IsNil(o.ModifiedAt) {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given time.Time and assigns it to the ModifiedAt field.
func (o *VolumeListModel) SetModifiedAt(v time.Time) {
	o.ModifiedAt = &v
}

// GetModifiedBy returns the ModifiedBy field value if set, zero value otherwise.
func (o *VolumeListModel) GetModifiedBy() string {
	if o == nil || IsNil(o.ModifiedBy) {
		var ret string
		return ret
	}
	return *o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeListModel) GetModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedBy) {
		return nil, false
	}
	return o.ModifiedBy, true
}

// HasModifiedBy returns a boolean if a field has been set.
func (o *VolumeListModel) HasModifiedBy() bool {
	if o != nil && !IsNil(o.ModifiedBy) {
		return true
	}

	return false
}

// SetModifiedBy gets a reference to the given string and assigns it to the ModifiedBy field.
func (o *VolumeListModel) SetModifiedBy(v string) {
	o.ModifiedBy = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VolumeListModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeListModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VolumeListModel) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VolumeListModel) SetName(v string) {
	o.Name = &v
}

// GetPurpose returns the Purpose field value if set, zero value otherwise.
func (o *VolumeListModel) GetPurpose() BlockStoragePurpose {
	if o == nil || IsNil(o.Purpose) {
		var ret BlockStoragePurpose
		return ret
	}
	return *o.Purpose
}

// GetPurposeOk returns a tuple with the Purpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeListModel) GetPurposeOk() (*BlockStoragePurpose, bool) {
	if o == nil || IsNil(o.Purpose) {
		return nil, false
	}
	return o.Purpose, true
}

// HasPurpose returns a boolean if a field has been set.
func (o *VolumeListModel) HasPurpose() bool {
	if o != nil && !IsNil(o.Purpose) {
		return true
	}

	return false
}

// SetPurpose gets a reference to the given BlockStoragePurpose and assigns it to the Purpose field.
func (o *VolumeListModel) SetPurpose(v BlockStoragePurpose) {
	o.Purpose = &v
}

// GetSizeGb returns the SizeGb field value if set, zero value otherwise.
func (o *VolumeListModel) GetSizeGb() int32 {
	if o == nil || IsNil(o.SizeGb) {
		var ret int32
		return ret
	}
	return *o.SizeGb
}

// GetSizeGbOk returns a tuple with the SizeGb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeListModel) GetSizeGbOk() (*int32, bool) {
	if o == nil || IsNil(o.SizeGb) {
		return nil, false
	}
	return o.SizeGb, true
}

// HasSizeGb returns a boolean if a field has been set.
func (o *VolumeListModel) HasSizeGb() bool {
	if o != nil && !IsNil(o.SizeGb) {
		return true
	}

	return false
}

// SetSizeGb gets a reference to the given int32 and assigns it to the SizeGb field.
func (o *VolumeListModel) SetSizeGb(v int32) {
	o.SizeGb = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *VolumeListModel) GetState() BlockStorageState {
	if o == nil || IsNil(o.State) {
		var ret BlockStorageState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeListModel) GetStateOk() (*BlockStorageState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *VolumeListModel) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given BlockStorageState and assigns it to the State field.
func (o *VolumeListModel) SetState(v BlockStorageState) {
	o.State = &v
}

// GetVolumeGroup returns the VolumeGroup field value if set, zero value otherwise.
func (o *VolumeListModel) GetVolumeGroup() map[string]interface{} {
	if o == nil || IsNil(o.VolumeGroup) {
		var ret map[string]interface{}
		return ret
	}
	return o.VolumeGroup
}

// GetVolumeGroupOk returns a tuple with the VolumeGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeListModel) GetVolumeGroupOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.VolumeGroup) {
		return map[string]interface{}{}, false
	}
	return o.VolumeGroup, true
}

// HasVolumeGroup returns a boolean if a field has been set.
func (o *VolumeListModel) HasVolumeGroup() bool {
	if o != nil && !IsNil(o.VolumeGroup) {
		return true
	}

	return false
}

// SetVolumeGroup gets a reference to the given map[string]interface{} and assigns it to the VolumeGroup field.
func (o *VolumeListModel) SetVolumeGroup(v map[string]interface{}) {
	o.VolumeGroup = v
}

func (o VolumeListModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeListModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["created_by"] = o.CreatedBy
	}
	if !IsNil(o.DiskType) {
		toSerialize["disk_type"] = o.DiskType
	}
	if !IsNil(o.HasRelation) {
		toSerialize["has_relation"] = o.HasRelation
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsInVolumeGroup) {
		toSerialize["is_in_volume_group"] = o.IsInVolumeGroup
	}
	if !IsNil(o.IsSnapshotActivated) {
		toSerialize["is_snapshot_activated"] = o.IsSnapshotActivated
	}
	if !IsNil(o.IscsiTargetIps) {
		toSerialize["iscsi_target_ips"] = o.IscsiTargetIps
	}
	if !IsNil(o.ModifiedAt) {
		toSerialize["modified_at"] = o.ModifiedAt
	}
	if !IsNil(o.ModifiedBy) {
		toSerialize["modified_by"] = o.ModifiedBy
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Purpose) {
		toSerialize["purpose"] = o.Purpose
	}
	if !IsNil(o.SizeGb) {
		toSerialize["size_gb"] = o.SizeGb
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.VolumeGroup) {
		toSerialize["volume_group"] = o.VolumeGroup
	}
	return toSerialize, nil
}

type NullableVolumeListModel struct {
	value *VolumeListModel
	isSet bool
}

func (v NullableVolumeListModel) Get() *VolumeListModel {
	return v.value
}

func (v *NullableVolumeListModel) Set(val *VolumeListModel) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeListModel) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeListModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeListModel(val *VolumeListModel) *NullableVolumeListModel {
	return &NullableVolumeListModel{value: val, isSet: true}
}

func (v NullableVolumeListModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeListModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
