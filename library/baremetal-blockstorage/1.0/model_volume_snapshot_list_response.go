/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"encoding/json"
)

// checks if the VolumeSnapshotListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeSnapshotListResponse{}

// VolumeSnapshotListResponse struct for VolumeSnapshotListResponse
type VolumeSnapshotListResponse struct {
	// Whether to activate snapshot
	IsSnapshotPolicy *bool `json:"is_snapshot_policy,omitempty"`
	// Snapshot capacity(MB)
	SnapshotCapacityMb *float32 `json:"snapshot_capacity_mb,omitempty"`
	// Snapshot capacity rate
	SnapshotCapacityRate *float32 `json:"snapshot_capacity_rate,omitempty"`
	// Snapshot total usage
	SnapshotTotalUsage *float32 `json:"snapshot_total_usage,omitempty"`
	// List of snapshots
	Snapshots []VolumeSnapshotListModel `json:"snapshots,omitempty"`
	// Volume id
	VolumeId *string `json:"volume_id,omitempty"`
}

// NewVolumeSnapshotListResponse instantiates a new VolumeSnapshotListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeSnapshotListResponse() *VolumeSnapshotListResponse {
	this := VolumeSnapshotListResponse{}
	var isSnapshotPolicy bool = false
	this.IsSnapshotPolicy = &isSnapshotPolicy
	var snapshotCapacityMb float32 = 0
	this.SnapshotCapacityMb = &snapshotCapacityMb
	var snapshotCapacityRate float32 = 0
	this.SnapshotCapacityRate = &snapshotCapacityRate
	var snapshotTotalUsage float32 = 0
	this.SnapshotTotalUsage = &snapshotTotalUsage
	var volumeId string = ""
	this.VolumeId = &volumeId
	return &this
}

// NewVolumeSnapshotListResponseWithDefaults instantiates a new VolumeSnapshotListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeSnapshotListResponseWithDefaults() *VolumeSnapshotListResponse {
	this := VolumeSnapshotListResponse{}
	var isSnapshotPolicy bool = false
	this.IsSnapshotPolicy = &isSnapshotPolicy
	var snapshotCapacityMb float32 = 0
	this.SnapshotCapacityMb = &snapshotCapacityMb
	var snapshotCapacityRate float32 = 0
	this.SnapshotCapacityRate = &snapshotCapacityRate
	var snapshotTotalUsage float32 = 0
	this.SnapshotTotalUsage = &snapshotTotalUsage
	var volumeId string = ""
	this.VolumeId = &volumeId
	return &this
}

// GetIsSnapshotPolicy returns the IsSnapshotPolicy field value if set, zero value otherwise.
func (o *VolumeSnapshotListResponse) GetIsSnapshotPolicy() bool {
	if o == nil || IsNil(o.IsSnapshotPolicy) {
		var ret bool
		return ret
	}
	return *o.IsSnapshotPolicy
}

// GetIsSnapshotPolicyOk returns a tuple with the IsSnapshotPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshotListResponse) GetIsSnapshotPolicyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSnapshotPolicy) {
		return nil, false
	}
	return o.IsSnapshotPolicy, true
}

// HasIsSnapshotPolicy returns a boolean if a field has been set.
func (o *VolumeSnapshotListResponse) HasIsSnapshotPolicy() bool {
	if o != nil && !IsNil(o.IsSnapshotPolicy) {
		return true
	}

	return false
}

// SetIsSnapshotPolicy gets a reference to the given bool and assigns it to the IsSnapshotPolicy field.
func (o *VolumeSnapshotListResponse) SetIsSnapshotPolicy(v bool) {
	o.IsSnapshotPolicy = &v
}

// GetSnapshotCapacityMb returns the SnapshotCapacityMb field value if set, zero value otherwise.
func (o *VolumeSnapshotListResponse) GetSnapshotCapacityMb() float32 {
	if o == nil || IsNil(o.SnapshotCapacityMb) {
		var ret float32
		return ret
	}
	return *o.SnapshotCapacityMb
}

// GetSnapshotCapacityMbOk returns a tuple with the SnapshotCapacityMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshotListResponse) GetSnapshotCapacityMbOk() (*float32, bool) {
	if o == nil || IsNil(o.SnapshotCapacityMb) {
		return nil, false
	}
	return o.SnapshotCapacityMb, true
}

// HasSnapshotCapacityMb returns a boolean if a field has been set.
func (o *VolumeSnapshotListResponse) HasSnapshotCapacityMb() bool {
	if o != nil && !IsNil(o.SnapshotCapacityMb) {
		return true
	}

	return false
}

// SetSnapshotCapacityMb gets a reference to the given float32 and assigns it to the SnapshotCapacityMb field.
func (o *VolumeSnapshotListResponse) SetSnapshotCapacityMb(v float32) {
	o.SnapshotCapacityMb = &v
}

// GetSnapshotCapacityRate returns the SnapshotCapacityRate field value if set, zero value otherwise.
func (o *VolumeSnapshotListResponse) GetSnapshotCapacityRate() float32 {
	if o == nil || IsNil(o.SnapshotCapacityRate) {
		var ret float32
		return ret
	}
	return *o.SnapshotCapacityRate
}

// GetSnapshotCapacityRateOk returns a tuple with the SnapshotCapacityRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshotListResponse) GetSnapshotCapacityRateOk() (*float32, bool) {
	if o == nil || IsNil(o.SnapshotCapacityRate) {
		return nil, false
	}
	return o.SnapshotCapacityRate, true
}

// HasSnapshotCapacityRate returns a boolean if a field has been set.
func (o *VolumeSnapshotListResponse) HasSnapshotCapacityRate() bool {
	if o != nil && !IsNil(o.SnapshotCapacityRate) {
		return true
	}

	return false
}

// SetSnapshotCapacityRate gets a reference to the given float32 and assigns it to the SnapshotCapacityRate field.
func (o *VolumeSnapshotListResponse) SetSnapshotCapacityRate(v float32) {
	o.SnapshotCapacityRate = &v
}

// GetSnapshotTotalUsage returns the SnapshotTotalUsage field value if set, zero value otherwise.
func (o *VolumeSnapshotListResponse) GetSnapshotTotalUsage() float32 {
	if o == nil || IsNil(o.SnapshotTotalUsage) {
		var ret float32
		return ret
	}
	return *o.SnapshotTotalUsage
}

// GetSnapshotTotalUsageOk returns a tuple with the SnapshotTotalUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshotListResponse) GetSnapshotTotalUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.SnapshotTotalUsage) {
		return nil, false
	}
	return o.SnapshotTotalUsage, true
}

// HasSnapshotTotalUsage returns a boolean if a field has been set.
func (o *VolumeSnapshotListResponse) HasSnapshotTotalUsage() bool {
	if o != nil && !IsNil(o.SnapshotTotalUsage) {
		return true
	}

	return false
}

// SetSnapshotTotalUsage gets a reference to the given float32 and assigns it to the SnapshotTotalUsage field.
func (o *VolumeSnapshotListResponse) SetSnapshotTotalUsage(v float32) {
	o.SnapshotTotalUsage = &v
}

// GetSnapshots returns the Snapshots field value if set, zero value otherwise.
func (o *VolumeSnapshotListResponse) GetSnapshots() []VolumeSnapshotListModel {
	if o == nil || IsNil(o.Snapshots) {
		var ret []VolumeSnapshotListModel
		return ret
	}
	return o.Snapshots
}

// GetSnapshotsOk returns a tuple with the Snapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshotListResponse) GetSnapshotsOk() ([]VolumeSnapshotListModel, bool) {
	if o == nil || IsNil(o.Snapshots) {
		return nil, false
	}
	return o.Snapshots, true
}

// HasSnapshots returns a boolean if a field has been set.
func (o *VolumeSnapshotListResponse) HasSnapshots() bool {
	if o != nil && !IsNil(o.Snapshots) {
		return true
	}

	return false
}

// SetSnapshots gets a reference to the given []VolumeSnapshotListModel and assigns it to the Snapshots field.
func (o *VolumeSnapshotListResponse) SetSnapshots(v []VolumeSnapshotListModel) {
	o.Snapshots = v
}

// GetVolumeId returns the VolumeId field value if set, zero value otherwise.
func (o *VolumeSnapshotListResponse) GetVolumeId() string {
	if o == nil || IsNil(o.VolumeId) {
		var ret string
		return ret
	}
	return *o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshotListResponse) GetVolumeIdOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeId) {
		return nil, false
	}
	return o.VolumeId, true
}

// HasVolumeId returns a boolean if a field has been set.
func (o *VolumeSnapshotListResponse) HasVolumeId() bool {
	if o != nil && !IsNil(o.VolumeId) {
		return true
	}

	return false
}

// SetVolumeId gets a reference to the given string and assigns it to the VolumeId field.
func (o *VolumeSnapshotListResponse) SetVolumeId(v string) {
	o.VolumeId = &v
}

func (o VolumeSnapshotListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeSnapshotListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsSnapshotPolicy) {
		toSerialize["is_snapshot_policy"] = o.IsSnapshotPolicy
	}
	if !IsNil(o.SnapshotCapacityMb) {
		toSerialize["snapshot_capacity_mb"] = o.SnapshotCapacityMb
	}
	if !IsNil(o.SnapshotCapacityRate) {
		toSerialize["snapshot_capacity_rate"] = o.SnapshotCapacityRate
	}
	if !IsNil(o.SnapshotTotalUsage) {
		toSerialize["snapshot_total_usage"] = o.SnapshotTotalUsage
	}
	if !IsNil(o.Snapshots) {
		toSerialize["snapshots"] = o.Snapshots
	}
	if !IsNil(o.VolumeId) {
		toSerialize["volume_id"] = o.VolumeId
	}
	return toSerialize, nil
}

type NullableVolumeSnapshotListResponse struct {
	value *VolumeSnapshotListResponse
	isSet bool
}

func (v NullableVolumeSnapshotListResponse) Get() *VolumeSnapshotListResponse {
	return v.value
}

func (v *NullableVolumeSnapshotListResponse) Set(val *VolumeSnapshotListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeSnapshotListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeSnapshotListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeSnapshotListResponse(val *VolumeSnapshotListResponse) *NullableVolumeSnapshotListResponse {
	return &NullableVolumeSnapshotListResponse{value: val, isSet: true}
}

func (v NullableVolumeSnapshotListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeSnapshotListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
