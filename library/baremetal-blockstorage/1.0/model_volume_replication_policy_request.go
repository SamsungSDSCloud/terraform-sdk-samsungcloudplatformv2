/*
SCP Baremetal BlockStorage Service

SCP Baremetal BlockStorage Service

API version: 0.0.1.dev1719
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package baremetalblockstorage

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the VolumeReplicationPolicyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeReplicationPolicyRequest{}

// VolumeReplicationPolicyRequest struct for VolumeReplicationPolicyRequest
type VolumeReplicationPolicyRequest struct {
	// Policy
	Policy ReplicationPolicyMode `json:"policy"`
}

type _VolumeReplicationPolicyRequest VolumeReplicationPolicyRequest

// NewVolumeReplicationPolicyRequest instantiates a new VolumeReplicationPolicyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeReplicationPolicyRequest(policy ReplicationPolicyMode) *VolumeReplicationPolicyRequest {
	this := VolumeReplicationPolicyRequest{}
	this.Policy = policy
	return &this
}

// NewVolumeReplicationPolicyRequestWithDefaults instantiates a new VolumeReplicationPolicyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeReplicationPolicyRequestWithDefaults() *VolumeReplicationPolicyRequest {
	this := VolumeReplicationPolicyRequest{}
	return &this
}

// GetPolicy returns the Policy field value
func (o *VolumeReplicationPolicyRequest) GetPolicy() ReplicationPolicyMode {
	if o == nil {
		var ret ReplicationPolicyMode
		return ret
	}

	return o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value
// and a boolean to check if the value has been set.
func (o *VolumeReplicationPolicyRequest) GetPolicyOk() (*ReplicationPolicyMode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Policy, true
}

// SetPolicy sets field value
func (o *VolumeReplicationPolicyRequest) SetPolicy(v ReplicationPolicyMode) {
	o.Policy = v
}

func (o VolumeReplicationPolicyRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeReplicationPolicyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["policy"] = o.Policy
	return toSerialize, nil
}

func (o *VolumeReplicationPolicyRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"policy",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVolumeReplicationPolicyRequest := _VolumeReplicationPolicyRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVolumeReplicationPolicyRequest)

	if err != nil {
		return err
	}

	*o = VolumeReplicationPolicyRequest(varVolumeReplicationPolicyRequest)

	return err
}

type NullableVolumeReplicationPolicyRequest struct {
	value *VolumeReplicationPolicyRequest
	isSet bool
}

func (v NullableVolumeReplicationPolicyRequest) Get() *VolumeReplicationPolicyRequest {
	return v.value
}

func (v *NullableVolumeReplicationPolicyRequest) Set(val *VolumeReplicationPolicyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeReplicationPolicyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeReplicationPolicyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeReplicationPolicyRequest(val *VolumeReplicationPolicyRequest) *NullableVolumeReplicationPolicyRequest {
	return &NullableVolumeReplicationPolicyRequest{value: val, isSet: true}
}

func (v NullableVolumeReplicationPolicyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeReplicationPolicyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
