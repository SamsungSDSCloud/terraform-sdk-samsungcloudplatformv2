/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev7227
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gslb

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GslbCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GslbCreateRequest{}

// GslbCreateRequest struct for GslbCreateRequest
type GslbCreateRequest struct {
	// The GSLB Algorithm.
	Algorithm   string         `json:"algorithm"`
	Description NullableString `json:"description,omitempty"`
	// The GSLB Environment Usage.
	EnvUsage    string                  `json:"env_usage"`
	HealthCheck NullableGslbHealthCheck `json:"health_check,omitempty"`
	// The Name of the gslb.
	Name      string         `json:"name"`
	Resources []GslbResource `json:"resources"`
	// Tag List
	Tags []Tag `json:"tags,omitempty"`
}

type _GslbCreateRequest GslbCreateRequest

// NewGslbCreateRequest instantiates a new GslbCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGslbCreateRequest(algorithm string, envUsage string, name string, resources []GslbResource) *GslbCreateRequest {
	this := GslbCreateRequest{}
	this.Algorithm = algorithm
	this.EnvUsage = envUsage
	this.Name = name
	this.Resources = resources
	return &this
}

// NewGslbCreateRequestWithDefaults instantiates a new GslbCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGslbCreateRequestWithDefaults() *GslbCreateRequest {
	this := GslbCreateRequest{}
	return &this
}

// GetAlgorithm returns the Algorithm field value
func (o *GslbCreateRequest) GetAlgorithm() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value
// and a boolean to check if the value has been set.
func (o *GslbCreateRequest) GetAlgorithmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Algorithm, true
}

// SetAlgorithm sets field value
func (o *GslbCreateRequest) SetAlgorithm(v string) {
	o.Algorithm = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GslbCreateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GslbCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *GslbCreateRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *GslbCreateRequest) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *GslbCreateRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *GslbCreateRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetEnvUsage returns the EnvUsage field value
func (o *GslbCreateRequest) GetEnvUsage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvUsage
}

// GetEnvUsageOk returns a tuple with the EnvUsage field value
// and a boolean to check if the value has been set.
func (o *GslbCreateRequest) GetEnvUsageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvUsage, true
}

// SetEnvUsage sets field value
func (o *GslbCreateRequest) SetEnvUsage(v string) {
	o.EnvUsage = v
}

// GetHealthCheck returns the HealthCheck field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GslbCreateRequest) GetHealthCheck() GslbHealthCheck {
	if o == nil || IsNil(o.HealthCheck.Get()) {
		var ret GslbHealthCheck
		return ret
	}
	return *o.HealthCheck.Get()
}

// GetHealthCheckOk returns a tuple with the HealthCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GslbCreateRequest) GetHealthCheckOk() (*GslbHealthCheck, bool) {
	if o == nil {
		return nil, false
	}
	return o.HealthCheck.Get(), o.HealthCheck.IsSet()
}

// HasHealthCheck returns a boolean if a field has been set.
func (o *GslbCreateRequest) HasHealthCheck() bool {
	if o != nil && o.HealthCheck.IsSet() {
		return true
	}

	return false
}

// SetHealthCheck gets a reference to the given NullableGslbHealthCheck and assigns it to the HealthCheck field.
func (o *GslbCreateRequest) SetHealthCheck(v GslbHealthCheck) {
	o.HealthCheck.Set(&v)
}

// SetHealthCheckNil sets the value for HealthCheck to be an explicit nil
func (o *GslbCreateRequest) SetHealthCheckNil() {
	o.HealthCheck.Set(nil)
}

// UnsetHealthCheck ensures that no value is present for HealthCheck, not even an explicit nil
func (o *GslbCreateRequest) UnsetHealthCheck() {
	o.HealthCheck.Unset()
}

// GetName returns the Name field value
func (o *GslbCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GslbCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GslbCreateRequest) SetName(v string) {
	o.Name = v
}

// GetResources returns the Resources field value
func (o *GslbCreateRequest) GetResources() []GslbResource {
	if o == nil {
		var ret []GslbResource
		return ret
	}

	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value
// and a boolean to check if the value has been set.
func (o *GslbCreateRequest) GetResourcesOk() ([]GslbResource, bool) {
	if o == nil {
		return nil, false
	}
	return o.Resources, true
}

// SetResources sets field value
func (o *GslbCreateRequest) SetResources(v []GslbResource) {
	o.Resources = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *GslbCreateRequest) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GslbCreateRequest) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *GslbCreateRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *GslbCreateRequest) SetTags(v []Tag) {
	o.Tags = v
}

func (o GslbCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GslbCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["algorithm"] = o.Algorithm
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["env_usage"] = o.EnvUsage
	if o.HealthCheck.IsSet() {
		toSerialize["health_check"] = o.HealthCheck.Get()
	}
	toSerialize["name"] = o.Name
	toSerialize["resources"] = o.Resources
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

func (o *GslbCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"algorithm",
		"env_usage",
		"name",
		"resources",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGslbCreateRequest := _GslbCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGslbCreateRequest)

	if err != nil {
		return err
	}

	*o = GslbCreateRequest(varGslbCreateRequest)

	return err
}

type NullableGslbCreateRequest struct {
	value *GslbCreateRequest
	isSet bool
}

func (v NullableGslbCreateRequest) Get() *GslbCreateRequest {
	return v.value
}

func (v *NullableGslbCreateRequest) Set(val *GslbCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGslbCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGslbCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGslbCreateRequest(val *GslbCreateRequest) *NullableGslbCreateRequest {
	return &NullableGslbCreateRequest{value: val, isSet: true}
}

func (v NullableGslbCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGslbCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
