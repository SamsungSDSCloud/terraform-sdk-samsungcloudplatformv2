/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2187
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eventstreams

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EventStreamsInitConfigOptionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventStreamsInitConfigOptionRequest{}

// EventStreamsInitConfigOptionRequest struct for EventStreamsInitConfigOptionRequest
type EventStreamsInitConfigOptionRequest struct {
	AkhqId NullableString `json:"akhq_id,omitempty" validate:"regexp=^[a-z]+$"`
	AkhqPassword NullableString `json:"akhq_password,omitempty"`
	// broker port
	BrokerPort *int32 `json:"broker_port,omitempty"`
	// broker sasl id
	BrokerSaslId string `json:"broker_sasl_id" validate:"regexp=^[a-z]+$"`
	// broker sasl password
	BrokerSaslPassword string `json:"broker_sasl_password"`
	// zookeeper port
	ZookeeperPort *int32 `json:"zookeeper_port,omitempty"`
	// zookeeper sasl id
	ZookeeperSaslId string `json:"zookeeper_sasl_id" validate:"regexp=^[a-z]+$"`
	// zookeeper sasl password
	ZookeeperSaslPassword string `json:"zookeeper_sasl_password"`
}

type _EventStreamsInitConfigOptionRequest EventStreamsInitConfigOptionRequest

// NewEventStreamsInitConfigOptionRequest instantiates a new EventStreamsInitConfigOptionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventStreamsInitConfigOptionRequest(brokerSaslId string, brokerSaslPassword string, zookeeperSaslId string, zookeeperSaslPassword string) *EventStreamsInitConfigOptionRequest {
	this := EventStreamsInitConfigOptionRequest{}
	var brokerPort int32 = 9091
	this.BrokerPort = &brokerPort
	this.BrokerSaslId = brokerSaslId
	this.BrokerSaslPassword = brokerSaslPassword
	var zookeeperPort int32 = 2180
	this.ZookeeperPort = &zookeeperPort
	this.ZookeeperSaslId = zookeeperSaslId
	this.ZookeeperSaslPassword = zookeeperSaslPassword
	return &this
}

// NewEventStreamsInitConfigOptionRequestWithDefaults instantiates a new EventStreamsInitConfigOptionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventStreamsInitConfigOptionRequestWithDefaults() *EventStreamsInitConfigOptionRequest {
	this := EventStreamsInitConfigOptionRequest{}
	var brokerPort int32 = 9091
	this.BrokerPort = &brokerPort
	var zookeeperPort int32 = 2180
	this.ZookeeperPort = &zookeeperPort
	return &this
}

// GetAkhqId returns the AkhqId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EventStreamsInitConfigOptionRequest) GetAkhqId() string {
	if o == nil || IsNil(o.AkhqId.Get()) {
		var ret string
		return ret
	}
	return *o.AkhqId.Get()
}

// GetAkhqIdOk returns a tuple with the AkhqId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EventStreamsInitConfigOptionRequest) GetAkhqIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AkhqId.Get(), o.AkhqId.IsSet()
}

// HasAkhqId returns a boolean if a field has been set.
func (o *EventStreamsInitConfigOptionRequest) HasAkhqId() bool {
	if o != nil && o.AkhqId.IsSet() {
		return true
	}

	return false
}

// SetAkhqId gets a reference to the given NullableString and assigns it to the AkhqId field.
func (o *EventStreamsInitConfigOptionRequest) SetAkhqId(v string) {
	o.AkhqId.Set(&v)
}
// SetAkhqIdNil sets the value for AkhqId to be an explicit nil
func (o *EventStreamsInitConfigOptionRequest) SetAkhqIdNil() {
	o.AkhqId.Set(nil)
}

// UnsetAkhqId ensures that no value is present for AkhqId, not even an explicit nil
func (o *EventStreamsInitConfigOptionRequest) UnsetAkhqId() {
	o.AkhqId.Unset()
}

// GetAkhqPassword returns the AkhqPassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EventStreamsInitConfigOptionRequest) GetAkhqPassword() string {
	if o == nil || IsNil(o.AkhqPassword.Get()) {
		var ret string
		return ret
	}
	return *o.AkhqPassword.Get()
}

// GetAkhqPasswordOk returns a tuple with the AkhqPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EventStreamsInitConfigOptionRequest) GetAkhqPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AkhqPassword.Get(), o.AkhqPassword.IsSet()
}

// HasAkhqPassword returns a boolean if a field has been set.
func (o *EventStreamsInitConfigOptionRequest) HasAkhqPassword() bool {
	if o != nil && o.AkhqPassword.IsSet() {
		return true
	}

	return false
}

// SetAkhqPassword gets a reference to the given NullableString and assigns it to the AkhqPassword field.
func (o *EventStreamsInitConfigOptionRequest) SetAkhqPassword(v string) {
	o.AkhqPassword.Set(&v)
}
// SetAkhqPasswordNil sets the value for AkhqPassword to be an explicit nil
func (o *EventStreamsInitConfigOptionRequest) SetAkhqPasswordNil() {
	o.AkhqPassword.Set(nil)
}

// UnsetAkhqPassword ensures that no value is present for AkhqPassword, not even an explicit nil
func (o *EventStreamsInitConfigOptionRequest) UnsetAkhqPassword() {
	o.AkhqPassword.Unset()
}

// GetBrokerPort returns the BrokerPort field value if set, zero value otherwise.
func (o *EventStreamsInitConfigOptionRequest) GetBrokerPort() int32 {
	if o == nil || IsNil(o.BrokerPort) {
		var ret int32
		return ret
	}
	return *o.BrokerPort
}

// GetBrokerPortOk returns a tuple with the BrokerPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventStreamsInitConfigOptionRequest) GetBrokerPortOk() (*int32, bool) {
	if o == nil || IsNil(o.BrokerPort) {
		return nil, false
	}
	return o.BrokerPort, true
}

// HasBrokerPort returns a boolean if a field has been set.
func (o *EventStreamsInitConfigOptionRequest) HasBrokerPort() bool {
	if o != nil && !IsNil(o.BrokerPort) {
		return true
	}

	return false
}

// SetBrokerPort gets a reference to the given int32 and assigns it to the BrokerPort field.
func (o *EventStreamsInitConfigOptionRequest) SetBrokerPort(v int32) {
	o.BrokerPort = &v
}

// GetBrokerSaslId returns the BrokerSaslId field value
func (o *EventStreamsInitConfigOptionRequest) GetBrokerSaslId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BrokerSaslId
}

// GetBrokerSaslIdOk returns a tuple with the BrokerSaslId field value
// and a boolean to check if the value has been set.
func (o *EventStreamsInitConfigOptionRequest) GetBrokerSaslIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BrokerSaslId, true
}

// SetBrokerSaslId sets field value
func (o *EventStreamsInitConfigOptionRequest) SetBrokerSaslId(v string) {
	o.BrokerSaslId = v
}

// GetBrokerSaslPassword returns the BrokerSaslPassword field value
func (o *EventStreamsInitConfigOptionRequest) GetBrokerSaslPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BrokerSaslPassword
}

// GetBrokerSaslPasswordOk returns a tuple with the BrokerSaslPassword field value
// and a boolean to check if the value has been set.
func (o *EventStreamsInitConfigOptionRequest) GetBrokerSaslPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BrokerSaslPassword, true
}

// SetBrokerSaslPassword sets field value
func (o *EventStreamsInitConfigOptionRequest) SetBrokerSaslPassword(v string) {
	o.BrokerSaslPassword = v
}

// GetZookeeperPort returns the ZookeeperPort field value if set, zero value otherwise.
func (o *EventStreamsInitConfigOptionRequest) GetZookeeperPort() int32 {
	if o == nil || IsNil(o.ZookeeperPort) {
		var ret int32
		return ret
	}
	return *o.ZookeeperPort
}

// GetZookeeperPortOk returns a tuple with the ZookeeperPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventStreamsInitConfigOptionRequest) GetZookeeperPortOk() (*int32, bool) {
	if o == nil || IsNil(o.ZookeeperPort) {
		return nil, false
	}
	return o.ZookeeperPort, true
}

// HasZookeeperPort returns a boolean if a field has been set.
func (o *EventStreamsInitConfigOptionRequest) HasZookeeperPort() bool {
	if o != nil && !IsNil(o.ZookeeperPort) {
		return true
	}

	return false
}

// SetZookeeperPort gets a reference to the given int32 and assigns it to the ZookeeperPort field.
func (o *EventStreamsInitConfigOptionRequest) SetZookeeperPort(v int32) {
	o.ZookeeperPort = &v
}

// GetZookeeperSaslId returns the ZookeeperSaslId field value
func (o *EventStreamsInitConfigOptionRequest) GetZookeeperSaslId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZookeeperSaslId
}

// GetZookeeperSaslIdOk returns a tuple with the ZookeeperSaslId field value
// and a boolean to check if the value has been set.
func (o *EventStreamsInitConfigOptionRequest) GetZookeeperSaslIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZookeeperSaslId, true
}

// SetZookeeperSaslId sets field value
func (o *EventStreamsInitConfigOptionRequest) SetZookeeperSaslId(v string) {
	o.ZookeeperSaslId = v
}

// GetZookeeperSaslPassword returns the ZookeeperSaslPassword field value
func (o *EventStreamsInitConfigOptionRequest) GetZookeeperSaslPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZookeeperSaslPassword
}

// GetZookeeperSaslPasswordOk returns a tuple with the ZookeeperSaslPassword field value
// and a boolean to check if the value has been set.
func (o *EventStreamsInitConfigOptionRequest) GetZookeeperSaslPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZookeeperSaslPassword, true
}

// SetZookeeperSaslPassword sets field value
func (o *EventStreamsInitConfigOptionRequest) SetZookeeperSaslPassword(v string) {
	o.ZookeeperSaslPassword = v
}

func (o EventStreamsInitConfigOptionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventStreamsInitConfigOptionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AkhqId.IsSet() {
		toSerialize["akhq_id"] = o.AkhqId.Get()
	}
	if o.AkhqPassword.IsSet() {
		toSerialize["akhq_password"] = o.AkhqPassword.Get()
	}
	if !IsNil(o.BrokerPort) {
		toSerialize["broker_port"] = o.BrokerPort
	}
	toSerialize["broker_sasl_id"] = o.BrokerSaslId
	toSerialize["broker_sasl_password"] = o.BrokerSaslPassword
	if !IsNil(o.ZookeeperPort) {
		toSerialize["zookeeper_port"] = o.ZookeeperPort
	}
	toSerialize["zookeeper_sasl_id"] = o.ZookeeperSaslId
	toSerialize["zookeeper_sasl_password"] = o.ZookeeperSaslPassword
	return toSerialize, nil
}

func (o *EventStreamsInitConfigOptionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"broker_sasl_id",
		"broker_sasl_password",
		"zookeeper_sasl_id",
		"zookeeper_sasl_password",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEventStreamsInitConfigOptionRequest := _EventStreamsInitConfigOptionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEventStreamsInitConfigOptionRequest)

	if err != nil {
		return err
	}

	*o = EventStreamsInitConfigOptionRequest(varEventStreamsInitConfigOptionRequest)

	return err
}

type NullableEventStreamsInitConfigOptionRequest struct {
	value *EventStreamsInitConfigOptionRequest
	isSet bool
}

func (v NullableEventStreamsInitConfigOptionRequest) Get() *EventStreamsInitConfigOptionRequest {
	return v.value
}

func (v *NullableEventStreamsInitConfigOptionRequest) Set(val *EventStreamsInitConfigOptionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEventStreamsInitConfigOptionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEventStreamsInitConfigOptionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventStreamsInitConfigOptionRequest(val *EventStreamsInitConfigOptionRequest) *NullableEventStreamsInitConfigOptionRequest {
	return &NullableEventStreamsInitConfigOptionRequest{value: val, isSet: true}
}

func (v NullableEventStreamsInitConfigOptionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventStreamsInitConfigOptionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


