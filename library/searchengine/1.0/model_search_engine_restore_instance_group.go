/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2192
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package searchengine

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SearchEngineRestoreInstanceGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchEngineRestoreInstanceGroup{}

// SearchEngineRestoreInstanceGroup struct for SearchEngineRestoreInstanceGroup
type SearchEngineRestoreInstanceGroup struct {
	// Block storage groups list
	BlockStorageGroups []BlockStorageGroupRequest `json:"block_storage_groups"`
	// Role type
	RoleType InstanceGroupRoleType `json:"role_type"`
}

type _SearchEngineRestoreInstanceGroup SearchEngineRestoreInstanceGroup

// NewSearchEngineRestoreInstanceGroup instantiates a new SearchEngineRestoreInstanceGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchEngineRestoreInstanceGroup(blockStorageGroups []BlockStorageGroupRequest, roleType InstanceGroupRoleType) *SearchEngineRestoreInstanceGroup {
	this := SearchEngineRestoreInstanceGroup{}
	this.BlockStorageGroups = blockStorageGroups
	this.RoleType = roleType
	return &this
}

// NewSearchEngineRestoreInstanceGroupWithDefaults instantiates a new SearchEngineRestoreInstanceGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchEngineRestoreInstanceGroupWithDefaults() *SearchEngineRestoreInstanceGroup {
	this := SearchEngineRestoreInstanceGroup{}
	return &this
}

// GetBlockStorageGroups returns the BlockStorageGroups field value
func (o *SearchEngineRestoreInstanceGroup) GetBlockStorageGroups() []BlockStorageGroupRequest {
	if o == nil {
		var ret []BlockStorageGroupRequest
		return ret
	}

	return o.BlockStorageGroups
}

// GetBlockStorageGroupsOk returns a tuple with the BlockStorageGroups field value
// and a boolean to check if the value has been set.
func (o *SearchEngineRestoreInstanceGroup) GetBlockStorageGroupsOk() ([]BlockStorageGroupRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.BlockStorageGroups, true
}

// SetBlockStorageGroups sets field value
func (o *SearchEngineRestoreInstanceGroup) SetBlockStorageGroups(v []BlockStorageGroupRequest) {
	o.BlockStorageGroups = v
}

// GetRoleType returns the RoleType field value
func (o *SearchEngineRestoreInstanceGroup) GetRoleType() InstanceGroupRoleType {
	if o == nil {
		var ret InstanceGroupRoleType
		return ret
	}

	return o.RoleType
}

// GetRoleTypeOk returns a tuple with the RoleType field value
// and a boolean to check if the value has been set.
func (o *SearchEngineRestoreInstanceGroup) GetRoleTypeOk() (*InstanceGroupRoleType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleType, true
}

// SetRoleType sets field value
func (o *SearchEngineRestoreInstanceGroup) SetRoleType(v InstanceGroupRoleType) {
	o.RoleType = v
}

func (o SearchEngineRestoreInstanceGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchEngineRestoreInstanceGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["block_storage_groups"] = o.BlockStorageGroups
	toSerialize["role_type"] = o.RoleType
	return toSerialize, nil
}

func (o *SearchEngineRestoreInstanceGroup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"block_storage_groups",
		"role_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSearchEngineRestoreInstanceGroup := _SearchEngineRestoreInstanceGroup{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSearchEngineRestoreInstanceGroup)

	if err != nil {
		return err
	}

	*o = SearchEngineRestoreInstanceGroup(varSearchEngineRestoreInstanceGroup)

	return err
}

type NullableSearchEngineRestoreInstanceGroup struct {
	value *SearchEngineRestoreInstanceGroup
	isSet bool
}

func (v NullableSearchEngineRestoreInstanceGroup) Get() *SearchEngineRestoreInstanceGroup {
	return v.value
}

func (v *NullableSearchEngineRestoreInstanceGroup) Set(val *SearchEngineRestoreInstanceGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchEngineRestoreInstanceGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchEngineRestoreInstanceGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchEngineRestoreInstanceGroup(val *SearchEngineRestoreInstanceGroup) *NullableSearchEngineRestoreInstanceGroup {
	return &NullableSearchEngineRestoreInstanceGroup{value: val, isSet: true}
}

func (v NullableSearchEngineRestoreInstanceGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchEngineRestoreInstanceGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
