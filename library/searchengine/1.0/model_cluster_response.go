/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2192
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package searchengine

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ClusterResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterResponse{}

// ClusterResponse struct for ClusterResponse
type ClusterResponse struct {
	// Account ID
	AccountId string `json:"account_id"`
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy string `json:"created_by"`
	// HA availability
	HaEnabled *bool `json:"ha_enabled,omitempty"`
	// ID
	Id string `json:"id"`
	// Instance Count
	InstanceCount *int32 `json:"instance_count,omitempty"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy string `json:"modified_by"`
	// Cluster name
	Name     string                  `json:"name"`
	RoleType NullableClusterRoleType `json:"role_type"`
	// Service state
	ServiceState ServiceState `json:"service_state"`
}

type _ClusterResponse ClusterResponse

// NewClusterResponse instantiates a new ClusterResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterResponse(accountId string, createdAt time.Time, createdBy string, id string, modifiedAt time.Time, modifiedBy string, name string, roleType NullableClusterRoleType, serviceState ServiceState) *ClusterResponse {
	this := ClusterResponse{}
	this.AccountId = accountId
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	var haEnabled bool = false
	this.HaEnabled = &haEnabled
	this.Id = id
	var instanceCount int32 = 0
	this.InstanceCount = &instanceCount
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.Name = name
	this.RoleType = roleType
	this.ServiceState = serviceState
	return &this
}

// NewClusterResponseWithDefaults instantiates a new ClusterResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterResponseWithDefaults() *ClusterResponse {
	this := ClusterResponse{}
	var haEnabled bool = false
	this.HaEnabled = &haEnabled
	var instanceCount int32 = 0
	this.InstanceCount = &instanceCount
	return &this
}

// GetAccountId returns the AccountId field value
func (o *ClusterResponse) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *ClusterResponse) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *ClusterResponse) SetAccountId(v string) {
	o.AccountId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ClusterResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ClusterResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ClusterResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *ClusterResponse) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *ClusterResponse) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *ClusterResponse) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetHaEnabled returns the HaEnabled field value if set, zero value otherwise.
func (o *ClusterResponse) GetHaEnabled() bool {
	if o == nil || IsNil(o.HaEnabled) {
		var ret bool
		return ret
	}
	return *o.HaEnabled
}

// GetHaEnabledOk returns a tuple with the HaEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterResponse) GetHaEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.HaEnabled) {
		return nil, false
	}
	return o.HaEnabled, true
}

// HasHaEnabled returns a boolean if a field has been set.
func (o *ClusterResponse) HasHaEnabled() bool {
	if o != nil && !IsNil(o.HaEnabled) {
		return true
	}

	return false
}

// SetHaEnabled gets a reference to the given bool and assigns it to the HaEnabled field.
func (o *ClusterResponse) SetHaEnabled(v bool) {
	o.HaEnabled = &v
}

// GetId returns the Id field value
func (o *ClusterResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ClusterResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ClusterResponse) SetId(v string) {
	o.Id = v
}

// GetInstanceCount returns the InstanceCount field value if set, zero value otherwise.
func (o *ClusterResponse) GetInstanceCount() int32 {
	if o == nil || IsNil(o.InstanceCount) {
		var ret int32
		return ret
	}
	return *o.InstanceCount
}

// GetInstanceCountOk returns a tuple with the InstanceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterResponse) GetInstanceCountOk() (*int32, bool) {
	if o == nil || IsNil(o.InstanceCount) {
		return nil, false
	}
	return o.InstanceCount, true
}

// HasInstanceCount returns a boolean if a field has been set.
func (o *ClusterResponse) HasInstanceCount() bool {
	if o != nil && !IsNil(o.InstanceCount) {
		return true
	}

	return false
}

// SetInstanceCount gets a reference to the given int32 and assigns it to the InstanceCount field.
func (o *ClusterResponse) SetInstanceCount(v int32) {
	o.InstanceCount = &v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *ClusterResponse) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *ClusterResponse) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *ClusterResponse) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *ClusterResponse) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *ClusterResponse) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *ClusterResponse) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetName returns the Name field value
func (o *ClusterResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ClusterResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ClusterResponse) SetName(v string) {
	o.Name = v
}

// GetRoleType returns the RoleType field value
// If the value is explicit nil, the zero value for ClusterRoleType will be returned
func (o *ClusterResponse) GetRoleType() ClusterRoleType {
	if o == nil || o.RoleType.Get() == nil {
		var ret ClusterRoleType
		return ret
	}

	return *o.RoleType.Get()
}

// GetRoleTypeOk returns a tuple with the RoleType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterResponse) GetRoleTypeOk() (*ClusterRoleType, bool) {
	if o == nil {
		return nil, false
	}
	return o.RoleType.Get(), o.RoleType.IsSet()
}

// SetRoleType sets field value
func (o *ClusterResponse) SetRoleType(v ClusterRoleType) {
	o.RoleType.Set(&v)
}

// GetServiceState returns the ServiceState field value
func (o *ClusterResponse) GetServiceState() ServiceState {
	if o == nil {
		var ret ServiceState
		return ret
	}

	return o.ServiceState
}

// GetServiceStateOk returns a tuple with the ServiceState field value
// and a boolean to check if the value has been set.
func (o *ClusterResponse) GetServiceStateOk() (*ServiceState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceState, true
}

// SetServiceState sets field value
func (o *ClusterResponse) SetServiceState(v ServiceState) {
	o.ServiceState = v
}

func (o ClusterResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	if !IsNil(o.HaEnabled) {
		toSerialize["ha_enabled"] = o.HaEnabled
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.InstanceCount) {
		toSerialize["instance_count"] = o.InstanceCount
	}
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	toSerialize["name"] = o.Name
	toSerialize["role_type"] = o.RoleType.Get()
	toSerialize["service_state"] = o.ServiceState
	return toSerialize, nil
}

func (o *ClusterResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"created_at",
		"created_by",
		"id",
		"modified_at",
		"modified_by",
		"name",
		"role_type",
		"service_state",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterResponse := _ClusterResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClusterResponse)

	if err != nil {
		return err
	}

	*o = ClusterResponse(varClusterResponse)

	return err
}

type NullableClusterResponse struct {
	value *ClusterResponse
	isSet bool
}

func (v NullableClusterResponse) Get() *ClusterResponse {
	return v.value
}

func (v *NullableClusterResponse) Set(val *ClusterResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterResponse(val *ClusterResponse) *NullableClusterResponse {
	return &NullableClusterResponse{value: val, isSet: true}
}

func (v NullableClusterResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
