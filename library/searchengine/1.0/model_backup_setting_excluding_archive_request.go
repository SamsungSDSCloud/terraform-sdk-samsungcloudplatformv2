/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2192
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package searchengine

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the BackupSettingExcludingArchiveRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupSettingExcludingArchiveRequest{}

// BackupSettingExcludingArchiveRequest struct for BackupSettingExcludingArchiveRequest
type BackupSettingExcludingArchiveRequest struct {
	// Backup retention period (day)
	RetentionPeriodDay string `json:"retention_period_day" validate:"regexp=^([7-9]|^[1-2]\\\\d|^3[0-5])$"`
	// Backup starting time (hour)
	StartingTimeHour string `json:"starting_time_hour" validate:"regexp=^(\\\\d|1\\\\d|2[0-3])$"`
}

type _BackupSettingExcludingArchiveRequest BackupSettingExcludingArchiveRequest

// NewBackupSettingExcludingArchiveRequest instantiates a new BackupSettingExcludingArchiveRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupSettingExcludingArchiveRequest(retentionPeriodDay string, startingTimeHour string) *BackupSettingExcludingArchiveRequest {
	this := BackupSettingExcludingArchiveRequest{}
	this.RetentionPeriodDay = retentionPeriodDay
	this.StartingTimeHour = startingTimeHour
	return &this
}

// NewBackupSettingExcludingArchiveRequestWithDefaults instantiates a new BackupSettingExcludingArchiveRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupSettingExcludingArchiveRequestWithDefaults() *BackupSettingExcludingArchiveRequest {
	this := BackupSettingExcludingArchiveRequest{}
	return &this
}

// GetRetentionPeriodDay returns the RetentionPeriodDay field value
func (o *BackupSettingExcludingArchiveRequest) GetRetentionPeriodDay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RetentionPeriodDay
}

// GetRetentionPeriodDayOk returns a tuple with the RetentionPeriodDay field value
// and a boolean to check if the value has been set.
func (o *BackupSettingExcludingArchiveRequest) GetRetentionPeriodDayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RetentionPeriodDay, true
}

// SetRetentionPeriodDay sets field value
func (o *BackupSettingExcludingArchiveRequest) SetRetentionPeriodDay(v string) {
	o.RetentionPeriodDay = v
}

// GetStartingTimeHour returns the StartingTimeHour field value
func (o *BackupSettingExcludingArchiveRequest) GetStartingTimeHour() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartingTimeHour
}

// GetStartingTimeHourOk returns a tuple with the StartingTimeHour field value
// and a boolean to check if the value has been set.
func (o *BackupSettingExcludingArchiveRequest) GetStartingTimeHourOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartingTimeHour, true
}

// SetStartingTimeHour sets field value
func (o *BackupSettingExcludingArchiveRequest) SetStartingTimeHour(v string) {
	o.StartingTimeHour = v
}

func (o BackupSettingExcludingArchiveRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupSettingExcludingArchiveRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["retention_period_day"] = o.RetentionPeriodDay
	toSerialize["starting_time_hour"] = o.StartingTimeHour
	return toSerialize, nil
}

func (o *BackupSettingExcludingArchiveRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"retention_period_day",
		"starting_time_hour",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBackupSettingExcludingArchiveRequest := _BackupSettingExcludingArchiveRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBackupSettingExcludingArchiveRequest)

	if err != nil {
		return err
	}

	*o = BackupSettingExcludingArchiveRequest(varBackupSettingExcludingArchiveRequest)

	return err
}

type NullableBackupSettingExcludingArchiveRequest struct {
	value *BackupSettingExcludingArchiveRequest
	isSet bool
}

func (v NullableBackupSettingExcludingArchiveRequest) Get() *BackupSettingExcludingArchiveRequest {
	return v.value
}

func (v *NullableBackupSettingExcludingArchiveRequest) Set(val *BackupSettingExcludingArchiveRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupSettingExcludingArchiveRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupSettingExcludingArchiveRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupSettingExcludingArchiveRequest(val *BackupSettingExcludingArchiveRequest) *NullableBackupSettingExcludingArchiveRequest {
	return &NullableBackupSettingExcludingArchiveRequest{value: val, isSet: true}
}

func (v NullableBackupSettingExcludingArchiveRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupSettingExcludingArchiveRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
