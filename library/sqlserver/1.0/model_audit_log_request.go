/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2181
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sqlserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AuditLogRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditLogRequest{}

// AuditLogRequest struct for AuditLogRequest
type AuditLogRequest struct {
	// use_audit_log
	UseAuditLog bool `json:"use_audit_log"`
}

type _AuditLogRequest AuditLogRequest

// NewAuditLogRequest instantiates a new AuditLogRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditLogRequest(useAuditLog bool) *AuditLogRequest {
	this := AuditLogRequest{}
	this.UseAuditLog = useAuditLog
	return &this
}

// NewAuditLogRequestWithDefaults instantiates a new AuditLogRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditLogRequestWithDefaults() *AuditLogRequest {
	this := AuditLogRequest{}
	return &this
}

// GetUseAuditLog returns the UseAuditLog field value
func (o *AuditLogRequest) GetUseAuditLog() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UseAuditLog
}

// GetUseAuditLogOk returns a tuple with the UseAuditLog field value
// and a boolean to check if the value has been set.
func (o *AuditLogRequest) GetUseAuditLogOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UseAuditLog, true
}

// SetUseAuditLog sets field value
func (o *AuditLogRequest) SetUseAuditLog(v bool) {
	o.UseAuditLog = v
}

func (o AuditLogRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditLogRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["use_audit_log"] = o.UseAuditLog
	return toSerialize, nil
}

func (o *AuditLogRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"use_audit_log",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAuditLogRequest := _AuditLogRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAuditLogRequest)

	if err != nil {
		return err
	}

	*o = AuditLogRequest(varAuditLogRequest)

	return err
}

type NullableAuditLogRequest struct {
	value *AuditLogRequest
	isSet bool
}

func (v NullableAuditLogRequest) Get() *AuditLogRequest {
	return v.value
}

func (v *NullableAuditLogRequest) Set(val *AuditLogRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogRequest(val *AuditLogRequest) *NullableAuditLogRequest {
	return &NullableAuditLogRequest{value: val, isSet: true}
}

func (v NullableAuditLogRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
