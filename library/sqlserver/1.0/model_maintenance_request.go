/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2181
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sqlserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the MaintenanceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MaintenanceRequest{}

// MaintenanceRequest struct for MaintenanceRequest
type MaintenanceRequest struct {
	// start_day_of_week
	StartDayOfWeek DayOfWeek `json:"start_day_of_week"`
	// start_minute
	StartMinute string `json:"start_minute"`
	// start_time
	StartTime string `json:"start_time"`
	// term_hour
	TermHour string `json:"term_hour" validate:"regexp=^(0\\\\.5|[1-5]\\\\.5|[1-9]|1[0-9]|2[0-4])$"`
}

type _MaintenanceRequest MaintenanceRequest

// NewMaintenanceRequest instantiates a new MaintenanceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaintenanceRequest(startDayOfWeek DayOfWeek, startMinute string, startTime string, termHour string) *MaintenanceRequest {
	this := MaintenanceRequest{}
	this.StartDayOfWeek = startDayOfWeek
	this.StartMinute = startMinute
	this.StartTime = startTime
	this.TermHour = termHour
	return &this
}

// NewMaintenanceRequestWithDefaults instantiates a new MaintenanceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaintenanceRequestWithDefaults() *MaintenanceRequest {
	this := MaintenanceRequest{}
	return &this
}

// GetStartDayOfWeek returns the StartDayOfWeek field value
func (o *MaintenanceRequest) GetStartDayOfWeek() DayOfWeek {
	if o == nil {
		var ret DayOfWeek
		return ret
	}

	return o.StartDayOfWeek
}

// GetStartDayOfWeekOk returns a tuple with the StartDayOfWeek field value
// and a boolean to check if the value has been set.
func (o *MaintenanceRequest) GetStartDayOfWeekOk() (*DayOfWeek, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDayOfWeek, true
}

// SetStartDayOfWeek sets field value
func (o *MaintenanceRequest) SetStartDayOfWeek(v DayOfWeek) {
	o.StartDayOfWeek = v
}

// GetStartMinute returns the StartMinute field value
func (o *MaintenanceRequest) GetStartMinute() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartMinute
}

// GetStartMinuteOk returns a tuple with the StartMinute field value
// and a boolean to check if the value has been set.
func (o *MaintenanceRequest) GetStartMinuteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartMinute, true
}

// SetStartMinute sets field value
func (o *MaintenanceRequest) SetStartMinute(v string) {
	o.StartMinute = v
}

// GetStartTime returns the StartTime field value
func (o *MaintenanceRequest) GetStartTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *MaintenanceRequest) GetStartTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *MaintenanceRequest) SetStartTime(v string) {
	o.StartTime = v
}

// GetTermHour returns the TermHour field value
func (o *MaintenanceRequest) GetTermHour() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TermHour
}

// GetTermHourOk returns a tuple with the TermHour field value
// and a boolean to check if the value has been set.
func (o *MaintenanceRequest) GetTermHourOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TermHour, true
}

// SetTermHour sets field value
func (o *MaintenanceRequest) SetTermHour(v string) {
	o.TermHour = v
}

func (o MaintenanceRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MaintenanceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["start_day_of_week"] = o.StartDayOfWeek
	toSerialize["start_minute"] = o.StartMinute
	toSerialize["start_time"] = o.StartTime
	toSerialize["term_hour"] = o.TermHour
	return toSerialize, nil
}

func (o *MaintenanceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"start_day_of_week",
		"start_minute",
		"start_time",
		"term_hour",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMaintenanceRequest := _MaintenanceRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMaintenanceRequest)

	if err != nil {
		return err
	}

	*o = MaintenanceRequest(varMaintenanceRequest)

	return err
}

type NullableMaintenanceRequest struct {
	value *MaintenanceRequest
	isSet bool
}

func (v NullableMaintenanceRequest) Get() *MaintenanceRequest {
	return v.value
}

func (v *NullableMaintenanceRequest) Set(val *MaintenanceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMaintenanceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMaintenanceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaintenanceRequest(val *MaintenanceRequest) *NullableMaintenanceRequest {
	return &NullableMaintenanceRequest{value: val, isSet: true}
}

func (v NullableMaintenanceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaintenanceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
