/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2181
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sqlserver

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the SqlserverClusterDetailResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SqlserverClusterDetailResponse{}

// SqlserverClusterDetailResponse struct for SqlserverClusterDetailResponse
type SqlserverClusterDetailResponse struct {
	// Account ID
	AccountId string `json:"account_id"`
	// Allowed IP addresses list
	AllowableIpAddresses []string `json:"allowable_ip_addresses,omitempty"`
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy string `json:"created_by"`
	// DBaaS engine
	DbaasEngine string `json:"dbaas_engine"`
	// DBaaS engine version name
	DbaasEngineVersionName string `json:"dbaas_engine_version_name"`
	// HA availability
	HaEnabled *bool `json:"ha_enabled,omitempty"`
	// ID
	Id               string                            `json:"id"`
	InitConfigOption SqlserverInitConfigOptionResponse `json:"init_config_option"`
	// Instance Count
	InstanceCount     *int32                            `json:"instance_count,omitempty"`
	InstanceGroups    []SqlserverInstanceGroupResponse  `json:"instance_groups"`
	MaintenanceOption NullableMaintenanceResponseOption `json:"maintenance_option,omitempty"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy string `json:"modified_by"`
	// Cluster name
	Name string `json:"name"`
	// NAT availability
	NatEnabled *bool `json:"nat_enabled,omitempty"`
	// Product image type
	ProductImageType string `json:"product_image_type"`
	// Product type
	ProductType ProductType             `json:"product_type"`
	RoleType    NullableClusterRoleType `json:"role_type"`
	// Service state
	ServiceState ServiceState `json:"service_state"`
	// Software version
	SoftwareVersion string `json:"software_version"`
	// Subnet ID
	SubnetId string `json:"subnet_id"`
	// Timezone
	Timezone           string         `json:"timezone"`
	VipPublicIpAddress NullableString `json:"vip_public_ip_address,omitempty"`
	VipPublicIpId      NullableString `json:"vip_public_ip_id,omitempty"`
	VirtualIpAddress   NullableString `json:"virtual_ip_address,omitempty"`
}

type _SqlserverClusterDetailResponse SqlserverClusterDetailResponse

// NewSqlserverClusterDetailResponse instantiates a new SqlserverClusterDetailResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSqlserverClusterDetailResponse(accountId string, createdAt time.Time, createdBy string, dbaasEngine string, dbaasEngineVersionName string, id string, initConfigOption SqlserverInitConfigOptionResponse, instanceGroups []SqlserverInstanceGroupResponse, modifiedAt time.Time, modifiedBy string, name string, productImageType string, productType ProductType, roleType NullableClusterRoleType, serviceState ServiceState, softwareVersion string, subnetId string, timezone string) *SqlserverClusterDetailResponse {
	this := SqlserverClusterDetailResponse{}
	this.AccountId = accountId
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.DbaasEngine = dbaasEngine
	this.DbaasEngineVersionName = dbaasEngineVersionName
	var haEnabled bool = false
	this.HaEnabled = &haEnabled
	this.Id = id
	this.InitConfigOption = initConfigOption
	var instanceCount int32 = 0
	this.InstanceCount = &instanceCount
	this.InstanceGroups = instanceGroups
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.Name = name
	var natEnabled bool = false
	this.NatEnabled = &natEnabled
	this.ProductImageType = productImageType
	this.ProductType = productType
	this.RoleType = roleType
	this.ServiceState = serviceState
	this.SoftwareVersion = softwareVersion
	this.SubnetId = subnetId
	this.Timezone = timezone
	return &this
}

// NewSqlserverClusterDetailResponseWithDefaults instantiates a new SqlserverClusterDetailResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSqlserverClusterDetailResponseWithDefaults() *SqlserverClusterDetailResponse {
	this := SqlserverClusterDetailResponse{}
	var haEnabled bool = false
	this.HaEnabled = &haEnabled
	var instanceCount int32 = 0
	this.InstanceCount = &instanceCount
	var natEnabled bool = false
	this.NatEnabled = &natEnabled
	return &this
}

// GetAccountId returns the AccountId field value
func (o *SqlserverClusterDetailResponse) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *SqlserverClusterDetailResponse) SetAccountId(v string) {
	o.AccountId = v
}

// GetAllowableIpAddresses returns the AllowableIpAddresses field value if set, zero value otherwise.
func (o *SqlserverClusterDetailResponse) GetAllowableIpAddresses() []string {
	if o == nil || IsNil(o.AllowableIpAddresses) {
		var ret []string
		return ret
	}
	return o.AllowableIpAddresses
}

// GetAllowableIpAddressesOk returns a tuple with the AllowableIpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetAllowableIpAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowableIpAddresses) {
		return nil, false
	}
	return o.AllowableIpAddresses, true
}

// HasAllowableIpAddresses returns a boolean if a field has been set.
func (o *SqlserverClusterDetailResponse) HasAllowableIpAddresses() bool {
	if o != nil && !IsNil(o.AllowableIpAddresses) {
		return true
	}

	return false
}

// SetAllowableIpAddresses gets a reference to the given []string and assigns it to the AllowableIpAddresses field.
func (o *SqlserverClusterDetailResponse) SetAllowableIpAddresses(v []string) {
	o.AllowableIpAddresses = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *SqlserverClusterDetailResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SqlserverClusterDetailResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *SqlserverClusterDetailResponse) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *SqlserverClusterDetailResponse) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetDbaasEngine returns the DbaasEngine field value
func (o *SqlserverClusterDetailResponse) GetDbaasEngine() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DbaasEngine
}

// GetDbaasEngineOk returns a tuple with the DbaasEngine field value
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetDbaasEngineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DbaasEngine, true
}

// SetDbaasEngine sets field value
func (o *SqlserverClusterDetailResponse) SetDbaasEngine(v string) {
	o.DbaasEngine = v
}

// GetDbaasEngineVersionName returns the DbaasEngineVersionName field value
func (o *SqlserverClusterDetailResponse) GetDbaasEngineVersionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DbaasEngineVersionName
}

// GetDbaasEngineVersionNameOk returns a tuple with the DbaasEngineVersionName field value
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetDbaasEngineVersionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DbaasEngineVersionName, true
}

// SetDbaasEngineVersionName sets field value
func (o *SqlserverClusterDetailResponse) SetDbaasEngineVersionName(v string) {
	o.DbaasEngineVersionName = v
}

// GetHaEnabled returns the HaEnabled field value if set, zero value otherwise.
func (o *SqlserverClusterDetailResponse) GetHaEnabled() bool {
	if o == nil || IsNil(o.HaEnabled) {
		var ret bool
		return ret
	}
	return *o.HaEnabled
}

// GetHaEnabledOk returns a tuple with the HaEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetHaEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.HaEnabled) {
		return nil, false
	}
	return o.HaEnabled, true
}

// HasHaEnabled returns a boolean if a field has been set.
func (o *SqlserverClusterDetailResponse) HasHaEnabled() bool {
	if o != nil && !IsNil(o.HaEnabled) {
		return true
	}

	return false
}

// SetHaEnabled gets a reference to the given bool and assigns it to the HaEnabled field.
func (o *SqlserverClusterDetailResponse) SetHaEnabled(v bool) {
	o.HaEnabled = &v
}

// GetId returns the Id field value
func (o *SqlserverClusterDetailResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SqlserverClusterDetailResponse) SetId(v string) {
	o.Id = v
}

// GetInitConfigOption returns the InitConfigOption field value
func (o *SqlserverClusterDetailResponse) GetInitConfigOption() SqlserverInitConfigOptionResponse {
	if o == nil {
		var ret SqlserverInitConfigOptionResponse
		return ret
	}

	return o.InitConfigOption
}

// GetInitConfigOptionOk returns a tuple with the InitConfigOption field value
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetInitConfigOptionOk() (*SqlserverInitConfigOptionResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InitConfigOption, true
}

// SetInitConfigOption sets field value
func (o *SqlserverClusterDetailResponse) SetInitConfigOption(v SqlserverInitConfigOptionResponse) {
	o.InitConfigOption = v
}

// GetInstanceCount returns the InstanceCount field value if set, zero value otherwise.
func (o *SqlserverClusterDetailResponse) GetInstanceCount() int32 {
	if o == nil || IsNil(o.InstanceCount) {
		var ret int32
		return ret
	}
	return *o.InstanceCount
}

// GetInstanceCountOk returns a tuple with the InstanceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetInstanceCountOk() (*int32, bool) {
	if o == nil || IsNil(o.InstanceCount) {
		return nil, false
	}
	return o.InstanceCount, true
}

// HasInstanceCount returns a boolean if a field has been set.
func (o *SqlserverClusterDetailResponse) HasInstanceCount() bool {
	if o != nil && !IsNil(o.InstanceCount) {
		return true
	}

	return false
}

// SetInstanceCount gets a reference to the given int32 and assigns it to the InstanceCount field.
func (o *SqlserverClusterDetailResponse) SetInstanceCount(v int32) {
	o.InstanceCount = &v
}

// GetInstanceGroups returns the InstanceGroups field value
func (o *SqlserverClusterDetailResponse) GetInstanceGroups() []SqlserverInstanceGroupResponse {
	if o == nil {
		var ret []SqlserverInstanceGroupResponse
		return ret
	}

	return o.InstanceGroups
}

// GetInstanceGroupsOk returns a tuple with the InstanceGroups field value
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetInstanceGroupsOk() ([]SqlserverInstanceGroupResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstanceGroups, true
}

// SetInstanceGroups sets field value
func (o *SqlserverClusterDetailResponse) SetInstanceGroups(v []SqlserverInstanceGroupResponse) {
	o.InstanceGroups = v
}

// GetMaintenanceOption returns the MaintenanceOption field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SqlserverClusterDetailResponse) GetMaintenanceOption() MaintenanceResponseOption {
	if o == nil || IsNil(o.MaintenanceOption.Get()) {
		var ret MaintenanceResponseOption
		return ret
	}
	return *o.MaintenanceOption.Get()
}

// GetMaintenanceOptionOk returns a tuple with the MaintenanceOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SqlserverClusterDetailResponse) GetMaintenanceOptionOk() (*MaintenanceResponseOption, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaintenanceOption.Get(), o.MaintenanceOption.IsSet()
}

// HasMaintenanceOption returns a boolean if a field has been set.
func (o *SqlserverClusterDetailResponse) HasMaintenanceOption() bool {
	if o != nil && o.MaintenanceOption.IsSet() {
		return true
	}

	return false
}

// SetMaintenanceOption gets a reference to the given NullableMaintenanceResponseOption and assigns it to the MaintenanceOption field.
func (o *SqlserverClusterDetailResponse) SetMaintenanceOption(v MaintenanceResponseOption) {
	o.MaintenanceOption.Set(&v)
}

// SetMaintenanceOptionNil sets the value for MaintenanceOption to be an explicit nil
func (o *SqlserverClusterDetailResponse) SetMaintenanceOptionNil() {
	o.MaintenanceOption.Set(nil)
}

// UnsetMaintenanceOption ensures that no value is present for MaintenanceOption, not even an explicit nil
func (o *SqlserverClusterDetailResponse) UnsetMaintenanceOption() {
	o.MaintenanceOption.Unset()
}

// GetModifiedAt returns the ModifiedAt field value
func (o *SqlserverClusterDetailResponse) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *SqlserverClusterDetailResponse) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *SqlserverClusterDetailResponse) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *SqlserverClusterDetailResponse) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetName returns the Name field value
func (o *SqlserverClusterDetailResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SqlserverClusterDetailResponse) SetName(v string) {
	o.Name = v
}

// GetNatEnabled returns the NatEnabled field value if set, zero value otherwise.
func (o *SqlserverClusterDetailResponse) GetNatEnabled() bool {
	if o == nil || IsNil(o.NatEnabled) {
		var ret bool
		return ret
	}
	return *o.NatEnabled
}

// GetNatEnabledOk returns a tuple with the NatEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetNatEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.NatEnabled) {
		return nil, false
	}
	return o.NatEnabled, true
}

// HasNatEnabled returns a boolean if a field has been set.
func (o *SqlserverClusterDetailResponse) HasNatEnabled() bool {
	if o != nil && !IsNil(o.NatEnabled) {
		return true
	}

	return false
}

// SetNatEnabled gets a reference to the given bool and assigns it to the NatEnabled field.
func (o *SqlserverClusterDetailResponse) SetNatEnabled(v bool) {
	o.NatEnabled = &v
}

// GetProductImageType returns the ProductImageType field value
func (o *SqlserverClusterDetailResponse) GetProductImageType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductImageType
}

// GetProductImageTypeOk returns a tuple with the ProductImageType field value
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetProductImageTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductImageType, true
}

// SetProductImageType sets field value
func (o *SqlserverClusterDetailResponse) SetProductImageType(v string) {
	o.ProductImageType = v
}

// GetProductType returns the ProductType field value
func (o *SqlserverClusterDetailResponse) GetProductType() ProductType {
	if o == nil {
		var ret ProductType
		return ret
	}

	return o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetProductTypeOk() (*ProductType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductType, true
}

// SetProductType sets field value
func (o *SqlserverClusterDetailResponse) SetProductType(v ProductType) {
	o.ProductType = v
}

// GetRoleType returns the RoleType field value
// If the value is explicit nil, the zero value for ClusterRoleType will be returned
func (o *SqlserverClusterDetailResponse) GetRoleType() ClusterRoleType {
	if o == nil || o.RoleType.Get() == nil {
		var ret ClusterRoleType
		return ret
	}

	return *o.RoleType.Get()
}

// GetRoleTypeOk returns a tuple with the RoleType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SqlserverClusterDetailResponse) GetRoleTypeOk() (*ClusterRoleType, bool) {
	if o == nil {
		return nil, false
	}
	return o.RoleType.Get(), o.RoleType.IsSet()
}

// SetRoleType sets field value
func (o *SqlserverClusterDetailResponse) SetRoleType(v ClusterRoleType) {
	o.RoleType.Set(&v)
}

// GetServiceState returns the ServiceState field value
func (o *SqlserverClusterDetailResponse) GetServiceState() ServiceState {
	if o == nil {
		var ret ServiceState
		return ret
	}

	return o.ServiceState
}

// GetServiceStateOk returns a tuple with the ServiceState field value
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetServiceStateOk() (*ServiceState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceState, true
}

// SetServiceState sets field value
func (o *SqlserverClusterDetailResponse) SetServiceState(v ServiceState) {
	o.ServiceState = v
}

// GetSoftwareVersion returns the SoftwareVersion field value
func (o *SqlserverClusterDetailResponse) GetSoftwareVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SoftwareVersion
}

// GetSoftwareVersionOk returns a tuple with the SoftwareVersion field value
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetSoftwareVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SoftwareVersion, true
}

// SetSoftwareVersion sets field value
func (o *SqlserverClusterDetailResponse) SetSoftwareVersion(v string) {
	o.SoftwareVersion = v
}

// GetSubnetId returns the SubnetId field value
func (o *SqlserverClusterDetailResponse) GetSubnetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetSubnetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubnetId, true
}

// SetSubnetId sets field value
func (o *SqlserverClusterDetailResponse) SetSubnetId(v string) {
	o.SubnetId = v
}

// GetTimezone returns the Timezone field value
func (o *SqlserverClusterDetailResponse) GetTimezone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value
// and a boolean to check if the value has been set.
func (o *SqlserverClusterDetailResponse) GetTimezoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timezone, true
}

// SetTimezone sets field value
func (o *SqlserverClusterDetailResponse) SetTimezone(v string) {
	o.Timezone = v
}

// GetVipPublicIpAddress returns the VipPublicIpAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SqlserverClusterDetailResponse) GetVipPublicIpAddress() string {
	if o == nil || IsNil(o.VipPublicIpAddress.Get()) {
		var ret string
		return ret
	}
	return *o.VipPublicIpAddress.Get()
}

// GetVipPublicIpAddressOk returns a tuple with the VipPublicIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SqlserverClusterDetailResponse) GetVipPublicIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VipPublicIpAddress.Get(), o.VipPublicIpAddress.IsSet()
}

// HasVipPublicIpAddress returns a boolean if a field has been set.
func (o *SqlserverClusterDetailResponse) HasVipPublicIpAddress() bool {
	if o != nil && o.VipPublicIpAddress.IsSet() {
		return true
	}

	return false
}

// SetVipPublicIpAddress gets a reference to the given NullableString and assigns it to the VipPublicIpAddress field.
func (o *SqlserverClusterDetailResponse) SetVipPublicIpAddress(v string) {
	o.VipPublicIpAddress.Set(&v)
}

// SetVipPublicIpAddressNil sets the value for VipPublicIpAddress to be an explicit nil
func (o *SqlserverClusterDetailResponse) SetVipPublicIpAddressNil() {
	o.VipPublicIpAddress.Set(nil)
}

// UnsetVipPublicIpAddress ensures that no value is present for VipPublicIpAddress, not even an explicit nil
func (o *SqlserverClusterDetailResponse) UnsetVipPublicIpAddress() {
	o.VipPublicIpAddress.Unset()
}

// GetVipPublicIpId returns the VipPublicIpId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SqlserverClusterDetailResponse) GetVipPublicIpId() string {
	if o == nil || IsNil(o.VipPublicIpId.Get()) {
		var ret string
		return ret
	}
	return *o.VipPublicIpId.Get()
}

// GetVipPublicIpIdOk returns a tuple with the VipPublicIpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SqlserverClusterDetailResponse) GetVipPublicIpIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VipPublicIpId.Get(), o.VipPublicIpId.IsSet()
}

// HasVipPublicIpId returns a boolean if a field has been set.
func (o *SqlserverClusterDetailResponse) HasVipPublicIpId() bool {
	if o != nil && o.VipPublicIpId.IsSet() {
		return true
	}

	return false
}

// SetVipPublicIpId gets a reference to the given NullableString and assigns it to the VipPublicIpId field.
func (o *SqlserverClusterDetailResponse) SetVipPublicIpId(v string) {
	o.VipPublicIpId.Set(&v)
}

// SetVipPublicIpIdNil sets the value for VipPublicIpId to be an explicit nil
func (o *SqlserverClusterDetailResponse) SetVipPublicIpIdNil() {
	o.VipPublicIpId.Set(nil)
}

// UnsetVipPublicIpId ensures that no value is present for VipPublicIpId, not even an explicit nil
func (o *SqlserverClusterDetailResponse) UnsetVipPublicIpId() {
	o.VipPublicIpId.Unset()
}

// GetVirtualIpAddress returns the VirtualIpAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SqlserverClusterDetailResponse) GetVirtualIpAddress() string {
	if o == nil || IsNil(o.VirtualIpAddress.Get()) {
		var ret string
		return ret
	}
	return *o.VirtualIpAddress.Get()
}

// GetVirtualIpAddressOk returns a tuple with the VirtualIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SqlserverClusterDetailResponse) GetVirtualIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VirtualIpAddress.Get(), o.VirtualIpAddress.IsSet()
}

// HasVirtualIpAddress returns a boolean if a field has been set.
func (o *SqlserverClusterDetailResponse) HasVirtualIpAddress() bool {
	if o != nil && o.VirtualIpAddress.IsSet() {
		return true
	}

	return false
}

// SetVirtualIpAddress gets a reference to the given NullableString and assigns it to the VirtualIpAddress field.
func (o *SqlserverClusterDetailResponse) SetVirtualIpAddress(v string) {
	o.VirtualIpAddress.Set(&v)
}

// SetVirtualIpAddressNil sets the value for VirtualIpAddress to be an explicit nil
func (o *SqlserverClusterDetailResponse) SetVirtualIpAddressNil() {
	o.VirtualIpAddress.Set(nil)
}

// UnsetVirtualIpAddress ensures that no value is present for VirtualIpAddress, not even an explicit nil
func (o *SqlserverClusterDetailResponse) UnsetVirtualIpAddress() {
	o.VirtualIpAddress.Unset()
}

func (o SqlserverClusterDetailResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SqlserverClusterDetailResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	if !IsNil(o.AllowableIpAddresses) {
		toSerialize["allowable_ip_addresses"] = o.AllowableIpAddresses
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	toSerialize["dbaas_engine"] = o.DbaasEngine
	toSerialize["dbaas_engine_version_name"] = o.DbaasEngineVersionName
	if !IsNil(o.HaEnabled) {
		toSerialize["ha_enabled"] = o.HaEnabled
	}
	toSerialize["id"] = o.Id
	toSerialize["init_config_option"] = o.InitConfigOption
	if !IsNil(o.InstanceCount) {
		toSerialize["instance_count"] = o.InstanceCount
	}
	toSerialize["instance_groups"] = o.InstanceGroups
	if o.MaintenanceOption.IsSet() {
		toSerialize["maintenance_option"] = o.MaintenanceOption.Get()
	}
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	toSerialize["name"] = o.Name
	if !IsNil(o.NatEnabled) {
		toSerialize["nat_enabled"] = o.NatEnabled
	}
	toSerialize["product_image_type"] = o.ProductImageType
	toSerialize["product_type"] = o.ProductType
	toSerialize["role_type"] = o.RoleType.Get()
	toSerialize["service_state"] = o.ServiceState
	toSerialize["software_version"] = o.SoftwareVersion
	toSerialize["subnet_id"] = o.SubnetId
	toSerialize["timezone"] = o.Timezone
	if o.VipPublicIpAddress.IsSet() {
		toSerialize["vip_public_ip_address"] = o.VipPublicIpAddress.Get()
	}
	if o.VipPublicIpId.IsSet() {
		toSerialize["vip_public_ip_id"] = o.VipPublicIpId.Get()
	}
	if o.VirtualIpAddress.IsSet() {
		toSerialize["virtual_ip_address"] = o.VirtualIpAddress.Get()
	}
	return toSerialize, nil
}

func (o *SqlserverClusterDetailResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"created_at",
		"created_by",
		"dbaas_engine",
		"dbaas_engine_version_name",
		"id",
		"init_config_option",
		"instance_groups",
		"modified_at",
		"modified_by",
		"name",
		"product_image_type",
		"product_type",
		"role_type",
		"service_state",
		"software_version",
		"subnet_id",
		"timezone",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSqlserverClusterDetailResponse := _SqlserverClusterDetailResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSqlserverClusterDetailResponse)

	if err != nil {
		return err
	}

	*o = SqlserverClusterDetailResponse(varSqlserverClusterDetailResponse)

	return err
}

type NullableSqlserverClusterDetailResponse struct {
	value *SqlserverClusterDetailResponse
	isSet bool
}

func (v NullableSqlserverClusterDetailResponse) Get() *SqlserverClusterDetailResponse {
	return v.value
}

func (v *NullableSqlserverClusterDetailResponse) Set(val *SqlserverClusterDetailResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSqlserverClusterDetailResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSqlserverClusterDetailResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSqlserverClusterDetailResponse(val *SqlserverClusterDetailResponse) *NullableSqlserverClusterDetailResponse {
	return &NullableSqlserverClusterDetailResponse{value: val, isSet: true}
}

func (v NullableSqlserverClusterDetailResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSqlserverClusterDetailResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
