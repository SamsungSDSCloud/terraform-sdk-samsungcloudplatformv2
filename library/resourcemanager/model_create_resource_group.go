/*
SCP Resource manager project

SCP Resource manager project

API version: 0.0.1.dev646
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resourcemanager

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the CreateResourceGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateResourceGroup{}

// CreateResourceGroup struct for CreateResourceGroup
type CreateResourceGroup struct {
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy   string         `json:"created_by"`
	Description NullableString `json:"description"`
	// 리소스 그룹 ID
	Id string `json:"id"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy    string         `json:"modified_by"`
	Name          NullableString `json:"name"`
	Region        NullableString `json:"region"`
	ResourceTypes []string       `json:"resource_types,omitempty"`
	// SRN
	Srn  string `json:"srn"`
	Tags []Tag  `json:"tags,omitempty"`
}

type _CreateResourceGroup CreateResourceGroup

// NewCreateResourceGroup instantiates a new CreateResourceGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateResourceGroup(createdAt time.Time, createdBy string, description NullableString, id string, modifiedAt time.Time, modifiedBy string, name NullableString, region NullableString, srn string) *CreateResourceGroup {
	this := CreateResourceGroup{}
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.Description = description
	this.Id = id
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.Name = name
	this.Region = region
	this.Srn = srn
	return &this
}

// NewCreateResourceGroupWithDefaults instantiates a new CreateResourceGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateResourceGroupWithDefaults() *CreateResourceGroup {
	this := CreateResourceGroup{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *CreateResourceGroup) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CreateResourceGroup) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CreateResourceGroup) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *CreateResourceGroup) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *CreateResourceGroup) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *CreateResourceGroup) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateResourceGroup) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateResourceGroup) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *CreateResourceGroup) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetId returns the Id field value
func (o *CreateResourceGroup) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateResourceGroup) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateResourceGroup) SetId(v string) {
	o.Id = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *CreateResourceGroup) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *CreateResourceGroup) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *CreateResourceGroup) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *CreateResourceGroup) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *CreateResourceGroup) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *CreateResourceGroup) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateResourceGroup) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateResourceGroup) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *CreateResourceGroup) SetName(v string) {
	o.Name.Set(&v)
}

// GetRegion returns the Region field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateResourceGroup) GetRegion() string {
	if o == nil || o.Region.Get() == nil {
		var ret string
		return ret
	}

	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateResourceGroup) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// SetRegion sets field value
func (o *CreateResourceGroup) SetRegion(v string) {
	o.Region.Set(&v)
}

// GetResourceTypes returns the ResourceTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateResourceGroup) GetResourceTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ResourceTypes
}

// GetResourceTypesOk returns a tuple with the ResourceTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateResourceGroup) GetResourceTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.ResourceTypes) {
		return nil, false
	}
	return o.ResourceTypes, true
}

// HasResourceTypes returns a boolean if a field has been set.
func (o *CreateResourceGroup) HasResourceTypes() bool {
	if o != nil && !IsNil(o.ResourceTypes) {
		return true
	}

	return false
}

// SetResourceTypes gets a reference to the given []string and assigns it to the ResourceTypes field.
func (o *CreateResourceGroup) SetResourceTypes(v []string) {
	o.ResourceTypes = v
}

// GetSrn returns the Srn field value
func (o *CreateResourceGroup) GetSrn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Srn
}

// GetSrnOk returns a tuple with the Srn field value
// and a boolean to check if the value has been set.
func (o *CreateResourceGroup) GetSrnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Srn, true
}

// SetSrn sets field value
func (o *CreateResourceGroup) SetSrn(v string) {
	o.Srn = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateResourceGroup) GetTags() []Tag {
	if o == nil {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateResourceGroup) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CreateResourceGroup) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *CreateResourceGroup) SetTags(v []Tag) {
	o.Tags = v
}

func (o CreateResourceGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateResourceGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	toSerialize["description"] = o.Description.Get()
	toSerialize["id"] = o.Id
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	toSerialize["name"] = o.Name.Get()
	toSerialize["region"] = o.Region.Get()
	if o.ResourceTypes != nil {
		toSerialize["resource_types"] = o.ResourceTypes
	}
	toSerialize["srn"] = o.Srn
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

func (o *CreateResourceGroup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"created_by",
		"description",
		"id",
		"modified_at",
		"modified_by",
		"name",
		"region",
		"srn",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateResourceGroup := _CreateResourceGroup{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateResourceGroup)

	if err != nil {
		return err
	}

	*o = CreateResourceGroup(varCreateResourceGroup)

	return err
}

type NullableCreateResourceGroup struct {
	value *CreateResourceGroup
	isSet bool
}

func (v NullableCreateResourceGroup) Get() *CreateResourceGroup {
	return v.value
}

func (v *NullableCreateResourceGroup) Set(val *CreateResourceGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateResourceGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateResourceGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateResourceGroup(val *CreateResourceGroup) *NullableCreateResourceGroup {
	return &NullableCreateResourceGroup{value: val, isSet: true}
}

func (v NullableCreateResourceGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateResourceGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
