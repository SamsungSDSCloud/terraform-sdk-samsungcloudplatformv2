/*
SCP IAM Service

SCP IAM Service

API version: 0.0.1.dev2450
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"encoding/json"
)

// checks if the RoleSetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleSetRequest{}

// RoleSetRequest struct for RoleSetRequest
type RoleSetRequest struct {
	Description        NullableString `json:"description,omitempty"`
	MaxSessionDuration NullableInt32  `json:"max_session_duration,omitempty"`
}

// NewRoleSetRequest instantiates a new RoleSetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleSetRequest() *RoleSetRequest {
	this := RoleSetRequest{}
	return &this
}

// NewRoleSetRequestWithDefaults instantiates a new RoleSetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleSetRequestWithDefaults() *RoleSetRequest {
	this := RoleSetRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoleSetRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoleSetRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *RoleSetRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *RoleSetRequest) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *RoleSetRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *RoleSetRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetMaxSessionDuration returns the MaxSessionDuration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoleSetRequest) GetMaxSessionDuration() int32 {
	if o == nil || IsNil(o.MaxSessionDuration.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxSessionDuration.Get()
}

// GetMaxSessionDurationOk returns a tuple with the MaxSessionDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoleSetRequest) GetMaxSessionDurationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxSessionDuration.Get(), o.MaxSessionDuration.IsSet()
}

// HasMaxSessionDuration returns a boolean if a field has been set.
func (o *RoleSetRequest) HasMaxSessionDuration() bool {
	if o != nil && o.MaxSessionDuration.IsSet() {
		return true
	}

	return false
}

// SetMaxSessionDuration gets a reference to the given NullableInt32 and assigns it to the MaxSessionDuration field.
func (o *RoleSetRequest) SetMaxSessionDuration(v int32) {
	o.MaxSessionDuration.Set(&v)
}

// SetMaxSessionDurationNil sets the value for MaxSessionDuration to be an explicit nil
func (o *RoleSetRequest) SetMaxSessionDurationNil() {
	o.MaxSessionDuration.Set(nil)
}

// UnsetMaxSessionDuration ensures that no value is present for MaxSessionDuration, not even an explicit nil
func (o *RoleSetRequest) UnsetMaxSessionDuration() {
	o.MaxSessionDuration.Unset()
}

func (o RoleSetRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleSetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.MaxSessionDuration.IsSet() {
		toSerialize["max_session_duration"] = o.MaxSessionDuration.Get()
	}
	return toSerialize, nil
}

type NullableRoleSetRequest struct {
	value *RoleSetRequest
	isSet bool
}

func (v NullableRoleSetRequest) Get() *RoleSetRequest {
	return v.value
}

func (v *NullableRoleSetRequest) Set(val *RoleSetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleSetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleSetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleSetRequest(val *RoleSetRequest) *NullableRoleSetRequest {
	return &NullableRoleSetRequest{value: val, isSet: true}
}

func (v NullableRoleSetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleSetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
