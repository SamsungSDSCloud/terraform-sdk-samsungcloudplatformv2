/*
SCP IAM Service

SCP IAM Service

API version: 0.0.1.dev2450
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PolicyVersionCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyVersionCreateRequest{}

// PolicyVersionCreateRequest struct for PolicyVersionCreateRequest
type PolicyVersionCreateRequest struct {
	// Policy Document
	PolicyDocument IamPolicyDocument `json:"policy_document"`
	// Policy ID
	PolicyId *string `json:"policy_id,omitempty"`
	// Policy Version Id
	PolicyVersionId *string `json:"policy_version_id,omitempty"`
	// Policy Version Name
	PolicyVersionName *string `json:"policy_version_name,omitempty"`
}

type _PolicyVersionCreateRequest PolicyVersionCreateRequest

// NewPolicyVersionCreateRequest instantiates a new PolicyVersionCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyVersionCreateRequest(policyDocument IamPolicyDocument) *PolicyVersionCreateRequest {
	this := PolicyVersionCreateRequest{}
	this.PolicyDocument = policyDocument
	var policyVersionName string = "POLICY_VERSION_1"
	this.PolicyVersionName = &policyVersionName
	return &this
}

// NewPolicyVersionCreateRequestWithDefaults instantiates a new PolicyVersionCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyVersionCreateRequestWithDefaults() *PolicyVersionCreateRequest {
	this := PolicyVersionCreateRequest{}
	var policyVersionName string = "POLICY_VERSION_1"
	this.PolicyVersionName = &policyVersionName
	return &this
}

// GetPolicyDocument returns the PolicyDocument field value
func (o *PolicyVersionCreateRequest) GetPolicyDocument() IamPolicyDocument {
	if o == nil {
		var ret IamPolicyDocument
		return ret
	}

	return o.PolicyDocument
}

// GetPolicyDocumentOk returns a tuple with the PolicyDocument field value
// and a boolean to check if the value has been set.
func (o *PolicyVersionCreateRequest) GetPolicyDocumentOk() (*IamPolicyDocument, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PolicyDocument, true
}

// SetPolicyDocument sets field value
func (o *PolicyVersionCreateRequest) SetPolicyDocument(v IamPolicyDocument) {
	o.PolicyDocument = v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *PolicyVersionCreateRequest) GetPolicyId() string {
	if o == nil || IsNil(o.PolicyId) {
		var ret string
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyVersionCreateRequest) GetPolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyId) {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *PolicyVersionCreateRequest) HasPolicyId() bool {
	if o != nil && !IsNil(o.PolicyId) {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given string and assigns it to the PolicyId field.
func (o *PolicyVersionCreateRequest) SetPolicyId(v string) {
	o.PolicyId = &v
}

// GetPolicyVersionId returns the PolicyVersionId field value if set, zero value otherwise.
func (o *PolicyVersionCreateRequest) GetPolicyVersionId() string {
	if o == nil || IsNil(o.PolicyVersionId) {
		var ret string
		return ret
	}
	return *o.PolicyVersionId
}

// GetPolicyVersionIdOk returns a tuple with the PolicyVersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyVersionCreateRequest) GetPolicyVersionIdOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyVersionId) {
		return nil, false
	}
	return o.PolicyVersionId, true
}

// HasPolicyVersionId returns a boolean if a field has been set.
func (o *PolicyVersionCreateRequest) HasPolicyVersionId() bool {
	if o != nil && !IsNil(o.PolicyVersionId) {
		return true
	}

	return false
}

// SetPolicyVersionId gets a reference to the given string and assigns it to the PolicyVersionId field.
func (o *PolicyVersionCreateRequest) SetPolicyVersionId(v string) {
	o.PolicyVersionId = &v
}

// GetPolicyVersionName returns the PolicyVersionName field value if set, zero value otherwise.
func (o *PolicyVersionCreateRequest) GetPolicyVersionName() string {
	if o == nil || IsNil(o.PolicyVersionName) {
		var ret string
		return ret
	}
	return *o.PolicyVersionName
}

// GetPolicyVersionNameOk returns a tuple with the PolicyVersionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyVersionCreateRequest) GetPolicyVersionNameOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyVersionName) {
		return nil, false
	}
	return o.PolicyVersionName, true
}

// HasPolicyVersionName returns a boolean if a field has been set.
func (o *PolicyVersionCreateRequest) HasPolicyVersionName() bool {
	if o != nil && !IsNil(o.PolicyVersionName) {
		return true
	}

	return false
}

// SetPolicyVersionName gets a reference to the given string and assigns it to the PolicyVersionName field.
func (o *PolicyVersionCreateRequest) SetPolicyVersionName(v string) {
	o.PolicyVersionName = &v
}

func (o PolicyVersionCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyVersionCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["policy_document"] = o.PolicyDocument
	if !IsNil(o.PolicyId) {
		toSerialize["policy_id"] = o.PolicyId
	}
	if !IsNil(o.PolicyVersionId) {
		toSerialize["policy_version_id"] = o.PolicyVersionId
	}
	if !IsNil(o.PolicyVersionName) {
		toSerialize["policy_version_name"] = o.PolicyVersionName
	}
	return toSerialize, nil
}

func (o *PolicyVersionCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"policy_document",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPolicyVersionCreateRequest := _PolicyVersionCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPolicyVersionCreateRequest)

	if err != nil {
		return err
	}

	*o = PolicyVersionCreateRequest(varPolicyVersionCreateRequest)

	return err
}

type NullablePolicyVersionCreateRequest struct {
	value *PolicyVersionCreateRequest
	isSet bool
}

func (v NullablePolicyVersionCreateRequest) Get() *PolicyVersionCreateRequest {
	return v.value
}

func (v *NullablePolicyVersionCreateRequest) Set(val *PolicyVersionCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyVersionCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyVersionCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyVersionCreateRequest(val *PolicyVersionCreateRequest) *NullablePolicyVersionCreateRequest {
	return &NullablePolicyVersionCreateRequest{value: val, isSet: true}
}

func (v NullablePolicyVersionCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyVersionCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
