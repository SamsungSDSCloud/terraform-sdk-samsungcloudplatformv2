/*
SCP IAM Service

SCP IAM Service

API version: 0.0.1.dev2450
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the SamlProviderResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SamlProviderResponse{}

// SamlProviderResponse struct for SamlProviderResponse
type SamlProviderResponse struct {
	// Account ID
	AccountId string `json:"account_id"`
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy      string         `json:"created_by"`
	CreatorName    NullableString `json:"creator_name,omitempty"`
	Description    NullableString `json:"description,omitempty"`
	FederationType NullableString `json:"federation_type,omitempty"`
	// ID
	Id string `json:"id"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy       string         `json:"modified_by"`
	ModifierName     NullableString `json:"modifier_name,omitempty"`
	SamlProviderName NullableString `json:"saml_provider_name,omitempty"`
}

type _SamlProviderResponse SamlProviderResponse

// NewSamlProviderResponse instantiates a new SamlProviderResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSamlProviderResponse(accountId string, createdAt time.Time, createdBy string, id string, modifiedAt time.Time, modifiedBy string) *SamlProviderResponse {
	this := SamlProviderResponse{}
	this.AccountId = accountId
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.Id = id
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	return &this
}

// NewSamlProviderResponseWithDefaults instantiates a new SamlProviderResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSamlProviderResponseWithDefaults() *SamlProviderResponse {
	this := SamlProviderResponse{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *SamlProviderResponse) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *SamlProviderResponse) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *SamlProviderResponse) SetAccountId(v string) {
	o.AccountId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *SamlProviderResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SamlProviderResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SamlProviderResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *SamlProviderResponse) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *SamlProviderResponse) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *SamlProviderResponse) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetCreatorName returns the CreatorName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SamlProviderResponse) GetCreatorName() string {
	if o == nil || IsNil(o.CreatorName.Get()) {
		var ret string
		return ret
	}
	return *o.CreatorName.Get()
}

// GetCreatorNameOk returns a tuple with the CreatorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SamlProviderResponse) GetCreatorNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatorName.Get(), o.CreatorName.IsSet()
}

// HasCreatorName returns a boolean if a field has been set.
func (o *SamlProviderResponse) HasCreatorName() bool {
	if o != nil && o.CreatorName.IsSet() {
		return true
	}

	return false
}

// SetCreatorName gets a reference to the given NullableString and assigns it to the CreatorName field.
func (o *SamlProviderResponse) SetCreatorName(v string) {
	o.CreatorName.Set(&v)
}

// SetCreatorNameNil sets the value for CreatorName to be an explicit nil
func (o *SamlProviderResponse) SetCreatorNameNil() {
	o.CreatorName.Set(nil)
}

// UnsetCreatorName ensures that no value is present for CreatorName, not even an explicit nil
func (o *SamlProviderResponse) UnsetCreatorName() {
	o.CreatorName.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SamlProviderResponse) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SamlProviderResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *SamlProviderResponse) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *SamlProviderResponse) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *SamlProviderResponse) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *SamlProviderResponse) UnsetDescription() {
	o.Description.Unset()
}

// GetFederationType returns the FederationType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SamlProviderResponse) GetFederationType() string {
	if o == nil || IsNil(o.FederationType.Get()) {
		var ret string
		return ret
	}
	return *o.FederationType.Get()
}

// GetFederationTypeOk returns a tuple with the FederationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SamlProviderResponse) GetFederationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FederationType.Get(), o.FederationType.IsSet()
}

// HasFederationType returns a boolean if a field has been set.
func (o *SamlProviderResponse) HasFederationType() bool {
	if o != nil && o.FederationType.IsSet() {
		return true
	}

	return false
}

// SetFederationType gets a reference to the given NullableString and assigns it to the FederationType field.
func (o *SamlProviderResponse) SetFederationType(v string) {
	o.FederationType.Set(&v)
}

// SetFederationTypeNil sets the value for FederationType to be an explicit nil
func (o *SamlProviderResponse) SetFederationTypeNil() {
	o.FederationType.Set(nil)
}

// UnsetFederationType ensures that no value is present for FederationType, not even an explicit nil
func (o *SamlProviderResponse) UnsetFederationType() {
	o.FederationType.Unset()
}

// GetId returns the Id field value
func (o *SamlProviderResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SamlProviderResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SamlProviderResponse) SetId(v string) {
	o.Id = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *SamlProviderResponse) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *SamlProviderResponse) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *SamlProviderResponse) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *SamlProviderResponse) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *SamlProviderResponse) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *SamlProviderResponse) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetModifierName returns the ModifierName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SamlProviderResponse) GetModifierName() string {
	if o == nil || IsNil(o.ModifierName.Get()) {
		var ret string
		return ret
	}
	return *o.ModifierName.Get()
}

// GetModifierNameOk returns a tuple with the ModifierName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SamlProviderResponse) GetModifierNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifierName.Get(), o.ModifierName.IsSet()
}

// HasModifierName returns a boolean if a field has been set.
func (o *SamlProviderResponse) HasModifierName() bool {
	if o != nil && o.ModifierName.IsSet() {
		return true
	}

	return false
}

// SetModifierName gets a reference to the given NullableString and assigns it to the ModifierName field.
func (o *SamlProviderResponse) SetModifierName(v string) {
	o.ModifierName.Set(&v)
}

// SetModifierNameNil sets the value for ModifierName to be an explicit nil
func (o *SamlProviderResponse) SetModifierNameNil() {
	o.ModifierName.Set(nil)
}

// UnsetModifierName ensures that no value is present for ModifierName, not even an explicit nil
func (o *SamlProviderResponse) UnsetModifierName() {
	o.ModifierName.Unset()
}

// GetSamlProviderName returns the SamlProviderName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SamlProviderResponse) GetSamlProviderName() string {
	if o == nil || IsNil(o.SamlProviderName.Get()) {
		var ret string
		return ret
	}
	return *o.SamlProviderName.Get()
}

// GetSamlProviderNameOk returns a tuple with the SamlProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SamlProviderResponse) GetSamlProviderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SamlProviderName.Get(), o.SamlProviderName.IsSet()
}

// HasSamlProviderName returns a boolean if a field has been set.
func (o *SamlProviderResponse) HasSamlProviderName() bool {
	if o != nil && o.SamlProviderName.IsSet() {
		return true
	}

	return false
}

// SetSamlProviderName gets a reference to the given NullableString and assigns it to the SamlProviderName field.
func (o *SamlProviderResponse) SetSamlProviderName(v string) {
	o.SamlProviderName.Set(&v)
}

// SetSamlProviderNameNil sets the value for SamlProviderName to be an explicit nil
func (o *SamlProviderResponse) SetSamlProviderNameNil() {
	o.SamlProviderName.Set(nil)
}

// UnsetSamlProviderName ensures that no value is present for SamlProviderName, not even an explicit nil
func (o *SamlProviderResponse) UnsetSamlProviderName() {
	o.SamlProviderName.Unset()
}

func (o SamlProviderResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SamlProviderResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	if o.CreatorName.IsSet() {
		toSerialize["creator_name"] = o.CreatorName.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.FederationType.IsSet() {
		toSerialize["federation_type"] = o.FederationType.Get()
	}
	toSerialize["id"] = o.Id
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	if o.ModifierName.IsSet() {
		toSerialize["modifier_name"] = o.ModifierName.Get()
	}
	if o.SamlProviderName.IsSet() {
		toSerialize["saml_provider_name"] = o.SamlProviderName.Get()
	}
	return toSerialize, nil
}

func (o *SamlProviderResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"created_at",
		"created_by",
		"id",
		"modified_at",
		"modified_by",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSamlProviderResponse := _SamlProviderResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSamlProviderResponse)

	if err != nil {
		return err
	}

	*o = SamlProviderResponse(varSamlProviderResponse)

	return err
}

type NullableSamlProviderResponse struct {
	value *SamlProviderResponse
	isSet bool
}

func (v NullableSamlProviderResponse) Get() *SamlProviderResponse {
	return v.value
}

func (v *NullableSamlProviderResponse) Set(val *SamlProviderResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSamlProviderResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSamlProviderResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSamlProviderResponse(val *SamlProviderResponse) *NullableSamlProviderResponse {
	return &NullableSamlProviderResponse{value: val, isSet: true}
}

func (v NullableSamlProviderResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSamlProviderResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
