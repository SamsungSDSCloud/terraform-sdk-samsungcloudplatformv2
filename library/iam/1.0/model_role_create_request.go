/*
SCP IAM Service

SCP IAM Service

API version: 0.0.1.dev2450
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the RoleCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleCreateRequest{}

// RoleCreateRequest struct for RoleCreateRequest
type RoleCreateRequest struct {
	AccountId NullableString `json:"account_id,omitempty"`
	// 역할 신뢰 정책
	AssumeRolePolicyDocument PolicyDocument `json:"assume_role_policy_document"`
	Description              NullableString `json:"description,omitempty"`
	// 역할 세션 최대 지속 시간(초)
	MaxSessionDuration *int32 `json:"max_session_duration,omitempty"`
	// 역할명
	Name string `json:"name" validate:"regexp=^[a-zA-Z0-9\\\\+\\\\=\\\\,\\\\.\\\\@\\\\-\\\\_]*$"`
	// 역할에 연결할 정책 ID 목록
	PolicyIds []string            `json:"policy_ids"`
	Tags      []map[string]string `json:"tags,omitempty"`
	// 역할 유형
	Types *string `json:"types,omitempty"`
}

type _RoleCreateRequest RoleCreateRequest

// NewRoleCreateRequest instantiates a new RoleCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleCreateRequest(assumeRolePolicyDocument PolicyDocument, name string, policyIds []string) *RoleCreateRequest {
	this := RoleCreateRequest{}
	this.AssumeRolePolicyDocument = assumeRolePolicyDocument
	var maxSessionDuration int32 = 3600
	this.MaxSessionDuration = &maxSessionDuration
	this.Name = name
	this.PolicyIds = policyIds
	var types string = "USER_DEFINED"
	this.Types = &types
	return &this
}

// NewRoleCreateRequestWithDefaults instantiates a new RoleCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleCreateRequestWithDefaults() *RoleCreateRequest {
	this := RoleCreateRequest{}
	var maxSessionDuration int32 = 3600
	this.MaxSessionDuration = &maxSessionDuration
	var types string = "USER_DEFINED"
	this.Types = &types
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoleCreateRequest) GetAccountId() string {
	if o == nil || IsNil(o.AccountId.Get()) {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoleCreateRequest) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field has been set.
func (o *RoleCreateRequest) HasAccountId() bool {
	if o != nil && o.AccountId.IsSet() {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *RoleCreateRequest) SetAccountId(v string) {
	o.AccountId.Set(&v)
}

// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *RoleCreateRequest) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *RoleCreateRequest) UnsetAccountId() {
	o.AccountId.Unset()
}

// GetAssumeRolePolicyDocument returns the AssumeRolePolicyDocument field value
func (o *RoleCreateRequest) GetAssumeRolePolicyDocument() PolicyDocument {
	if o == nil {
		var ret PolicyDocument
		return ret
	}

	return o.AssumeRolePolicyDocument
}

// GetAssumeRolePolicyDocumentOk returns a tuple with the AssumeRolePolicyDocument field value
// and a boolean to check if the value has been set.
func (o *RoleCreateRequest) GetAssumeRolePolicyDocumentOk() (*PolicyDocument, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssumeRolePolicyDocument, true
}

// SetAssumeRolePolicyDocument sets field value
func (o *RoleCreateRequest) SetAssumeRolePolicyDocument(v PolicyDocument) {
	o.AssumeRolePolicyDocument = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoleCreateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoleCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *RoleCreateRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *RoleCreateRequest) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *RoleCreateRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *RoleCreateRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetMaxSessionDuration returns the MaxSessionDuration field value if set, zero value otherwise.
func (o *RoleCreateRequest) GetMaxSessionDuration() int32 {
	if o == nil || IsNil(o.MaxSessionDuration) {
		var ret int32
		return ret
	}
	return *o.MaxSessionDuration
}

// GetMaxSessionDurationOk returns a tuple with the MaxSessionDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleCreateRequest) GetMaxSessionDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxSessionDuration) {
		return nil, false
	}
	return o.MaxSessionDuration, true
}

// HasMaxSessionDuration returns a boolean if a field has been set.
func (o *RoleCreateRequest) HasMaxSessionDuration() bool {
	if o != nil && !IsNil(o.MaxSessionDuration) {
		return true
	}

	return false
}

// SetMaxSessionDuration gets a reference to the given int32 and assigns it to the MaxSessionDuration field.
func (o *RoleCreateRequest) SetMaxSessionDuration(v int32) {
	o.MaxSessionDuration = &v
}

// GetName returns the Name field value
func (o *RoleCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RoleCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RoleCreateRequest) SetName(v string) {
	o.Name = v
}

// GetPolicyIds returns the PolicyIds field value
func (o *RoleCreateRequest) GetPolicyIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.PolicyIds
}

// GetPolicyIdsOk returns a tuple with the PolicyIds field value
// and a boolean to check if the value has been set.
func (o *RoleCreateRequest) GetPolicyIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolicyIds, true
}

// SetPolicyIds sets field value
func (o *RoleCreateRequest) SetPolicyIds(v []string) {
	o.PolicyIds = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoleCreateRequest) GetTags() []map[string]string {
	if o == nil {
		var ret []map[string]string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoleCreateRequest) GetTagsOk() ([]map[string]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *RoleCreateRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []map[string]string and assigns it to the Tags field.
func (o *RoleCreateRequest) SetTags(v []map[string]string) {
	o.Tags = v
}

// GetTypes returns the Types field value if set, zero value otherwise.
func (o *RoleCreateRequest) GetTypes() string {
	if o == nil || IsNil(o.Types) {
		var ret string
		return ret
	}
	return *o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleCreateRequest) GetTypesOk() (*string, bool) {
	if o == nil || IsNil(o.Types) {
		return nil, false
	}
	return o.Types, true
}

// HasTypes returns a boolean if a field has been set.
func (o *RoleCreateRequest) HasTypes() bool {
	if o != nil && !IsNil(o.Types) {
		return true
	}

	return false
}

// SetTypes gets a reference to the given string and assigns it to the Types field.
func (o *RoleCreateRequest) SetTypes(v string) {
	o.Types = &v
}

func (o RoleCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId.IsSet() {
		toSerialize["account_id"] = o.AccountId.Get()
	}
	toSerialize["assume_role_policy_document"] = o.AssumeRolePolicyDocument
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.MaxSessionDuration) {
		toSerialize["max_session_duration"] = o.MaxSessionDuration
	}
	toSerialize["name"] = o.Name
	toSerialize["policy_ids"] = o.PolicyIds
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Types) {
		toSerialize["types"] = o.Types
	}
	return toSerialize, nil
}

func (o *RoleCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"assume_role_policy_document",
		"name",
		"policy_ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoleCreateRequest := _RoleCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRoleCreateRequest)

	if err != nil {
		return err
	}

	*o = RoleCreateRequest(varRoleCreateRequest)

	return err
}

type NullableRoleCreateRequest struct {
	value *RoleCreateRequest
	isSet bool
}

func (v NullableRoleCreateRequest) Get() *RoleCreateRequest {
	return v.value
}

func (v *NullableRoleCreateRequest) Set(val *RoleCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleCreateRequest(val *RoleCreateRequest) *NullableRoleCreateRequest {
	return &NullableRoleCreateRequest{value: val, isSet: true}
}

func (v NullableRoleCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
