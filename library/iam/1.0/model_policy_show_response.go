/*
SCP IAM Service

SCP IAM Service

API version: 0.0.1.dev2450
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the PolicyShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyShowResponse{}

// PolicyShowResponse struct for PolicyShowResponse
type PolicyShowResponse struct {
	AccountId NullableString `json:"account_id"`
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy    string         `json:"created_by"`
	CreatorEmail NullableString `json:"creator_email,omitempty"`
	CreatorName  NullableString `json:"creator_name,omitempty"`
	// Policy Default Version Id
	DefaultVersionId *string        `json:"default_version_id,omitempty"`
	Description      NullableString `json:"description,omitempty"`
	// 도메인 이름
	DomainName string `json:"domain_name"`
	// Policy ID
	Id *string `json:"id,omitempty"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy    string         `json:"modified_by"`
	ModifierEmail NullableString `json:"modifier_email,omitempty"`
	ModifierName  NullableString `json:"modifier_name,omitempty"`
	// Policy Category
	PolicyCategory *PolicyCategoryEnum `json:"policy_category,omitempty"`
	// Policy Name
	PolicyName *string `json:"policy_name,omitempty" validate:"regexp=^[a-zA-Z0-9\\\\-.,_+=@ㄱ-ㅎㅏ-ㅣ가-힣]*$"`
	// Policy Type
	PolicyType *PolicyTypeEnum `json:"policy_type,omitempty"`
	// Policy Versions
	PolicyVersions []PolicyVersion `json:"policy_versions,omitempty"`
	ResourceType   NullableString  `json:"resource_type,omitempty"`
	ServiceName    NullableString  `json:"service_name,omitempty"`
	ServiceType    NullableString  `json:"service_type,omitempty"`
	// 삼성 리소스 자원명
	Srn string `json:"srn"`
	// Policy State
	State *PolicyStateEnum `json:"state,omitempty"`
}

type _PolicyShowResponse PolicyShowResponse

// NewPolicyShowResponse instantiates a new PolicyShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyShowResponse(accountId NullableString, createdAt time.Time, createdBy string, domainName string, modifiedAt time.Time, modifiedBy string, srn string) *PolicyShowResponse {
	this := PolicyShowResponse{}
	this.AccountId = accountId
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.DomainName = domainName
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.Srn = srn
	var state PolicyStateEnum = POLICYSTATEENUM_ACTIVE
	this.State = &state
	return &this
}

// NewPolicyShowResponseWithDefaults instantiates a new PolicyShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyShowResponseWithDefaults() *PolicyShowResponse {
	this := PolicyShowResponse{}
	var state PolicyStateEnum = POLICYSTATEENUM_ACTIVE
	this.State = &state
	return &this
}

// GetAccountId returns the AccountId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PolicyShowResponse) GetAccountId() string {
	if o == nil || o.AccountId.Get() == nil {
		var ret string
		return ret
	}

	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PolicyShowResponse) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// SetAccountId sets field value
func (o *PolicyShowResponse) SetAccountId(v string) {
	o.AccountId.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
func (o *PolicyShowResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PolicyShowResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PolicyShowResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *PolicyShowResponse) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *PolicyShowResponse) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *PolicyShowResponse) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetCreatorEmail returns the CreatorEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PolicyShowResponse) GetCreatorEmail() string {
	if o == nil || IsNil(o.CreatorEmail.Get()) {
		var ret string
		return ret
	}
	return *o.CreatorEmail.Get()
}

// GetCreatorEmailOk returns a tuple with the CreatorEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PolicyShowResponse) GetCreatorEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatorEmail.Get(), o.CreatorEmail.IsSet()
}

// HasCreatorEmail returns a boolean if a field has been set.
func (o *PolicyShowResponse) HasCreatorEmail() bool {
	if o != nil && o.CreatorEmail.IsSet() {
		return true
	}

	return false
}

// SetCreatorEmail gets a reference to the given NullableString and assigns it to the CreatorEmail field.
func (o *PolicyShowResponse) SetCreatorEmail(v string) {
	o.CreatorEmail.Set(&v)
}

// SetCreatorEmailNil sets the value for CreatorEmail to be an explicit nil
func (o *PolicyShowResponse) SetCreatorEmailNil() {
	o.CreatorEmail.Set(nil)
}

// UnsetCreatorEmail ensures that no value is present for CreatorEmail, not even an explicit nil
func (o *PolicyShowResponse) UnsetCreatorEmail() {
	o.CreatorEmail.Unset()
}

// GetCreatorName returns the CreatorName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PolicyShowResponse) GetCreatorName() string {
	if o == nil || IsNil(o.CreatorName.Get()) {
		var ret string
		return ret
	}
	return *o.CreatorName.Get()
}

// GetCreatorNameOk returns a tuple with the CreatorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PolicyShowResponse) GetCreatorNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatorName.Get(), o.CreatorName.IsSet()
}

// HasCreatorName returns a boolean if a field has been set.
func (o *PolicyShowResponse) HasCreatorName() bool {
	if o != nil && o.CreatorName.IsSet() {
		return true
	}

	return false
}

// SetCreatorName gets a reference to the given NullableString and assigns it to the CreatorName field.
func (o *PolicyShowResponse) SetCreatorName(v string) {
	o.CreatorName.Set(&v)
}

// SetCreatorNameNil sets the value for CreatorName to be an explicit nil
func (o *PolicyShowResponse) SetCreatorNameNil() {
	o.CreatorName.Set(nil)
}

// UnsetCreatorName ensures that no value is present for CreatorName, not even an explicit nil
func (o *PolicyShowResponse) UnsetCreatorName() {
	o.CreatorName.Unset()
}

// GetDefaultVersionId returns the DefaultVersionId field value if set, zero value otherwise.
func (o *PolicyShowResponse) GetDefaultVersionId() string {
	if o == nil || IsNil(o.DefaultVersionId) {
		var ret string
		return ret
	}
	return *o.DefaultVersionId
}

// GetDefaultVersionIdOk returns a tuple with the DefaultVersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyShowResponse) GetDefaultVersionIdOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultVersionId) {
		return nil, false
	}
	return o.DefaultVersionId, true
}

// HasDefaultVersionId returns a boolean if a field has been set.
func (o *PolicyShowResponse) HasDefaultVersionId() bool {
	if o != nil && !IsNil(o.DefaultVersionId) {
		return true
	}

	return false
}

// SetDefaultVersionId gets a reference to the given string and assigns it to the DefaultVersionId field.
func (o *PolicyShowResponse) SetDefaultVersionId(v string) {
	o.DefaultVersionId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PolicyShowResponse) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PolicyShowResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *PolicyShowResponse) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *PolicyShowResponse) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *PolicyShowResponse) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *PolicyShowResponse) UnsetDescription() {
	o.Description.Unset()
}

// GetDomainName returns the DomainName field value
func (o *PolicyShowResponse) GetDomainName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value
// and a boolean to check if the value has been set.
func (o *PolicyShowResponse) GetDomainNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DomainName, true
}

// SetDomainName sets field value
func (o *PolicyShowResponse) SetDomainName(v string) {
	o.DomainName = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PolicyShowResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyShowResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PolicyShowResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PolicyShowResponse) SetId(v string) {
	o.Id = &v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *PolicyShowResponse) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *PolicyShowResponse) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *PolicyShowResponse) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *PolicyShowResponse) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *PolicyShowResponse) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *PolicyShowResponse) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetModifierEmail returns the ModifierEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PolicyShowResponse) GetModifierEmail() string {
	if o == nil || IsNil(o.ModifierEmail.Get()) {
		var ret string
		return ret
	}
	return *o.ModifierEmail.Get()
}

// GetModifierEmailOk returns a tuple with the ModifierEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PolicyShowResponse) GetModifierEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifierEmail.Get(), o.ModifierEmail.IsSet()
}

// HasModifierEmail returns a boolean if a field has been set.
func (o *PolicyShowResponse) HasModifierEmail() bool {
	if o != nil && o.ModifierEmail.IsSet() {
		return true
	}

	return false
}

// SetModifierEmail gets a reference to the given NullableString and assigns it to the ModifierEmail field.
func (o *PolicyShowResponse) SetModifierEmail(v string) {
	o.ModifierEmail.Set(&v)
}

// SetModifierEmailNil sets the value for ModifierEmail to be an explicit nil
func (o *PolicyShowResponse) SetModifierEmailNil() {
	o.ModifierEmail.Set(nil)
}

// UnsetModifierEmail ensures that no value is present for ModifierEmail, not even an explicit nil
func (o *PolicyShowResponse) UnsetModifierEmail() {
	o.ModifierEmail.Unset()
}

// GetModifierName returns the ModifierName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PolicyShowResponse) GetModifierName() string {
	if o == nil || IsNil(o.ModifierName.Get()) {
		var ret string
		return ret
	}
	return *o.ModifierName.Get()
}

// GetModifierNameOk returns a tuple with the ModifierName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PolicyShowResponse) GetModifierNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifierName.Get(), o.ModifierName.IsSet()
}

// HasModifierName returns a boolean if a field has been set.
func (o *PolicyShowResponse) HasModifierName() bool {
	if o != nil && o.ModifierName.IsSet() {
		return true
	}

	return false
}

// SetModifierName gets a reference to the given NullableString and assigns it to the ModifierName field.
func (o *PolicyShowResponse) SetModifierName(v string) {
	o.ModifierName.Set(&v)
}

// SetModifierNameNil sets the value for ModifierName to be an explicit nil
func (o *PolicyShowResponse) SetModifierNameNil() {
	o.ModifierName.Set(nil)
}

// UnsetModifierName ensures that no value is present for ModifierName, not even an explicit nil
func (o *PolicyShowResponse) UnsetModifierName() {
	o.ModifierName.Unset()
}

// GetPolicyCategory returns the PolicyCategory field value if set, zero value otherwise.
func (o *PolicyShowResponse) GetPolicyCategory() PolicyCategoryEnum {
	if o == nil || IsNil(o.PolicyCategory) {
		var ret PolicyCategoryEnum
		return ret
	}
	return *o.PolicyCategory
}

// GetPolicyCategoryOk returns a tuple with the PolicyCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyShowResponse) GetPolicyCategoryOk() (*PolicyCategoryEnum, bool) {
	if o == nil || IsNil(o.PolicyCategory) {
		return nil, false
	}
	return o.PolicyCategory, true
}

// HasPolicyCategory returns a boolean if a field has been set.
func (o *PolicyShowResponse) HasPolicyCategory() bool {
	if o != nil && !IsNil(o.PolicyCategory) {
		return true
	}

	return false
}

// SetPolicyCategory gets a reference to the given PolicyCategoryEnum and assigns it to the PolicyCategory field.
func (o *PolicyShowResponse) SetPolicyCategory(v PolicyCategoryEnum) {
	o.PolicyCategory = &v
}

// GetPolicyName returns the PolicyName field value if set, zero value otherwise.
func (o *PolicyShowResponse) GetPolicyName() string {
	if o == nil || IsNil(o.PolicyName) {
		var ret string
		return ret
	}
	return *o.PolicyName
}

// GetPolicyNameOk returns a tuple with the PolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyShowResponse) GetPolicyNameOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyName) {
		return nil, false
	}
	return o.PolicyName, true
}

// HasPolicyName returns a boolean if a field has been set.
func (o *PolicyShowResponse) HasPolicyName() bool {
	if o != nil && !IsNil(o.PolicyName) {
		return true
	}

	return false
}

// SetPolicyName gets a reference to the given string and assigns it to the PolicyName field.
func (o *PolicyShowResponse) SetPolicyName(v string) {
	o.PolicyName = &v
}

// GetPolicyType returns the PolicyType field value if set, zero value otherwise.
func (o *PolicyShowResponse) GetPolicyType() PolicyTypeEnum {
	if o == nil || IsNil(o.PolicyType) {
		var ret PolicyTypeEnum
		return ret
	}
	return *o.PolicyType
}

// GetPolicyTypeOk returns a tuple with the PolicyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyShowResponse) GetPolicyTypeOk() (*PolicyTypeEnum, bool) {
	if o == nil || IsNil(o.PolicyType) {
		return nil, false
	}
	return o.PolicyType, true
}

// HasPolicyType returns a boolean if a field has been set.
func (o *PolicyShowResponse) HasPolicyType() bool {
	if o != nil && !IsNil(o.PolicyType) {
		return true
	}

	return false
}

// SetPolicyType gets a reference to the given PolicyTypeEnum and assigns it to the PolicyType field.
func (o *PolicyShowResponse) SetPolicyType(v PolicyTypeEnum) {
	o.PolicyType = &v
}

// GetPolicyVersions returns the PolicyVersions field value if set, zero value otherwise.
func (o *PolicyShowResponse) GetPolicyVersions() []PolicyVersion {
	if o == nil || IsNil(o.PolicyVersions) {
		var ret []PolicyVersion
		return ret
	}
	return o.PolicyVersions
}

// GetPolicyVersionsOk returns a tuple with the PolicyVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyShowResponse) GetPolicyVersionsOk() ([]PolicyVersion, bool) {
	if o == nil || IsNil(o.PolicyVersions) {
		return nil, false
	}
	return o.PolicyVersions, true
}

// HasPolicyVersions returns a boolean if a field has been set.
func (o *PolicyShowResponse) HasPolicyVersions() bool {
	if o != nil && !IsNil(o.PolicyVersions) {
		return true
	}

	return false
}

// SetPolicyVersions gets a reference to the given []PolicyVersion and assigns it to the PolicyVersions field.
func (o *PolicyShowResponse) SetPolicyVersions(v []PolicyVersion) {
	o.PolicyVersions = v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PolicyShowResponse) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceType.Get()
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PolicyShowResponse) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceType.Get(), o.ResourceType.IsSet()
}

// HasResourceType returns a boolean if a field has been set.
func (o *PolicyShowResponse) HasResourceType() bool {
	if o != nil && o.ResourceType.IsSet() {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given NullableString and assigns it to the ResourceType field.
func (o *PolicyShowResponse) SetResourceType(v string) {
	o.ResourceType.Set(&v)
}

// SetResourceTypeNil sets the value for ResourceType to be an explicit nil
func (o *PolicyShowResponse) SetResourceTypeNil() {
	o.ResourceType.Set(nil)
}

// UnsetResourceType ensures that no value is present for ResourceType, not even an explicit nil
func (o *PolicyShowResponse) UnsetResourceType() {
	o.ResourceType.Unset()
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PolicyShowResponse) GetServiceName() string {
	if o == nil || IsNil(o.ServiceName.Get()) {
		var ret string
		return ret
	}
	return *o.ServiceName.Get()
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PolicyShowResponse) GetServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceName.Get(), o.ServiceName.IsSet()
}

// HasServiceName returns a boolean if a field has been set.
func (o *PolicyShowResponse) HasServiceName() bool {
	if o != nil && o.ServiceName.IsSet() {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given NullableString and assigns it to the ServiceName field.
func (o *PolicyShowResponse) SetServiceName(v string) {
	o.ServiceName.Set(&v)
}

// SetServiceNameNil sets the value for ServiceName to be an explicit nil
func (o *PolicyShowResponse) SetServiceNameNil() {
	o.ServiceName.Set(nil)
}

// UnsetServiceName ensures that no value is present for ServiceName, not even an explicit nil
func (o *PolicyShowResponse) UnsetServiceName() {
	o.ServiceName.Unset()
}

// GetServiceType returns the ServiceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PolicyShowResponse) GetServiceType() string {
	if o == nil || IsNil(o.ServiceType.Get()) {
		var ret string
		return ret
	}
	return *o.ServiceType.Get()
}

// GetServiceTypeOk returns a tuple with the ServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PolicyShowResponse) GetServiceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceType.Get(), o.ServiceType.IsSet()
}

// HasServiceType returns a boolean if a field has been set.
func (o *PolicyShowResponse) HasServiceType() bool {
	if o != nil && o.ServiceType.IsSet() {
		return true
	}

	return false
}

// SetServiceType gets a reference to the given NullableString and assigns it to the ServiceType field.
func (o *PolicyShowResponse) SetServiceType(v string) {
	o.ServiceType.Set(&v)
}

// SetServiceTypeNil sets the value for ServiceType to be an explicit nil
func (o *PolicyShowResponse) SetServiceTypeNil() {
	o.ServiceType.Set(nil)
}

// UnsetServiceType ensures that no value is present for ServiceType, not even an explicit nil
func (o *PolicyShowResponse) UnsetServiceType() {
	o.ServiceType.Unset()
}

// GetSrn returns the Srn field value
func (o *PolicyShowResponse) GetSrn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Srn
}

// GetSrnOk returns a tuple with the Srn field value
// and a boolean to check if the value has been set.
func (o *PolicyShowResponse) GetSrnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Srn, true
}

// SetSrn sets field value
func (o *PolicyShowResponse) SetSrn(v string) {
	o.Srn = v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *PolicyShowResponse) GetState() PolicyStateEnum {
	if o == nil || IsNil(o.State) {
		var ret PolicyStateEnum
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyShowResponse) GetStateOk() (*PolicyStateEnum, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *PolicyShowResponse) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given PolicyStateEnum and assigns it to the State field.
func (o *PolicyShowResponse) SetState(v PolicyStateEnum) {
	o.State = &v
}

func (o PolicyShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId.Get()
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	if o.CreatorEmail.IsSet() {
		toSerialize["creator_email"] = o.CreatorEmail.Get()
	}
	if o.CreatorName.IsSet() {
		toSerialize["creator_name"] = o.CreatorName.Get()
	}
	if !IsNil(o.DefaultVersionId) {
		toSerialize["default_version_id"] = o.DefaultVersionId
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["domain_name"] = o.DomainName
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	if o.ModifierEmail.IsSet() {
		toSerialize["modifier_email"] = o.ModifierEmail.Get()
	}
	if o.ModifierName.IsSet() {
		toSerialize["modifier_name"] = o.ModifierName.Get()
	}
	if !IsNil(o.PolicyCategory) {
		toSerialize["policy_category"] = o.PolicyCategory
	}
	if !IsNil(o.PolicyName) {
		toSerialize["policy_name"] = o.PolicyName
	}
	if !IsNil(o.PolicyType) {
		toSerialize["policy_type"] = o.PolicyType
	}
	if !IsNil(o.PolicyVersions) {
		toSerialize["policy_versions"] = o.PolicyVersions
	}
	if o.ResourceType.IsSet() {
		toSerialize["resource_type"] = o.ResourceType.Get()
	}
	if o.ServiceName.IsSet() {
		toSerialize["service_name"] = o.ServiceName.Get()
	}
	if o.ServiceType.IsSet() {
		toSerialize["service_type"] = o.ServiceType.Get()
	}
	toSerialize["srn"] = o.Srn
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

func (o *PolicyShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"created_at",
		"created_by",
		"domain_name",
		"modified_at",
		"modified_by",
		"srn",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPolicyShowResponse := _PolicyShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPolicyShowResponse)

	if err != nil {
		return err
	}

	*o = PolicyShowResponse(varPolicyShowResponse)

	return err
}

type NullablePolicyShowResponse struct {
	value *PolicyShowResponse
	isSet bool
}

func (v NullablePolicyShowResponse) Get() *PolicyShowResponse {
	return v.value
}

func (v *NullablePolicyShowResponse) Set(val *PolicyShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyShowResponse(val *PolicyShowResponse) *NullablePolicyShowResponse {
	return &NullablePolicyShowResponse{value: val, isSet: true}
}

func (v NullablePolicyShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
