/*
SCP IAM Service

SCP IAM Service

API version: 0.0.1.dev2450
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the RoleBulkDeleteRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleBulkDeleteRequest{}

// RoleBulkDeleteRequest struct for RoleBulkDeleteRequest
type RoleBulkDeleteRequest struct {
	AccountId NullableString `json:"account_id,omitempty"`
	// 역할명 목록
	RoleNames []string `json:"role_names"`
}

type _RoleBulkDeleteRequest RoleBulkDeleteRequest

// NewRoleBulkDeleteRequest instantiates a new RoleBulkDeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleBulkDeleteRequest(roleNames []string) *RoleBulkDeleteRequest {
	this := RoleBulkDeleteRequest{}
	this.RoleNames = roleNames
	return &this
}

// NewRoleBulkDeleteRequestWithDefaults instantiates a new RoleBulkDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleBulkDeleteRequestWithDefaults() *RoleBulkDeleteRequest {
	this := RoleBulkDeleteRequest{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoleBulkDeleteRequest) GetAccountId() string {
	if o == nil || IsNil(o.AccountId.Get()) {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoleBulkDeleteRequest) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field has been set.
func (o *RoleBulkDeleteRequest) HasAccountId() bool {
	if o != nil && o.AccountId.IsSet() {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *RoleBulkDeleteRequest) SetAccountId(v string) {
	o.AccountId.Set(&v)
}

// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *RoleBulkDeleteRequest) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *RoleBulkDeleteRequest) UnsetAccountId() {
	o.AccountId.Unset()
}

// GetRoleNames returns the RoleNames field value
func (o *RoleBulkDeleteRequest) GetRoleNames() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RoleNames
}

// GetRoleNamesOk returns a tuple with the RoleNames field value
// and a boolean to check if the value has been set.
func (o *RoleBulkDeleteRequest) GetRoleNamesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RoleNames, true
}

// SetRoleNames sets field value
func (o *RoleBulkDeleteRequest) SetRoleNames(v []string) {
	o.RoleNames = v
}

func (o RoleBulkDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleBulkDeleteRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId.IsSet() {
		toSerialize["account_id"] = o.AccountId.Get()
	}
	toSerialize["role_names"] = o.RoleNames
	return toSerialize, nil
}

func (o *RoleBulkDeleteRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"role_names",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoleBulkDeleteRequest := _RoleBulkDeleteRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRoleBulkDeleteRequest)

	if err != nil {
		return err
	}

	*o = RoleBulkDeleteRequest(varRoleBulkDeleteRequest)

	return err
}

type NullableRoleBulkDeleteRequest struct {
	value *RoleBulkDeleteRequest
	isSet bool
}

func (v NullableRoleBulkDeleteRequest) Get() *RoleBulkDeleteRequest {
	return v.value
}

func (v *NullableRoleBulkDeleteRequest) Set(val *RoleBulkDeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleBulkDeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleBulkDeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleBulkDeleteRequest(val *RoleBulkDeleteRequest) *NullableRoleBulkDeleteRequest {
	return &NullableRoleBulkDeleteRequest{value: val, isSet: true}
}

func (v NullableRoleBulkDeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleBulkDeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
