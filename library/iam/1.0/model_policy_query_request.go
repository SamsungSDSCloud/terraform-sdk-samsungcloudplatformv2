/*
SCP IAM Service

SCP IAM Service

API version: 0.0.1.dev2450
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"encoding/json"
)

// checks if the PolicyQueryRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyQueryRequest{}

// PolicyQueryRequest struct for PolicyQueryRequest
type PolicyQueryRequest struct {
	ExcludedPolicyIds []string `json:"excluded_policy_ids,omitempty"`
}

// NewPolicyQueryRequest instantiates a new PolicyQueryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyQueryRequest() *PolicyQueryRequest {
	this := PolicyQueryRequest{}
	return &this
}

// NewPolicyQueryRequestWithDefaults instantiates a new PolicyQueryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyQueryRequestWithDefaults() *PolicyQueryRequest {
	this := PolicyQueryRequest{}
	return &this
}

// GetExcludedPolicyIds returns the ExcludedPolicyIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PolicyQueryRequest) GetExcludedPolicyIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ExcludedPolicyIds
}

// GetExcludedPolicyIdsOk returns a tuple with the ExcludedPolicyIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PolicyQueryRequest) GetExcludedPolicyIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludedPolicyIds) {
		return nil, false
	}
	return o.ExcludedPolicyIds, true
}

// HasExcludedPolicyIds returns a boolean if a field has been set.
func (o *PolicyQueryRequest) HasExcludedPolicyIds() bool {
	if o != nil && !IsNil(o.ExcludedPolicyIds) {
		return true
	}

	return false
}

// SetExcludedPolicyIds gets a reference to the given []string and assigns it to the ExcludedPolicyIds field.
func (o *PolicyQueryRequest) SetExcludedPolicyIds(v []string) {
	o.ExcludedPolicyIds = v
}

func (o PolicyQueryRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyQueryRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ExcludedPolicyIds != nil {
		toSerialize["excluded_policy_ids"] = o.ExcludedPolicyIds
	}
	return toSerialize, nil
}

type NullablePolicyQueryRequest struct {
	value *PolicyQueryRequest
	isSet bool
}

func (v NullablePolicyQueryRequest) Get() *PolicyQueryRequest {
	return v.value
}

func (v *NullablePolicyQueryRequest) Set(val *PolicyQueryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyQueryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyQueryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyQueryRequest(val *PolicyQueryRequest) *NullablePolicyQueryRequest {
	return &NullablePolicyQueryRequest{value: val, isSet: true}
}

func (v NullablePolicyQueryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyQueryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
