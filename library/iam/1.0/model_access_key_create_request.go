/*
SCP IAM Service

SCP IAM Service

API version: 0.0.1.dev2450
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AccessKeyCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessKeyCreateRequest{}

// AccessKeyCreateRequest struct for AccessKeyCreateRequest
type AccessKeyCreateRequest struct {
	// Access key type
	AccessKeyType AccessKeyTypeCreateRequestEnum `json:"access_key_type"`
	// Account Id
	AccountId         *string        `json:"account_id,omitempty"`
	Description       NullableString `json:"description,omitempty"`
	Duration          NullableString `json:"duration,omitempty"`
	ParentAccessKeyId NullableString `json:"parent_access_key_id,omitempty"`
	Passcode          NullableString `json:"passcode,omitempty"`
}

type _AccessKeyCreateRequest AccessKeyCreateRequest

// NewAccessKeyCreateRequest instantiates a new AccessKeyCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessKeyCreateRequest(accessKeyType AccessKeyTypeCreateRequestEnum) *AccessKeyCreateRequest {
	this := AccessKeyCreateRequest{}
	this.AccessKeyType = accessKeyType
	return &this
}

// NewAccessKeyCreateRequestWithDefaults instantiates a new AccessKeyCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessKeyCreateRequestWithDefaults() *AccessKeyCreateRequest {
	this := AccessKeyCreateRequest{}
	return &this
}

// GetAccessKeyType returns the AccessKeyType field value
func (o *AccessKeyCreateRequest) GetAccessKeyType() AccessKeyTypeCreateRequestEnum {
	if o == nil {
		var ret AccessKeyTypeCreateRequestEnum
		return ret
	}

	return o.AccessKeyType
}

// GetAccessKeyTypeOk returns a tuple with the AccessKeyType field value
// and a boolean to check if the value has been set.
func (o *AccessKeyCreateRequest) GetAccessKeyTypeOk() (*AccessKeyTypeCreateRequestEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessKeyType, true
}

// SetAccessKeyType sets field value
func (o *AccessKeyCreateRequest) SetAccessKeyType(v AccessKeyTypeCreateRequestEnum) {
	o.AccessKeyType = v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *AccessKeyCreateRequest) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeyCreateRequest) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *AccessKeyCreateRequest) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *AccessKeyCreateRequest) SetAccountId(v string) {
	o.AccountId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessKeyCreateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessKeyCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *AccessKeyCreateRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *AccessKeyCreateRequest) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *AccessKeyCreateRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *AccessKeyCreateRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetDuration returns the Duration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessKeyCreateRequest) GetDuration() string {
	if o == nil || IsNil(o.Duration.Get()) {
		var ret string
		return ret
	}
	return *o.Duration.Get()
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessKeyCreateRequest) GetDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Duration.Get(), o.Duration.IsSet()
}

// HasDuration returns a boolean if a field has been set.
func (o *AccessKeyCreateRequest) HasDuration() bool {
	if o != nil && o.Duration.IsSet() {
		return true
	}

	return false
}

// SetDuration gets a reference to the given NullableString and assigns it to the Duration field.
func (o *AccessKeyCreateRequest) SetDuration(v string) {
	o.Duration.Set(&v)
}

// SetDurationNil sets the value for Duration to be an explicit nil
func (o *AccessKeyCreateRequest) SetDurationNil() {
	o.Duration.Set(nil)
}

// UnsetDuration ensures that no value is present for Duration, not even an explicit nil
func (o *AccessKeyCreateRequest) UnsetDuration() {
	o.Duration.Unset()
}

// GetParentAccessKeyId returns the ParentAccessKeyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessKeyCreateRequest) GetParentAccessKeyId() string {
	if o == nil || IsNil(o.ParentAccessKeyId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentAccessKeyId.Get()
}

// GetParentAccessKeyIdOk returns a tuple with the ParentAccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessKeyCreateRequest) GetParentAccessKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentAccessKeyId.Get(), o.ParentAccessKeyId.IsSet()
}

// HasParentAccessKeyId returns a boolean if a field has been set.
func (o *AccessKeyCreateRequest) HasParentAccessKeyId() bool {
	if o != nil && o.ParentAccessKeyId.IsSet() {
		return true
	}

	return false
}

// SetParentAccessKeyId gets a reference to the given NullableString and assigns it to the ParentAccessKeyId field.
func (o *AccessKeyCreateRequest) SetParentAccessKeyId(v string) {
	o.ParentAccessKeyId.Set(&v)
}

// SetParentAccessKeyIdNil sets the value for ParentAccessKeyId to be an explicit nil
func (o *AccessKeyCreateRequest) SetParentAccessKeyIdNil() {
	o.ParentAccessKeyId.Set(nil)
}

// UnsetParentAccessKeyId ensures that no value is present for ParentAccessKeyId, not even an explicit nil
func (o *AccessKeyCreateRequest) UnsetParentAccessKeyId() {
	o.ParentAccessKeyId.Unset()
}

// GetPasscode returns the Passcode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessKeyCreateRequest) GetPasscode() string {
	if o == nil || IsNil(o.Passcode.Get()) {
		var ret string
		return ret
	}
	return *o.Passcode.Get()
}

// GetPasscodeOk returns a tuple with the Passcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessKeyCreateRequest) GetPasscodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Passcode.Get(), o.Passcode.IsSet()
}

// HasPasscode returns a boolean if a field has been set.
func (o *AccessKeyCreateRequest) HasPasscode() bool {
	if o != nil && o.Passcode.IsSet() {
		return true
	}

	return false
}

// SetPasscode gets a reference to the given NullableString and assigns it to the Passcode field.
func (o *AccessKeyCreateRequest) SetPasscode(v string) {
	o.Passcode.Set(&v)
}

// SetPasscodeNil sets the value for Passcode to be an explicit nil
func (o *AccessKeyCreateRequest) SetPasscodeNil() {
	o.Passcode.Set(nil)
}

// UnsetPasscode ensures that no value is present for Passcode, not even an explicit nil
func (o *AccessKeyCreateRequest) UnsetPasscode() {
	o.Passcode.Unset()
}

func (o AccessKeyCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessKeyCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["access_key_type"] = o.AccessKeyType
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Duration.IsSet() {
		toSerialize["duration"] = o.Duration.Get()
	}
	if o.ParentAccessKeyId.IsSet() {
		toSerialize["parent_access_key_id"] = o.ParentAccessKeyId.Get()
	}
	if o.Passcode.IsSet() {
		toSerialize["passcode"] = o.Passcode.Get()
	}
	return toSerialize, nil
}

func (o *AccessKeyCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"access_key_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccessKeyCreateRequest := _AccessKeyCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccessKeyCreateRequest)

	if err != nil {
		return err
	}

	*o = AccessKeyCreateRequest(varAccessKeyCreateRequest)

	return err
}

type NullableAccessKeyCreateRequest struct {
	value *AccessKeyCreateRequest
	isSet bool
}

func (v NullableAccessKeyCreateRequest) Get() *AccessKeyCreateRequest {
	return v.value
}

func (v *NullableAccessKeyCreateRequest) Set(val *AccessKeyCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessKeyCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessKeyCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessKeyCreateRequest(val *AccessKeyCreateRequest) *NullableAccessKeyCreateRequest {
	return &NullableAccessKeyCreateRequest{value: val, isSet: true}
}

func (v NullableAccessKeyCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessKeyCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
