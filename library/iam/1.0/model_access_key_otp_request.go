/*
SCP IAM Service

SCP IAM Service

API version: 0.0.1.dev2450
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"encoding/json"
)

// checks if the AccessKeyOtpRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessKeyOtpRequest{}

// AccessKeyOtpRequest struct for AccessKeyOtpRequest
type AccessKeyOtpRequest struct {
	// Locale
	Locale *LocaleEnum `json:"locale,omitempty"`
	// OTP method (EMAIL or PHONE)
	Method *OtpMethodEnum `json:"method,omitempty"`
}

// NewAccessKeyOtpRequest instantiates a new AccessKeyOtpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessKeyOtpRequest() *AccessKeyOtpRequest {
	this := AccessKeyOtpRequest{}
	return &this
}

// NewAccessKeyOtpRequestWithDefaults instantiates a new AccessKeyOtpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessKeyOtpRequestWithDefaults() *AccessKeyOtpRequest {
	this := AccessKeyOtpRequest{}
	return &this
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *AccessKeyOtpRequest) GetLocale() LocaleEnum {
	if o == nil || IsNil(o.Locale) {
		var ret LocaleEnum
		return ret
	}
	return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeyOtpRequest) GetLocaleOk() (*LocaleEnum, bool) {
	if o == nil || IsNil(o.Locale) {
		return nil, false
	}
	return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *AccessKeyOtpRequest) HasLocale() bool {
	if o != nil && !IsNil(o.Locale) {
		return true
	}

	return false
}

// SetLocale gets a reference to the given LocaleEnum and assigns it to the Locale field.
func (o *AccessKeyOtpRequest) SetLocale(v LocaleEnum) {
	o.Locale = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *AccessKeyOtpRequest) GetMethod() OtpMethodEnum {
	if o == nil || IsNil(o.Method) {
		var ret OtpMethodEnum
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeyOtpRequest) GetMethodOk() (*OtpMethodEnum, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *AccessKeyOtpRequest) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given OtpMethodEnum and assigns it to the Method field.
func (o *AccessKeyOtpRequest) SetMethod(v OtpMethodEnum) {
	o.Method = &v
}

func (o AccessKeyOtpRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessKeyOtpRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Locale) {
		toSerialize["locale"] = o.Locale
	}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	return toSerialize, nil
}

type NullableAccessKeyOtpRequest struct {
	value *AccessKeyOtpRequest
	isSet bool
}

func (v NullableAccessKeyOtpRequest) Get() *AccessKeyOtpRequest {
	return v.value
}

func (v *NullableAccessKeyOtpRequest) Set(val *AccessKeyOtpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessKeyOtpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessKeyOtpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessKeyOtpRequest(val *AccessKeyOtpRequest) *NullableAccessKeyOtpRequest {
	return &NullableAccessKeyOtpRequest{value: val, isSet: true}
}

func (v NullableAccessKeyOtpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessKeyOtpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
