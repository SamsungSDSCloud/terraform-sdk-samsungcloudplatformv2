/*
SCP IAM Service

SCP IAM Service

API version: 0.0.1.dev1432
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GroupMemberShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupMemberShowResponse{}

// GroupMemberShowResponse struct for GroupMemberShowResponse
type GroupMemberShowResponse struct {
	GroupMember GroupMember `json:"group_member"`
}

type _GroupMemberShowResponse GroupMemberShowResponse

// NewGroupMemberShowResponse instantiates a new GroupMemberShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupMemberShowResponse(groupMember GroupMember) *GroupMemberShowResponse {
	this := GroupMemberShowResponse{}
	this.GroupMember = groupMember
	return &this
}

// NewGroupMemberShowResponseWithDefaults instantiates a new GroupMemberShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupMemberShowResponseWithDefaults() *GroupMemberShowResponse {
	this := GroupMemberShowResponse{}
	return &this
}

// GetGroupMember returns the GroupMember field value
func (o *GroupMemberShowResponse) GetGroupMember() GroupMember {
	if o == nil {
		var ret GroupMember
		return ret
	}

	return o.GroupMember
}

// GetGroupMemberOk returns a tuple with the GroupMember field value
// and a boolean to check if the value has been set.
func (o *GroupMemberShowResponse) GetGroupMemberOk() (*GroupMember, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupMember, true
}

// SetGroupMember sets field value
func (o *GroupMemberShowResponse) SetGroupMember(v GroupMember) {
	o.GroupMember = v
}

func (o GroupMemberShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupMemberShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["group_member"] = o.GroupMember
	return toSerialize, nil
}

func (o *GroupMemberShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"group_member",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGroupMemberShowResponse := _GroupMemberShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGroupMemberShowResponse)

	if err != nil {
		return err
	}

	*o = GroupMemberShowResponse(varGroupMemberShowResponse)

	return err
}

type NullableGroupMemberShowResponse struct {
	value *GroupMemberShowResponse
	isSet bool
}

func (v NullableGroupMemberShowResponse) Get() *GroupMemberShowResponse {
	return v.value
}

func (v *NullableGroupMemberShowResponse) Set(val *GroupMemberShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupMemberShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupMemberShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupMemberShowResponse(val *GroupMemberShowResponse) *NullableGroupMemberShowResponse {
	return &NullableGroupMemberShowResponse{value: val, isSet: true}
}

func (v NullableGroupMemberShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupMemberShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
