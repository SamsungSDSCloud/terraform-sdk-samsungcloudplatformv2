/*
SCP IAM Service

SCP IAM Service

API version: 0.0.1.dev1432
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the UserDetailResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserDetailResponse{}

// UserDetailResponse struct for UserDetailResponse
type UserDetailResponse struct {
	// 접근 제어 설정 유무
	AccessControl bool           `json:"access_control"`
	AccountId     NullableString `json:"account_id,omitempty"`
	AccountName   NullableString `json:"account_name,omitempty"`
	// 접근 허용 IP
	AllowedIpAddresses string         `json:"allowed_ip_addresses"`
	CompanyName        NullableString `json:"company_name,omitempty"`
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy   string         `json:"created_by"`
	Description NullableString `json:"description,omitempty"`
	DstOffset   NullableString `json:"dst_offset,omitempty"`
	// 사용자 Email
	Email string `json:"email"`
	// email 인증 여부
	EmailAuthenticated bool           `json:"email_authenticated"`
	FirstName          NullableString `json:"first_name,omitempty"`
	// ID
	Id                   string         `json:"id"`
	LastLoginAt          NullableTime   `json:"last_login_at,omitempty"`
	LastName             NullableString `json:"last_name,omitempty"`
	LastPasswordUpdateAt NullableTime   `json:"last_password_update_at,omitempty"`
	// Login ID
	LoginId string `json:"login_id"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy string `json:"modified_by"`
	// 국가 ID
	NationId string `json:"nation_id"`
	// 비밀 번호 재사용 가능 횟수
	PasswordReuseCount int32 `json:"password_reuse_count"`
	// 휴대폰 인증 여부
	PhoneAuthenticated bool `json:"phone_authenticated"`
	// 사용자 휴대 전화 번호
	PhoneNumber string         `json:"phone_number"`
	Timezone    NullableString `json:"timezone,omitempty"`
	// Type
	Type      string         `json:"type"`
	TzId      NullableString `json:"tz_id,omitempty"`
	UserName  NullableString `json:"user_name,omitempty"`
	UtcOffset NullableString `json:"utc_offset,omitempty"`
}

type _UserDetailResponse UserDetailResponse

// NewUserDetailResponse instantiates a new UserDetailResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserDetailResponse(accessControl bool, allowedIpAddresses string, createdAt time.Time, createdBy string, email string, emailAuthenticated bool, id string, loginId string, modifiedAt time.Time, modifiedBy string, nationId string, passwordReuseCount int32, phoneAuthenticated bool, phoneNumber string, type_ string) *UserDetailResponse {
	this := UserDetailResponse{}
	this.AccessControl = accessControl
	this.AllowedIpAddresses = allowedIpAddresses
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.Email = email
	this.EmailAuthenticated = emailAuthenticated
	this.Id = id
	this.LoginId = loginId
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.NationId = nationId
	this.PasswordReuseCount = passwordReuseCount
	this.PhoneAuthenticated = phoneAuthenticated
	this.PhoneNumber = phoneNumber
	this.Type = type_
	return &this
}

// NewUserDetailResponseWithDefaults instantiates a new UserDetailResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserDetailResponseWithDefaults() *UserDetailResponse {
	this := UserDetailResponse{}
	return &this
}

// GetAccessControl returns the AccessControl field value
func (o *UserDetailResponse) GetAccessControl() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AccessControl
}

// GetAccessControlOk returns a tuple with the AccessControl field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponse) GetAccessControlOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessControl, true
}

// SetAccessControl sets field value
func (o *UserDetailResponse) SetAccessControl(v bool) {
	o.AccessControl = v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserDetailResponse) GetAccountId() string {
	if o == nil || IsNil(o.AccountId.Get()) {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserDetailResponse) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field has been set.
func (o *UserDetailResponse) HasAccountId() bool {
	if o != nil && o.AccountId.IsSet() {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *UserDetailResponse) SetAccountId(v string) {
	o.AccountId.Set(&v)
}

// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *UserDetailResponse) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *UserDetailResponse) UnsetAccountId() {
	o.AccountId.Unset()
}

// GetAccountName returns the AccountName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserDetailResponse) GetAccountName() string {
	if o == nil || IsNil(o.AccountName.Get()) {
		var ret string
		return ret
	}
	return *o.AccountName.Get()
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserDetailResponse) GetAccountNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountName.Get(), o.AccountName.IsSet()
}

// HasAccountName returns a boolean if a field has been set.
func (o *UserDetailResponse) HasAccountName() bool {
	if o != nil && o.AccountName.IsSet() {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given NullableString and assigns it to the AccountName field.
func (o *UserDetailResponse) SetAccountName(v string) {
	o.AccountName.Set(&v)
}

// SetAccountNameNil sets the value for AccountName to be an explicit nil
func (o *UserDetailResponse) SetAccountNameNil() {
	o.AccountName.Set(nil)
}

// UnsetAccountName ensures that no value is present for AccountName, not even an explicit nil
func (o *UserDetailResponse) UnsetAccountName() {
	o.AccountName.Unset()
}

// GetAllowedIpAddresses returns the AllowedIpAddresses field value
func (o *UserDetailResponse) GetAllowedIpAddresses() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AllowedIpAddresses
}

// GetAllowedIpAddressesOk returns a tuple with the AllowedIpAddresses field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponse) GetAllowedIpAddressesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowedIpAddresses, true
}

// SetAllowedIpAddresses sets field value
func (o *UserDetailResponse) SetAllowedIpAddresses(v string) {
	o.AllowedIpAddresses = v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserDetailResponse) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName.Get()) {
		var ret string
		return ret
	}
	return *o.CompanyName.Get()
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserDetailResponse) GetCompanyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyName.Get(), o.CompanyName.IsSet()
}

// HasCompanyName returns a boolean if a field has been set.
func (o *UserDetailResponse) HasCompanyName() bool {
	if o != nil && o.CompanyName.IsSet() {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given NullableString and assigns it to the CompanyName field.
func (o *UserDetailResponse) SetCompanyName(v string) {
	o.CompanyName.Set(&v)
}

// SetCompanyNameNil sets the value for CompanyName to be an explicit nil
func (o *UserDetailResponse) SetCompanyNameNil() {
	o.CompanyName.Set(nil)
}

// UnsetCompanyName ensures that no value is present for CompanyName, not even an explicit nil
func (o *UserDetailResponse) UnsetCompanyName() {
	o.CompanyName.Unset()
}

// GetCreatedAt returns the CreatedAt field value
func (o *UserDetailResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *UserDetailResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *UserDetailResponse) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponse) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *UserDetailResponse) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserDetailResponse) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserDetailResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *UserDetailResponse) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *UserDetailResponse) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *UserDetailResponse) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *UserDetailResponse) UnsetDescription() {
	o.Description.Unset()
}

// GetDstOffset returns the DstOffset field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserDetailResponse) GetDstOffset() string {
	if o == nil || IsNil(o.DstOffset.Get()) {
		var ret string
		return ret
	}
	return *o.DstOffset.Get()
}

// GetDstOffsetOk returns a tuple with the DstOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserDetailResponse) GetDstOffsetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DstOffset.Get(), o.DstOffset.IsSet()
}

// HasDstOffset returns a boolean if a field has been set.
func (o *UserDetailResponse) HasDstOffset() bool {
	if o != nil && o.DstOffset.IsSet() {
		return true
	}

	return false
}

// SetDstOffset gets a reference to the given NullableString and assigns it to the DstOffset field.
func (o *UserDetailResponse) SetDstOffset(v string) {
	o.DstOffset.Set(&v)
}

// SetDstOffsetNil sets the value for DstOffset to be an explicit nil
func (o *UserDetailResponse) SetDstOffsetNil() {
	o.DstOffset.Set(nil)
}

// UnsetDstOffset ensures that no value is present for DstOffset, not even an explicit nil
func (o *UserDetailResponse) UnsetDstOffset() {
	o.DstOffset.Unset()
}

// GetEmail returns the Email field value
func (o *UserDetailResponse) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponse) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *UserDetailResponse) SetEmail(v string) {
	o.Email = v
}

// GetEmailAuthenticated returns the EmailAuthenticated field value
func (o *UserDetailResponse) GetEmailAuthenticated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EmailAuthenticated
}

// GetEmailAuthenticatedOk returns a tuple with the EmailAuthenticated field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponse) GetEmailAuthenticatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmailAuthenticated, true
}

// SetEmailAuthenticated sets field value
func (o *UserDetailResponse) SetEmailAuthenticated(v bool) {
	o.EmailAuthenticated = v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserDetailResponse) GetFirstName() string {
	if o == nil || IsNil(o.FirstName.Get()) {
		var ret string
		return ret
	}
	return *o.FirstName.Get()
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserDetailResponse) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstName.Get(), o.FirstName.IsSet()
}

// HasFirstName returns a boolean if a field has been set.
func (o *UserDetailResponse) HasFirstName() bool {
	if o != nil && o.FirstName.IsSet() {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given NullableString and assigns it to the FirstName field.
func (o *UserDetailResponse) SetFirstName(v string) {
	o.FirstName.Set(&v)
}

// SetFirstNameNil sets the value for FirstName to be an explicit nil
func (o *UserDetailResponse) SetFirstNameNil() {
	o.FirstName.Set(nil)
}

// UnsetFirstName ensures that no value is present for FirstName, not even an explicit nil
func (o *UserDetailResponse) UnsetFirstName() {
	o.FirstName.Unset()
}

// GetId returns the Id field value
func (o *UserDetailResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UserDetailResponse) SetId(v string) {
	o.Id = v
}

// GetLastLoginAt returns the LastLoginAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserDetailResponse) GetLastLoginAt() time.Time {
	if o == nil || IsNil(o.LastLoginAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LastLoginAt.Get()
}

// GetLastLoginAtOk returns a tuple with the LastLoginAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserDetailResponse) GetLastLoginAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastLoginAt.Get(), o.LastLoginAt.IsSet()
}

// HasLastLoginAt returns a boolean if a field has been set.
func (o *UserDetailResponse) HasLastLoginAt() bool {
	if o != nil && o.LastLoginAt.IsSet() {
		return true
	}

	return false
}

// SetLastLoginAt gets a reference to the given NullableTime and assigns it to the LastLoginAt field.
func (o *UserDetailResponse) SetLastLoginAt(v time.Time) {
	o.LastLoginAt.Set(&v)
}

// SetLastLoginAtNil sets the value for LastLoginAt to be an explicit nil
func (o *UserDetailResponse) SetLastLoginAtNil() {
	o.LastLoginAt.Set(nil)
}

// UnsetLastLoginAt ensures that no value is present for LastLoginAt, not even an explicit nil
func (o *UserDetailResponse) UnsetLastLoginAt() {
	o.LastLoginAt.Unset()
}

// GetLastName returns the LastName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserDetailResponse) GetLastName() string {
	if o == nil || IsNil(o.LastName.Get()) {
		var ret string
		return ret
	}
	return *o.LastName.Get()
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserDetailResponse) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastName.Get(), o.LastName.IsSet()
}

// HasLastName returns a boolean if a field has been set.
func (o *UserDetailResponse) HasLastName() bool {
	if o != nil && o.LastName.IsSet() {
		return true
	}

	return false
}

// SetLastName gets a reference to the given NullableString and assigns it to the LastName field.
func (o *UserDetailResponse) SetLastName(v string) {
	o.LastName.Set(&v)
}

// SetLastNameNil sets the value for LastName to be an explicit nil
func (o *UserDetailResponse) SetLastNameNil() {
	o.LastName.Set(nil)
}

// UnsetLastName ensures that no value is present for LastName, not even an explicit nil
func (o *UserDetailResponse) UnsetLastName() {
	o.LastName.Unset()
}

// GetLastPasswordUpdateAt returns the LastPasswordUpdateAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserDetailResponse) GetLastPasswordUpdateAt() time.Time {
	if o == nil || IsNil(o.LastPasswordUpdateAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LastPasswordUpdateAt.Get()
}

// GetLastPasswordUpdateAtOk returns a tuple with the LastPasswordUpdateAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserDetailResponse) GetLastPasswordUpdateAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastPasswordUpdateAt.Get(), o.LastPasswordUpdateAt.IsSet()
}

// HasLastPasswordUpdateAt returns a boolean if a field has been set.
func (o *UserDetailResponse) HasLastPasswordUpdateAt() bool {
	if o != nil && o.LastPasswordUpdateAt.IsSet() {
		return true
	}

	return false
}

// SetLastPasswordUpdateAt gets a reference to the given NullableTime and assigns it to the LastPasswordUpdateAt field.
func (o *UserDetailResponse) SetLastPasswordUpdateAt(v time.Time) {
	o.LastPasswordUpdateAt.Set(&v)
}

// SetLastPasswordUpdateAtNil sets the value for LastPasswordUpdateAt to be an explicit nil
func (o *UserDetailResponse) SetLastPasswordUpdateAtNil() {
	o.LastPasswordUpdateAt.Set(nil)
}

// UnsetLastPasswordUpdateAt ensures that no value is present for LastPasswordUpdateAt, not even an explicit nil
func (o *UserDetailResponse) UnsetLastPasswordUpdateAt() {
	o.LastPasswordUpdateAt.Unset()
}

// GetLoginId returns the LoginId field value
func (o *UserDetailResponse) GetLoginId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LoginId
}

// GetLoginIdOk returns a tuple with the LoginId field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponse) GetLoginIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoginId, true
}

// SetLoginId sets field value
func (o *UserDetailResponse) SetLoginId(v string) {
	o.LoginId = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *UserDetailResponse) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponse) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *UserDetailResponse) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *UserDetailResponse) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponse) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *UserDetailResponse) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetNationId returns the NationId field value
func (o *UserDetailResponse) GetNationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NationId
}

// GetNationIdOk returns a tuple with the NationId field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponse) GetNationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NationId, true
}

// SetNationId sets field value
func (o *UserDetailResponse) SetNationId(v string) {
	o.NationId = v
}

// GetPasswordReuseCount returns the PasswordReuseCount field value
func (o *UserDetailResponse) GetPasswordReuseCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PasswordReuseCount
}

// GetPasswordReuseCountOk returns a tuple with the PasswordReuseCount field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponse) GetPasswordReuseCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PasswordReuseCount, true
}

// SetPasswordReuseCount sets field value
func (o *UserDetailResponse) SetPasswordReuseCount(v int32) {
	o.PasswordReuseCount = v
}

// GetPhoneAuthenticated returns the PhoneAuthenticated field value
func (o *UserDetailResponse) GetPhoneAuthenticated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PhoneAuthenticated
}

// GetPhoneAuthenticatedOk returns a tuple with the PhoneAuthenticated field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponse) GetPhoneAuthenticatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PhoneAuthenticated, true
}

// SetPhoneAuthenticated sets field value
func (o *UserDetailResponse) SetPhoneAuthenticated(v bool) {
	o.PhoneAuthenticated = v
}

// GetPhoneNumber returns the PhoneNumber field value
func (o *UserDetailResponse) GetPhoneNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponse) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PhoneNumber, true
}

// SetPhoneNumber sets field value
func (o *UserDetailResponse) SetPhoneNumber(v string) {
	o.PhoneNumber = v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserDetailResponse) GetTimezone() string {
	if o == nil || IsNil(o.Timezone.Get()) {
		var ret string
		return ret
	}
	return *o.Timezone.Get()
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserDetailResponse) GetTimezoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timezone.Get(), o.Timezone.IsSet()
}

// HasTimezone returns a boolean if a field has been set.
func (o *UserDetailResponse) HasTimezone() bool {
	if o != nil && o.Timezone.IsSet() {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given NullableString and assigns it to the Timezone field.
func (o *UserDetailResponse) SetTimezone(v string) {
	o.Timezone.Set(&v)
}

// SetTimezoneNil sets the value for Timezone to be an explicit nil
func (o *UserDetailResponse) SetTimezoneNil() {
	o.Timezone.Set(nil)
}

// UnsetTimezone ensures that no value is present for Timezone, not even an explicit nil
func (o *UserDetailResponse) UnsetTimezone() {
	o.Timezone.Unset()
}

// GetType returns the Type field value
func (o *UserDetailResponse) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponse) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *UserDetailResponse) SetType(v string) {
	o.Type = v
}

// GetTzId returns the TzId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserDetailResponse) GetTzId() string {
	if o == nil || IsNil(o.TzId.Get()) {
		var ret string
		return ret
	}
	return *o.TzId.Get()
}

// GetTzIdOk returns a tuple with the TzId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserDetailResponse) GetTzIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TzId.Get(), o.TzId.IsSet()
}

// HasTzId returns a boolean if a field has been set.
func (o *UserDetailResponse) HasTzId() bool {
	if o != nil && o.TzId.IsSet() {
		return true
	}

	return false
}

// SetTzId gets a reference to the given NullableString and assigns it to the TzId field.
func (o *UserDetailResponse) SetTzId(v string) {
	o.TzId.Set(&v)
}

// SetTzIdNil sets the value for TzId to be an explicit nil
func (o *UserDetailResponse) SetTzIdNil() {
	o.TzId.Set(nil)
}

// UnsetTzId ensures that no value is present for TzId, not even an explicit nil
func (o *UserDetailResponse) UnsetTzId() {
	o.TzId.Unset()
}

// GetUserName returns the UserName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserDetailResponse) GetUserName() string {
	if o == nil || IsNil(o.UserName.Get()) {
		var ret string
		return ret
	}
	return *o.UserName.Get()
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserDetailResponse) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserName.Get(), o.UserName.IsSet()
}

// HasUserName returns a boolean if a field has been set.
func (o *UserDetailResponse) HasUserName() bool {
	if o != nil && o.UserName.IsSet() {
		return true
	}

	return false
}

// SetUserName gets a reference to the given NullableString and assigns it to the UserName field.
func (o *UserDetailResponse) SetUserName(v string) {
	o.UserName.Set(&v)
}

// SetUserNameNil sets the value for UserName to be an explicit nil
func (o *UserDetailResponse) SetUserNameNil() {
	o.UserName.Set(nil)
}

// UnsetUserName ensures that no value is present for UserName, not even an explicit nil
func (o *UserDetailResponse) UnsetUserName() {
	o.UserName.Unset()
}

// GetUtcOffset returns the UtcOffset field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserDetailResponse) GetUtcOffset() string {
	if o == nil || IsNil(o.UtcOffset.Get()) {
		var ret string
		return ret
	}
	return *o.UtcOffset.Get()
}

// GetUtcOffsetOk returns a tuple with the UtcOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserDetailResponse) GetUtcOffsetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UtcOffset.Get(), o.UtcOffset.IsSet()
}

// HasUtcOffset returns a boolean if a field has been set.
func (o *UserDetailResponse) HasUtcOffset() bool {
	if o != nil && o.UtcOffset.IsSet() {
		return true
	}

	return false
}

// SetUtcOffset gets a reference to the given NullableString and assigns it to the UtcOffset field.
func (o *UserDetailResponse) SetUtcOffset(v string) {
	o.UtcOffset.Set(&v)
}

// SetUtcOffsetNil sets the value for UtcOffset to be an explicit nil
func (o *UserDetailResponse) SetUtcOffsetNil() {
	o.UtcOffset.Set(nil)
}

// UnsetUtcOffset ensures that no value is present for UtcOffset, not even an explicit nil
func (o *UserDetailResponse) UnsetUtcOffset() {
	o.UtcOffset.Unset()
}

func (o UserDetailResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserDetailResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["access_control"] = o.AccessControl
	if o.AccountId.IsSet() {
		toSerialize["account_id"] = o.AccountId.Get()
	}
	if o.AccountName.IsSet() {
		toSerialize["account_name"] = o.AccountName.Get()
	}
	toSerialize["allowed_ip_addresses"] = o.AllowedIpAddresses
	if o.CompanyName.IsSet() {
		toSerialize["company_name"] = o.CompanyName.Get()
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DstOffset.IsSet() {
		toSerialize["dst_offset"] = o.DstOffset.Get()
	}
	toSerialize["email"] = o.Email
	toSerialize["email_authenticated"] = o.EmailAuthenticated
	if o.FirstName.IsSet() {
		toSerialize["first_name"] = o.FirstName.Get()
	}
	toSerialize["id"] = o.Id
	if o.LastLoginAt.IsSet() {
		toSerialize["last_login_at"] = o.LastLoginAt.Get()
	}
	if o.LastName.IsSet() {
		toSerialize["last_name"] = o.LastName.Get()
	}
	if o.LastPasswordUpdateAt.IsSet() {
		toSerialize["last_password_update_at"] = o.LastPasswordUpdateAt.Get()
	}
	toSerialize["login_id"] = o.LoginId
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	toSerialize["nation_id"] = o.NationId
	toSerialize["password_reuse_count"] = o.PasswordReuseCount
	toSerialize["phone_authenticated"] = o.PhoneAuthenticated
	toSerialize["phone_number"] = o.PhoneNumber
	if o.Timezone.IsSet() {
		toSerialize["timezone"] = o.Timezone.Get()
	}
	toSerialize["type"] = o.Type
	if o.TzId.IsSet() {
		toSerialize["tz_id"] = o.TzId.Get()
	}
	if o.UserName.IsSet() {
		toSerialize["user_name"] = o.UserName.Get()
	}
	if o.UtcOffset.IsSet() {
		toSerialize["utc_offset"] = o.UtcOffset.Get()
	}
	return toSerialize, nil
}

func (o *UserDetailResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"access_control",
		"allowed_ip_addresses",
		"created_at",
		"created_by",
		"email",
		"email_authenticated",
		"id",
		"login_id",
		"modified_at",
		"modified_by",
		"nation_id",
		"password_reuse_count",
		"phone_authenticated",
		"phone_number",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserDetailResponse := _UserDetailResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserDetailResponse)

	if err != nil {
		return err
	}

	*o = UserDetailResponse(varUserDetailResponse)

	return err
}

type NullableUserDetailResponse struct {
	value *UserDetailResponse
	isSet bool
}

func (v NullableUserDetailResponse) Get() *UserDetailResponse {
	return v.value
}

func (v *NullableUserDetailResponse) Set(val *UserDetailResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUserDetailResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUserDetailResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserDetailResponse(val *UserDetailResponse) *NullableUserDetailResponse {
	return &NullableUserDetailResponse{value: val, isSet: true}
}

func (v NullableUserDetailResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserDetailResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
