/*
SCP IAM Service

SCP IAM Service

API version: 0.0.1.dev1432
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"encoding/json"
	"fmt"
)

// AccountRequestScopeEnum the model 'AccountRequestScopeEnum'
type AccountRequestScopeEnum string

// List of AccountRequestScopeEnum
const (
	ACCOUNTREQUESTSCOPEENUM_ADMIN           AccountRequestScopeEnum = "ADMIN"
	ACCOUNTREQUESTSCOPEENUM_ACCOUNT_MANAGER AccountRequestScopeEnum = "ACCOUNT_MANAGER"
	ACCOUNTREQUESTSCOPEENUM_ACCOUNT_USER    AccountRequestScopeEnum = "ACCOUNT_USER"
)

// All allowed values of AccountRequestScopeEnum enum
var AllowedAccountRequestScopeEnumEnumValues = []AccountRequestScopeEnum{
	"ADMIN",
	"ACCOUNT_MANAGER",
	"ACCOUNT_USER",
}

func (v *AccountRequestScopeEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AccountRequestScopeEnum(value)
	for _, existing := range AllowedAccountRequestScopeEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AccountRequestScopeEnum", value)
}

// NewAccountRequestScopeEnumFromValue returns a pointer to a valid AccountRequestScopeEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAccountRequestScopeEnumFromValue(v string) (*AccountRequestScopeEnum, error) {
	ev := AccountRequestScopeEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AccountRequestScopeEnum: valid values are %v", v, AllowedAccountRequestScopeEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AccountRequestScopeEnum) IsValid() bool {
	for _, existing := range AllowedAccountRequestScopeEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AccountRequestScopeEnum value
func (v AccountRequestScopeEnum) Ptr() *AccountRequestScopeEnum {
	return &v
}

type NullableAccountRequestScopeEnum struct {
	value *AccountRequestScopeEnum
	isSet bool
}

func (v NullableAccountRequestScopeEnum) Get() *AccountRequestScopeEnum {
	return v.value
}

func (v *NullableAccountRequestScopeEnum) Set(val *AccountRequestScopeEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountRequestScopeEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountRequestScopeEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountRequestScopeEnum(val *AccountRequestScopeEnum) *NullableAccountRequestScopeEnum {
	return &NullableAccountRequestScopeEnum{value: val, isSet: true}
}

func (v NullableAccountRequestScopeEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountRequestScopeEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
