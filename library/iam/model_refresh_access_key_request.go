/*
SCP IAM Service

SCP IAM Service

API version: 0.0.1.dev1432
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"encoding/json"
)

// checks if the RefreshAccessKeyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RefreshAccessKeyRequest{}

// RefreshAccessKeyRequest struct for RefreshAccessKeyRequest
type RefreshAccessKeyRequest struct {
	AccessKey NullableString `json:"access_key,omitempty"`
}

// NewRefreshAccessKeyRequest instantiates a new RefreshAccessKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRefreshAccessKeyRequest() *RefreshAccessKeyRequest {
	this := RefreshAccessKeyRequest{}
	return &this
}

// NewRefreshAccessKeyRequestWithDefaults instantiates a new RefreshAccessKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRefreshAccessKeyRequestWithDefaults() *RefreshAccessKeyRequest {
	this := RefreshAccessKeyRequest{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RefreshAccessKeyRequest) GetAccessKey() string {
	if o == nil || IsNil(o.AccessKey.Get()) {
		var ret string
		return ret
	}
	return *o.AccessKey.Get()
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RefreshAccessKeyRequest) GetAccessKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessKey.Get(), o.AccessKey.IsSet()
}

// HasAccessKey returns a boolean if a field has been set.
func (o *RefreshAccessKeyRequest) HasAccessKey() bool {
	if o != nil && o.AccessKey.IsSet() {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given NullableString and assigns it to the AccessKey field.
func (o *RefreshAccessKeyRequest) SetAccessKey(v string) {
	o.AccessKey.Set(&v)
}

// SetAccessKeyNil sets the value for AccessKey to be an explicit nil
func (o *RefreshAccessKeyRequest) SetAccessKeyNil() {
	o.AccessKey.Set(nil)
}

// UnsetAccessKey ensures that no value is present for AccessKey, not even an explicit nil
func (o *RefreshAccessKeyRequest) UnsetAccessKey() {
	o.AccessKey.Unset()
}

func (o RefreshAccessKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RefreshAccessKeyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKey.IsSet() {
		toSerialize["access_key"] = o.AccessKey.Get()
	}
	return toSerialize, nil
}

type NullableRefreshAccessKeyRequest struct {
	value *RefreshAccessKeyRequest
	isSet bool
}

func (v NullableRefreshAccessKeyRequest) Get() *RefreshAccessKeyRequest {
	return v.value
}

func (v *NullableRefreshAccessKeyRequest) Set(val *RefreshAccessKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRefreshAccessKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRefreshAccessKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRefreshAccessKeyRequest(val *RefreshAccessKeyRequest) *NullableRefreshAccessKeyRequest {
	return &NullableRefreshAccessKeyRequest{value: val, isSet: true}
}

func (v NullableRefreshAccessKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRefreshAccessKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
