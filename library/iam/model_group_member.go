/*
SCP IAM Service

SCP IAM Service

API version: 0.0.1.dev1432
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the GroupMember type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupMember{}

// GroupMember struct for GroupMember
type GroupMember struct {
	// 생성 일시
	CreatedAt time.Time `json:"created_at"`
	// 생성자
	CreatedBy string `json:"created_by"`
	// 생성 일시
	CreatorCreatedAt *time.Time `json:"creator_created_at,omitempty"`
	// 생성자 Email
	CreatorEmail       string       `json:"creator_email"`
	CreatorLastLoginAt NullableTime `json:"creator_last_login_at,omitempty"`
	// 생성자 성, 이름
	CreatorName string `json:"creator_name"`
	// Group names
	GroupNames []string `json:"group_names,omitempty"`
	// 생성 일시
	UserCreatedAt *time.Time `json:"user_created_at,omitempty"`
	// User Email
	UserEmail string `json:"user_email"`
	// User ID
	UserId          string       `json:"user_id"`
	UserLastLoginAt NullableTime `json:"user_last_login_at,omitempty"`
	// User 성, 이름
	UserName string `json:"user_name"`
}

type _GroupMember GroupMember

// NewGroupMember instantiates a new GroupMember object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupMember(createdAt time.Time, createdBy string, creatorEmail string, creatorName string, userEmail string, userId string, userName string) *GroupMember {
	this := GroupMember{}
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.CreatorEmail = creatorEmail
	this.CreatorName = creatorName
	this.UserEmail = userEmail
	this.UserId = userId
	this.UserName = userName
	return &this
}

// NewGroupMemberWithDefaults instantiates a new GroupMember object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupMemberWithDefaults() *GroupMember {
	this := GroupMember{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *GroupMember) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *GroupMember) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *GroupMember) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *GroupMember) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *GroupMember) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *GroupMember) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetCreatorCreatedAt returns the CreatorCreatedAt field value if set, zero value otherwise.
func (o *GroupMember) GetCreatorCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatorCreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatorCreatedAt
}

// GetCreatorCreatedAtOk returns a tuple with the CreatorCreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupMember) GetCreatorCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatorCreatedAt) {
		return nil, false
	}
	return o.CreatorCreatedAt, true
}

// HasCreatorCreatedAt returns a boolean if a field has been set.
func (o *GroupMember) HasCreatorCreatedAt() bool {
	if o != nil && !IsNil(o.CreatorCreatedAt) {
		return true
	}

	return false
}

// SetCreatorCreatedAt gets a reference to the given time.Time and assigns it to the CreatorCreatedAt field.
func (o *GroupMember) SetCreatorCreatedAt(v time.Time) {
	o.CreatorCreatedAt = &v
}

// GetCreatorEmail returns the CreatorEmail field value
func (o *GroupMember) GetCreatorEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatorEmail
}

// GetCreatorEmailOk returns a tuple with the CreatorEmail field value
// and a boolean to check if the value has been set.
func (o *GroupMember) GetCreatorEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorEmail, true
}

// SetCreatorEmail sets field value
func (o *GroupMember) SetCreatorEmail(v string) {
	o.CreatorEmail = v
}

// GetCreatorLastLoginAt returns the CreatorLastLoginAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GroupMember) GetCreatorLastLoginAt() time.Time {
	if o == nil || IsNil(o.CreatorLastLoginAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CreatorLastLoginAt.Get()
}

// GetCreatorLastLoginAtOk returns a tuple with the CreatorLastLoginAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupMember) GetCreatorLastLoginAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatorLastLoginAt.Get(), o.CreatorLastLoginAt.IsSet()
}

// HasCreatorLastLoginAt returns a boolean if a field has been set.
func (o *GroupMember) HasCreatorLastLoginAt() bool {
	if o != nil && o.CreatorLastLoginAt.IsSet() {
		return true
	}

	return false
}

// SetCreatorLastLoginAt gets a reference to the given NullableTime and assigns it to the CreatorLastLoginAt field.
func (o *GroupMember) SetCreatorLastLoginAt(v time.Time) {
	o.CreatorLastLoginAt.Set(&v)
}

// SetCreatorLastLoginAtNil sets the value for CreatorLastLoginAt to be an explicit nil
func (o *GroupMember) SetCreatorLastLoginAtNil() {
	o.CreatorLastLoginAt.Set(nil)
}

// UnsetCreatorLastLoginAt ensures that no value is present for CreatorLastLoginAt, not even an explicit nil
func (o *GroupMember) UnsetCreatorLastLoginAt() {
	o.CreatorLastLoginAt.Unset()
}

// GetCreatorName returns the CreatorName field value
func (o *GroupMember) GetCreatorName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatorName
}

// GetCreatorNameOk returns a tuple with the CreatorName field value
// and a boolean to check if the value has been set.
func (o *GroupMember) GetCreatorNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorName, true
}

// SetCreatorName sets field value
func (o *GroupMember) SetCreatorName(v string) {
	o.CreatorName = v
}

// GetGroupNames returns the GroupNames field value if set, zero value otherwise.
func (o *GroupMember) GetGroupNames() []string {
	if o == nil || IsNil(o.GroupNames) {
		var ret []string
		return ret
	}
	return o.GroupNames
}

// GetGroupNamesOk returns a tuple with the GroupNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupMember) GetGroupNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupNames) {
		return nil, false
	}
	return o.GroupNames, true
}

// HasGroupNames returns a boolean if a field has been set.
func (o *GroupMember) HasGroupNames() bool {
	if o != nil && !IsNil(o.GroupNames) {
		return true
	}

	return false
}

// SetGroupNames gets a reference to the given []string and assigns it to the GroupNames field.
func (o *GroupMember) SetGroupNames(v []string) {
	o.GroupNames = v
}

// GetUserCreatedAt returns the UserCreatedAt field value if set, zero value otherwise.
func (o *GroupMember) GetUserCreatedAt() time.Time {
	if o == nil || IsNil(o.UserCreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UserCreatedAt
}

// GetUserCreatedAtOk returns a tuple with the UserCreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupMember) GetUserCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UserCreatedAt) {
		return nil, false
	}
	return o.UserCreatedAt, true
}

// HasUserCreatedAt returns a boolean if a field has been set.
func (o *GroupMember) HasUserCreatedAt() bool {
	if o != nil && !IsNil(o.UserCreatedAt) {
		return true
	}

	return false
}

// SetUserCreatedAt gets a reference to the given time.Time and assigns it to the UserCreatedAt field.
func (o *GroupMember) SetUserCreatedAt(v time.Time) {
	o.UserCreatedAt = &v
}

// GetUserEmail returns the UserEmail field value
func (o *GroupMember) GetUserEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserEmail
}

// GetUserEmailOk returns a tuple with the UserEmail field value
// and a boolean to check if the value has been set.
func (o *GroupMember) GetUserEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserEmail, true
}

// SetUserEmail sets field value
func (o *GroupMember) SetUserEmail(v string) {
	o.UserEmail = v
}

// GetUserId returns the UserId field value
func (o *GroupMember) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *GroupMember) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *GroupMember) SetUserId(v string) {
	o.UserId = v
}

// GetUserLastLoginAt returns the UserLastLoginAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GroupMember) GetUserLastLoginAt() time.Time {
	if o == nil || IsNil(o.UserLastLoginAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.UserLastLoginAt.Get()
}

// GetUserLastLoginAtOk returns a tuple with the UserLastLoginAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupMember) GetUserLastLoginAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserLastLoginAt.Get(), o.UserLastLoginAt.IsSet()
}

// HasUserLastLoginAt returns a boolean if a field has been set.
func (o *GroupMember) HasUserLastLoginAt() bool {
	if o != nil && o.UserLastLoginAt.IsSet() {
		return true
	}

	return false
}

// SetUserLastLoginAt gets a reference to the given NullableTime and assigns it to the UserLastLoginAt field.
func (o *GroupMember) SetUserLastLoginAt(v time.Time) {
	o.UserLastLoginAt.Set(&v)
}

// SetUserLastLoginAtNil sets the value for UserLastLoginAt to be an explicit nil
func (o *GroupMember) SetUserLastLoginAtNil() {
	o.UserLastLoginAt.Set(nil)
}

// UnsetUserLastLoginAt ensures that no value is present for UserLastLoginAt, not even an explicit nil
func (o *GroupMember) UnsetUserLastLoginAt() {
	o.UserLastLoginAt.Unset()
}

// GetUserName returns the UserName field value
func (o *GroupMember) GetUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value
// and a boolean to check if the value has been set.
func (o *GroupMember) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserName, true
}

// SetUserName sets field value
func (o *GroupMember) SetUserName(v string) {
	o.UserName = v
}

func (o GroupMember) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupMember) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	if !IsNil(o.CreatorCreatedAt) {
		toSerialize["creator_created_at"] = o.CreatorCreatedAt
	}
	toSerialize["creator_email"] = o.CreatorEmail
	if o.CreatorLastLoginAt.IsSet() {
		toSerialize["creator_last_login_at"] = o.CreatorLastLoginAt.Get()
	}
	toSerialize["creator_name"] = o.CreatorName
	if !IsNil(o.GroupNames) {
		toSerialize["group_names"] = o.GroupNames
	}
	if !IsNil(o.UserCreatedAt) {
		toSerialize["user_created_at"] = o.UserCreatedAt
	}
	toSerialize["user_email"] = o.UserEmail
	toSerialize["user_id"] = o.UserId
	if o.UserLastLoginAt.IsSet() {
		toSerialize["user_last_login_at"] = o.UserLastLoginAt.Get()
	}
	toSerialize["user_name"] = o.UserName
	return toSerialize, nil
}

func (o *GroupMember) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"created_by",
		"creator_email",
		"creator_name",
		"user_email",
		"user_id",
		"user_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGroupMember := _GroupMember{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGroupMember)

	if err != nil {
		return err
	}

	*o = GroupMember(varGroupMember)

	return err
}

type NullableGroupMember struct {
	value *GroupMember
	isSet bool
}

func (v NullableGroupMember) Get() *GroupMember {
	return v.value
}

func (v *NullableGroupMember) Set(val *GroupMember) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupMember) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupMember(val *GroupMember) *NullableGroupMember {
	return &NullableGroupMember{value: val, isSet: true}
}

func (v NullableGroupMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
