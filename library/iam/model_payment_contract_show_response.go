/*
SCP IAM Service

SCP IAM Service

API version: 0.0.1.dev1432
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PaymentContractShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentContractShowResponse{}

// PaymentContractShowResponse struct for PaymentContractShowResponse
type PaymentContractShowResponse struct {
	PaymentContract PaymentContract `json:"payment_contract"`
}

type _PaymentContractShowResponse PaymentContractShowResponse

// NewPaymentContractShowResponse instantiates a new PaymentContractShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentContractShowResponse(paymentContract PaymentContract) *PaymentContractShowResponse {
	this := PaymentContractShowResponse{}
	this.PaymentContract = paymentContract
	return &this
}

// NewPaymentContractShowResponseWithDefaults instantiates a new PaymentContractShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentContractShowResponseWithDefaults() *PaymentContractShowResponse {
	this := PaymentContractShowResponse{}
	return &this
}

// GetPaymentContract returns the PaymentContract field value
func (o *PaymentContractShowResponse) GetPaymentContract() PaymentContract {
	if o == nil {
		var ret PaymentContract
		return ret
	}

	return o.PaymentContract
}

// GetPaymentContractOk returns a tuple with the PaymentContract field value
// and a boolean to check if the value has been set.
func (o *PaymentContractShowResponse) GetPaymentContractOk() (*PaymentContract, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentContract, true
}

// SetPaymentContract sets field value
func (o *PaymentContractShowResponse) SetPaymentContract(v PaymentContract) {
	o.PaymentContract = v
}

func (o PaymentContractShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentContractShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["payment_contract"] = o.PaymentContract
	return toSerialize, nil
}

func (o *PaymentContractShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"payment_contract",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentContractShowResponse := _PaymentContractShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaymentContractShowResponse)

	if err != nil {
		return err
	}

	*o = PaymentContractShowResponse(varPaymentContractShowResponse)

	return err
}

type NullablePaymentContractShowResponse struct {
	value *PaymentContractShowResponse
	isSet bool
}

func (v NullablePaymentContractShowResponse) Get() *PaymentContractShowResponse {
	return v.value
}

func (v *NullablePaymentContractShowResponse) Set(val *PaymentContractShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentContractShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentContractShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentContractShowResponse(val *PaymentContractShowResponse) *NullablePaymentContractShowResponse {
	return &NullablePaymentContractShowResponse{value: val, isSet: true}
}

func (v NullablePaymentContractShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentContractShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
