/*
SCP IAM Service

SCP IAM Service

API version: 0.0.1.dev1432
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CompanyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompanyResponse{}

// CompanyResponse struct for CompanyResponse
type CompanyResponse struct {
	// 비즈니스 파트너 ID
	BusinessPartnerId string `json:"business_partner_id"`
	// 비즈니스 유형
	BusinessType string `json:"business_type"`
	// 도시 이름
	CityName string `json:"city_name"`
	// 국가 코드
	CountryCode string `json:"country_code"`
	// 국가 이름
	CountryName string `json:"country_name"`
	// 국가 전화번호
	CountryTelNo string `json:"country_tel_no"`
	// 회사이름 영문
	EnName string `json:"en_name"`
	// 회사 팩스번호
	FaxNo string `json:"fax_no"`
	// ID
	Id string `json:"id"`
	// 회사이름
	Name string `json:"name"`
	// 사업자등록번호
	RegistrationNumber string `json:"registration_number"`
	// 회사대표 이름
	RepresentativeName string `json:"representative_name"`
	// 도로 이름
	StreetName string `json:"street_name"`
	// 회사 전화번호
	TelNo string `json:"tel_no"`
	// 우편번호
	ZipCode string `json:"zip_code"`
}

type _CompanyResponse CompanyResponse

// NewCompanyResponse instantiates a new CompanyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyResponse(businessPartnerId string, businessType string, cityName string, countryCode string, countryName string, countryTelNo string, enName string, faxNo string, id string, name string, registrationNumber string, representativeName string, streetName string, telNo string, zipCode string) *CompanyResponse {
	this := CompanyResponse{}
	this.BusinessPartnerId = businessPartnerId
	this.BusinessType = businessType
	this.CityName = cityName
	this.CountryCode = countryCode
	this.CountryName = countryName
	this.CountryTelNo = countryTelNo
	this.EnName = enName
	this.FaxNo = faxNo
	this.Id = id
	this.Name = name
	this.RegistrationNumber = registrationNumber
	this.RepresentativeName = representativeName
	this.StreetName = streetName
	this.TelNo = telNo
	this.ZipCode = zipCode
	return &this
}

// NewCompanyResponseWithDefaults instantiates a new CompanyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyResponseWithDefaults() *CompanyResponse {
	this := CompanyResponse{}
	return &this
}

// GetBusinessPartnerId returns the BusinessPartnerId field value
func (o *CompanyResponse) GetBusinessPartnerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BusinessPartnerId
}

// GetBusinessPartnerIdOk returns a tuple with the BusinessPartnerId field value
// and a boolean to check if the value has been set.
func (o *CompanyResponse) GetBusinessPartnerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BusinessPartnerId, true
}

// SetBusinessPartnerId sets field value
func (o *CompanyResponse) SetBusinessPartnerId(v string) {
	o.BusinessPartnerId = v
}

// GetBusinessType returns the BusinessType field value
func (o *CompanyResponse) GetBusinessType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BusinessType
}

// GetBusinessTypeOk returns a tuple with the BusinessType field value
// and a boolean to check if the value has been set.
func (o *CompanyResponse) GetBusinessTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BusinessType, true
}

// SetBusinessType sets field value
func (o *CompanyResponse) SetBusinessType(v string) {
	o.BusinessType = v
}

// GetCityName returns the CityName field value
func (o *CompanyResponse) GetCityName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CityName
}

// GetCityNameOk returns a tuple with the CityName field value
// and a boolean to check if the value has been set.
func (o *CompanyResponse) GetCityNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CityName, true
}

// SetCityName sets field value
func (o *CompanyResponse) SetCityName(v string) {
	o.CityName = v
}

// GetCountryCode returns the CountryCode field value
func (o *CompanyResponse) GetCountryCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value
// and a boolean to check if the value has been set.
func (o *CompanyResponse) GetCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CountryCode, true
}

// SetCountryCode sets field value
func (o *CompanyResponse) SetCountryCode(v string) {
	o.CountryCode = v
}

// GetCountryName returns the CountryName field value
func (o *CompanyResponse) GetCountryName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CountryName
}

// GetCountryNameOk returns a tuple with the CountryName field value
// and a boolean to check if the value has been set.
func (o *CompanyResponse) GetCountryNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CountryName, true
}

// SetCountryName sets field value
func (o *CompanyResponse) SetCountryName(v string) {
	o.CountryName = v
}

// GetCountryTelNo returns the CountryTelNo field value
func (o *CompanyResponse) GetCountryTelNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CountryTelNo
}

// GetCountryTelNoOk returns a tuple with the CountryTelNo field value
// and a boolean to check if the value has been set.
func (o *CompanyResponse) GetCountryTelNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CountryTelNo, true
}

// SetCountryTelNo sets field value
func (o *CompanyResponse) SetCountryTelNo(v string) {
	o.CountryTelNo = v
}

// GetEnName returns the EnName field value
func (o *CompanyResponse) GetEnName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnName
}

// GetEnNameOk returns a tuple with the EnName field value
// and a boolean to check if the value has been set.
func (o *CompanyResponse) GetEnNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnName, true
}

// SetEnName sets field value
func (o *CompanyResponse) SetEnName(v string) {
	o.EnName = v
}

// GetFaxNo returns the FaxNo field value
func (o *CompanyResponse) GetFaxNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FaxNo
}

// GetFaxNoOk returns a tuple with the FaxNo field value
// and a boolean to check if the value has been set.
func (o *CompanyResponse) GetFaxNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FaxNo, true
}

// SetFaxNo sets field value
func (o *CompanyResponse) SetFaxNo(v string) {
	o.FaxNo = v
}

// GetId returns the Id field value
func (o *CompanyResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CompanyResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CompanyResponse) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *CompanyResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CompanyResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CompanyResponse) SetName(v string) {
	o.Name = v
}

// GetRegistrationNumber returns the RegistrationNumber field value
func (o *CompanyResponse) GetRegistrationNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RegistrationNumber
}

// GetRegistrationNumberOk returns a tuple with the RegistrationNumber field value
// and a boolean to check if the value has been set.
func (o *CompanyResponse) GetRegistrationNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RegistrationNumber, true
}

// SetRegistrationNumber sets field value
func (o *CompanyResponse) SetRegistrationNumber(v string) {
	o.RegistrationNumber = v
}

// GetRepresentativeName returns the RepresentativeName field value
func (o *CompanyResponse) GetRepresentativeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RepresentativeName
}

// GetRepresentativeNameOk returns a tuple with the RepresentativeName field value
// and a boolean to check if the value has been set.
func (o *CompanyResponse) GetRepresentativeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RepresentativeName, true
}

// SetRepresentativeName sets field value
func (o *CompanyResponse) SetRepresentativeName(v string) {
	o.RepresentativeName = v
}

// GetStreetName returns the StreetName field value
func (o *CompanyResponse) GetStreetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StreetName
}

// GetStreetNameOk returns a tuple with the StreetName field value
// and a boolean to check if the value has been set.
func (o *CompanyResponse) GetStreetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StreetName, true
}

// SetStreetName sets field value
func (o *CompanyResponse) SetStreetName(v string) {
	o.StreetName = v
}

// GetTelNo returns the TelNo field value
func (o *CompanyResponse) GetTelNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TelNo
}

// GetTelNoOk returns a tuple with the TelNo field value
// and a boolean to check if the value has been set.
func (o *CompanyResponse) GetTelNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TelNo, true
}

// SetTelNo sets field value
func (o *CompanyResponse) SetTelNo(v string) {
	o.TelNo = v
}

// GetZipCode returns the ZipCode field value
func (o *CompanyResponse) GetZipCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZipCode
}

// GetZipCodeOk returns a tuple with the ZipCode field value
// and a boolean to check if the value has been set.
func (o *CompanyResponse) GetZipCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZipCode, true
}

// SetZipCode sets field value
func (o *CompanyResponse) SetZipCode(v string) {
	o.ZipCode = v
}

func (o CompanyResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompanyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["business_partner_id"] = o.BusinessPartnerId
	toSerialize["business_type"] = o.BusinessType
	toSerialize["city_name"] = o.CityName
	toSerialize["country_code"] = o.CountryCode
	toSerialize["country_name"] = o.CountryName
	toSerialize["country_tel_no"] = o.CountryTelNo
	toSerialize["en_name"] = o.EnName
	toSerialize["fax_no"] = o.FaxNo
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["registration_number"] = o.RegistrationNumber
	toSerialize["representative_name"] = o.RepresentativeName
	toSerialize["street_name"] = o.StreetName
	toSerialize["tel_no"] = o.TelNo
	toSerialize["zip_code"] = o.ZipCode
	return toSerialize, nil
}

func (o *CompanyResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"business_partner_id",
		"business_type",
		"city_name",
		"country_code",
		"country_name",
		"country_tel_no",
		"en_name",
		"fax_no",
		"id",
		"name",
		"registration_number",
		"representative_name",
		"street_name",
		"tel_no",
		"zip_code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCompanyResponse := _CompanyResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCompanyResponse)

	if err != nil {
		return err
	}

	*o = CompanyResponse(varCompanyResponse)

	return err
}

type NullableCompanyResponse struct {
	value *CompanyResponse
	isSet bool
}

func (v NullableCompanyResponse) Get() *CompanyResponse {
	return v.value
}

func (v *NullableCompanyResponse) Set(val *CompanyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyResponse(val *CompanyResponse) *NullableCompanyResponse {
	return &NullableCompanyResponse{value: val, isSet: true}
}

func (v NullableCompanyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
