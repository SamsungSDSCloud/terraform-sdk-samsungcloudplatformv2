/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6894
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PublicipCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicipCreateRequest{}

// PublicipCreateRequest struct for PublicipCreateRequest
type PublicipCreateRequest struct {
	Description NullableString `json:"description,omitempty"`
	// Tag List
	Tags []Tag `json:"tags,omitempty"`
	// PublicIP Type
	Type PublicipType `json:"type"`
}

type _PublicipCreateRequest PublicipCreateRequest

// NewPublicipCreateRequest instantiates a new PublicipCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicipCreateRequest(type_ PublicipType) *PublicipCreateRequest {
	this := PublicipCreateRequest{}
	this.Type = type_
	return &this
}

// NewPublicipCreateRequestWithDefaults instantiates a new PublicipCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicipCreateRequestWithDefaults() *PublicipCreateRequest {
	this := PublicipCreateRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PublicipCreateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicipCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *PublicipCreateRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *PublicipCreateRequest) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *PublicipCreateRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *PublicipCreateRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PublicipCreateRequest) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicipCreateRequest) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PublicipCreateRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *PublicipCreateRequest) SetTags(v []Tag) {
	o.Tags = v
}

// GetType returns the Type field value
func (o *PublicipCreateRequest) GetType() PublicipType {
	if o == nil {
		var ret PublicipType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PublicipCreateRequest) GetTypeOk() (*PublicipType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PublicipCreateRequest) SetType(v PublicipType) {
	o.Type = v
}

func (o PublicipCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicipCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *PublicipCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicipCreateRequest := _PublicipCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicipCreateRequest)

	if err != nil {
		return err
	}

	*o = PublicipCreateRequest(varPublicipCreateRequest)

	return err
}

type NullablePublicipCreateRequest struct {
	value *PublicipCreateRequest
	isSet bool
}

func (v NullablePublicipCreateRequest) Get() *PublicipCreateRequest {
	return v.value
}

func (v *NullablePublicipCreateRequest) Set(val *PublicipCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicipCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicipCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicipCreateRequest(val *PublicipCreateRequest) *NullablePublicipCreateRequest {
	return &NullablePublicipCreateRequest{value: val, isSet: true}
}

func (v NullablePublicipCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicipCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
