/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6894
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreatableVpcDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatableVpcDetail{}

// CreatableVpcDetail struct for CreatableVpcDetail
type CreatableVpcDetail struct {
	// VPC Id
	VpcId string `json:"vpc_id"`
	// VPC Name
	VpcName string `json:"vpc_name"`
}

type _CreatableVpcDetail CreatableVpcDetail

// NewCreatableVpcDetail instantiates a new CreatableVpcDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatableVpcDetail(vpcId string, vpcName string) *CreatableVpcDetail {
	this := CreatableVpcDetail{}
	this.VpcId = vpcId
	this.VpcName = vpcName
	return &this
}

// NewCreatableVpcDetailWithDefaults instantiates a new CreatableVpcDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatableVpcDetailWithDefaults() *CreatableVpcDetail {
	this := CreatableVpcDetail{}
	return &this
}

// GetVpcId returns the VpcId field value
func (o *CreatableVpcDetail) GetVpcId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VpcId
}

// GetVpcIdOk returns a tuple with the VpcId field value
// and a boolean to check if the value has been set.
func (o *CreatableVpcDetail) GetVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VpcId, true
}

// SetVpcId sets field value
func (o *CreatableVpcDetail) SetVpcId(v string) {
	o.VpcId = v
}

// GetVpcName returns the VpcName field value
func (o *CreatableVpcDetail) GetVpcName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VpcName
}

// GetVpcNameOk returns a tuple with the VpcName field value
// and a boolean to check if the value has been set.
func (o *CreatableVpcDetail) GetVpcNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VpcName, true
}

// SetVpcName sets field value
func (o *CreatableVpcDetail) SetVpcName(v string) {
	o.VpcName = v
}

func (o CreatableVpcDetail) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatableVpcDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["vpc_id"] = o.VpcId
	toSerialize["vpc_name"] = o.VpcName
	return toSerialize, nil
}

func (o *CreatableVpcDetail) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"vpc_id",
		"vpc_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreatableVpcDetail := _CreatableVpcDetail{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreatableVpcDetail)

	if err != nil {
		return err
	}

	*o = CreatableVpcDetail(varCreatableVpcDetail)

	return err
}

type NullableCreatableVpcDetail struct {
	value *CreatableVpcDetail
	isSet bool
}

func (v NullableCreatableVpcDetail) Get() *CreatableVpcDetail {
	return v.value
}

func (v *NullableCreatableVpcDetail) Set(val *CreatableVpcDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatableVpcDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatableVpcDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatableVpcDetail(val *CreatableVpcDetail) *NullableCreatableVpcDetail {
	return &NullableCreatableVpcDetail{value: val, isSet: true}
}

func (v NullableCreatableVpcDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatableVpcDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
