/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6894
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"encoding/json"
	"fmt"
)

// NatGatewayState the model 'NatGatewayState'
type NatGatewayState string

// List of NatGatewayState
const (
	NATGATEWAYSTATE_CREATING NatGatewayState = "CREATING"
	NATGATEWAYSTATE_ACTIVE   NatGatewayState = "ACTIVE"
	NATGATEWAYSTATE_DELETING NatGatewayState = "DELETING"
	NATGATEWAYSTATE_DELETED  NatGatewayState = "DELETED"
	NATGATEWAYSTATE_ERROR    NatGatewayState = "ERROR"
)

// All allowed values of NatGatewayState enum
var AllowedNatGatewayStateEnumValues = []NatGatewayState{
	"CREATING",
	"ACTIVE",
	"DELETING",
	"DELETED",
	"ERROR",
}

func (v *NatGatewayState) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := NatGatewayState(value)
	for _, existing := range AllowedNatGatewayStateEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid NatGatewayState", value)
}

// NewNatGatewayStateFromValue returns a pointer to a valid NatGatewayState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewNatGatewayStateFromValue(v string) (*NatGatewayState, error) {
	ev := NatGatewayState(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for NatGatewayState: valid values are %v", v, AllowedNatGatewayStateEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v NatGatewayState) IsValid() bool {
	for _, existing := range AllowedNatGatewayStateEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to NatGatewayState value
func (v NatGatewayState) Ptr() *NatGatewayState {
	return &v
}

type NullableNatGatewayState struct {
	value *NatGatewayState
	isSet bool
}

func (v NullableNatGatewayState) Get() *NatGatewayState {
	return v.value
}

func (v *NullableNatGatewayState) Set(val *NatGatewayState) {
	v.value = val
	v.isSet = true
}

func (v NullableNatGatewayState) IsSet() bool {
	return v.isSet
}

func (v *NullableNatGatewayState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNatGatewayState(val *NatGatewayState) *NullableNatGatewayState {
	return &NullableNatGatewayState{value: val, isSet: true}
}

func (v NullableNatGatewayState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNatGatewayState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
