/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6894
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the InternetGatewayCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InternetGatewayCreateRequest{}

// InternetGatewayCreateRequest struct for InternetGatewayCreateRequest
type InternetGatewayCreateRequest struct {
	Description NullableString `json:"description,omitempty"`
	// Firewall Enable
	FirewallEnabled *bool `json:"firewall_enabled,omitempty"`
	// Firewall Loggable
	FirewallLoggable *bool `json:"firewall_loggable,omitempty"`
	// Tag List
	Tags []Tag `json:"tags,omitempty"`
	// Internet Gateway Type
	Type InternetGatewayType `json:"type"`
	// VPC Id
	VpcId string `json:"vpc_id"`
}

type _InternetGatewayCreateRequest InternetGatewayCreateRequest

// NewInternetGatewayCreateRequest instantiates a new InternetGatewayCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternetGatewayCreateRequest(type_ InternetGatewayType, vpcId string) *InternetGatewayCreateRequest {
	this := InternetGatewayCreateRequest{}
	var firewallEnabled bool = false
	this.FirewallEnabled = &firewallEnabled
	var firewallLoggable bool = false
	this.FirewallLoggable = &firewallLoggable
	this.Type = type_
	this.VpcId = vpcId
	return &this
}

// NewInternetGatewayCreateRequestWithDefaults instantiates a new InternetGatewayCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternetGatewayCreateRequestWithDefaults() *InternetGatewayCreateRequest {
	this := InternetGatewayCreateRequest{}
	var firewallEnabled bool = false
	this.FirewallEnabled = &firewallEnabled
	var firewallLoggable bool = false
	this.FirewallLoggable = &firewallLoggable
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InternetGatewayCreateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InternetGatewayCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *InternetGatewayCreateRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *InternetGatewayCreateRequest) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *InternetGatewayCreateRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *InternetGatewayCreateRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetFirewallEnabled returns the FirewallEnabled field value if set, zero value otherwise.
func (o *InternetGatewayCreateRequest) GetFirewallEnabled() bool {
	if o == nil || IsNil(o.FirewallEnabled) {
		var ret bool
		return ret
	}
	return *o.FirewallEnabled
}

// GetFirewallEnabledOk returns a tuple with the FirewallEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetGatewayCreateRequest) GetFirewallEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.FirewallEnabled) {
		return nil, false
	}
	return o.FirewallEnabled, true
}

// HasFirewallEnabled returns a boolean if a field has been set.
func (o *InternetGatewayCreateRequest) HasFirewallEnabled() bool {
	if o != nil && !IsNil(o.FirewallEnabled) {
		return true
	}

	return false
}

// SetFirewallEnabled gets a reference to the given bool and assigns it to the FirewallEnabled field.
func (o *InternetGatewayCreateRequest) SetFirewallEnabled(v bool) {
	o.FirewallEnabled = &v
}

// GetFirewallLoggable returns the FirewallLoggable field value if set, zero value otherwise.
func (o *InternetGatewayCreateRequest) GetFirewallLoggable() bool {
	if o == nil || IsNil(o.FirewallLoggable) {
		var ret bool
		return ret
	}
	return *o.FirewallLoggable
}

// GetFirewallLoggableOk returns a tuple with the FirewallLoggable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetGatewayCreateRequest) GetFirewallLoggableOk() (*bool, bool) {
	if o == nil || IsNil(o.FirewallLoggable) {
		return nil, false
	}
	return o.FirewallLoggable, true
}

// HasFirewallLoggable returns a boolean if a field has been set.
func (o *InternetGatewayCreateRequest) HasFirewallLoggable() bool {
	if o != nil && !IsNil(o.FirewallLoggable) {
		return true
	}

	return false
}

// SetFirewallLoggable gets a reference to the given bool and assigns it to the FirewallLoggable field.
func (o *InternetGatewayCreateRequest) SetFirewallLoggable(v bool) {
	o.FirewallLoggable = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *InternetGatewayCreateRequest) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternetGatewayCreateRequest) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *InternetGatewayCreateRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *InternetGatewayCreateRequest) SetTags(v []Tag) {
	o.Tags = v
}

// GetType returns the Type field value
func (o *InternetGatewayCreateRequest) GetType() InternetGatewayType {
	if o == nil {
		var ret InternetGatewayType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *InternetGatewayCreateRequest) GetTypeOk() (*InternetGatewayType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *InternetGatewayCreateRequest) SetType(v InternetGatewayType) {
	o.Type = v
}

// GetVpcId returns the VpcId field value
func (o *InternetGatewayCreateRequest) GetVpcId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VpcId
}

// GetVpcIdOk returns a tuple with the VpcId field value
// and a boolean to check if the value has been set.
func (o *InternetGatewayCreateRequest) GetVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VpcId, true
}

// SetVpcId sets field value
func (o *InternetGatewayCreateRequest) SetVpcId(v string) {
	o.VpcId = v
}

func (o InternetGatewayCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternetGatewayCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.FirewallEnabled) {
		toSerialize["firewall_enabled"] = o.FirewallEnabled
	}
	if !IsNil(o.FirewallLoggable) {
		toSerialize["firewall_loggable"] = o.FirewallLoggable
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["type"] = o.Type
	toSerialize["vpc_id"] = o.VpcId
	return toSerialize, nil
}

func (o *InternetGatewayCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"vpc_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInternetGatewayCreateRequest := _InternetGatewayCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInternetGatewayCreateRequest)

	if err != nil {
		return err
	}

	*o = InternetGatewayCreateRequest(varInternetGatewayCreateRequest)

	return err
}

type NullableInternetGatewayCreateRequest struct {
	value *InternetGatewayCreateRequest
	isSet bool
}

func (v NullableInternetGatewayCreateRequest) Get() *InternetGatewayCreateRequest {
	return v.value
}

func (v *NullableInternetGatewayCreateRequest) Set(val *InternetGatewayCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInternetGatewayCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInternetGatewayCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternetGatewayCreateRequest(val *InternetGatewayCreateRequest) *NullableInternetGatewayCreateRequest {
	return &NullableInternetGatewayCreateRequest{value: val, isSet: true}
}

func (v NullableInternetGatewayCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternetGatewayCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
