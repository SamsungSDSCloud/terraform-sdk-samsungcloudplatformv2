/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6894
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PrivateNatIpShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrivateNatIpShowResponse{}

// PrivateNatIpShowResponse struct for PrivateNatIpShowResponse
type PrivateNatIpShowResponse struct {
	PrivateNatIp PrivateNatIp `json:"private_nat_ip"`
}

type _PrivateNatIpShowResponse PrivateNatIpShowResponse

// NewPrivateNatIpShowResponse instantiates a new PrivateNatIpShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateNatIpShowResponse(privateNatIp PrivateNatIp) *PrivateNatIpShowResponse {
	this := PrivateNatIpShowResponse{}
	this.PrivateNatIp = privateNatIp
	return &this
}

// NewPrivateNatIpShowResponseWithDefaults instantiates a new PrivateNatIpShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateNatIpShowResponseWithDefaults() *PrivateNatIpShowResponse {
	this := PrivateNatIpShowResponse{}
	return &this
}

// GetPrivateNatIp returns the PrivateNatIp field value
func (o *PrivateNatIpShowResponse) GetPrivateNatIp() PrivateNatIp {
	if o == nil {
		var ret PrivateNatIp
		return ret
	}

	return o.PrivateNatIp
}

// GetPrivateNatIpOk returns a tuple with the PrivateNatIp field value
// and a boolean to check if the value has been set.
func (o *PrivateNatIpShowResponse) GetPrivateNatIpOk() (*PrivateNatIp, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateNatIp, true
}

// SetPrivateNatIp sets field value
func (o *PrivateNatIpShowResponse) SetPrivateNatIp(v PrivateNatIp) {
	o.PrivateNatIp = v
}

func (o PrivateNatIpShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrivateNatIpShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["private_nat_ip"] = o.PrivateNatIp
	return toSerialize, nil
}

func (o *PrivateNatIpShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"private_nat_ip",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPrivateNatIpShowResponse := _PrivateNatIpShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPrivateNatIpShowResponse)

	if err != nil {
		return err
	}

	*o = PrivateNatIpShowResponse(varPrivateNatIpShowResponse)

	return err
}

type NullablePrivateNatIpShowResponse struct {
	value *PrivateNatIpShowResponse
	isSet bool
}

func (v NullablePrivateNatIpShowResponse) Get() *PrivateNatIpShowResponse {
	return v.value
}

func (v *NullablePrivateNatIpShowResponse) Set(val *PrivateNatIpShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateNatIpShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateNatIpShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateNatIpShowResponse(val *PrivateNatIpShowResponse) *NullablePrivateNatIpShowResponse {
	return &NullablePrivateNatIpShowResponse{value: val, isSet: true}
}

func (v NullablePrivateNatIpShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateNatIpShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
