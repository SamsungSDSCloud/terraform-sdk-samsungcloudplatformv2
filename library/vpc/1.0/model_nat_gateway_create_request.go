/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6894
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the NatGatewayCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NatGatewayCreateRequest{}

// NatGatewayCreateRequest struct for NatGatewayCreateRequest
type NatGatewayCreateRequest struct {
	// NAT Gateway Description
	Description *string `json:"description,omitempty"`
	// PublicIP ID
	PublicipId string `json:"publicip_id"`
	// Subnet CIDR
	SubnetId string `json:"subnet_id"`
	// Tag List
	Tags []Tag `json:"tags,omitempty"`
}

type _NatGatewayCreateRequest NatGatewayCreateRequest

// NewNatGatewayCreateRequest instantiates a new NatGatewayCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNatGatewayCreateRequest(publicipId string, subnetId string) *NatGatewayCreateRequest {
	this := NatGatewayCreateRequest{}
	var description string = ""
	this.Description = &description
	this.PublicipId = publicipId
	this.SubnetId = subnetId
	return &this
}

// NewNatGatewayCreateRequestWithDefaults instantiates a new NatGatewayCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNatGatewayCreateRequestWithDefaults() *NatGatewayCreateRequest {
	this := NatGatewayCreateRequest{}
	var description string = ""
	this.Description = &description
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *NatGatewayCreateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NatGatewayCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *NatGatewayCreateRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *NatGatewayCreateRequest) SetDescription(v string) {
	o.Description = &v
}

// GetPublicipId returns the PublicipId field value
func (o *NatGatewayCreateRequest) GetPublicipId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicipId
}

// GetPublicipIdOk returns a tuple with the PublicipId field value
// and a boolean to check if the value has been set.
func (o *NatGatewayCreateRequest) GetPublicipIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicipId, true
}

// SetPublicipId sets field value
func (o *NatGatewayCreateRequest) SetPublicipId(v string) {
	o.PublicipId = v
}

// GetSubnetId returns the SubnetId field value
func (o *NatGatewayCreateRequest) GetSubnetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value
// and a boolean to check if the value has been set.
func (o *NatGatewayCreateRequest) GetSubnetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubnetId, true
}

// SetSubnetId sets field value
func (o *NatGatewayCreateRequest) SetSubnetId(v string) {
	o.SubnetId = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *NatGatewayCreateRequest) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NatGatewayCreateRequest) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *NatGatewayCreateRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *NatGatewayCreateRequest) SetTags(v []Tag) {
	o.Tags = v
}

func (o NatGatewayCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NatGatewayCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["publicip_id"] = o.PublicipId
	toSerialize["subnet_id"] = o.SubnetId
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

func (o *NatGatewayCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"publicip_id",
		"subnet_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNatGatewayCreateRequest := _NatGatewayCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNatGatewayCreateRequest)

	if err != nil {
		return err
	}

	*o = NatGatewayCreateRequest(varNatGatewayCreateRequest)

	return err
}

type NullableNatGatewayCreateRequest struct {
	value *NatGatewayCreateRequest
	isSet bool
}

func (v NullableNatGatewayCreateRequest) Get() *NatGatewayCreateRequest {
	return v.value
}

func (v *NullableNatGatewayCreateRequest) Set(val *NatGatewayCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNatGatewayCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNatGatewayCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNatGatewayCreateRequest(val *NatGatewayCreateRequest) *NullableNatGatewayCreateRequest {
	return &NullableNatGatewayCreateRequest{value: val, isSet: true}
}

func (v NullableNatGatewayCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNatGatewayCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
