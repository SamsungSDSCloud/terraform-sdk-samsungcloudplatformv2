/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6894
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the VpcPeering type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VpcPeering{}

// VpcPeering struct for VpcPeering
type VpcPeering struct {
	// Account Type
	AccountType VpcPeeringAccountType `json:"account_type"`
	// Approver VPC Account ID
	ApproverVpcAccountId string `json:"approver_vpc_account_id"`
	// Approver VPC ID
	ApproverVpcId string `json:"approver_vpc_id"`
	// Approver VPC Name
	ApproverVpcName string `json:"approver_vpc_name"`
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy   string         `json:"created_by"`
	Description NullableString `json:"description,omitempty"`
	// VPC Peering ID
	Id string `json:"id"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy string `json:"modified_by"`
	// VPC Peering Name
	Name string `json:"name" validate:"regexp=^[a-zA-Z0-9]*$"`
	// Requester VPC Account ID
	RequesterVpcAccountId string `json:"requester_vpc_account_id"`
	// Requester VPC ID
	RequesterVpcId string `json:"requester_vpc_id"`
	// Requester VPC Name
	RequesterVpcName string `json:"requester_vpc_name"`
	// State
	State VpcPeeringState `json:"state"`
}

type _VpcPeering VpcPeering

// NewVpcPeering instantiates a new VpcPeering object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVpcPeering(accountType VpcPeeringAccountType, approverVpcAccountId string, approverVpcId string, approverVpcName string, createdAt time.Time, createdBy string, id string, modifiedAt time.Time, modifiedBy string, name string, requesterVpcAccountId string, requesterVpcId string, requesterVpcName string, state VpcPeeringState) *VpcPeering {
	this := VpcPeering{}
	this.AccountType = accountType
	this.ApproverVpcAccountId = approverVpcAccountId
	this.ApproverVpcId = approverVpcId
	this.ApproverVpcName = approverVpcName
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.Id = id
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.Name = name
	this.RequesterVpcAccountId = requesterVpcAccountId
	this.RequesterVpcId = requesterVpcId
	this.RequesterVpcName = requesterVpcName
	this.State = state
	return &this
}

// NewVpcPeeringWithDefaults instantiates a new VpcPeering object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVpcPeeringWithDefaults() *VpcPeering {
	this := VpcPeering{}
	return &this
}

// GetAccountType returns the AccountType field value
func (o *VpcPeering) GetAccountType() VpcPeeringAccountType {
	if o == nil {
		var ret VpcPeeringAccountType
		return ret
	}

	return o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value
// and a boolean to check if the value has been set.
func (o *VpcPeering) GetAccountTypeOk() (*VpcPeeringAccountType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountType, true
}

// SetAccountType sets field value
func (o *VpcPeering) SetAccountType(v VpcPeeringAccountType) {
	o.AccountType = v
}

// GetApproverVpcAccountId returns the ApproverVpcAccountId field value
func (o *VpcPeering) GetApproverVpcAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApproverVpcAccountId
}

// GetApproverVpcAccountIdOk returns a tuple with the ApproverVpcAccountId field value
// and a boolean to check if the value has been set.
func (o *VpcPeering) GetApproverVpcAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApproverVpcAccountId, true
}

// SetApproverVpcAccountId sets field value
func (o *VpcPeering) SetApproverVpcAccountId(v string) {
	o.ApproverVpcAccountId = v
}

// GetApproverVpcId returns the ApproverVpcId field value
func (o *VpcPeering) GetApproverVpcId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApproverVpcId
}

// GetApproverVpcIdOk returns a tuple with the ApproverVpcId field value
// and a boolean to check if the value has been set.
func (o *VpcPeering) GetApproverVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApproverVpcId, true
}

// SetApproverVpcId sets field value
func (o *VpcPeering) SetApproverVpcId(v string) {
	o.ApproverVpcId = v
}

// GetApproverVpcName returns the ApproverVpcName field value
func (o *VpcPeering) GetApproverVpcName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApproverVpcName
}

// GetApproverVpcNameOk returns a tuple with the ApproverVpcName field value
// and a boolean to check if the value has been set.
func (o *VpcPeering) GetApproverVpcNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApproverVpcName, true
}

// SetApproverVpcName sets field value
func (o *VpcPeering) SetApproverVpcName(v string) {
	o.ApproverVpcName = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *VpcPeering) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *VpcPeering) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *VpcPeering) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *VpcPeering) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *VpcPeering) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *VpcPeering) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VpcPeering) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VpcPeering) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *VpcPeering) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *VpcPeering) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *VpcPeering) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *VpcPeering) UnsetDescription() {
	o.Description.Unset()
}

// GetId returns the Id field value
func (o *VpcPeering) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VpcPeering) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VpcPeering) SetId(v string) {
	o.Id = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *VpcPeering) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *VpcPeering) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *VpcPeering) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *VpcPeering) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *VpcPeering) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *VpcPeering) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetName returns the Name field value
func (o *VpcPeering) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VpcPeering) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VpcPeering) SetName(v string) {
	o.Name = v
}

// GetRequesterVpcAccountId returns the RequesterVpcAccountId field value
func (o *VpcPeering) GetRequesterVpcAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequesterVpcAccountId
}

// GetRequesterVpcAccountIdOk returns a tuple with the RequesterVpcAccountId field value
// and a boolean to check if the value has been set.
func (o *VpcPeering) GetRequesterVpcAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequesterVpcAccountId, true
}

// SetRequesterVpcAccountId sets field value
func (o *VpcPeering) SetRequesterVpcAccountId(v string) {
	o.RequesterVpcAccountId = v
}

// GetRequesterVpcId returns the RequesterVpcId field value
func (o *VpcPeering) GetRequesterVpcId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequesterVpcId
}

// GetRequesterVpcIdOk returns a tuple with the RequesterVpcId field value
// and a boolean to check if the value has been set.
func (o *VpcPeering) GetRequesterVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequesterVpcId, true
}

// SetRequesterVpcId sets field value
func (o *VpcPeering) SetRequesterVpcId(v string) {
	o.RequesterVpcId = v
}

// GetRequesterVpcName returns the RequesterVpcName field value
func (o *VpcPeering) GetRequesterVpcName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequesterVpcName
}

// GetRequesterVpcNameOk returns a tuple with the RequesterVpcName field value
// and a boolean to check if the value has been set.
func (o *VpcPeering) GetRequesterVpcNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequesterVpcName, true
}

// SetRequesterVpcName sets field value
func (o *VpcPeering) SetRequesterVpcName(v string) {
	o.RequesterVpcName = v
}

// GetState returns the State field value
func (o *VpcPeering) GetState() VpcPeeringState {
	if o == nil {
		var ret VpcPeeringState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *VpcPeering) GetStateOk() (*VpcPeeringState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *VpcPeering) SetState(v VpcPeeringState) {
	o.State = v
}

func (o VpcPeering) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VpcPeering) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_type"] = o.AccountType
	toSerialize["approver_vpc_account_id"] = o.ApproverVpcAccountId
	toSerialize["approver_vpc_id"] = o.ApproverVpcId
	toSerialize["approver_vpc_name"] = o.ApproverVpcName
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["id"] = o.Id
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	toSerialize["name"] = o.Name
	toSerialize["requester_vpc_account_id"] = o.RequesterVpcAccountId
	toSerialize["requester_vpc_id"] = o.RequesterVpcId
	toSerialize["requester_vpc_name"] = o.RequesterVpcName
	toSerialize["state"] = o.State
	return toSerialize, nil
}

func (o *VpcPeering) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_type",
		"approver_vpc_account_id",
		"approver_vpc_id",
		"approver_vpc_name",
		"created_at",
		"created_by",
		"id",
		"modified_at",
		"modified_by",
		"name",
		"requester_vpc_account_id",
		"requester_vpc_id",
		"requester_vpc_name",
		"state",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVpcPeering := _VpcPeering{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVpcPeering)

	if err != nil {
		return err
	}

	*o = VpcPeering(varVpcPeering)

	return err
}

type NullableVpcPeering struct {
	value *VpcPeering
	isSet bool
}

func (v NullableVpcPeering) Get() *VpcPeering {
	return v.value
}

func (v *NullableVpcPeering) Set(val *VpcPeering) {
	v.value = val
	v.isSet = true
}

func (v NullableVpcPeering) IsSet() bool {
	return v.isSet
}

func (v *NullableVpcPeering) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpcPeering(val *VpcPeering) *NullableVpcPeering {
	return &NullableVpcPeering{value: val, isSet: true}
}

func (v NullableVpcPeering) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpcPeering) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
