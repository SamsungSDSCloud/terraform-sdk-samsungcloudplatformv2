/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6894
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the PortList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortList{}

// PortList struct for PortList
type PortList struct {
	// Account ID
	AccountId string `json:"account_id"`
	// Connected resource ID
	AttachedResourceId string `json:"attached_resource_id"`
	// Connected resource Type
	AttachedResourceType string `json:"attached_resource_type"`
	// Created date
	CreatedAt time.Time `json:"created_at"`
	// Description
	Description string `json:"description"`
	// Fixed IP
	FixedIpAddress string `json:"fixed_ip_address"`
	// Port ID
	Id string `json:"id"`
	// MAC Address
	MacAddress string `json:"mac_address"`
	// Modified date
	ModifiedAt time.Time `json:"modified_at"`
	// Port Name
	Name string `json:"name"`
	// State
	State string `json:"state"`
	// Subnet Id
	SubnetId string `json:"subnet_id"`
	// Subnet Name
	SubnetName string `json:"subnet_name"`
	// VPC Id
	VpcId string `json:"vpc_id"`
	// VPC Name
	VpcName string `json:"vpc_name"`
}

type _PortList PortList

// NewPortList instantiates a new PortList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortList(accountId string, attachedResourceId string, attachedResourceType string, createdAt time.Time, description string, fixedIpAddress string, id string, macAddress string, modifiedAt time.Time, name string, state string, subnetId string, subnetName string, vpcId string, vpcName string) *PortList {
	this := PortList{}
	this.AccountId = accountId
	this.AttachedResourceId = attachedResourceId
	this.AttachedResourceType = attachedResourceType
	this.CreatedAt = createdAt
	this.Description = description
	this.FixedIpAddress = fixedIpAddress
	this.Id = id
	this.MacAddress = macAddress
	this.ModifiedAt = modifiedAt
	this.Name = name
	this.State = state
	this.SubnetId = subnetId
	this.SubnetName = subnetName
	this.VpcId = vpcId
	this.VpcName = vpcName
	return &this
}

// NewPortListWithDefaults instantiates a new PortList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortListWithDefaults() *PortList {
	this := PortList{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *PortList) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *PortList) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *PortList) SetAccountId(v string) {
	o.AccountId = v
}

// GetAttachedResourceId returns the AttachedResourceId field value
func (o *PortList) GetAttachedResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AttachedResourceId
}

// GetAttachedResourceIdOk returns a tuple with the AttachedResourceId field value
// and a boolean to check if the value has been set.
func (o *PortList) GetAttachedResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttachedResourceId, true
}

// SetAttachedResourceId sets field value
func (o *PortList) SetAttachedResourceId(v string) {
	o.AttachedResourceId = v
}

// GetAttachedResourceType returns the AttachedResourceType field value
func (o *PortList) GetAttachedResourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AttachedResourceType
}

// GetAttachedResourceTypeOk returns a tuple with the AttachedResourceType field value
// and a boolean to check if the value has been set.
func (o *PortList) GetAttachedResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttachedResourceType, true
}

// SetAttachedResourceType sets field value
func (o *PortList) SetAttachedResourceType(v string) {
	o.AttachedResourceType = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PortList) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PortList) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PortList) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetDescription returns the Description field value
func (o *PortList) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *PortList) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *PortList) SetDescription(v string) {
	o.Description = v
}

// GetFixedIpAddress returns the FixedIpAddress field value
func (o *PortList) GetFixedIpAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FixedIpAddress
}

// GetFixedIpAddressOk returns a tuple with the FixedIpAddress field value
// and a boolean to check if the value has been set.
func (o *PortList) GetFixedIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FixedIpAddress, true
}

// SetFixedIpAddress sets field value
func (o *PortList) SetFixedIpAddress(v string) {
	o.FixedIpAddress = v
}

// GetId returns the Id field value
func (o *PortList) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PortList) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PortList) SetId(v string) {
	o.Id = v
}

// GetMacAddress returns the MacAddress field value
func (o *PortList) GetMacAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value
// and a boolean to check if the value has been set.
func (o *PortList) GetMacAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MacAddress, true
}

// SetMacAddress sets field value
func (o *PortList) SetMacAddress(v string) {
	o.MacAddress = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *PortList) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *PortList) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *PortList) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetName returns the Name field value
func (o *PortList) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PortList) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PortList) SetName(v string) {
	o.Name = v
}

// GetState returns the State field value
func (o *PortList) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *PortList) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *PortList) SetState(v string) {
	o.State = v
}

// GetSubnetId returns the SubnetId field value
func (o *PortList) GetSubnetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value
// and a boolean to check if the value has been set.
func (o *PortList) GetSubnetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubnetId, true
}

// SetSubnetId sets field value
func (o *PortList) SetSubnetId(v string) {
	o.SubnetId = v
}

// GetSubnetName returns the SubnetName field value
func (o *PortList) GetSubnetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubnetName
}

// GetSubnetNameOk returns a tuple with the SubnetName field value
// and a boolean to check if the value has been set.
func (o *PortList) GetSubnetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubnetName, true
}

// SetSubnetName sets field value
func (o *PortList) SetSubnetName(v string) {
	o.SubnetName = v
}

// GetVpcId returns the VpcId field value
func (o *PortList) GetVpcId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VpcId
}

// GetVpcIdOk returns a tuple with the VpcId field value
// and a boolean to check if the value has been set.
func (o *PortList) GetVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VpcId, true
}

// SetVpcId sets field value
func (o *PortList) SetVpcId(v string) {
	o.VpcId = v
}

// GetVpcName returns the VpcName field value
func (o *PortList) GetVpcName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VpcName
}

// GetVpcNameOk returns a tuple with the VpcName field value
// and a boolean to check if the value has been set.
func (o *PortList) GetVpcNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VpcName, true
}

// SetVpcName sets field value
func (o *PortList) SetVpcName(v string) {
	o.VpcName = v
}

func (o PortList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	toSerialize["attached_resource_id"] = o.AttachedResourceId
	toSerialize["attached_resource_type"] = o.AttachedResourceType
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["description"] = o.Description
	toSerialize["fixed_ip_address"] = o.FixedIpAddress
	toSerialize["id"] = o.Id
	toSerialize["mac_address"] = o.MacAddress
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["name"] = o.Name
	toSerialize["state"] = o.State
	toSerialize["subnet_id"] = o.SubnetId
	toSerialize["subnet_name"] = o.SubnetName
	toSerialize["vpc_id"] = o.VpcId
	toSerialize["vpc_name"] = o.VpcName
	return toSerialize, nil
}

func (o *PortList) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"attached_resource_id",
		"attached_resource_type",
		"created_at",
		"description",
		"fixed_ip_address",
		"id",
		"mac_address",
		"modified_at",
		"name",
		"state",
		"subnet_id",
		"subnet_name",
		"vpc_id",
		"vpc_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPortList := _PortList{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPortList)

	if err != nil {
		return err
	}

	*o = PortList(varPortList)

	return err
}

type NullablePortList struct {
	value *PortList
	isSet bool
}

func (v NullablePortList) Get() *PortList {
	return v.value
}

func (v *NullablePortList) Set(val *PortList) {
	v.value = val
	v.isSet = true
}

func (v NullablePortList) IsSet() bool {
	return v.isSet
}

func (v *NullablePortList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortList(val *PortList) *NullablePortList {
	return &NullablePortList{value: val, isSet: true}
}

func (v NullablePortList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
