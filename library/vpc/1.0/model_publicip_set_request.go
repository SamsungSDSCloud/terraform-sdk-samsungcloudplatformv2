/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6894
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PublicipSetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicipSetRequest{}

// PublicipSetRequest struct for PublicipSetRequest
type PublicipSetRequest struct {
	// PublicIP Description
	Description string `json:"description"`
}

type _PublicipSetRequest PublicipSetRequest

// NewPublicipSetRequest instantiates a new PublicipSetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicipSetRequest(description string) *PublicipSetRequest {
	this := PublicipSetRequest{}
	this.Description = description
	return &this
}

// NewPublicipSetRequestWithDefaults instantiates a new PublicipSetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicipSetRequestWithDefaults() *PublicipSetRequest {
	this := PublicipSetRequest{}
	return &this
}

// GetDescription returns the Description field value
func (o *PublicipSetRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *PublicipSetRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *PublicipSetRequest) SetDescription(v string) {
	o.Description = v
}

func (o PublicipSetRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicipSetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	return toSerialize, nil
}

func (o *PublicipSetRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicipSetRequest := _PublicipSetRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicipSetRequest)

	if err != nil {
		return err
	}

	*o = PublicipSetRequest(varPublicipSetRequest)

	return err
}

type NullablePublicipSetRequest struct {
	value *PublicipSetRequest
	isSet bool
}

func (v NullablePublicipSetRequest) Get() *PublicipSetRequest {
	return v.value
}

func (v *NullablePublicipSetRequest) Set(val *PublicipSetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicipSetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicipSetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicipSetRequest(val *PublicipSetRequest) *NullablePublicipSetRequest {
	return &NullablePublicipSetRequest{value: val, isSet: true}
}

func (v NullablePublicipSetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicipSetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
