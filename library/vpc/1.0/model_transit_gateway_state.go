/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6894
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"encoding/json"
	"fmt"
)

// TransitGatewayState the model 'TransitGatewayState'
type TransitGatewayState string

// List of TransitGatewayState
const (
	TRANSITGATEWAYSTATE_CREATING TransitGatewayState = "CREATING"
	TRANSITGATEWAYSTATE_ACTIVE   TransitGatewayState = "ACTIVE"
	TRANSITGATEWAYSTATE_DELETING TransitGatewayState = "DELETING"
	TRANSITGATEWAYSTATE_DELETED  TransitGatewayState = "DELETED"
	TRANSITGATEWAYSTATE_ERROR    TransitGatewayState = "ERROR"
	TRANSITGATEWAYSTATE_EDITING  TransitGatewayState = "EDITING"
)

// All allowed values of TransitGatewayState enum
var AllowedTransitGatewayStateEnumValues = []TransitGatewayState{
	"CREATING",
	"ACTIVE",
	"DELETING",
	"DELETED",
	"ERROR",
	"EDITING",
}

func (v *TransitGatewayState) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := TransitGatewayState(value)
	for _, existing := range AllowedTransitGatewayStateEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid TransitGatewayState", value)
}

// NewTransitGatewayStateFromValue returns a pointer to a valid TransitGatewayState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTransitGatewayStateFromValue(v string) (*TransitGatewayState, error) {
	ev := TransitGatewayState(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for TransitGatewayState: valid values are %v", v, AllowedTransitGatewayStateEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TransitGatewayState) IsValid() bool {
	for _, existing := range AllowedTransitGatewayStateEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to TransitGatewayState value
func (v TransitGatewayState) Ptr() *TransitGatewayState {
	return &v
}

type NullableTransitGatewayState struct {
	value *TransitGatewayState
	isSet bool
}

func (v NullableTransitGatewayState) Get() *TransitGatewayState {
	return v.value
}

func (v *NullableTransitGatewayState) Set(val *TransitGatewayState) {
	v.value = val
	v.isSet = true
}

func (v NullableTransitGatewayState) IsSet() bool {
	return v.isSet
}

func (v *NullableTransitGatewayState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransitGatewayState(val *TransitGatewayState) *NullableTransitGatewayState {
	return &NullableTransitGatewayState{value: val, isSet: true}
}

func (v NullableTransitGatewayState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransitGatewayState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
