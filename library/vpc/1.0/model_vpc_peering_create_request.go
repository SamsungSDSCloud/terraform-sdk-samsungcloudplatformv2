/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6894
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the VpcPeeringCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VpcPeeringCreateRequest{}

// VpcPeeringCreateRequest struct for VpcPeeringCreateRequest
type VpcPeeringCreateRequest struct {
	// Approver VPC Account ID
	ApproverVpcAccountId *string `json:"approver_vpc_account_id,omitempty"`
	// Approver VPC ID
	ApproverVpcId string         `json:"approver_vpc_id"`
	Description   NullableString `json:"description,omitempty"`
	// VPC Peering Name
	Name string `json:"name"`
	// Requester VPC ID
	RequesterVpcId string `json:"requester_vpc_id"`
	// Tag List
	Tags []Tag `json:"tags,omitempty"`
}

type _VpcPeeringCreateRequest VpcPeeringCreateRequest

// NewVpcPeeringCreateRequest instantiates a new VpcPeeringCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVpcPeeringCreateRequest(approverVpcId string, name string, requesterVpcId string) *VpcPeeringCreateRequest {
	this := VpcPeeringCreateRequest{}
	var approverVpcAccountId string = ""
	this.ApproverVpcAccountId = &approverVpcAccountId
	this.ApproverVpcId = approverVpcId
	this.Name = name
	this.RequesterVpcId = requesterVpcId
	return &this
}

// NewVpcPeeringCreateRequestWithDefaults instantiates a new VpcPeeringCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVpcPeeringCreateRequestWithDefaults() *VpcPeeringCreateRequest {
	this := VpcPeeringCreateRequest{}
	var approverVpcAccountId string = ""
	this.ApproverVpcAccountId = &approverVpcAccountId
	return &this
}

// GetApproverVpcAccountId returns the ApproverVpcAccountId field value if set, zero value otherwise.
func (o *VpcPeeringCreateRequest) GetApproverVpcAccountId() string {
	if o == nil || IsNil(o.ApproverVpcAccountId) {
		var ret string
		return ret
	}
	return *o.ApproverVpcAccountId
}

// GetApproverVpcAccountIdOk returns a tuple with the ApproverVpcAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpcPeeringCreateRequest) GetApproverVpcAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApproverVpcAccountId) {
		return nil, false
	}
	return o.ApproverVpcAccountId, true
}

// HasApproverVpcAccountId returns a boolean if a field has been set.
func (o *VpcPeeringCreateRequest) HasApproverVpcAccountId() bool {
	if o != nil && !IsNil(o.ApproverVpcAccountId) {
		return true
	}

	return false
}

// SetApproverVpcAccountId gets a reference to the given string and assigns it to the ApproverVpcAccountId field.
func (o *VpcPeeringCreateRequest) SetApproverVpcAccountId(v string) {
	o.ApproverVpcAccountId = &v
}

// GetApproverVpcId returns the ApproverVpcId field value
func (o *VpcPeeringCreateRequest) GetApproverVpcId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApproverVpcId
}

// GetApproverVpcIdOk returns a tuple with the ApproverVpcId field value
// and a boolean to check if the value has been set.
func (o *VpcPeeringCreateRequest) GetApproverVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApproverVpcId, true
}

// SetApproverVpcId sets field value
func (o *VpcPeeringCreateRequest) SetApproverVpcId(v string) {
	o.ApproverVpcId = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VpcPeeringCreateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VpcPeeringCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *VpcPeeringCreateRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *VpcPeeringCreateRequest) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *VpcPeeringCreateRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *VpcPeeringCreateRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetName returns the Name field value
func (o *VpcPeeringCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VpcPeeringCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VpcPeeringCreateRequest) SetName(v string) {
	o.Name = v
}

// GetRequesterVpcId returns the RequesterVpcId field value
func (o *VpcPeeringCreateRequest) GetRequesterVpcId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequesterVpcId
}

// GetRequesterVpcIdOk returns a tuple with the RequesterVpcId field value
// and a boolean to check if the value has been set.
func (o *VpcPeeringCreateRequest) GetRequesterVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequesterVpcId, true
}

// SetRequesterVpcId sets field value
func (o *VpcPeeringCreateRequest) SetRequesterVpcId(v string) {
	o.RequesterVpcId = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *VpcPeeringCreateRequest) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpcPeeringCreateRequest) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *VpcPeeringCreateRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *VpcPeeringCreateRequest) SetTags(v []Tag) {
	o.Tags = v
}

func (o VpcPeeringCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VpcPeeringCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApproverVpcAccountId) {
		toSerialize["approver_vpc_account_id"] = o.ApproverVpcAccountId
	}
	toSerialize["approver_vpc_id"] = o.ApproverVpcId
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["name"] = o.Name
	toSerialize["requester_vpc_id"] = o.RequesterVpcId
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

func (o *VpcPeeringCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"approver_vpc_id",
		"name",
		"requester_vpc_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVpcPeeringCreateRequest := _VpcPeeringCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVpcPeeringCreateRequest)

	if err != nil {
		return err
	}

	*o = VpcPeeringCreateRequest(varVpcPeeringCreateRequest)

	return err
}

type NullableVpcPeeringCreateRequest struct {
	value *VpcPeeringCreateRequest
	isSet bool
}

func (v NullableVpcPeeringCreateRequest) Get() *VpcPeeringCreateRequest {
	return v.value
}

func (v *NullableVpcPeeringCreateRequest) Set(val *VpcPeeringCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVpcPeeringCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVpcPeeringCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpcPeeringCreateRequest(val *VpcPeeringCreateRequest) *NullableVpcPeeringCreateRequest {
	return &NullableVpcPeeringCreateRequest{value: val, isSet: true}
}

func (v NullableVpcPeeringCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpcPeeringCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
