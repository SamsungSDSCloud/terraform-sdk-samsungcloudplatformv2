/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6894
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the VpcPeeringRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VpcPeeringRule{}

// VpcPeeringRule struct for VpcPeeringRule
type VpcPeeringRule struct {
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy string `json:"created_by"`
	// Destination CIDR
	DestinationCidr string `json:"destination_cidr"`
	// Destination VPC ID
	DestinationVpcId string `json:"destination_vpc_id"`
	// Destination VPC Name
	DestinationVpcName string `json:"destination_vpc_name"`
	// Destination VPC Type
	DestinationVpcType VpcPeeringRuleDestinationVpcType `json:"destination_vpc_type"`
	// VPC Peering Rule ID
	Id string `json:"id"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy string `json:"modified_by"`
	// Source VPC ID
	SourceVpcId string `json:"source_vpc_id"`
	// Source VPC Name
	SourceVpcName string `json:"source_vpc_name"`
	// Source VPC Type
	SourceVpcType VpcPeeringRuleDestinationVpcType `json:"source_vpc_type"`
	// State
	State RoutingRuleState `json:"state"`
	// VPC Peering ID
	VpcPeeringId string `json:"vpc_peering_id"`
}

type _VpcPeeringRule VpcPeeringRule

// NewVpcPeeringRule instantiates a new VpcPeeringRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVpcPeeringRule(createdAt time.Time, createdBy string, destinationCidr string, destinationVpcId string, destinationVpcName string, destinationVpcType VpcPeeringRuleDestinationVpcType, id string, modifiedAt time.Time, modifiedBy string, sourceVpcId string, sourceVpcName string, sourceVpcType VpcPeeringRuleDestinationVpcType, state RoutingRuleState, vpcPeeringId string) *VpcPeeringRule {
	this := VpcPeeringRule{}
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.DestinationCidr = destinationCidr
	this.DestinationVpcId = destinationVpcId
	this.DestinationVpcName = destinationVpcName
	this.DestinationVpcType = destinationVpcType
	this.Id = id
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.SourceVpcId = sourceVpcId
	this.SourceVpcName = sourceVpcName
	this.SourceVpcType = sourceVpcType
	this.State = state
	this.VpcPeeringId = vpcPeeringId
	return &this
}

// NewVpcPeeringRuleWithDefaults instantiates a new VpcPeeringRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVpcPeeringRuleWithDefaults() *VpcPeeringRule {
	this := VpcPeeringRule{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *VpcPeeringRule) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *VpcPeeringRule) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *VpcPeeringRule) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *VpcPeeringRule) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *VpcPeeringRule) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *VpcPeeringRule) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetDestinationCidr returns the DestinationCidr field value
func (o *VpcPeeringRule) GetDestinationCidr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationCidr
}

// GetDestinationCidrOk returns a tuple with the DestinationCidr field value
// and a boolean to check if the value has been set.
func (o *VpcPeeringRule) GetDestinationCidrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationCidr, true
}

// SetDestinationCidr sets field value
func (o *VpcPeeringRule) SetDestinationCidr(v string) {
	o.DestinationCidr = v
}

// GetDestinationVpcId returns the DestinationVpcId field value
func (o *VpcPeeringRule) GetDestinationVpcId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationVpcId
}

// GetDestinationVpcIdOk returns a tuple with the DestinationVpcId field value
// and a boolean to check if the value has been set.
func (o *VpcPeeringRule) GetDestinationVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationVpcId, true
}

// SetDestinationVpcId sets field value
func (o *VpcPeeringRule) SetDestinationVpcId(v string) {
	o.DestinationVpcId = v
}

// GetDestinationVpcName returns the DestinationVpcName field value
func (o *VpcPeeringRule) GetDestinationVpcName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationVpcName
}

// GetDestinationVpcNameOk returns a tuple with the DestinationVpcName field value
// and a boolean to check if the value has been set.
func (o *VpcPeeringRule) GetDestinationVpcNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationVpcName, true
}

// SetDestinationVpcName sets field value
func (o *VpcPeeringRule) SetDestinationVpcName(v string) {
	o.DestinationVpcName = v
}

// GetDestinationVpcType returns the DestinationVpcType field value
func (o *VpcPeeringRule) GetDestinationVpcType() VpcPeeringRuleDestinationVpcType {
	if o == nil {
		var ret VpcPeeringRuleDestinationVpcType
		return ret
	}

	return o.DestinationVpcType
}

// GetDestinationVpcTypeOk returns a tuple with the DestinationVpcType field value
// and a boolean to check if the value has been set.
func (o *VpcPeeringRule) GetDestinationVpcTypeOk() (*VpcPeeringRuleDestinationVpcType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationVpcType, true
}

// SetDestinationVpcType sets field value
func (o *VpcPeeringRule) SetDestinationVpcType(v VpcPeeringRuleDestinationVpcType) {
	o.DestinationVpcType = v
}

// GetId returns the Id field value
func (o *VpcPeeringRule) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VpcPeeringRule) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VpcPeeringRule) SetId(v string) {
	o.Id = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *VpcPeeringRule) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *VpcPeeringRule) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *VpcPeeringRule) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *VpcPeeringRule) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *VpcPeeringRule) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *VpcPeeringRule) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetSourceVpcId returns the SourceVpcId field value
func (o *VpcPeeringRule) GetSourceVpcId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceVpcId
}

// GetSourceVpcIdOk returns a tuple with the SourceVpcId field value
// and a boolean to check if the value has been set.
func (o *VpcPeeringRule) GetSourceVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceVpcId, true
}

// SetSourceVpcId sets field value
func (o *VpcPeeringRule) SetSourceVpcId(v string) {
	o.SourceVpcId = v
}

// GetSourceVpcName returns the SourceVpcName field value
func (o *VpcPeeringRule) GetSourceVpcName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceVpcName
}

// GetSourceVpcNameOk returns a tuple with the SourceVpcName field value
// and a boolean to check if the value has been set.
func (o *VpcPeeringRule) GetSourceVpcNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceVpcName, true
}

// SetSourceVpcName sets field value
func (o *VpcPeeringRule) SetSourceVpcName(v string) {
	o.SourceVpcName = v
}

// GetSourceVpcType returns the SourceVpcType field value
func (o *VpcPeeringRule) GetSourceVpcType() VpcPeeringRuleDestinationVpcType {
	if o == nil {
		var ret VpcPeeringRuleDestinationVpcType
		return ret
	}

	return o.SourceVpcType
}

// GetSourceVpcTypeOk returns a tuple with the SourceVpcType field value
// and a boolean to check if the value has been set.
func (o *VpcPeeringRule) GetSourceVpcTypeOk() (*VpcPeeringRuleDestinationVpcType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceVpcType, true
}

// SetSourceVpcType sets field value
func (o *VpcPeeringRule) SetSourceVpcType(v VpcPeeringRuleDestinationVpcType) {
	o.SourceVpcType = v
}

// GetState returns the State field value
func (o *VpcPeeringRule) GetState() RoutingRuleState {
	if o == nil {
		var ret RoutingRuleState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *VpcPeeringRule) GetStateOk() (*RoutingRuleState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *VpcPeeringRule) SetState(v RoutingRuleState) {
	o.State = v
}

// GetVpcPeeringId returns the VpcPeeringId field value
func (o *VpcPeeringRule) GetVpcPeeringId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VpcPeeringId
}

// GetVpcPeeringIdOk returns a tuple with the VpcPeeringId field value
// and a boolean to check if the value has been set.
func (o *VpcPeeringRule) GetVpcPeeringIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VpcPeeringId, true
}

// SetVpcPeeringId sets field value
func (o *VpcPeeringRule) SetVpcPeeringId(v string) {
	o.VpcPeeringId = v
}

func (o VpcPeeringRule) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VpcPeeringRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	toSerialize["destination_cidr"] = o.DestinationCidr
	toSerialize["destination_vpc_id"] = o.DestinationVpcId
	toSerialize["destination_vpc_name"] = o.DestinationVpcName
	toSerialize["destination_vpc_type"] = o.DestinationVpcType
	toSerialize["id"] = o.Id
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	toSerialize["source_vpc_id"] = o.SourceVpcId
	toSerialize["source_vpc_name"] = o.SourceVpcName
	toSerialize["source_vpc_type"] = o.SourceVpcType
	toSerialize["state"] = o.State
	toSerialize["vpc_peering_id"] = o.VpcPeeringId
	return toSerialize, nil
}

func (o *VpcPeeringRule) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"created_by",
		"destination_cidr",
		"destination_vpc_id",
		"destination_vpc_name",
		"destination_vpc_type",
		"id",
		"modified_at",
		"modified_by",
		"source_vpc_id",
		"source_vpc_name",
		"source_vpc_type",
		"state",
		"vpc_peering_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVpcPeeringRule := _VpcPeeringRule{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVpcPeeringRule)

	if err != nil {
		return err
	}

	*o = VpcPeeringRule(varVpcPeeringRule)

	return err
}

type NullableVpcPeeringRule struct {
	value *VpcPeeringRule
	isSet bool
}

func (v NullableVpcPeeringRule) Get() *VpcPeeringRule {
	return v.value
}

func (v *NullableVpcPeeringRule) Set(val *VpcPeeringRule) {
	v.value = val
	v.isSet = true
}

func (v NullableVpcPeeringRule) IsSet() bool {
	return v.isSet
}

func (v *NullableVpcPeeringRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpcPeeringRule(val *VpcPeeringRule) *NullableVpcPeeringRule {
	return &NullableVpcPeeringRule{value: val, isSet: true}
}

func (v NullableVpcPeeringRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpcPeeringRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
