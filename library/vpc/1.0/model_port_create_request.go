/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6894
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PortCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortCreateRequest{}

// PortCreateRequest struct for PortCreateRequest
type PortCreateRequest struct {
	Description    NullableString `json:"description,omitempty"`
	FixedIpAddress NullableString `json:"fixed_ip_address,omitempty"`
	// Port Name
	Name string `json:"name"`
	// Security Group List
	SecurityGroups []string `json:"security_groups,omitempty"`
	// Subnet Id
	SubnetId string `json:"subnet_id"`
	// Tag List
	Tags []Tag `json:"tags,omitempty"`
}

type _PortCreateRequest PortCreateRequest

// NewPortCreateRequest instantiates a new PortCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortCreateRequest(name string, subnetId string) *PortCreateRequest {
	this := PortCreateRequest{}
	this.Name = name
	this.SubnetId = subnetId
	return &this
}

// NewPortCreateRequestWithDefaults instantiates a new PortCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortCreateRequestWithDefaults() *PortCreateRequest {
	this := PortCreateRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortCreateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *PortCreateRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *PortCreateRequest) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *PortCreateRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *PortCreateRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetFixedIpAddress returns the FixedIpAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PortCreateRequest) GetFixedIpAddress() string {
	if o == nil || IsNil(o.FixedIpAddress.Get()) {
		var ret string
		return ret
	}
	return *o.FixedIpAddress.Get()
}

// GetFixedIpAddressOk returns a tuple with the FixedIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PortCreateRequest) GetFixedIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FixedIpAddress.Get(), o.FixedIpAddress.IsSet()
}

// HasFixedIpAddress returns a boolean if a field has been set.
func (o *PortCreateRequest) HasFixedIpAddress() bool {
	if o != nil && o.FixedIpAddress.IsSet() {
		return true
	}

	return false
}

// SetFixedIpAddress gets a reference to the given NullableString and assigns it to the FixedIpAddress field.
func (o *PortCreateRequest) SetFixedIpAddress(v string) {
	o.FixedIpAddress.Set(&v)
}

// SetFixedIpAddressNil sets the value for FixedIpAddress to be an explicit nil
func (o *PortCreateRequest) SetFixedIpAddressNil() {
	o.FixedIpAddress.Set(nil)
}

// UnsetFixedIpAddress ensures that no value is present for FixedIpAddress, not even an explicit nil
func (o *PortCreateRequest) UnsetFixedIpAddress() {
	o.FixedIpAddress.Unset()
}

// GetName returns the Name field value
func (o *PortCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PortCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PortCreateRequest) SetName(v string) {
	o.Name = v
}

// GetSecurityGroups returns the SecurityGroups field value if set, zero value otherwise.
func (o *PortCreateRequest) GetSecurityGroups() []string {
	if o == nil || IsNil(o.SecurityGroups) {
		var ret []string
		return ret
	}
	return o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortCreateRequest) GetSecurityGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.SecurityGroups) {
		return nil, false
	}
	return o.SecurityGroups, true
}

// HasSecurityGroups returns a boolean if a field has been set.
func (o *PortCreateRequest) HasSecurityGroups() bool {
	if o != nil && !IsNil(o.SecurityGroups) {
		return true
	}

	return false
}

// SetSecurityGroups gets a reference to the given []string and assigns it to the SecurityGroups field.
func (o *PortCreateRequest) SetSecurityGroups(v []string) {
	o.SecurityGroups = v
}

// GetSubnetId returns the SubnetId field value
func (o *PortCreateRequest) GetSubnetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value
// and a boolean to check if the value has been set.
func (o *PortCreateRequest) GetSubnetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubnetId, true
}

// SetSubnetId sets field value
func (o *PortCreateRequest) SetSubnetId(v string) {
	o.SubnetId = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PortCreateRequest) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortCreateRequest) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PortCreateRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *PortCreateRequest) SetTags(v []Tag) {
	o.Tags = v
}

func (o PortCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.FixedIpAddress.IsSet() {
		toSerialize["fixed_ip_address"] = o.FixedIpAddress.Get()
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.SecurityGroups) {
		toSerialize["security_groups"] = o.SecurityGroups
	}
	toSerialize["subnet_id"] = o.SubnetId
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

func (o *PortCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"subnet_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPortCreateRequest := _PortCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPortCreateRequest)

	if err != nil {
		return err
	}

	*o = PortCreateRequest(varPortCreateRequest)

	return err
}

type NullablePortCreateRequest struct {
	value *PortCreateRequest
	isSet bool
}

func (v NullablePortCreateRequest) Get() *PortCreateRequest {
	return v.value
}

func (v *NullablePortCreateRequest) Set(val *PortCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePortCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePortCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortCreateRequest(val *PortCreateRequest) *NullablePortCreateRequest {
	return &NullablePortCreateRequest{value: val, isSet: true}
}

func (v NullablePortCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
