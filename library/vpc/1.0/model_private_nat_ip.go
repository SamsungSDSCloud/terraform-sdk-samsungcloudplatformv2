/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6894
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the PrivateNatIp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrivateNatIp{}

// PrivateNatIp struct for PrivateNatIp
type PrivateNatIp struct {
	AttachedResourceId   NullableString                           `json:"attached_resource_id,omitempty"`
	AttachedResourceName NullableString                           `json:"attached_resource_name,omitempty"`
	AttachedResourceType NullablePrivateNatIpAttachedResourceType `json:"attached_resource_type,omitempty"`
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy string `json:"created_by"`
	// Private NAT IP ID
	Id string `json:"id"`
	// Private NAT IP Address
	IpAddress string `json:"ip_address"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy string `json:"modified_by"`
	// Private NAT ID
	PrivateNatId string `json:"private_nat_id"`
	// Private NAT IP State
	State PrivateNatIpState `json:"state"`
}

type _PrivateNatIp PrivateNatIp

// NewPrivateNatIp instantiates a new PrivateNatIp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateNatIp(createdAt time.Time, createdBy string, id string, ipAddress string, modifiedAt time.Time, modifiedBy string, privateNatId string, state PrivateNatIpState) *PrivateNatIp {
	this := PrivateNatIp{}
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.Id = id
	this.IpAddress = ipAddress
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.PrivateNatId = privateNatId
	this.State = state
	return &this
}

// NewPrivateNatIpWithDefaults instantiates a new PrivateNatIp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateNatIpWithDefaults() *PrivateNatIp {
	this := PrivateNatIp{}
	return &this
}

// GetAttachedResourceId returns the AttachedResourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrivateNatIp) GetAttachedResourceId() string {
	if o == nil || IsNil(o.AttachedResourceId.Get()) {
		var ret string
		return ret
	}
	return *o.AttachedResourceId.Get()
}

// GetAttachedResourceIdOk returns a tuple with the AttachedResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrivateNatIp) GetAttachedResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AttachedResourceId.Get(), o.AttachedResourceId.IsSet()
}

// HasAttachedResourceId returns a boolean if a field has been set.
func (o *PrivateNatIp) HasAttachedResourceId() bool {
	if o != nil && o.AttachedResourceId.IsSet() {
		return true
	}

	return false
}

// SetAttachedResourceId gets a reference to the given NullableString and assigns it to the AttachedResourceId field.
func (o *PrivateNatIp) SetAttachedResourceId(v string) {
	o.AttachedResourceId.Set(&v)
}

// SetAttachedResourceIdNil sets the value for AttachedResourceId to be an explicit nil
func (o *PrivateNatIp) SetAttachedResourceIdNil() {
	o.AttachedResourceId.Set(nil)
}

// UnsetAttachedResourceId ensures that no value is present for AttachedResourceId, not even an explicit nil
func (o *PrivateNatIp) UnsetAttachedResourceId() {
	o.AttachedResourceId.Unset()
}

// GetAttachedResourceName returns the AttachedResourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrivateNatIp) GetAttachedResourceName() string {
	if o == nil || IsNil(o.AttachedResourceName.Get()) {
		var ret string
		return ret
	}
	return *o.AttachedResourceName.Get()
}

// GetAttachedResourceNameOk returns a tuple with the AttachedResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrivateNatIp) GetAttachedResourceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AttachedResourceName.Get(), o.AttachedResourceName.IsSet()
}

// HasAttachedResourceName returns a boolean if a field has been set.
func (o *PrivateNatIp) HasAttachedResourceName() bool {
	if o != nil && o.AttachedResourceName.IsSet() {
		return true
	}

	return false
}

// SetAttachedResourceName gets a reference to the given NullableString and assigns it to the AttachedResourceName field.
func (o *PrivateNatIp) SetAttachedResourceName(v string) {
	o.AttachedResourceName.Set(&v)
}

// SetAttachedResourceNameNil sets the value for AttachedResourceName to be an explicit nil
func (o *PrivateNatIp) SetAttachedResourceNameNil() {
	o.AttachedResourceName.Set(nil)
}

// UnsetAttachedResourceName ensures that no value is present for AttachedResourceName, not even an explicit nil
func (o *PrivateNatIp) UnsetAttachedResourceName() {
	o.AttachedResourceName.Unset()
}

// GetAttachedResourceType returns the AttachedResourceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrivateNatIp) GetAttachedResourceType() PrivateNatIpAttachedResourceType {
	if o == nil || IsNil(o.AttachedResourceType.Get()) {
		var ret PrivateNatIpAttachedResourceType
		return ret
	}
	return *o.AttachedResourceType.Get()
}

// GetAttachedResourceTypeOk returns a tuple with the AttachedResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrivateNatIp) GetAttachedResourceTypeOk() (*PrivateNatIpAttachedResourceType, bool) {
	if o == nil {
		return nil, false
	}
	return o.AttachedResourceType.Get(), o.AttachedResourceType.IsSet()
}

// HasAttachedResourceType returns a boolean if a field has been set.
func (o *PrivateNatIp) HasAttachedResourceType() bool {
	if o != nil && o.AttachedResourceType.IsSet() {
		return true
	}

	return false
}

// SetAttachedResourceType gets a reference to the given NullablePrivateNatIpAttachedResourceType and assigns it to the AttachedResourceType field.
func (o *PrivateNatIp) SetAttachedResourceType(v PrivateNatIpAttachedResourceType) {
	o.AttachedResourceType.Set(&v)
}

// SetAttachedResourceTypeNil sets the value for AttachedResourceType to be an explicit nil
func (o *PrivateNatIp) SetAttachedResourceTypeNil() {
	o.AttachedResourceType.Set(nil)
}

// UnsetAttachedResourceType ensures that no value is present for AttachedResourceType, not even an explicit nil
func (o *PrivateNatIp) UnsetAttachedResourceType() {
	o.AttachedResourceType.Unset()
}

// GetCreatedAt returns the CreatedAt field value
func (o *PrivateNatIp) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PrivateNatIp) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PrivateNatIp) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *PrivateNatIp) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *PrivateNatIp) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *PrivateNatIp) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetId returns the Id field value
func (o *PrivateNatIp) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PrivateNatIp) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PrivateNatIp) SetId(v string) {
	o.Id = v
}

// GetIpAddress returns the IpAddress field value
func (o *PrivateNatIp) GetIpAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value
// and a boolean to check if the value has been set.
func (o *PrivateNatIp) GetIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpAddress, true
}

// SetIpAddress sets field value
func (o *PrivateNatIp) SetIpAddress(v string) {
	o.IpAddress = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *PrivateNatIp) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *PrivateNatIp) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *PrivateNatIp) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *PrivateNatIp) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *PrivateNatIp) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *PrivateNatIp) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetPrivateNatId returns the PrivateNatId field value
func (o *PrivateNatIp) GetPrivateNatId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivateNatId
}

// GetPrivateNatIdOk returns a tuple with the PrivateNatId field value
// and a boolean to check if the value has been set.
func (o *PrivateNatIp) GetPrivateNatIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateNatId, true
}

// SetPrivateNatId sets field value
func (o *PrivateNatIp) SetPrivateNatId(v string) {
	o.PrivateNatId = v
}

// GetState returns the State field value
func (o *PrivateNatIp) GetState() PrivateNatIpState {
	if o == nil {
		var ret PrivateNatIpState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *PrivateNatIp) GetStateOk() (*PrivateNatIpState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *PrivateNatIp) SetState(v PrivateNatIpState) {
	o.State = v
}

func (o PrivateNatIp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrivateNatIp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AttachedResourceId.IsSet() {
		toSerialize["attached_resource_id"] = o.AttachedResourceId.Get()
	}
	if o.AttachedResourceName.IsSet() {
		toSerialize["attached_resource_name"] = o.AttachedResourceName.Get()
	}
	if o.AttachedResourceType.IsSet() {
		toSerialize["attached_resource_type"] = o.AttachedResourceType.Get()
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	toSerialize["id"] = o.Id
	toSerialize["ip_address"] = o.IpAddress
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	toSerialize["private_nat_id"] = o.PrivateNatId
	toSerialize["state"] = o.State
	return toSerialize, nil
}

func (o *PrivateNatIp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"created_by",
		"id",
		"ip_address",
		"modified_at",
		"modified_by",
		"private_nat_id",
		"state",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPrivateNatIp := _PrivateNatIp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPrivateNatIp)

	if err != nil {
		return err
	}

	*o = PrivateNatIp(varPrivateNatIp)

	return err
}

type NullablePrivateNatIp struct {
	value *PrivateNatIp
	isSet bool
}

func (v NullablePrivateNatIp) Get() *PrivateNatIp {
	return v.value
}

func (v *NullablePrivateNatIp) Set(val *PrivateNatIp) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateNatIp) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateNatIp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateNatIp(val *PrivateNatIp) *NullablePrivateNatIp {
	return &NullablePrivateNatIp{value: val, isSet: true}
}

func (v NullablePrivateNatIp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateNatIp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
