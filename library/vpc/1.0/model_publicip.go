/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6894
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the Publicip type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Publicip{}

// Publicip struct for Publicip
type Publicip struct {
	// Account ID
	AccountId            string                               `json:"account_id"`
	AttachedResourceId   NullableString                       `json:"attached_resource_id,omitempty"`
	AttachedResourceName NullableString                       `json:"attached_resource_name,omitempty"`
	AttachedResourceType NullablePublicipAttachedResourceType `json:"attached_resource_type,omitempty"`
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy   string         `json:"created_by"`
	Description NullableString `json:"description,omitempty"`
	// PublicIP ID
	Id string `json:"id"`
	// IP Address
	IpAddress string `json:"ip_address"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy string `json:"modified_by"`
	// PublicIP State
	State PublicipState `json:"state"`
	// PublicIP Type
	Type PublicipType `json:"type"`
}

type _Publicip Publicip

// NewPublicip instantiates a new Publicip object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicip(accountId string, createdAt time.Time, createdBy string, id string, ipAddress string, modifiedAt time.Time, modifiedBy string, state PublicipState, type_ PublicipType) *Publicip {
	this := Publicip{}
	this.AccountId = accountId
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.Id = id
	this.IpAddress = ipAddress
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.State = state
	this.Type = type_
	return &this
}

// NewPublicipWithDefaults instantiates a new Publicip object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicipWithDefaults() *Publicip {
	this := Publicip{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *Publicip) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *Publicip) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *Publicip) SetAccountId(v string) {
	o.AccountId = v
}

// GetAttachedResourceId returns the AttachedResourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Publicip) GetAttachedResourceId() string {
	if o == nil || IsNil(o.AttachedResourceId.Get()) {
		var ret string
		return ret
	}
	return *o.AttachedResourceId.Get()
}

// GetAttachedResourceIdOk returns a tuple with the AttachedResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Publicip) GetAttachedResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AttachedResourceId.Get(), o.AttachedResourceId.IsSet()
}

// HasAttachedResourceId returns a boolean if a field has been set.
func (o *Publicip) HasAttachedResourceId() bool {
	if o != nil && o.AttachedResourceId.IsSet() {
		return true
	}

	return false
}

// SetAttachedResourceId gets a reference to the given NullableString and assigns it to the AttachedResourceId field.
func (o *Publicip) SetAttachedResourceId(v string) {
	o.AttachedResourceId.Set(&v)
}

// SetAttachedResourceIdNil sets the value for AttachedResourceId to be an explicit nil
func (o *Publicip) SetAttachedResourceIdNil() {
	o.AttachedResourceId.Set(nil)
}

// UnsetAttachedResourceId ensures that no value is present for AttachedResourceId, not even an explicit nil
func (o *Publicip) UnsetAttachedResourceId() {
	o.AttachedResourceId.Unset()
}

// GetAttachedResourceName returns the AttachedResourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Publicip) GetAttachedResourceName() string {
	if o == nil || IsNil(o.AttachedResourceName.Get()) {
		var ret string
		return ret
	}
	return *o.AttachedResourceName.Get()
}

// GetAttachedResourceNameOk returns a tuple with the AttachedResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Publicip) GetAttachedResourceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AttachedResourceName.Get(), o.AttachedResourceName.IsSet()
}

// HasAttachedResourceName returns a boolean if a field has been set.
func (o *Publicip) HasAttachedResourceName() bool {
	if o != nil && o.AttachedResourceName.IsSet() {
		return true
	}

	return false
}

// SetAttachedResourceName gets a reference to the given NullableString and assigns it to the AttachedResourceName field.
func (o *Publicip) SetAttachedResourceName(v string) {
	o.AttachedResourceName.Set(&v)
}

// SetAttachedResourceNameNil sets the value for AttachedResourceName to be an explicit nil
func (o *Publicip) SetAttachedResourceNameNil() {
	o.AttachedResourceName.Set(nil)
}

// UnsetAttachedResourceName ensures that no value is present for AttachedResourceName, not even an explicit nil
func (o *Publicip) UnsetAttachedResourceName() {
	o.AttachedResourceName.Unset()
}

// GetAttachedResourceType returns the AttachedResourceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Publicip) GetAttachedResourceType() PublicipAttachedResourceType {
	if o == nil || IsNil(o.AttachedResourceType.Get()) {
		var ret PublicipAttachedResourceType
		return ret
	}
	return *o.AttachedResourceType.Get()
}

// GetAttachedResourceTypeOk returns a tuple with the AttachedResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Publicip) GetAttachedResourceTypeOk() (*PublicipAttachedResourceType, bool) {
	if o == nil {
		return nil, false
	}
	return o.AttachedResourceType.Get(), o.AttachedResourceType.IsSet()
}

// HasAttachedResourceType returns a boolean if a field has been set.
func (o *Publicip) HasAttachedResourceType() bool {
	if o != nil && o.AttachedResourceType.IsSet() {
		return true
	}

	return false
}

// SetAttachedResourceType gets a reference to the given NullablePublicipAttachedResourceType and assigns it to the AttachedResourceType field.
func (o *Publicip) SetAttachedResourceType(v PublicipAttachedResourceType) {
	o.AttachedResourceType.Set(&v)
}

// SetAttachedResourceTypeNil sets the value for AttachedResourceType to be an explicit nil
func (o *Publicip) SetAttachedResourceTypeNil() {
	o.AttachedResourceType.Set(nil)
}

// UnsetAttachedResourceType ensures that no value is present for AttachedResourceType, not even an explicit nil
func (o *Publicip) UnsetAttachedResourceType() {
	o.AttachedResourceType.Unset()
}

// GetCreatedAt returns the CreatedAt field value
func (o *Publicip) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Publicip) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Publicip) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *Publicip) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *Publicip) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *Publicip) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Publicip) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Publicip) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *Publicip) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *Publicip) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *Publicip) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *Publicip) UnsetDescription() {
	o.Description.Unset()
}

// GetId returns the Id field value
func (o *Publicip) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Publicip) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Publicip) SetId(v string) {
	o.Id = v
}

// GetIpAddress returns the IpAddress field value
func (o *Publicip) GetIpAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value
// and a boolean to check if the value has been set.
func (o *Publicip) GetIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpAddress, true
}

// SetIpAddress sets field value
func (o *Publicip) SetIpAddress(v string) {
	o.IpAddress = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *Publicip) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *Publicip) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *Publicip) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *Publicip) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *Publicip) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *Publicip) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetState returns the State field value
func (o *Publicip) GetState() PublicipState {
	if o == nil {
		var ret PublicipState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *Publicip) GetStateOk() (*PublicipState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *Publicip) SetState(v PublicipState) {
	o.State = v
}

// GetType returns the Type field value
func (o *Publicip) GetType() PublicipType {
	if o == nil {
		var ret PublicipType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Publicip) GetTypeOk() (*PublicipType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Publicip) SetType(v PublicipType) {
	o.Type = v
}

func (o Publicip) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Publicip) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	if o.AttachedResourceId.IsSet() {
		toSerialize["attached_resource_id"] = o.AttachedResourceId.Get()
	}
	if o.AttachedResourceName.IsSet() {
		toSerialize["attached_resource_name"] = o.AttachedResourceName.Get()
	}
	if o.AttachedResourceType.IsSet() {
		toSerialize["attached_resource_type"] = o.AttachedResourceType.Get()
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["id"] = o.Id
	toSerialize["ip_address"] = o.IpAddress
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	toSerialize["state"] = o.State
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *Publicip) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"created_at",
		"created_by",
		"id",
		"ip_address",
		"modified_at",
		"modified_by",
		"state",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicip := _Publicip{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicip)

	if err != nil {
		return err
	}

	*o = Publicip(varPublicip)

	return err
}

type NullablePublicip struct {
	value *Publicip
	isSet bool
}

func (v NullablePublicip) Get() *Publicip {
	return v.value
}

func (v *NullablePublicip) Set(val *Publicip) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicip) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicip) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicip(val *Publicip) *NullablePublicip {
	return &NullablePublicip{value: val, isSet: true}
}

func (v NullablePublicip) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicip) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
