/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6894
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the VpcEndpointConnectableResourceDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VpcEndpointConnectableResourceDetail{}

// VpcEndpointConnectableResourceDetail struct for VpcEndpointConnectableResourceDetail
type VpcEndpointConnectableResourceDetail struct {
	// VPC Endpoint Resource Key Info
	ResourceInfo string `json:"resource_info"`
	// VPC Endpoint Resource Key
	ResourceKey string `json:"resource_key"`
	// VPC Endpoint Resource Type
	ResourceType VpcEndpointResourceType `json:"resource_type"`
}

type _VpcEndpointConnectableResourceDetail VpcEndpointConnectableResourceDetail

// NewVpcEndpointConnectableResourceDetail instantiates a new VpcEndpointConnectableResourceDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVpcEndpointConnectableResourceDetail(resourceInfo string, resourceKey string, resourceType VpcEndpointResourceType) *VpcEndpointConnectableResourceDetail {
	this := VpcEndpointConnectableResourceDetail{}
	this.ResourceInfo = resourceInfo
	this.ResourceKey = resourceKey
	this.ResourceType = resourceType
	return &this
}

// NewVpcEndpointConnectableResourceDetailWithDefaults instantiates a new VpcEndpointConnectableResourceDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVpcEndpointConnectableResourceDetailWithDefaults() *VpcEndpointConnectableResourceDetail {
	this := VpcEndpointConnectableResourceDetail{}
	return &this
}

// GetResourceInfo returns the ResourceInfo field value
func (o *VpcEndpointConnectableResourceDetail) GetResourceInfo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceInfo
}

// GetResourceInfoOk returns a tuple with the ResourceInfo field value
// and a boolean to check if the value has been set.
func (o *VpcEndpointConnectableResourceDetail) GetResourceInfoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceInfo, true
}

// SetResourceInfo sets field value
func (o *VpcEndpointConnectableResourceDetail) SetResourceInfo(v string) {
	o.ResourceInfo = v
}

// GetResourceKey returns the ResourceKey field value
func (o *VpcEndpointConnectableResourceDetail) GetResourceKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceKey
}

// GetResourceKeyOk returns a tuple with the ResourceKey field value
// and a boolean to check if the value has been set.
func (o *VpcEndpointConnectableResourceDetail) GetResourceKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceKey, true
}

// SetResourceKey sets field value
func (o *VpcEndpointConnectableResourceDetail) SetResourceKey(v string) {
	o.ResourceKey = v
}

// GetResourceType returns the ResourceType field value
func (o *VpcEndpointConnectableResourceDetail) GetResourceType() VpcEndpointResourceType {
	if o == nil {
		var ret VpcEndpointResourceType
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *VpcEndpointConnectableResourceDetail) GetResourceTypeOk() (*VpcEndpointResourceType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *VpcEndpointConnectableResourceDetail) SetResourceType(v VpcEndpointResourceType) {
	o.ResourceType = v
}

func (o VpcEndpointConnectableResourceDetail) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VpcEndpointConnectableResourceDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resource_info"] = o.ResourceInfo
	toSerialize["resource_key"] = o.ResourceKey
	toSerialize["resource_type"] = o.ResourceType
	return toSerialize, nil
}

func (o *VpcEndpointConnectableResourceDetail) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"resource_info",
		"resource_key",
		"resource_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVpcEndpointConnectableResourceDetail := _VpcEndpointConnectableResourceDetail{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVpcEndpointConnectableResourceDetail)

	if err != nil {
		return err
	}

	*o = VpcEndpointConnectableResourceDetail(varVpcEndpointConnectableResourceDetail)

	return err
}

type NullableVpcEndpointConnectableResourceDetail struct {
	value *VpcEndpointConnectableResourceDetail
	isSet bool
}

func (v NullableVpcEndpointConnectableResourceDetail) Get() *VpcEndpointConnectableResourceDetail {
	return v.value
}

func (v *NullableVpcEndpointConnectableResourceDetail) Set(val *VpcEndpointConnectableResourceDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableVpcEndpointConnectableResourceDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableVpcEndpointConnectableResourceDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpcEndpointConnectableResourceDetail(val *VpcEndpointConnectableResourceDetail) *NullableVpcEndpointConnectableResourceDetail {
	return &NullableVpcEndpointConnectableResourceDetail{value: val, isSet: true}
}

func (v NullableVpcEndpointConnectableResourceDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpcEndpointConnectableResourceDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
