/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev1795
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mariadb

import (
	"encoding/json"
)

// checks if the ArchiveConfigSetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArchiveConfigSetRequest{}

// ArchiveConfigSetRequest struct for ArchiveConfigSetRequest
type ArchiveConfigSetRequest struct {
	// Archive enabled
	ArchiveEnabled *bool `json:"archive_enabled,omitempty"`
	// Backup retention period (day)
	RetentionPeriodDay *int32 `json:"retention_period_day,omitempty"`
}

// NewArchiveConfigSetRequest instantiates a new ArchiveConfigSetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArchiveConfigSetRequest() *ArchiveConfigSetRequest {
	this := ArchiveConfigSetRequest{}
	var archiveEnabled bool = true
	this.ArchiveEnabled = &archiveEnabled
	var retentionPeriodDay int32 = 3
	this.RetentionPeriodDay = &retentionPeriodDay
	return &this
}

// NewArchiveConfigSetRequestWithDefaults instantiates a new ArchiveConfigSetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArchiveConfigSetRequestWithDefaults() *ArchiveConfigSetRequest {
	this := ArchiveConfigSetRequest{}
	var archiveEnabled bool = true
	this.ArchiveEnabled = &archiveEnabled
	var retentionPeriodDay int32 = 3
	this.RetentionPeriodDay = &retentionPeriodDay
	return &this
}

// GetArchiveEnabled returns the ArchiveEnabled field value if set, zero value otherwise.
func (o *ArchiveConfigSetRequest) GetArchiveEnabled() bool {
	if o == nil || IsNil(o.ArchiveEnabled) {
		var ret bool
		return ret
	}
	return *o.ArchiveEnabled
}

// GetArchiveEnabledOk returns a tuple with the ArchiveEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArchiveConfigSetRequest) GetArchiveEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ArchiveEnabled) {
		return nil, false
	}
	return o.ArchiveEnabled, true
}

// HasArchiveEnabled returns a boolean if a field has been set.
func (o *ArchiveConfigSetRequest) HasArchiveEnabled() bool {
	if o != nil && !IsNil(o.ArchiveEnabled) {
		return true
	}

	return false
}

// SetArchiveEnabled gets a reference to the given bool and assigns it to the ArchiveEnabled field.
func (o *ArchiveConfigSetRequest) SetArchiveEnabled(v bool) {
	o.ArchiveEnabled = &v
}

// GetRetentionPeriodDay returns the RetentionPeriodDay field value if set, zero value otherwise.
func (o *ArchiveConfigSetRequest) GetRetentionPeriodDay() int32 {
	if o == nil || IsNil(o.RetentionPeriodDay) {
		var ret int32
		return ret
	}
	return *o.RetentionPeriodDay
}

// GetRetentionPeriodDayOk returns a tuple with the RetentionPeriodDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArchiveConfigSetRequest) GetRetentionPeriodDayOk() (*int32, bool) {
	if o == nil || IsNil(o.RetentionPeriodDay) {
		return nil, false
	}
	return o.RetentionPeriodDay, true
}

// HasRetentionPeriodDay returns a boolean if a field has been set.
func (o *ArchiveConfigSetRequest) HasRetentionPeriodDay() bool {
	if o != nil && !IsNil(o.RetentionPeriodDay) {
		return true
	}

	return false
}

// SetRetentionPeriodDay gets a reference to the given int32 and assigns it to the RetentionPeriodDay field.
func (o *ArchiveConfigSetRequest) SetRetentionPeriodDay(v int32) {
	o.RetentionPeriodDay = &v
}

func (o ArchiveConfigSetRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArchiveConfigSetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ArchiveEnabled) {
		toSerialize["archive_enabled"] = o.ArchiveEnabled
	}
	if !IsNil(o.RetentionPeriodDay) {
		toSerialize["retention_period_day"] = o.RetentionPeriodDay
	}
	return toSerialize, nil
}

type NullableArchiveConfigSetRequest struct {
	value *ArchiveConfigSetRequest
	isSet bool
}

func (v NullableArchiveConfigSetRequest) Get() *ArchiveConfigSetRequest {
	return v.value
}

func (v *NullableArchiveConfigSetRequest) Set(val *ArchiveConfigSetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableArchiveConfigSetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableArchiveConfigSetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArchiveConfigSetRequest(val *ArchiveConfigSetRequest) *NullableArchiveConfigSetRequest {
	return &NullableArchiveConfigSetRequest{value: val, isSet: true}
}

func (v NullableArchiveConfigSetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArchiveConfigSetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


