/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev1795
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mariadb

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BackupHistoryListApiResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupHistoryListApiResponse{}

// BackupHistoryListApiResponse struct for BackupHistoryListApiResponse
type BackupHistoryListApiResponse struct {
	// backup list information
	Contents []BackupHistoryApiItem `json:"contents"`
	// total number of backup history
	TotalCount int32 `json:"total_count"`
}

type _BackupHistoryListApiResponse BackupHistoryListApiResponse

// NewBackupHistoryListApiResponse instantiates a new BackupHistoryListApiResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupHistoryListApiResponse(contents []BackupHistoryApiItem, totalCount int32) *BackupHistoryListApiResponse {
	this := BackupHistoryListApiResponse{}
	this.Contents = contents
	this.TotalCount = totalCount
	return &this
}

// NewBackupHistoryListApiResponseWithDefaults instantiates a new BackupHistoryListApiResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupHistoryListApiResponseWithDefaults() *BackupHistoryListApiResponse {
	this := BackupHistoryListApiResponse{}
	return &this
}

// GetContents returns the Contents field value
func (o *BackupHistoryListApiResponse) GetContents() []BackupHistoryApiItem {
	if o == nil {
		var ret []BackupHistoryApiItem
		return ret
	}

	return o.Contents
}

// GetContentsOk returns a tuple with the Contents field value
// and a boolean to check if the value has been set.
func (o *BackupHistoryListApiResponse) GetContentsOk() ([]BackupHistoryApiItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Contents, true
}

// SetContents sets field value
func (o *BackupHistoryListApiResponse) SetContents(v []BackupHistoryApiItem) {
	o.Contents = v
}

// GetTotalCount returns the TotalCount field value
func (o *BackupHistoryListApiResponse) GetTotalCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value
// and a boolean to check if the value has been set.
func (o *BackupHistoryListApiResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalCount, true
}

// SetTotalCount sets field value
func (o *BackupHistoryListApiResponse) SetTotalCount(v int32) {
	o.TotalCount = v
}

func (o BackupHistoryListApiResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupHistoryListApiResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contents"] = o.Contents
	toSerialize["total_count"] = o.TotalCount
	return toSerialize, nil
}

func (o *BackupHistoryListApiResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"contents",
		"total_count",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBackupHistoryListApiResponse := _BackupHistoryListApiResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBackupHistoryListApiResponse)

	if err != nil {
		return err
	}

	*o = BackupHistoryListApiResponse(varBackupHistoryListApiResponse)

	return err
}

type NullableBackupHistoryListApiResponse struct {
	value *BackupHistoryListApiResponse
	isSet bool
}

func (v NullableBackupHistoryListApiResponse) Get() *BackupHistoryListApiResponse {
	return v.value
}

func (v *NullableBackupHistoryListApiResponse) Set(val *BackupHistoryListApiResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupHistoryListApiResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupHistoryListApiResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupHistoryListApiResponse(val *BackupHistoryListApiResponse) *NullableBackupHistoryListApiResponse {
	return &NullableBackupHistoryListApiResponse{value: val, isSet: true}
}

func (v NullableBackupHistoryListApiResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupHistoryListApiResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


