/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2162
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mariadb

import (
	"encoding/json"
)

// checks if the AccessControlSetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessControlSetRequest{}

// AccessControlSetRequest struct for AccessControlSetRequest
type AccessControlSetRequest struct {
	AddAccessControl []AccessControlRequest `json:"add_access_control,omitempty"`
	DelAccessControl []AccessControlRequest `json:"del_access_control,omitempty"`
}

// NewAccessControlSetRequest instantiates a new AccessControlSetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessControlSetRequest() *AccessControlSetRequest {
	this := AccessControlSetRequest{}
	return &this
}

// NewAccessControlSetRequestWithDefaults instantiates a new AccessControlSetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessControlSetRequestWithDefaults() *AccessControlSetRequest {
	this := AccessControlSetRequest{}
	return &this
}

// GetAddAccessControl returns the AddAccessControl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessControlSetRequest) GetAddAccessControl() []AccessControlRequest {
	if o == nil {
		var ret []AccessControlRequest
		return ret
	}
	return o.AddAccessControl
}

// GetAddAccessControlOk returns a tuple with the AddAccessControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessControlSetRequest) GetAddAccessControlOk() ([]AccessControlRequest, bool) {
	if o == nil || IsNil(o.AddAccessControl) {
		return nil, false
	}
	return o.AddAccessControl, true
}

// HasAddAccessControl returns a boolean if a field has been set.
func (o *AccessControlSetRequest) HasAddAccessControl() bool {
	if o != nil && !IsNil(o.AddAccessControl) {
		return true
	}

	return false
}

// SetAddAccessControl gets a reference to the given []AccessControlRequest and assigns it to the AddAccessControl field.
func (o *AccessControlSetRequest) SetAddAccessControl(v []AccessControlRequest) {
	o.AddAccessControl = v
}

// GetDelAccessControl returns the DelAccessControl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessControlSetRequest) GetDelAccessControl() []AccessControlRequest {
	if o == nil {
		var ret []AccessControlRequest
		return ret
	}
	return o.DelAccessControl
}

// GetDelAccessControlOk returns a tuple with the DelAccessControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessControlSetRequest) GetDelAccessControlOk() ([]AccessControlRequest, bool) {
	if o == nil || IsNil(o.DelAccessControl) {
		return nil, false
	}
	return o.DelAccessControl, true
}

// HasDelAccessControl returns a boolean if a field has been set.
func (o *AccessControlSetRequest) HasDelAccessControl() bool {
	if o != nil && !IsNil(o.DelAccessControl) {
		return true
	}

	return false
}

// SetDelAccessControl gets a reference to the given []AccessControlRequest and assigns it to the DelAccessControl field.
func (o *AccessControlSetRequest) SetDelAccessControl(v []AccessControlRequest) {
	o.DelAccessControl = v
}

func (o AccessControlSetRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessControlSetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AddAccessControl != nil {
		toSerialize["add_access_control"] = o.AddAccessControl
	}
	if o.DelAccessControl != nil {
		toSerialize["del_access_control"] = o.DelAccessControl
	}
	return toSerialize, nil
}

type NullableAccessControlSetRequest struct {
	value *AccessControlSetRequest
	isSet bool
}

func (v NullableAccessControlSetRequest) Get() *AccessControlSetRequest {
	return v.value
}

func (v *NullableAccessControlSetRequest) Set(val *AccessControlSetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessControlSetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessControlSetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessControlSetRequest(val *AccessControlSetRequest) *NullableAccessControlSetRequest {
	return &NullableAccessControlSetRequest{value: val, isSet: true}
}

func (v NullableAccessControlSetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessControlSetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
