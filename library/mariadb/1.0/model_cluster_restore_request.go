/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2162
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mariadb

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ClusterRestoreRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterRestoreRequest{}

// ClusterRestoreRequest struct for ClusterRestoreRequest
type ClusterRestoreRequest struct {
	// Allowed IP addresses list
	AllowableIpAddresses []string                   `json:"allowable_ip_addresses,omitempty"`
	BackupHistoryNumber  NullableString             `json:"backup_history_number,omitempty"`
	BackupRecoveryTime   NullableTime               `json:"backup_recovery_time,omitempty"`
	BlockStorageGroups   []BlockStorageGroupRequest `json:"block_storage_groups,omitempty"`
	// Instance name prefix
	InstanceNamePrefix string                    `json:"instance_name_prefix" validate:"regexp=^[a-z][a-zA-Z0-9\\\\-]*$"`
	MaintenanceOption  NullableMaintenanceOption `json:"maintenance_option,omitempty"`
	// Cluster name
	Name string `json:"name" validate:"regexp=^[a-zA-Z]*$"`
	// Server type name
	ServerTypeName string `json:"server_type_name"`
	Tags           []Tag  `json:"tags,omitempty"`
}

type _ClusterRestoreRequest ClusterRestoreRequest

// NewClusterRestoreRequest instantiates a new ClusterRestoreRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterRestoreRequest(instanceNamePrefix string, name string, serverTypeName string) *ClusterRestoreRequest {
	this := ClusterRestoreRequest{}
	this.InstanceNamePrefix = instanceNamePrefix
	this.Name = name
	this.ServerTypeName = serverTypeName
	return &this
}

// NewClusterRestoreRequestWithDefaults instantiates a new ClusterRestoreRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterRestoreRequestWithDefaults() *ClusterRestoreRequest {
	this := ClusterRestoreRequest{}
	return &this
}

// GetAllowableIpAddresses returns the AllowableIpAddresses field value if set, zero value otherwise.
func (o *ClusterRestoreRequest) GetAllowableIpAddresses() []string {
	if o == nil || IsNil(o.AllowableIpAddresses) {
		var ret []string
		return ret
	}
	return o.AllowableIpAddresses
}

// GetAllowableIpAddressesOk returns a tuple with the AllowableIpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterRestoreRequest) GetAllowableIpAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowableIpAddresses) {
		return nil, false
	}
	return o.AllowableIpAddresses, true
}

// HasAllowableIpAddresses returns a boolean if a field has been set.
func (o *ClusterRestoreRequest) HasAllowableIpAddresses() bool {
	if o != nil && !IsNil(o.AllowableIpAddresses) {
		return true
	}

	return false
}

// SetAllowableIpAddresses gets a reference to the given []string and assigns it to the AllowableIpAddresses field.
func (o *ClusterRestoreRequest) SetAllowableIpAddresses(v []string) {
	o.AllowableIpAddresses = v
}

// GetBackupHistoryNumber returns the BackupHistoryNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterRestoreRequest) GetBackupHistoryNumber() string {
	if o == nil || IsNil(o.BackupHistoryNumber.Get()) {
		var ret string
		return ret
	}
	return *o.BackupHistoryNumber.Get()
}

// GetBackupHistoryNumberOk returns a tuple with the BackupHistoryNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterRestoreRequest) GetBackupHistoryNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackupHistoryNumber.Get(), o.BackupHistoryNumber.IsSet()
}

// HasBackupHistoryNumber returns a boolean if a field has been set.
func (o *ClusterRestoreRequest) HasBackupHistoryNumber() bool {
	if o != nil && o.BackupHistoryNumber.IsSet() {
		return true
	}

	return false
}

// SetBackupHistoryNumber gets a reference to the given NullableString and assigns it to the BackupHistoryNumber field.
func (o *ClusterRestoreRequest) SetBackupHistoryNumber(v string) {
	o.BackupHistoryNumber.Set(&v)
}

// SetBackupHistoryNumberNil sets the value for BackupHistoryNumber to be an explicit nil
func (o *ClusterRestoreRequest) SetBackupHistoryNumberNil() {
	o.BackupHistoryNumber.Set(nil)
}

// UnsetBackupHistoryNumber ensures that no value is present for BackupHistoryNumber, not even an explicit nil
func (o *ClusterRestoreRequest) UnsetBackupHistoryNumber() {
	o.BackupHistoryNumber.Unset()
}

// GetBackupRecoveryTime returns the BackupRecoveryTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterRestoreRequest) GetBackupRecoveryTime() time.Time {
	if o == nil || IsNil(o.BackupRecoveryTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.BackupRecoveryTime.Get()
}

// GetBackupRecoveryTimeOk returns a tuple with the BackupRecoveryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterRestoreRequest) GetBackupRecoveryTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackupRecoveryTime.Get(), o.BackupRecoveryTime.IsSet()
}

// HasBackupRecoveryTime returns a boolean if a field has been set.
func (o *ClusterRestoreRequest) HasBackupRecoveryTime() bool {
	if o != nil && o.BackupRecoveryTime.IsSet() {
		return true
	}

	return false
}

// SetBackupRecoveryTime gets a reference to the given NullableTime and assigns it to the BackupRecoveryTime field.
func (o *ClusterRestoreRequest) SetBackupRecoveryTime(v time.Time) {
	o.BackupRecoveryTime.Set(&v)
}

// SetBackupRecoveryTimeNil sets the value for BackupRecoveryTime to be an explicit nil
func (o *ClusterRestoreRequest) SetBackupRecoveryTimeNil() {
	o.BackupRecoveryTime.Set(nil)
}

// UnsetBackupRecoveryTime ensures that no value is present for BackupRecoveryTime, not even an explicit nil
func (o *ClusterRestoreRequest) UnsetBackupRecoveryTime() {
	o.BackupRecoveryTime.Unset()
}

// GetBlockStorageGroups returns the BlockStorageGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterRestoreRequest) GetBlockStorageGroups() []BlockStorageGroupRequest {
	if o == nil {
		var ret []BlockStorageGroupRequest
		return ret
	}
	return o.BlockStorageGroups
}

// GetBlockStorageGroupsOk returns a tuple with the BlockStorageGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterRestoreRequest) GetBlockStorageGroupsOk() ([]BlockStorageGroupRequest, bool) {
	if o == nil || IsNil(o.BlockStorageGroups) {
		return nil, false
	}
	return o.BlockStorageGroups, true
}

// HasBlockStorageGroups returns a boolean if a field has been set.
func (o *ClusterRestoreRequest) HasBlockStorageGroups() bool {
	if o != nil && !IsNil(o.BlockStorageGroups) {
		return true
	}

	return false
}

// SetBlockStorageGroups gets a reference to the given []BlockStorageGroupRequest and assigns it to the BlockStorageGroups field.
func (o *ClusterRestoreRequest) SetBlockStorageGroups(v []BlockStorageGroupRequest) {
	o.BlockStorageGroups = v
}

// GetInstanceNamePrefix returns the InstanceNamePrefix field value
func (o *ClusterRestoreRequest) GetInstanceNamePrefix() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceNamePrefix
}

// GetInstanceNamePrefixOk returns a tuple with the InstanceNamePrefix field value
// and a boolean to check if the value has been set.
func (o *ClusterRestoreRequest) GetInstanceNamePrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceNamePrefix, true
}

// SetInstanceNamePrefix sets field value
func (o *ClusterRestoreRequest) SetInstanceNamePrefix(v string) {
	o.InstanceNamePrefix = v
}

// GetMaintenanceOption returns the MaintenanceOption field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterRestoreRequest) GetMaintenanceOption() MaintenanceOption {
	if o == nil || IsNil(o.MaintenanceOption.Get()) {
		var ret MaintenanceOption
		return ret
	}
	return *o.MaintenanceOption.Get()
}

// GetMaintenanceOptionOk returns a tuple with the MaintenanceOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterRestoreRequest) GetMaintenanceOptionOk() (*MaintenanceOption, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaintenanceOption.Get(), o.MaintenanceOption.IsSet()
}

// HasMaintenanceOption returns a boolean if a field has been set.
func (o *ClusterRestoreRequest) HasMaintenanceOption() bool {
	if o != nil && o.MaintenanceOption.IsSet() {
		return true
	}

	return false
}

// SetMaintenanceOption gets a reference to the given NullableMaintenanceOption and assigns it to the MaintenanceOption field.
func (o *ClusterRestoreRequest) SetMaintenanceOption(v MaintenanceOption) {
	o.MaintenanceOption.Set(&v)
}

// SetMaintenanceOptionNil sets the value for MaintenanceOption to be an explicit nil
func (o *ClusterRestoreRequest) SetMaintenanceOptionNil() {
	o.MaintenanceOption.Set(nil)
}

// UnsetMaintenanceOption ensures that no value is present for MaintenanceOption, not even an explicit nil
func (o *ClusterRestoreRequest) UnsetMaintenanceOption() {
	o.MaintenanceOption.Unset()
}

// GetName returns the Name field value
func (o *ClusterRestoreRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ClusterRestoreRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ClusterRestoreRequest) SetName(v string) {
	o.Name = v
}

// GetServerTypeName returns the ServerTypeName field value
func (o *ClusterRestoreRequest) GetServerTypeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerTypeName
}

// GetServerTypeNameOk returns a tuple with the ServerTypeName field value
// and a boolean to check if the value has been set.
func (o *ClusterRestoreRequest) GetServerTypeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerTypeName, true
}

// SetServerTypeName sets field value
func (o *ClusterRestoreRequest) SetServerTypeName(v string) {
	o.ServerTypeName = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterRestoreRequest) GetTags() []Tag {
	if o == nil {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterRestoreRequest) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ClusterRestoreRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *ClusterRestoreRequest) SetTags(v []Tag) {
	o.Tags = v
}

func (o ClusterRestoreRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterRestoreRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowableIpAddresses) {
		toSerialize["allowable_ip_addresses"] = o.AllowableIpAddresses
	}
	if o.BackupHistoryNumber.IsSet() {
		toSerialize["backup_history_number"] = o.BackupHistoryNumber.Get()
	}
	if o.BackupRecoveryTime.IsSet() {
		toSerialize["backup_recovery_time"] = o.BackupRecoveryTime.Get()
	}
	if o.BlockStorageGroups != nil {
		toSerialize["block_storage_groups"] = o.BlockStorageGroups
	}
	toSerialize["instance_name_prefix"] = o.InstanceNamePrefix
	if o.MaintenanceOption.IsSet() {
		toSerialize["maintenance_option"] = o.MaintenanceOption.Get()
	}
	toSerialize["name"] = o.Name
	toSerialize["server_type_name"] = o.ServerTypeName
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

func (o *ClusterRestoreRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"instance_name_prefix",
		"name",
		"server_type_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterRestoreRequest := _ClusterRestoreRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClusterRestoreRequest)

	if err != nil {
		return err
	}

	*o = ClusterRestoreRequest(varClusterRestoreRequest)

	return err
}

type NullableClusterRestoreRequest struct {
	value *ClusterRestoreRequest
	isSet bool
}

func (v NullableClusterRestoreRequest) Get() *ClusterRestoreRequest {
	return v.value
}

func (v *NullableClusterRestoreRequest) Set(val *ClusterRestoreRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterRestoreRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterRestoreRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterRestoreRequest(val *ClusterRestoreRequest) *NullableClusterRestoreRequest {
	return &NullableClusterRestoreRequest{value: val, isSet: true}
}

func (v NullableClusterRestoreRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterRestoreRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
