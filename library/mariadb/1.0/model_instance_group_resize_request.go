/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2162
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mariadb

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the InstanceGroupResizeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceGroupResizeRequest{}

// InstanceGroupResizeRequest struct for InstanceGroupResizeRequest
type InstanceGroupResizeRequest struct {
	// Server type name
	ServerTypeName string `json:"server_type_name"`
}

type _InstanceGroupResizeRequest InstanceGroupResizeRequest

// NewInstanceGroupResizeRequest instantiates a new InstanceGroupResizeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceGroupResizeRequest(serverTypeName string) *InstanceGroupResizeRequest {
	this := InstanceGroupResizeRequest{}
	this.ServerTypeName = serverTypeName
	return &this
}

// NewInstanceGroupResizeRequestWithDefaults instantiates a new InstanceGroupResizeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceGroupResizeRequestWithDefaults() *InstanceGroupResizeRequest {
	this := InstanceGroupResizeRequest{}
	return &this
}

// GetServerTypeName returns the ServerTypeName field value
func (o *InstanceGroupResizeRequest) GetServerTypeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerTypeName
}

// GetServerTypeNameOk returns a tuple with the ServerTypeName field value
// and a boolean to check if the value has been set.
func (o *InstanceGroupResizeRequest) GetServerTypeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerTypeName, true
}

// SetServerTypeName sets field value
func (o *InstanceGroupResizeRequest) SetServerTypeName(v string) {
	o.ServerTypeName = v
}

func (o InstanceGroupResizeRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstanceGroupResizeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["server_type_name"] = o.ServerTypeName
	return toSerialize, nil
}

func (o *InstanceGroupResizeRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"server_type_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInstanceGroupResizeRequest := _InstanceGroupResizeRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInstanceGroupResizeRequest)

	if err != nil {
		return err
	}

	*o = InstanceGroupResizeRequest(varInstanceGroupResizeRequest)

	return err
}

type NullableInstanceGroupResizeRequest struct {
	value *InstanceGroupResizeRequest
	isSet bool
}

func (v NullableInstanceGroupResizeRequest) Get() *InstanceGroupResizeRequest {
	return v.value
}

func (v *NullableInstanceGroupResizeRequest) Set(val *InstanceGroupResizeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceGroupResizeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceGroupResizeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceGroupResizeRequest(val *InstanceGroupResizeRequest) *NullableInstanceGroupResizeRequest {
	return &NullableInstanceGroupResizeRequest{value: val, isSet: true}
}

func (v NullableInstanceGroupResizeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceGroupResizeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
