/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2162
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mariadb

import (
	"encoding/json"
	"fmt"
)

// InstanceGroupRoleType the model 'InstanceGroupRoleType'
type InstanceGroupRoleType string

// List of InstanceGroupRoleType
const (
	INSTANCEGROUPROLETYPE_ACTIVE            InstanceGroupRoleType = "ACTIVE"
	INSTANCEGROUPROLETYPE_ACTIVE_STANDBY    InstanceGroupRoleType = "ACTIVE_STANDBY"
	INSTANCEGROUPROLETYPE_PRIMARY_SECONDARY InstanceGroupRoleType = "PRIMARY_SECONDARY"
	INSTANCEGROUPROLETYPE_MASTER            InstanceGroupRoleType = "MASTER"
	INSTANCEGROUPROLETYPE_MASTER_REPLICA    InstanceGroupRoleType = "MASTER_REPLICA"
	INSTANCEGROUPROLETYPE_REPLICA           InstanceGroupRoleType = "REPLICA"
	INSTANCEGROUPROLETYPE_SENTINEL          InstanceGroupRoleType = "SENTINEL"
	INSTANCEGROUPROLETYPE_MASTER_DATA       InstanceGroupRoleType = "MASTER_DATA"
	INSTANCEGROUPROLETYPE_DATA              InstanceGroupRoleType = "DATA"
	INSTANCEGROUPROLETYPE_KIBANA            InstanceGroupRoleType = "KIBANA"
	INSTANCEGROUPROLETYPE_DASHBOARDS        InstanceGroupRoleType = "DASHBOARDS"
	INSTANCEGROUPROLETYPE_ZOOKEEPER_BROKER  InstanceGroupRoleType = "ZOOKEEPER_BROKER"
	INSTANCEGROUPROLETYPE_BROKER            InstanceGroupRoleType = "BROKER"
	INSTANCEGROUPROLETYPE_ZOOKEEPER         InstanceGroupRoleType = "ZOOKEEPER"
	INSTANCEGROUPROLETYPE_AKHQ              InstanceGroupRoleType = "AKHQ"
	INSTANCEGROUPROLETYPE_CONSOLE           InstanceGroupRoleType = "CONSOLE"
)

// All allowed values of InstanceGroupRoleType enum
var AllowedInstanceGroupRoleTypeEnumValues = []InstanceGroupRoleType{
	"ACTIVE",
	"ACTIVE_STANDBY",
	"PRIMARY_SECONDARY",
	"MASTER",
	"MASTER_REPLICA",
	"REPLICA",
	"SENTINEL",
	"MASTER_DATA",
	"DATA",
	"KIBANA",
	"DASHBOARDS",
	"ZOOKEEPER_BROKER",
	"BROKER",
	"ZOOKEEPER",
	"AKHQ",
	"CONSOLE",
}

func (v *InstanceGroupRoleType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := InstanceGroupRoleType(value)
	for _, existing := range AllowedInstanceGroupRoleTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid InstanceGroupRoleType", value)
}

// NewInstanceGroupRoleTypeFromValue returns a pointer to a valid InstanceGroupRoleType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewInstanceGroupRoleTypeFromValue(v string) (*InstanceGroupRoleType, error) {
	ev := InstanceGroupRoleType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for InstanceGroupRoleType: valid values are %v", v, AllowedInstanceGroupRoleTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v InstanceGroupRoleType) IsValid() bool {
	for _, existing := range AllowedInstanceGroupRoleTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to InstanceGroupRoleType value
func (v InstanceGroupRoleType) Ptr() *InstanceGroupRoleType {
	return &v
}

type NullableInstanceGroupRoleType struct {
	value *InstanceGroupRoleType
	isSet bool
}

func (v NullableInstanceGroupRoleType) Get() *InstanceGroupRoleType {
	return v.value
}

func (v *NullableInstanceGroupRoleType) Set(val *InstanceGroupRoleType) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceGroupRoleType) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceGroupRoleType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceGroupRoleType(val *InstanceGroupRoleType) *NullableInstanceGroupRoleType {
	return &NullableInstanceGroupRoleType{value: val, isSet: true}
}

func (v NullableInstanceGroupRoleType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceGroupRoleType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
