/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2162
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mariadb

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ReplicasCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicasCreateRequest{}

// ReplicasCreateRequest struct for ReplicasCreateRequest
type ReplicasCreateRequest struct {
	// Allowed IP addresses list
	AllowableIpAddresses []string                  `json:"allowable_ip_addresses,omitempty"`
	MaintenanceOption    NullableMaintenanceOption `json:"maintenance_option,omitempty"`
	// Replica count
	ReplicaCount int32 `json:"replica_count"`
	// Replicas list
	Replicas []Replicas `json:"replicas"`
	Tags     []Tag      `json:"tags,omitempty"`
}

type _ReplicasCreateRequest ReplicasCreateRequest

// NewReplicasCreateRequest instantiates a new ReplicasCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicasCreateRequest(replicaCount int32, replicas []Replicas) *ReplicasCreateRequest {
	this := ReplicasCreateRequest{}
	this.ReplicaCount = replicaCount
	this.Replicas = replicas
	return &this
}

// NewReplicasCreateRequestWithDefaults instantiates a new ReplicasCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicasCreateRequestWithDefaults() *ReplicasCreateRequest {
	this := ReplicasCreateRequest{}
	return &this
}

// GetAllowableIpAddresses returns the AllowableIpAddresses field value if set, zero value otherwise.
func (o *ReplicasCreateRequest) GetAllowableIpAddresses() []string {
	if o == nil || IsNil(o.AllowableIpAddresses) {
		var ret []string
		return ret
	}
	return o.AllowableIpAddresses
}

// GetAllowableIpAddressesOk returns a tuple with the AllowableIpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicasCreateRequest) GetAllowableIpAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowableIpAddresses) {
		return nil, false
	}
	return o.AllowableIpAddresses, true
}

// HasAllowableIpAddresses returns a boolean if a field has been set.
func (o *ReplicasCreateRequest) HasAllowableIpAddresses() bool {
	if o != nil && !IsNil(o.AllowableIpAddresses) {
		return true
	}

	return false
}

// SetAllowableIpAddresses gets a reference to the given []string and assigns it to the AllowableIpAddresses field.
func (o *ReplicasCreateRequest) SetAllowableIpAddresses(v []string) {
	o.AllowableIpAddresses = v
}

// GetMaintenanceOption returns the MaintenanceOption field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicasCreateRequest) GetMaintenanceOption() MaintenanceOption {
	if o == nil || IsNil(o.MaintenanceOption.Get()) {
		var ret MaintenanceOption
		return ret
	}
	return *o.MaintenanceOption.Get()
}

// GetMaintenanceOptionOk returns a tuple with the MaintenanceOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicasCreateRequest) GetMaintenanceOptionOk() (*MaintenanceOption, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaintenanceOption.Get(), o.MaintenanceOption.IsSet()
}

// HasMaintenanceOption returns a boolean if a field has been set.
func (o *ReplicasCreateRequest) HasMaintenanceOption() bool {
	if o != nil && o.MaintenanceOption.IsSet() {
		return true
	}

	return false
}

// SetMaintenanceOption gets a reference to the given NullableMaintenanceOption and assigns it to the MaintenanceOption field.
func (o *ReplicasCreateRequest) SetMaintenanceOption(v MaintenanceOption) {
	o.MaintenanceOption.Set(&v)
}

// SetMaintenanceOptionNil sets the value for MaintenanceOption to be an explicit nil
func (o *ReplicasCreateRequest) SetMaintenanceOptionNil() {
	o.MaintenanceOption.Set(nil)
}

// UnsetMaintenanceOption ensures that no value is present for MaintenanceOption, not even an explicit nil
func (o *ReplicasCreateRequest) UnsetMaintenanceOption() {
	o.MaintenanceOption.Unset()
}

// GetReplicaCount returns the ReplicaCount field value
func (o *ReplicasCreateRequest) GetReplicaCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ReplicaCount
}

// GetReplicaCountOk returns a tuple with the ReplicaCount field value
// and a boolean to check if the value has been set.
func (o *ReplicasCreateRequest) GetReplicaCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReplicaCount, true
}

// SetReplicaCount sets field value
func (o *ReplicasCreateRequest) SetReplicaCount(v int32) {
	o.ReplicaCount = v
}

// GetReplicas returns the Replicas field value
func (o *ReplicasCreateRequest) GetReplicas() []Replicas {
	if o == nil {
		var ret []Replicas
		return ret
	}

	return o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value
// and a boolean to check if the value has been set.
func (o *ReplicasCreateRequest) GetReplicasOk() ([]Replicas, bool) {
	if o == nil {
		return nil, false
	}
	return o.Replicas, true
}

// SetReplicas sets field value
func (o *ReplicasCreateRequest) SetReplicas(v []Replicas) {
	o.Replicas = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplicasCreateRequest) GetTags() []Tag {
	if o == nil {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicasCreateRequest) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ReplicasCreateRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *ReplicasCreateRequest) SetTags(v []Tag) {
	o.Tags = v
}

func (o ReplicasCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicasCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowableIpAddresses) {
		toSerialize["allowable_ip_addresses"] = o.AllowableIpAddresses
	}
	if o.MaintenanceOption.IsSet() {
		toSerialize["maintenance_option"] = o.MaintenanceOption.Get()
	}
	toSerialize["replica_count"] = o.ReplicaCount
	toSerialize["replicas"] = o.Replicas
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

func (o *ReplicasCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"replica_count",
		"replicas",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReplicasCreateRequest := _ReplicasCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varReplicasCreateRequest)

	if err != nil {
		return err
	}

	*o = ReplicasCreateRequest(varReplicasCreateRequest)

	return err
}

type NullableReplicasCreateRequest struct {
	value *ReplicasCreateRequest
	isSet bool
}

func (v NullableReplicasCreateRequest) Get() *ReplicasCreateRequest {
	return v.value
}

func (v *NullableReplicasCreateRequest) Set(val *ReplicasCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicasCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicasCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicasCreateRequest(val *ReplicasCreateRequest) *NullableReplicasCreateRequest {
	return &NullableReplicasCreateRequest{value: val, isSet: true}
}

func (v NullableReplicasCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicasCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
