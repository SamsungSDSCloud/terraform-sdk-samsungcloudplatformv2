/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2162
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mariadb

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the BackupHistoryApiItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupHistoryApiItem{}

// BackupHistoryApiItem struct for BackupHistoryApiItem
type BackupHistoryApiItem struct {
	// Backup end time
	BackupEndAt string `json:"backup_end_at"`
	// Backup id
	BackupHistoryNumber string `json:"backup_history_number"`
	// Backup amount(GB)
	BackupSizeGb float32 `json:"backup_size_gb"`
	// Backup start time
	BackupStartAt string `json:"backup_start_at"`
	// Backup state
	BackupState       string         `json:"backup_state"`
	BackupStateDetail NullableString `json:"backup_state_detail,omitempty"`
	// Software version
	SoftwareVersion string `json:"software_version"`
}

type _BackupHistoryApiItem BackupHistoryApiItem

// NewBackupHistoryApiItem instantiates a new BackupHistoryApiItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupHistoryApiItem(backupEndAt string, backupHistoryNumber string, backupSizeGb float32, backupStartAt string, backupState string, softwareVersion string) *BackupHistoryApiItem {
	this := BackupHistoryApiItem{}
	this.BackupEndAt = backupEndAt
	this.BackupHistoryNumber = backupHistoryNumber
	this.BackupSizeGb = backupSizeGb
	this.BackupStartAt = backupStartAt
	this.BackupState = backupState
	this.SoftwareVersion = softwareVersion
	return &this
}

// NewBackupHistoryApiItemWithDefaults instantiates a new BackupHistoryApiItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupHistoryApiItemWithDefaults() *BackupHistoryApiItem {
	this := BackupHistoryApiItem{}
	return &this
}

// GetBackupEndAt returns the BackupEndAt field value
func (o *BackupHistoryApiItem) GetBackupEndAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackupEndAt
}

// GetBackupEndAtOk returns a tuple with the BackupEndAt field value
// and a boolean to check if the value has been set.
func (o *BackupHistoryApiItem) GetBackupEndAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackupEndAt, true
}

// SetBackupEndAt sets field value
func (o *BackupHistoryApiItem) SetBackupEndAt(v string) {
	o.BackupEndAt = v
}

// GetBackupHistoryNumber returns the BackupHistoryNumber field value
func (o *BackupHistoryApiItem) GetBackupHistoryNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackupHistoryNumber
}

// GetBackupHistoryNumberOk returns a tuple with the BackupHistoryNumber field value
// and a boolean to check if the value has been set.
func (o *BackupHistoryApiItem) GetBackupHistoryNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackupHistoryNumber, true
}

// SetBackupHistoryNumber sets field value
func (o *BackupHistoryApiItem) SetBackupHistoryNumber(v string) {
	o.BackupHistoryNumber = v
}

// GetBackupSizeGb returns the BackupSizeGb field value
func (o *BackupHistoryApiItem) GetBackupSizeGb() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.BackupSizeGb
}

// GetBackupSizeGbOk returns a tuple with the BackupSizeGb field value
// and a boolean to check if the value has been set.
func (o *BackupHistoryApiItem) GetBackupSizeGbOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackupSizeGb, true
}

// SetBackupSizeGb sets field value
func (o *BackupHistoryApiItem) SetBackupSizeGb(v float32) {
	o.BackupSizeGb = v
}

// GetBackupStartAt returns the BackupStartAt field value
func (o *BackupHistoryApiItem) GetBackupStartAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackupStartAt
}

// GetBackupStartAtOk returns a tuple with the BackupStartAt field value
// and a boolean to check if the value has been set.
func (o *BackupHistoryApiItem) GetBackupStartAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackupStartAt, true
}

// SetBackupStartAt sets field value
func (o *BackupHistoryApiItem) SetBackupStartAt(v string) {
	o.BackupStartAt = v
}

// GetBackupState returns the BackupState field value
func (o *BackupHistoryApiItem) GetBackupState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackupState
}

// GetBackupStateOk returns a tuple with the BackupState field value
// and a boolean to check if the value has been set.
func (o *BackupHistoryApiItem) GetBackupStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackupState, true
}

// SetBackupState sets field value
func (o *BackupHistoryApiItem) SetBackupState(v string) {
	o.BackupState = v
}

// GetBackupStateDetail returns the BackupStateDetail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupHistoryApiItem) GetBackupStateDetail() string {
	if o == nil || IsNil(o.BackupStateDetail.Get()) {
		var ret string
		return ret
	}
	return *o.BackupStateDetail.Get()
}

// GetBackupStateDetailOk returns a tuple with the BackupStateDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupHistoryApiItem) GetBackupStateDetailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackupStateDetail.Get(), o.BackupStateDetail.IsSet()
}

// HasBackupStateDetail returns a boolean if a field has been set.
func (o *BackupHistoryApiItem) HasBackupStateDetail() bool {
	if o != nil && o.BackupStateDetail.IsSet() {
		return true
	}

	return false
}

// SetBackupStateDetail gets a reference to the given NullableString and assigns it to the BackupStateDetail field.
func (o *BackupHistoryApiItem) SetBackupStateDetail(v string) {
	o.BackupStateDetail.Set(&v)
}

// SetBackupStateDetailNil sets the value for BackupStateDetail to be an explicit nil
func (o *BackupHistoryApiItem) SetBackupStateDetailNil() {
	o.BackupStateDetail.Set(nil)
}

// UnsetBackupStateDetail ensures that no value is present for BackupStateDetail, not even an explicit nil
func (o *BackupHistoryApiItem) UnsetBackupStateDetail() {
	o.BackupStateDetail.Unset()
}

// GetSoftwareVersion returns the SoftwareVersion field value
func (o *BackupHistoryApiItem) GetSoftwareVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SoftwareVersion
}

// GetSoftwareVersionOk returns a tuple with the SoftwareVersion field value
// and a boolean to check if the value has been set.
func (o *BackupHistoryApiItem) GetSoftwareVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SoftwareVersion, true
}

// SetSoftwareVersion sets field value
func (o *BackupHistoryApiItem) SetSoftwareVersion(v string) {
	o.SoftwareVersion = v
}

func (o BackupHistoryApiItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupHistoryApiItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["backup_end_at"] = o.BackupEndAt
	toSerialize["backup_history_number"] = o.BackupHistoryNumber
	toSerialize["backup_size_gb"] = o.BackupSizeGb
	toSerialize["backup_start_at"] = o.BackupStartAt
	toSerialize["backup_state"] = o.BackupState
	if o.BackupStateDetail.IsSet() {
		toSerialize["backup_state_detail"] = o.BackupStateDetail.Get()
	}
	toSerialize["software_version"] = o.SoftwareVersion
	return toSerialize, nil
}

func (o *BackupHistoryApiItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"backup_end_at",
		"backup_history_number",
		"backup_size_gb",
		"backup_start_at",
		"backup_state",
		"software_version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBackupHistoryApiItem := _BackupHistoryApiItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBackupHistoryApiItem)

	if err != nil {
		return err
	}

	*o = BackupHistoryApiItem(varBackupHistoryApiItem)

	return err
}

type NullableBackupHistoryApiItem struct {
	value *BackupHistoryApiItem
	isSet bool
}

func (v NullableBackupHistoryApiItem) Get() *BackupHistoryApiItem {
	return v.value
}

func (v *NullableBackupHistoryApiItem) Set(val *BackupHistoryApiItem) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupHistoryApiItem) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupHistoryApiItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupHistoryApiItem(val *BackupHistoryApiItem) *NullableBackupHistoryApiItem {
	return &NullableBackupHistoryApiItem{value: val, isSet: true}
}

func (v NullableBackupHistoryApiItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupHistoryApiItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
