/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2162
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mariadb

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ReplicaItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicaItem{}

// ReplicaItem struct for ReplicaItem
type ReplicaItem struct {
	// Server name
	Name               string         `json:"name"`
	ReplicaState       NullableString `json:"replica_state"`
	ReplicaStateDetail NullableString `json:"replica_state_detail"`
	SyncedAt           NullableString `json:"synced_at"`
}

type _ReplicaItem ReplicaItem

// NewReplicaItem instantiates a new ReplicaItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicaItem(name string, replicaState NullableString, replicaStateDetail NullableString, syncedAt NullableString) *ReplicaItem {
	this := ReplicaItem{}
	this.Name = name
	this.ReplicaState = replicaState
	this.ReplicaStateDetail = replicaStateDetail
	this.SyncedAt = syncedAt
	return &this
}

// NewReplicaItemWithDefaults instantiates a new ReplicaItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicaItemWithDefaults() *ReplicaItem {
	this := ReplicaItem{}
	return &this
}

// GetName returns the Name field value
func (o *ReplicaItem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ReplicaItem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ReplicaItem) SetName(v string) {
	o.Name = v
}

// GetReplicaState returns the ReplicaState field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ReplicaItem) GetReplicaState() string {
	if o == nil || o.ReplicaState.Get() == nil {
		var ret string
		return ret
	}

	return *o.ReplicaState.Get()
}

// GetReplicaStateOk returns a tuple with the ReplicaState field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicaItem) GetReplicaStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReplicaState.Get(), o.ReplicaState.IsSet()
}

// SetReplicaState sets field value
func (o *ReplicaItem) SetReplicaState(v string) {
	o.ReplicaState.Set(&v)
}

// GetReplicaStateDetail returns the ReplicaStateDetail field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ReplicaItem) GetReplicaStateDetail() string {
	if o == nil || o.ReplicaStateDetail.Get() == nil {
		var ret string
		return ret
	}

	return *o.ReplicaStateDetail.Get()
}

// GetReplicaStateDetailOk returns a tuple with the ReplicaStateDetail field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicaItem) GetReplicaStateDetailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReplicaStateDetail.Get(), o.ReplicaStateDetail.IsSet()
}

// SetReplicaStateDetail sets field value
func (o *ReplicaItem) SetReplicaStateDetail(v string) {
	o.ReplicaStateDetail.Set(&v)
}

// GetSyncedAt returns the SyncedAt field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ReplicaItem) GetSyncedAt() string {
	if o == nil || o.SyncedAt.Get() == nil {
		var ret string
		return ret
	}

	return *o.SyncedAt.Get()
}

// GetSyncedAtOk returns a tuple with the SyncedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplicaItem) GetSyncedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SyncedAt.Get(), o.SyncedAt.IsSet()
}

// SetSyncedAt sets field value
func (o *ReplicaItem) SetSyncedAt(v string) {
	o.SyncedAt.Set(&v)
}

func (o ReplicaItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicaItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["replica_state"] = o.ReplicaState.Get()
	toSerialize["replica_state_detail"] = o.ReplicaStateDetail.Get()
	toSerialize["synced_at"] = o.SyncedAt.Get()
	return toSerialize, nil
}

func (o *ReplicaItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"replica_state",
		"replica_state_detail",
		"synced_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReplicaItem := _ReplicaItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varReplicaItem)

	if err != nil {
		return err
	}

	*o = ReplicaItem(varReplicaItem)

	return err
}

type NullableReplicaItem struct {
	value *ReplicaItem
	isSet bool
}

func (v NullableReplicaItem) Get() *ReplicaItem {
	return v.value
}

func (v *NullableReplicaItem) Set(val *ReplicaItem) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicaItem) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicaItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicaItem(val *ReplicaItem) *NullableReplicaItem {
	return &NullableReplicaItem{value: val, isSet: true}
}

func (v NullableReplicaItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicaItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
