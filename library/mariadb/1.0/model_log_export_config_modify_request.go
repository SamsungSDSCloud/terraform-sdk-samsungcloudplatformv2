/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2162
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mariadb

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the LogExportConfigModifyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogExportConfigModifyRequest{}

// LogExportConfigModifyRequest struct for LogExportConfigModifyRequest
type LogExportConfigModifyRequest struct {
	AccessKey             NullableString    `json:"access_key"`
	DeleteOnExport        NullableBool      `json:"delete_on_export"`
	ScheduleDayOfMonth    NullableString    `json:"schedule_day_of_month" validate:"regexp=^(-1|[1-9]|1[0-9]|2[0-9]|3[0-1])$"`
	ScheduleDayOfWeek     NullableDayOfWeek `json:"schedule_day_of_week"`
	ScheduleFrequencyType NullableString    `json:"schedule_frequency_type"`
	ScheduleHour          NullableString    `json:"schedule_hour" validate:"regexp=^(\\\\d|1\\\\d|2[0-3])$"`
	SecretKey             NullableString    `json:"secret_key"`
}

type _LogExportConfigModifyRequest LogExportConfigModifyRequest

// NewLogExportConfigModifyRequest instantiates a new LogExportConfigModifyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogExportConfigModifyRequest(accessKey NullableString, deleteOnExport NullableBool, scheduleDayOfMonth NullableString, scheduleDayOfWeek NullableDayOfWeek, scheduleFrequencyType NullableString, scheduleHour NullableString, secretKey NullableString) *LogExportConfigModifyRequest {
	this := LogExportConfigModifyRequest{}
	this.AccessKey = accessKey
	this.DeleteOnExport = deleteOnExport
	this.ScheduleDayOfMonth = scheduleDayOfMonth
	this.ScheduleDayOfWeek = scheduleDayOfWeek
	this.ScheduleFrequencyType = scheduleFrequencyType
	this.ScheduleHour = scheduleHour
	this.SecretKey = secretKey
	return &this
}

// NewLogExportConfigModifyRequestWithDefaults instantiates a new LogExportConfigModifyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogExportConfigModifyRequestWithDefaults() *LogExportConfigModifyRequest {
	this := LogExportConfigModifyRequest{}
	return &this
}

// GetAccessKey returns the AccessKey field value
// If the value is explicit nil, the zero value for string will be returned
func (o *LogExportConfigModifyRequest) GetAccessKey() string {
	if o == nil || o.AccessKey.Get() == nil {
		var ret string
		return ret
	}

	return *o.AccessKey.Get()
}

// GetAccessKeyOk returns a tuple with the AccessKey field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogExportConfigModifyRequest) GetAccessKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessKey.Get(), o.AccessKey.IsSet()
}

// SetAccessKey sets field value
func (o *LogExportConfigModifyRequest) SetAccessKey(v string) {
	o.AccessKey.Set(&v)
}

// GetDeleteOnExport returns the DeleteOnExport field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *LogExportConfigModifyRequest) GetDeleteOnExport() bool {
	if o == nil || o.DeleteOnExport.Get() == nil {
		var ret bool
		return ret
	}

	return *o.DeleteOnExport.Get()
}

// GetDeleteOnExportOk returns a tuple with the DeleteOnExport field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogExportConfigModifyRequest) GetDeleteOnExportOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeleteOnExport.Get(), o.DeleteOnExport.IsSet()
}

// SetDeleteOnExport sets field value
func (o *LogExportConfigModifyRequest) SetDeleteOnExport(v bool) {
	o.DeleteOnExport.Set(&v)
}

// GetScheduleDayOfMonth returns the ScheduleDayOfMonth field value
// If the value is explicit nil, the zero value for string will be returned
func (o *LogExportConfigModifyRequest) GetScheduleDayOfMonth() string {
	if o == nil || o.ScheduleDayOfMonth.Get() == nil {
		var ret string
		return ret
	}

	return *o.ScheduleDayOfMonth.Get()
}

// GetScheduleDayOfMonthOk returns a tuple with the ScheduleDayOfMonth field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogExportConfigModifyRequest) GetScheduleDayOfMonthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduleDayOfMonth.Get(), o.ScheduleDayOfMonth.IsSet()
}

// SetScheduleDayOfMonth sets field value
func (o *LogExportConfigModifyRequest) SetScheduleDayOfMonth(v string) {
	o.ScheduleDayOfMonth.Set(&v)
}

// GetScheduleDayOfWeek returns the ScheduleDayOfWeek field value
// If the value is explicit nil, the zero value for DayOfWeek will be returned
func (o *LogExportConfigModifyRequest) GetScheduleDayOfWeek() DayOfWeek {
	if o == nil || o.ScheduleDayOfWeek.Get() == nil {
		var ret DayOfWeek
		return ret
	}

	return *o.ScheduleDayOfWeek.Get()
}

// GetScheduleDayOfWeekOk returns a tuple with the ScheduleDayOfWeek field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogExportConfigModifyRequest) GetScheduleDayOfWeekOk() (*DayOfWeek, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduleDayOfWeek.Get(), o.ScheduleDayOfWeek.IsSet()
}

// SetScheduleDayOfWeek sets field value
func (o *LogExportConfigModifyRequest) SetScheduleDayOfWeek(v DayOfWeek) {
	o.ScheduleDayOfWeek.Set(&v)
}

// GetScheduleFrequencyType returns the ScheduleFrequencyType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *LogExportConfigModifyRequest) GetScheduleFrequencyType() string {
	if o == nil || o.ScheduleFrequencyType.Get() == nil {
		var ret string
		return ret
	}

	return *o.ScheduleFrequencyType.Get()
}

// GetScheduleFrequencyTypeOk returns a tuple with the ScheduleFrequencyType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogExportConfigModifyRequest) GetScheduleFrequencyTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduleFrequencyType.Get(), o.ScheduleFrequencyType.IsSet()
}

// SetScheduleFrequencyType sets field value
func (o *LogExportConfigModifyRequest) SetScheduleFrequencyType(v string) {
	o.ScheduleFrequencyType.Set(&v)
}

// GetScheduleHour returns the ScheduleHour field value
// If the value is explicit nil, the zero value for string will be returned
func (o *LogExportConfigModifyRequest) GetScheduleHour() string {
	if o == nil || o.ScheduleHour.Get() == nil {
		var ret string
		return ret
	}

	return *o.ScheduleHour.Get()
}

// GetScheduleHourOk returns a tuple with the ScheduleHour field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogExportConfigModifyRequest) GetScheduleHourOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduleHour.Get(), o.ScheduleHour.IsSet()
}

// SetScheduleHour sets field value
func (o *LogExportConfigModifyRequest) SetScheduleHour(v string) {
	o.ScheduleHour.Set(&v)
}

// GetSecretKey returns the SecretKey field value
// If the value is explicit nil, the zero value for string will be returned
func (o *LogExportConfigModifyRequest) GetSecretKey() string {
	if o == nil || o.SecretKey.Get() == nil {
		var ret string
		return ret
	}

	return *o.SecretKey.Get()
}

// GetSecretKeyOk returns a tuple with the SecretKey field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogExportConfigModifyRequest) GetSecretKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecretKey.Get(), o.SecretKey.IsSet()
}

// SetSecretKey sets field value
func (o *LogExportConfigModifyRequest) SetSecretKey(v string) {
	o.SecretKey.Set(&v)
}

func (o LogExportConfigModifyRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogExportConfigModifyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["access_key"] = o.AccessKey.Get()
	toSerialize["delete_on_export"] = o.DeleteOnExport.Get()
	toSerialize["schedule_day_of_month"] = o.ScheduleDayOfMonth.Get()
	toSerialize["schedule_day_of_week"] = o.ScheduleDayOfWeek.Get()
	toSerialize["schedule_frequency_type"] = o.ScheduleFrequencyType.Get()
	toSerialize["schedule_hour"] = o.ScheduleHour.Get()
	toSerialize["secret_key"] = o.SecretKey.Get()
	return toSerialize, nil
}

func (o *LogExportConfigModifyRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"access_key",
		"delete_on_export",
		"schedule_day_of_month",
		"schedule_day_of_week",
		"schedule_frequency_type",
		"schedule_hour",
		"secret_key",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLogExportConfigModifyRequest := _LogExportConfigModifyRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLogExportConfigModifyRequest)

	if err != nil {
		return err
	}

	*o = LogExportConfigModifyRequest(varLogExportConfigModifyRequest)

	return err
}

type NullableLogExportConfigModifyRequest struct {
	value *LogExportConfigModifyRequest
	isSet bool
}

func (v NullableLogExportConfigModifyRequest) Get() *LogExportConfigModifyRequest {
	return v.value
}

func (v *NullableLogExportConfigModifyRequest) Set(val *LogExportConfigModifyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLogExportConfigModifyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLogExportConfigModifyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogExportConfigModifyRequest(val *LogExportConfigModifyRequest) *NullableLogExportConfigModifyRequest {
	return &NullableLogExportConfigModifyRequest{value: val, isSet: true}
}

func (v NullableLogExportConfigModifyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogExportConfigModifyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
