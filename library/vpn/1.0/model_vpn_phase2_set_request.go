/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6973
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpn

import (
	"encoding/json"
)

// checks if the VpnPhase2SetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VpnPhase2SetRequest{}

// VpnPhase2SetRequest struct for VpnPhase2SetRequest
type VpnPhase2SetRequest struct {
	PerfectForwardSecrecy NullableVpnPerfectForwardSecrecyType `json:"perfect_forward_secrecy,omitempty"`
	Phase2DiffieHellmanGroups []int32 `json:"phase2_diffie_hellman_groups,omitempty"`
	Phase2Encryptions []string `json:"phase2_encryptions,omitempty"`
	Phase2LifeTime NullableInt32 `json:"phase2_life_time,omitempty"`
	RemoteSubnet NullableString `json:"remote_subnet,omitempty"`
}

// NewVpnPhase2SetRequest instantiates a new VpnPhase2SetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVpnPhase2SetRequest() *VpnPhase2SetRequest {
	this := VpnPhase2SetRequest{}
	return &this
}

// NewVpnPhase2SetRequestWithDefaults instantiates a new VpnPhase2SetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVpnPhase2SetRequestWithDefaults() *VpnPhase2SetRequest {
	this := VpnPhase2SetRequest{}
	return &this
}

// GetPerfectForwardSecrecy returns the PerfectForwardSecrecy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VpnPhase2SetRequest) GetPerfectForwardSecrecy() VpnPerfectForwardSecrecyType {
	if o == nil || IsNil(o.PerfectForwardSecrecy.Get()) {
		var ret VpnPerfectForwardSecrecyType
		return ret
	}
	return *o.PerfectForwardSecrecy.Get()
}

// GetPerfectForwardSecrecyOk returns a tuple with the PerfectForwardSecrecy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VpnPhase2SetRequest) GetPerfectForwardSecrecyOk() (*VpnPerfectForwardSecrecyType, bool) {
	if o == nil {
		return nil, false
	}
	return o.PerfectForwardSecrecy.Get(), o.PerfectForwardSecrecy.IsSet()
}

// HasPerfectForwardSecrecy returns a boolean if a field has been set.
func (o *VpnPhase2SetRequest) HasPerfectForwardSecrecy() bool {
	if o != nil && o.PerfectForwardSecrecy.IsSet() {
		return true
	}

	return false
}

// SetPerfectForwardSecrecy gets a reference to the given NullableVpnPerfectForwardSecrecyType and assigns it to the PerfectForwardSecrecy field.
func (o *VpnPhase2SetRequest) SetPerfectForwardSecrecy(v VpnPerfectForwardSecrecyType) {
	o.PerfectForwardSecrecy.Set(&v)
}
// SetPerfectForwardSecrecyNil sets the value for PerfectForwardSecrecy to be an explicit nil
func (o *VpnPhase2SetRequest) SetPerfectForwardSecrecyNil() {
	o.PerfectForwardSecrecy.Set(nil)
}

// UnsetPerfectForwardSecrecy ensures that no value is present for PerfectForwardSecrecy, not even an explicit nil
func (o *VpnPhase2SetRequest) UnsetPerfectForwardSecrecy() {
	o.PerfectForwardSecrecy.Unset()
}

// GetPhase2DiffieHellmanGroups returns the Phase2DiffieHellmanGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VpnPhase2SetRequest) GetPhase2DiffieHellmanGroups() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}
	return o.Phase2DiffieHellmanGroups
}

// GetPhase2DiffieHellmanGroupsOk returns a tuple with the Phase2DiffieHellmanGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VpnPhase2SetRequest) GetPhase2DiffieHellmanGroupsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Phase2DiffieHellmanGroups) {
		return nil, false
	}
	return o.Phase2DiffieHellmanGroups, true
}

// HasPhase2DiffieHellmanGroups returns a boolean if a field has been set.
func (o *VpnPhase2SetRequest) HasPhase2DiffieHellmanGroups() bool {
	if o != nil && !IsNil(o.Phase2DiffieHellmanGroups) {
		return true
	}

	return false
}

// SetPhase2DiffieHellmanGroups gets a reference to the given []int32 and assigns it to the Phase2DiffieHellmanGroups field.
func (o *VpnPhase2SetRequest) SetPhase2DiffieHellmanGroups(v []int32) {
	o.Phase2DiffieHellmanGroups = v
}

// GetPhase2Encryptions returns the Phase2Encryptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VpnPhase2SetRequest) GetPhase2Encryptions() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Phase2Encryptions
}

// GetPhase2EncryptionsOk returns a tuple with the Phase2Encryptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VpnPhase2SetRequest) GetPhase2EncryptionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Phase2Encryptions) {
		return nil, false
	}
	return o.Phase2Encryptions, true
}

// HasPhase2Encryptions returns a boolean if a field has been set.
func (o *VpnPhase2SetRequest) HasPhase2Encryptions() bool {
	if o != nil && !IsNil(o.Phase2Encryptions) {
		return true
	}

	return false
}

// SetPhase2Encryptions gets a reference to the given []string and assigns it to the Phase2Encryptions field.
func (o *VpnPhase2SetRequest) SetPhase2Encryptions(v []string) {
	o.Phase2Encryptions = v
}

// GetPhase2LifeTime returns the Phase2LifeTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VpnPhase2SetRequest) GetPhase2LifeTime() int32 {
	if o == nil || IsNil(o.Phase2LifeTime.Get()) {
		var ret int32
		return ret
	}
	return *o.Phase2LifeTime.Get()
}

// GetPhase2LifeTimeOk returns a tuple with the Phase2LifeTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VpnPhase2SetRequest) GetPhase2LifeTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phase2LifeTime.Get(), o.Phase2LifeTime.IsSet()
}

// HasPhase2LifeTime returns a boolean if a field has been set.
func (o *VpnPhase2SetRequest) HasPhase2LifeTime() bool {
	if o != nil && o.Phase2LifeTime.IsSet() {
		return true
	}

	return false
}

// SetPhase2LifeTime gets a reference to the given NullableInt32 and assigns it to the Phase2LifeTime field.
func (o *VpnPhase2SetRequest) SetPhase2LifeTime(v int32) {
	o.Phase2LifeTime.Set(&v)
}
// SetPhase2LifeTimeNil sets the value for Phase2LifeTime to be an explicit nil
func (o *VpnPhase2SetRequest) SetPhase2LifeTimeNil() {
	o.Phase2LifeTime.Set(nil)
}

// UnsetPhase2LifeTime ensures that no value is present for Phase2LifeTime, not even an explicit nil
func (o *VpnPhase2SetRequest) UnsetPhase2LifeTime() {
	o.Phase2LifeTime.Unset()
}

// GetRemoteSubnet returns the RemoteSubnet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VpnPhase2SetRequest) GetRemoteSubnet() string {
	if o == nil || IsNil(o.RemoteSubnet.Get()) {
		var ret string
		return ret
	}
	return *o.RemoteSubnet.Get()
}

// GetRemoteSubnetOk returns a tuple with the RemoteSubnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VpnPhase2SetRequest) GetRemoteSubnetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoteSubnet.Get(), o.RemoteSubnet.IsSet()
}

// HasRemoteSubnet returns a boolean if a field has been set.
func (o *VpnPhase2SetRequest) HasRemoteSubnet() bool {
	if o != nil && o.RemoteSubnet.IsSet() {
		return true
	}

	return false
}

// SetRemoteSubnet gets a reference to the given NullableString and assigns it to the RemoteSubnet field.
func (o *VpnPhase2SetRequest) SetRemoteSubnet(v string) {
	o.RemoteSubnet.Set(&v)
}
// SetRemoteSubnetNil sets the value for RemoteSubnet to be an explicit nil
func (o *VpnPhase2SetRequest) SetRemoteSubnetNil() {
	o.RemoteSubnet.Set(nil)
}

// UnsetRemoteSubnet ensures that no value is present for RemoteSubnet, not even an explicit nil
func (o *VpnPhase2SetRequest) UnsetRemoteSubnet() {
	o.RemoteSubnet.Unset()
}

func (o VpnPhase2SetRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VpnPhase2SetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.PerfectForwardSecrecy.IsSet() {
		toSerialize["perfect_forward_secrecy"] = o.PerfectForwardSecrecy.Get()
	}
	if o.Phase2DiffieHellmanGroups != nil {
		toSerialize["phase2_diffie_hellman_groups"] = o.Phase2DiffieHellmanGroups
	}
	if o.Phase2Encryptions != nil {
		toSerialize["phase2_encryptions"] = o.Phase2Encryptions
	}
	if o.Phase2LifeTime.IsSet() {
		toSerialize["phase2_life_time"] = o.Phase2LifeTime.Get()
	}
	if o.RemoteSubnet.IsSet() {
		toSerialize["remote_subnet"] = o.RemoteSubnet.Get()
	}
	return toSerialize, nil
}

type NullableVpnPhase2SetRequest struct {
	value *VpnPhase2SetRequest
	isSet bool
}

func (v NullableVpnPhase2SetRequest) Get() *VpnPhase2SetRequest {
	return v.value
}

func (v *NullableVpnPhase2SetRequest) Set(val *VpnPhase2SetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVpnPhase2SetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVpnPhase2SetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpnPhase2SetRequest(val *VpnPhase2SetRequest) *NullableVpnPhase2SetRequest {
	return &NullableVpnPhase2SetRequest{value: val, isSet: true}
}

func (v NullableVpnPhase2SetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpnPhase2SetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


