/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6973
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpn

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VpnPhase1CreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VpnPhase1CreateRequest{}

// VpnPhase1CreateRequest struct for VpnPhase1CreateRequest
type VpnPhase1CreateRequest struct {
	// VPN Tunnel Dead Peer Detection(DPD) Retry Interval (sec)
	DpdRetryInterval int32 `json:"dpd_retry_interval"`
	// VPN Tunnel IKE Version
	IkeVersion int32 `json:"ike_version"`
	// VPN Tunnel Peer Gateway IP Address
	PeerGatewayIp string `json:"peer_gateway_ip"`
	// VPN Tunnel ISAKMP Diffie-Hellman Group List
	Phase1DiffieHellmanGroups []int32 `json:"phase1_diffie_hellman_groups"`
	// VPN Tunnel ISAKMP Proposal List
	Phase1Encryptions []string `json:"phase1_encryptions"`
	// VPN Tunnel ISAKMP Lifetime (sec)
	Phase1LifeTime int32 `json:"phase1_life_time"`
	// VPN Tunnel ISAKMP Authentication : Pre-shared Key
	PreSharedKey string `json:"pre_shared_key"`
}

type _VpnPhase1CreateRequest VpnPhase1CreateRequest

// NewVpnPhase1CreateRequest instantiates a new VpnPhase1CreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVpnPhase1CreateRequest(dpdRetryInterval int32, ikeVersion int32, peerGatewayIp string, phase1DiffieHellmanGroups []int32, phase1Encryptions []string, phase1LifeTime int32, preSharedKey string) *VpnPhase1CreateRequest {
	this := VpnPhase1CreateRequest{}
	this.DpdRetryInterval = dpdRetryInterval
	this.IkeVersion = ikeVersion
	this.PeerGatewayIp = peerGatewayIp
	this.Phase1DiffieHellmanGroups = phase1DiffieHellmanGroups
	this.Phase1Encryptions = phase1Encryptions
	this.Phase1LifeTime = phase1LifeTime
	this.PreSharedKey = preSharedKey
	return &this
}

// NewVpnPhase1CreateRequestWithDefaults instantiates a new VpnPhase1CreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVpnPhase1CreateRequestWithDefaults() *VpnPhase1CreateRequest {
	this := VpnPhase1CreateRequest{}
	return &this
}

// GetDpdRetryInterval returns the DpdRetryInterval field value
func (o *VpnPhase1CreateRequest) GetDpdRetryInterval() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DpdRetryInterval
}

// GetDpdRetryIntervalOk returns a tuple with the DpdRetryInterval field value
// and a boolean to check if the value has been set.
func (o *VpnPhase1CreateRequest) GetDpdRetryIntervalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DpdRetryInterval, true
}

// SetDpdRetryInterval sets field value
func (o *VpnPhase1CreateRequest) SetDpdRetryInterval(v int32) {
	o.DpdRetryInterval = v
}

// GetIkeVersion returns the IkeVersion field value
func (o *VpnPhase1CreateRequest) GetIkeVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IkeVersion
}

// GetIkeVersionOk returns a tuple with the IkeVersion field value
// and a boolean to check if the value has been set.
func (o *VpnPhase1CreateRequest) GetIkeVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IkeVersion, true
}

// SetIkeVersion sets field value
func (o *VpnPhase1CreateRequest) SetIkeVersion(v int32) {
	o.IkeVersion = v
}

// GetPeerGatewayIp returns the PeerGatewayIp field value
func (o *VpnPhase1CreateRequest) GetPeerGatewayIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PeerGatewayIp
}

// GetPeerGatewayIpOk returns a tuple with the PeerGatewayIp field value
// and a boolean to check if the value has been set.
func (o *VpnPhase1CreateRequest) GetPeerGatewayIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PeerGatewayIp, true
}

// SetPeerGatewayIp sets field value
func (o *VpnPhase1CreateRequest) SetPeerGatewayIp(v string) {
	o.PeerGatewayIp = v
}

// GetPhase1DiffieHellmanGroups returns the Phase1DiffieHellmanGroups field value
func (o *VpnPhase1CreateRequest) GetPhase1DiffieHellmanGroups() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Phase1DiffieHellmanGroups
}

// GetPhase1DiffieHellmanGroupsOk returns a tuple with the Phase1DiffieHellmanGroups field value
// and a boolean to check if the value has been set.
func (o *VpnPhase1CreateRequest) GetPhase1DiffieHellmanGroupsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phase1DiffieHellmanGroups, true
}

// SetPhase1DiffieHellmanGroups sets field value
func (o *VpnPhase1CreateRequest) SetPhase1DiffieHellmanGroups(v []int32) {
	o.Phase1DiffieHellmanGroups = v
}

// GetPhase1Encryptions returns the Phase1Encryptions field value
func (o *VpnPhase1CreateRequest) GetPhase1Encryptions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Phase1Encryptions
}

// GetPhase1EncryptionsOk returns a tuple with the Phase1Encryptions field value
// and a boolean to check if the value has been set.
func (o *VpnPhase1CreateRequest) GetPhase1EncryptionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phase1Encryptions, true
}

// SetPhase1Encryptions sets field value
func (o *VpnPhase1CreateRequest) SetPhase1Encryptions(v []string) {
	o.Phase1Encryptions = v
}

// GetPhase1LifeTime returns the Phase1LifeTime field value
func (o *VpnPhase1CreateRequest) GetPhase1LifeTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Phase1LifeTime
}

// GetPhase1LifeTimeOk returns a tuple with the Phase1LifeTime field value
// and a boolean to check if the value has been set.
func (o *VpnPhase1CreateRequest) GetPhase1LifeTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Phase1LifeTime, true
}

// SetPhase1LifeTime sets field value
func (o *VpnPhase1CreateRequest) SetPhase1LifeTime(v int32) {
	o.Phase1LifeTime = v
}

// GetPreSharedKey returns the PreSharedKey field value
func (o *VpnPhase1CreateRequest) GetPreSharedKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PreSharedKey
}

// GetPreSharedKeyOk returns a tuple with the PreSharedKey field value
// and a boolean to check if the value has been set.
func (o *VpnPhase1CreateRequest) GetPreSharedKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreSharedKey, true
}

// SetPreSharedKey sets field value
func (o *VpnPhase1CreateRequest) SetPreSharedKey(v string) {
	o.PreSharedKey = v
}

func (o VpnPhase1CreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VpnPhase1CreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dpd_retry_interval"] = o.DpdRetryInterval
	toSerialize["ike_version"] = o.IkeVersion
	toSerialize["peer_gateway_ip"] = o.PeerGatewayIp
	toSerialize["phase1_diffie_hellman_groups"] = o.Phase1DiffieHellmanGroups
	toSerialize["phase1_encryptions"] = o.Phase1Encryptions
	toSerialize["phase1_life_time"] = o.Phase1LifeTime
	toSerialize["pre_shared_key"] = o.PreSharedKey
	return toSerialize, nil
}

func (o *VpnPhase1CreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dpd_retry_interval",
		"ike_version",
		"peer_gateway_ip",
		"phase1_diffie_hellman_groups",
		"phase1_encryptions",
		"phase1_life_time",
		"pre_shared_key",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVpnPhase1CreateRequest := _VpnPhase1CreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVpnPhase1CreateRequest)

	if err != nil {
		return err
	}

	*o = VpnPhase1CreateRequest(varVpnPhase1CreateRequest)

	return err
}

type NullableVpnPhase1CreateRequest struct {
	value *VpnPhase1CreateRequest
	isSet bool
}

func (v NullableVpnPhase1CreateRequest) Get() *VpnPhase1CreateRequest {
	return v.value
}

func (v *NullableVpnPhase1CreateRequest) Set(val *VpnPhase1CreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVpnPhase1CreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVpnPhase1CreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpnPhase1CreateRequest(val *VpnPhase1CreateRequest) *NullableVpnPhase1CreateRequest {
	return &NullableVpnPhase1CreateRequest{value: val, isSet: true}
}

func (v NullableVpnPhase1CreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpnPhase1CreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


