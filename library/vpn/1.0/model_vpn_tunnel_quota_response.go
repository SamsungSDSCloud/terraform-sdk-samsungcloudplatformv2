/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6973
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpn

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VpnTunnelQuotaResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VpnTunnelQuotaResponse{}

// VpnTunnelQuotaResponse struct for VpnTunnelQuotaResponse
type VpnTunnelQuotaResponse struct {
	// VPN Tunnel Max Quota
	VpnTunnelMaxQuota int32 `json:"vpn_tunnel_max_quota"`
	// VPN Tunnel Used Quota
	VpnTunnelUsedQuota int32 `json:"vpn_tunnel_used_quota"`
}

type _VpnTunnelQuotaResponse VpnTunnelQuotaResponse

// NewVpnTunnelQuotaResponse instantiates a new VpnTunnelQuotaResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVpnTunnelQuotaResponse(vpnTunnelMaxQuota int32, vpnTunnelUsedQuota int32) *VpnTunnelQuotaResponse {
	this := VpnTunnelQuotaResponse{}
	this.VpnTunnelMaxQuota = vpnTunnelMaxQuota
	this.VpnTunnelUsedQuota = vpnTunnelUsedQuota
	return &this
}

// NewVpnTunnelQuotaResponseWithDefaults instantiates a new VpnTunnelQuotaResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVpnTunnelQuotaResponseWithDefaults() *VpnTunnelQuotaResponse {
	this := VpnTunnelQuotaResponse{}
	return &this
}

// GetVpnTunnelMaxQuota returns the VpnTunnelMaxQuota field value
func (o *VpnTunnelQuotaResponse) GetVpnTunnelMaxQuota() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VpnTunnelMaxQuota
}

// GetVpnTunnelMaxQuotaOk returns a tuple with the VpnTunnelMaxQuota field value
// and a boolean to check if the value has been set.
func (o *VpnTunnelQuotaResponse) GetVpnTunnelMaxQuotaOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VpnTunnelMaxQuota, true
}

// SetVpnTunnelMaxQuota sets field value
func (o *VpnTunnelQuotaResponse) SetVpnTunnelMaxQuota(v int32) {
	o.VpnTunnelMaxQuota = v
}

// GetVpnTunnelUsedQuota returns the VpnTunnelUsedQuota field value
func (o *VpnTunnelQuotaResponse) GetVpnTunnelUsedQuota() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VpnTunnelUsedQuota
}

// GetVpnTunnelUsedQuotaOk returns a tuple with the VpnTunnelUsedQuota field value
// and a boolean to check if the value has been set.
func (o *VpnTunnelQuotaResponse) GetVpnTunnelUsedQuotaOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VpnTunnelUsedQuota, true
}

// SetVpnTunnelUsedQuota sets field value
func (o *VpnTunnelQuotaResponse) SetVpnTunnelUsedQuota(v int32) {
	o.VpnTunnelUsedQuota = v
}

func (o VpnTunnelQuotaResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VpnTunnelQuotaResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["vpn_tunnel_max_quota"] = o.VpnTunnelMaxQuota
	toSerialize["vpn_tunnel_used_quota"] = o.VpnTunnelUsedQuota
	return toSerialize, nil
}

func (o *VpnTunnelQuotaResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"vpn_tunnel_max_quota",
		"vpn_tunnel_used_quota",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVpnTunnelQuotaResponse := _VpnTunnelQuotaResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVpnTunnelQuotaResponse)

	if err != nil {
		return err
	}

	*o = VpnTunnelQuotaResponse(varVpnTunnelQuotaResponse)

	return err
}

type NullableVpnTunnelQuotaResponse struct {
	value *VpnTunnelQuotaResponse
	isSet bool
}

func (v NullableVpnTunnelQuotaResponse) Get() *VpnTunnelQuotaResponse {
	return v.value
}

func (v *NullableVpnTunnelQuotaResponse) Set(val *VpnTunnelQuotaResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVpnTunnelQuotaResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVpnTunnelQuotaResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpnTunnelQuotaResponse(val *VpnTunnelQuotaResponse) *NullableVpnTunnelQuotaResponse {
	return &NullableVpnTunnelQuotaResponse{value: val, isSet: true}
}

func (v NullableVpnTunnelQuotaResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpnTunnelQuotaResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


