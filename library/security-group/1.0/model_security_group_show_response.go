/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev7080
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package securitygroup

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SecurityGroupShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroupShowResponse{}

// SecurityGroupShowResponse struct for SecurityGroupShowResponse
type SecurityGroupShowResponse struct {
	SecurityGroup SecurityGroup `json:"security_group"`
}

type _SecurityGroupShowResponse SecurityGroupShowResponse

// NewSecurityGroupShowResponse instantiates a new SecurityGroupShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupShowResponse(securityGroup SecurityGroup) *SecurityGroupShowResponse {
	this := SecurityGroupShowResponse{}
	this.SecurityGroup = securityGroup
	return &this
}

// NewSecurityGroupShowResponseWithDefaults instantiates a new SecurityGroupShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupShowResponseWithDefaults() *SecurityGroupShowResponse {
	this := SecurityGroupShowResponse{}
	return &this
}

// GetSecurityGroup returns the SecurityGroup field value
func (o *SecurityGroupShowResponse) GetSecurityGroup() SecurityGroup {
	if o == nil {
		var ret SecurityGroup
		return ret
	}

	return o.SecurityGroup
}

// GetSecurityGroupOk returns a tuple with the SecurityGroup field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupShowResponse) GetSecurityGroupOk() (*SecurityGroup, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecurityGroup, true
}

// SetSecurityGroup sets field value
func (o *SecurityGroupShowResponse) SetSecurityGroup(v SecurityGroup) {
	o.SecurityGroup = v
}

func (o SecurityGroupShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityGroupShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["security_group"] = o.SecurityGroup
	return toSerialize, nil
}

func (o *SecurityGroupShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"security_group",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSecurityGroupShowResponse := _SecurityGroupShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSecurityGroupShowResponse)

	if err != nil {
		return err
	}

	*o = SecurityGroupShowResponse(varSecurityGroupShowResponse)

	return err
}

type NullableSecurityGroupShowResponse struct {
	value *SecurityGroupShowResponse
	isSet bool
}

func (v NullableSecurityGroupShowResponse) Get() *SecurityGroupShowResponse {
	return v.value
}

func (v *NullableSecurityGroupShowResponse) Set(val *SecurityGroupShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupShowResponse(val *SecurityGroupShowResponse) *NullableSecurityGroupShowResponse {
	return &NullableSecurityGroupShowResponse{value: val, isSet: true}
}

func (v NullableSecurityGroupShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


