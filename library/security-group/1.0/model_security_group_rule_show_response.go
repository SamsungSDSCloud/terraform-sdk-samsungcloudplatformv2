/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev7080
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package securitygroup

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SecurityGroupRuleShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroupRuleShowResponse{}

// SecurityGroupRuleShowResponse struct for SecurityGroupRuleShowResponse
type SecurityGroupRuleShowResponse struct {
	SecurityGroupRule SecurityGroupRule `json:"security_group_rule"`
}

type _SecurityGroupRuleShowResponse SecurityGroupRuleShowResponse

// NewSecurityGroupRuleShowResponse instantiates a new SecurityGroupRuleShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupRuleShowResponse(securityGroupRule SecurityGroupRule) *SecurityGroupRuleShowResponse {
	this := SecurityGroupRuleShowResponse{}
	this.SecurityGroupRule = securityGroupRule
	return &this
}

// NewSecurityGroupRuleShowResponseWithDefaults instantiates a new SecurityGroupRuleShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupRuleShowResponseWithDefaults() *SecurityGroupRuleShowResponse {
	this := SecurityGroupRuleShowResponse{}
	return &this
}

// GetSecurityGroupRule returns the SecurityGroupRule field value
func (o *SecurityGroupRuleShowResponse) GetSecurityGroupRule() SecurityGroupRule {
	if o == nil {
		var ret SecurityGroupRule
		return ret
	}

	return o.SecurityGroupRule
}

// GetSecurityGroupRuleOk returns a tuple with the SecurityGroupRule field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupRuleShowResponse) GetSecurityGroupRuleOk() (*SecurityGroupRule, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecurityGroupRule, true
}

// SetSecurityGroupRule sets field value
func (o *SecurityGroupRuleShowResponse) SetSecurityGroupRule(v SecurityGroupRule) {
	o.SecurityGroupRule = v
}

func (o SecurityGroupRuleShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityGroupRuleShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["security_group_rule"] = o.SecurityGroupRule
	return toSerialize, nil
}

func (o *SecurityGroupRuleShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"security_group_rule",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSecurityGroupRuleShowResponse := _SecurityGroupRuleShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSecurityGroupRuleShowResponse)

	if err != nil {
		return err
	}

	*o = SecurityGroupRuleShowResponse(varSecurityGroupRuleShowResponse)

	return err
}

type NullableSecurityGroupRuleShowResponse struct {
	value *SecurityGroupRuleShowResponse
	isSet bool
}

func (v NullableSecurityGroupRuleShowResponse) Get() *SecurityGroupRuleShowResponse {
	return v.value
}

func (v *NullableSecurityGroupRuleShowResponse) Set(val *SecurityGroupRuleShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupRuleShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupRuleShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupRuleShowResponse(val *SecurityGroupRuleShowResponse) *NullableSecurityGroupRuleShowResponse {
	return &NullableSecurityGroupRuleShowResponse{value: val, isSet: true}
}

func (v NullableSecurityGroupRuleShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupRuleShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


