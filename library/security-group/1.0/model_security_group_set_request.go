/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev7080
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package securitygroup

import (
	"encoding/json"
)

// checks if the SecurityGroupSetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroupSetRequest{}

// SecurityGroupSetRequest struct for SecurityGroupSetRequest
type SecurityGroupSetRequest struct {
	Description NullableString `json:"description,omitempty"`
	Loggable NullableBool `json:"loggable,omitempty"`
}

// NewSecurityGroupSetRequest instantiates a new SecurityGroupSetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupSetRequest() *SecurityGroupSetRequest {
	this := SecurityGroupSetRequest{}
	return &this
}

// NewSecurityGroupSetRequestWithDefaults instantiates a new SecurityGroupSetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupSetRequestWithDefaults() *SecurityGroupSetRequest {
	this := SecurityGroupSetRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupSetRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupSetRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *SecurityGroupSetRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *SecurityGroupSetRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *SecurityGroupSetRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *SecurityGroupSetRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetLoggable returns the Loggable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupSetRequest) GetLoggable() bool {
	if o == nil || IsNil(o.Loggable.Get()) {
		var ret bool
		return ret
	}
	return *o.Loggable.Get()
}

// GetLoggableOk returns a tuple with the Loggable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupSetRequest) GetLoggableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Loggable.Get(), o.Loggable.IsSet()
}

// HasLoggable returns a boolean if a field has been set.
func (o *SecurityGroupSetRequest) HasLoggable() bool {
	if o != nil && o.Loggable.IsSet() {
		return true
	}

	return false
}

// SetLoggable gets a reference to the given NullableBool and assigns it to the Loggable field.
func (o *SecurityGroupSetRequest) SetLoggable(v bool) {
	o.Loggable.Set(&v)
}
// SetLoggableNil sets the value for Loggable to be an explicit nil
func (o *SecurityGroupSetRequest) SetLoggableNil() {
	o.Loggable.Set(nil)
}

// UnsetLoggable ensures that no value is present for Loggable, not even an explicit nil
func (o *SecurityGroupSetRequest) UnsetLoggable() {
	o.Loggable.Unset()
}

func (o SecurityGroupSetRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityGroupSetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Loggable.IsSet() {
		toSerialize["loggable"] = o.Loggable.Get()
	}
	return toSerialize, nil
}

type NullableSecurityGroupSetRequest struct {
	value *SecurityGroupSetRequest
	isSet bool
}

func (v NullableSecurityGroupSetRequest) Get() *SecurityGroupSetRequest {
	return v.value
}

func (v *NullableSecurityGroupSetRequest) Set(val *SecurityGroupSetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupSetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupSetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupSetRequest(val *SecurityGroupSetRequest) *NullableSecurityGroupSetRequest {
	return &NullableSecurityGroupSetRequest{value: val, isSet: true}
}

func (v NullableSecurityGroupSetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupSetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


