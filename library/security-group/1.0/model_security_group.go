/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev7080
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package securitygroup

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the SecurityGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroup{}

// SecurityGroup struct for SecurityGroup
type SecurityGroup struct {
	// Security Group Account ID
	AccountId string `json:"account_id"`
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy string `json:"created_by"`
	Description NullableString `json:"description"`
	// Security Group ID
	Id string `json:"id"`
	// Security Group Loggable
	Loggable bool `json:"loggable"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy string `json:"modified_by"`
	// Security Group Name
	Name string `json:"name"`
	// Security Group Rule Count
	RuleCount *int32 `json:"rule_count,omitempty"`
	// Security Group State
	State string `json:"state"`
}

type _SecurityGroup SecurityGroup

// NewSecurityGroup instantiates a new SecurityGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroup(accountId string, createdAt time.Time, createdBy string, description NullableString, id string, loggable bool, modifiedAt time.Time, modifiedBy string, name string, state string) *SecurityGroup {
	this := SecurityGroup{}
	this.AccountId = accountId
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.Description = description
	this.Id = id
	this.Loggable = loggable
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.Name = name
	var ruleCount int32 = 0
	this.RuleCount = &ruleCount
	this.State = state
	return &this
}

// NewSecurityGroupWithDefaults instantiates a new SecurityGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupWithDefaults() *SecurityGroup {
	this := SecurityGroup{}
	var ruleCount int32 = 0
	this.RuleCount = &ruleCount
	return &this
}

// GetAccountId returns the AccountId field value
func (o *SecurityGroup) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *SecurityGroup) SetAccountId(v string) {
	o.AccountId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *SecurityGroup) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SecurityGroup) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *SecurityGroup) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *SecurityGroup) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SecurityGroup) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroup) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *SecurityGroup) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetId returns the Id field value
func (o *SecurityGroup) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SecurityGroup) SetId(v string) {
	o.Id = v
}

// GetLoggable returns the Loggable field value
func (o *SecurityGroup) GetLoggable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Loggable
}

// GetLoggableOk returns a tuple with the Loggable field value
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetLoggableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Loggable, true
}

// SetLoggable sets field value
func (o *SecurityGroup) SetLoggable(v bool) {
	o.Loggable = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *SecurityGroup) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *SecurityGroup) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *SecurityGroup) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *SecurityGroup) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetName returns the Name field value
func (o *SecurityGroup) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SecurityGroup) SetName(v string) {
	o.Name = v
}

// GetRuleCount returns the RuleCount field value if set, zero value otherwise.
func (o *SecurityGroup) GetRuleCount() int32 {
	if o == nil || IsNil(o.RuleCount) {
		var ret int32
		return ret
	}
	return *o.RuleCount
}

// GetRuleCountOk returns a tuple with the RuleCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetRuleCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RuleCount) {
		return nil, false
	}
	return o.RuleCount, true
}

// HasRuleCount returns a boolean if a field has been set.
func (o *SecurityGroup) HasRuleCount() bool {
	if o != nil && !IsNil(o.RuleCount) {
		return true
	}

	return false
}

// SetRuleCount gets a reference to the given int32 and assigns it to the RuleCount field.
func (o *SecurityGroup) SetRuleCount(v int32) {
	o.RuleCount = &v
}

// GetState returns the State field value
func (o *SecurityGroup) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *SecurityGroup) SetState(v string) {
	o.State = v
}

func (o SecurityGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	toSerialize["description"] = o.Description.Get()
	toSerialize["id"] = o.Id
	toSerialize["loggable"] = o.Loggable
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	toSerialize["name"] = o.Name
	if !IsNil(o.RuleCount) {
		toSerialize["rule_count"] = o.RuleCount
	}
	toSerialize["state"] = o.State
	return toSerialize, nil
}

func (o *SecurityGroup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"created_at",
		"created_by",
		"description",
		"id",
		"loggable",
		"modified_at",
		"modified_by",
		"name",
		"state",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSecurityGroup := _SecurityGroup{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSecurityGroup)

	if err != nil {
		return err
	}

	*o = SecurityGroup(varSecurityGroup)

	return err
}

type NullableSecurityGroup struct {
	value *SecurityGroup
	isSet bool
}

func (v NullableSecurityGroup) Get() *SecurityGroup {
	return v.value
}

func (v *NullableSecurityGroup) Set(val *SecurityGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroup(val *SecurityGroup) *NullableSecurityGroup {
	return &NullableSecurityGroup{value: val, isSet: true}
}

func (v NullableSecurityGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


