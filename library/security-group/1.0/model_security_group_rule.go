/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev7080
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package securitygroup

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the SecurityGroupRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroupRule{}

// SecurityGroupRule struct for SecurityGroupRule
type SecurityGroupRule struct {
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy string `json:"created_by"`
	Description NullableString `json:"description"`
	// Security Group Rule Direction (Ingress, Egress)
	Direction Direction `json:"direction"`
	Ethertype NullableString `json:"ethertype,omitempty"`
	// Security Group Rule ID
	Id string `json:"id"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy string `json:"modified_by"`
	PortRangeMax NullableInt32 `json:"port_range_max"`
	PortRangeMin NullableInt32 `json:"port_range_min"`
	Protocol NullableString `json:"protocol"`
	RemoteGroupId NullableString `json:"remote_group_id"`
	RemoteGroupName NullableString `json:"remote_group_name,omitempty"`
	RemoteIpPrefix NullableString `json:"remote_ip_prefix"`
	// Security Group ID
	SecurityGroupId string `json:"security_group_id"`
}

type _SecurityGroupRule SecurityGroupRule

// NewSecurityGroupRule instantiates a new SecurityGroupRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupRule(createdAt time.Time, createdBy string, description NullableString, direction Direction, id string, modifiedAt time.Time, modifiedBy string, portRangeMax NullableInt32, portRangeMin NullableInt32, protocol NullableString, remoteGroupId NullableString, remoteIpPrefix NullableString, securityGroupId string) *SecurityGroupRule {
	this := SecurityGroupRule{}
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.Description = description
	this.Direction = direction
	this.Id = id
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.PortRangeMax = portRangeMax
	this.PortRangeMin = portRangeMin
	this.Protocol = protocol
	this.RemoteGroupId = remoteGroupId
	this.RemoteIpPrefix = remoteIpPrefix
	this.SecurityGroupId = securityGroupId
	return &this
}

// NewSecurityGroupRuleWithDefaults instantiates a new SecurityGroupRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupRuleWithDefaults() *SecurityGroupRule {
	this := SecurityGroupRule{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *SecurityGroupRule) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SecurityGroupRule) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *SecurityGroupRule) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *SecurityGroupRule) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SecurityGroupRule) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRule) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *SecurityGroupRule) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetDirection returns the Direction field value
func (o *SecurityGroupRule) GetDirection() Direction {
	if o == nil {
		var ret Direction
		return ret
	}

	return o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetDirectionOk() (*Direction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Direction, true
}

// SetDirection sets field value
func (o *SecurityGroupRule) SetDirection(v Direction) {
	o.Direction = v
}

// GetEthertype returns the Ethertype field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupRule) GetEthertype() string {
	if o == nil || IsNil(o.Ethertype.Get()) {
		var ret string
		return ret
	}
	return *o.Ethertype.Get()
}

// GetEthertypeOk returns a tuple with the Ethertype field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRule) GetEthertypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ethertype.Get(), o.Ethertype.IsSet()
}

// HasEthertype returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasEthertype() bool {
	if o != nil && o.Ethertype.IsSet() {
		return true
	}

	return false
}

// SetEthertype gets a reference to the given NullableString and assigns it to the Ethertype field.
func (o *SecurityGroupRule) SetEthertype(v string) {
	o.Ethertype.Set(&v)
}
// SetEthertypeNil sets the value for Ethertype to be an explicit nil
func (o *SecurityGroupRule) SetEthertypeNil() {
	o.Ethertype.Set(nil)
}

// UnsetEthertype ensures that no value is present for Ethertype, not even an explicit nil
func (o *SecurityGroupRule) UnsetEthertype() {
	o.Ethertype.Unset()
}

// GetId returns the Id field value
func (o *SecurityGroupRule) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SecurityGroupRule) SetId(v string) {
	o.Id = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *SecurityGroupRule) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *SecurityGroupRule) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *SecurityGroupRule) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *SecurityGroupRule) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetPortRangeMax returns the PortRangeMax field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *SecurityGroupRule) GetPortRangeMax() int32 {
	if o == nil || o.PortRangeMax.Get() == nil {
		var ret int32
		return ret
	}

	return *o.PortRangeMax.Get()
}

// GetPortRangeMaxOk returns a tuple with the PortRangeMax field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRule) GetPortRangeMaxOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PortRangeMax.Get(), o.PortRangeMax.IsSet()
}

// SetPortRangeMax sets field value
func (o *SecurityGroupRule) SetPortRangeMax(v int32) {
	o.PortRangeMax.Set(&v)
}

// GetPortRangeMin returns the PortRangeMin field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *SecurityGroupRule) GetPortRangeMin() int32 {
	if o == nil || o.PortRangeMin.Get() == nil {
		var ret int32
		return ret
	}

	return *o.PortRangeMin.Get()
}

// GetPortRangeMinOk returns a tuple with the PortRangeMin field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRule) GetPortRangeMinOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PortRangeMin.Get(), o.PortRangeMin.IsSet()
}

// SetPortRangeMin sets field value
func (o *SecurityGroupRule) SetPortRangeMin(v int32) {
	o.PortRangeMin.Set(&v)
}

// GetProtocol returns the Protocol field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SecurityGroupRule) GetProtocol() string {
	if o == nil || o.Protocol.Get() == nil {
		var ret string
		return ret
	}

	return *o.Protocol.Get()
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRule) GetProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Protocol.Get(), o.Protocol.IsSet()
}

// SetProtocol sets field value
func (o *SecurityGroupRule) SetProtocol(v string) {
	o.Protocol.Set(&v)
}

// GetRemoteGroupId returns the RemoteGroupId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SecurityGroupRule) GetRemoteGroupId() string {
	if o == nil || o.RemoteGroupId.Get() == nil {
		var ret string
		return ret
	}

	return *o.RemoteGroupId.Get()
}

// GetRemoteGroupIdOk returns a tuple with the RemoteGroupId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRule) GetRemoteGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoteGroupId.Get(), o.RemoteGroupId.IsSet()
}

// SetRemoteGroupId sets field value
func (o *SecurityGroupRule) SetRemoteGroupId(v string) {
	o.RemoteGroupId.Set(&v)
}

// GetRemoteGroupName returns the RemoteGroupName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupRule) GetRemoteGroupName() string {
	if o == nil || IsNil(o.RemoteGroupName.Get()) {
		var ret string
		return ret
	}
	return *o.RemoteGroupName.Get()
}

// GetRemoteGroupNameOk returns a tuple with the RemoteGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRule) GetRemoteGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoteGroupName.Get(), o.RemoteGroupName.IsSet()
}

// HasRemoteGroupName returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasRemoteGroupName() bool {
	if o != nil && o.RemoteGroupName.IsSet() {
		return true
	}

	return false
}

// SetRemoteGroupName gets a reference to the given NullableString and assigns it to the RemoteGroupName field.
func (o *SecurityGroupRule) SetRemoteGroupName(v string) {
	o.RemoteGroupName.Set(&v)
}
// SetRemoteGroupNameNil sets the value for RemoteGroupName to be an explicit nil
func (o *SecurityGroupRule) SetRemoteGroupNameNil() {
	o.RemoteGroupName.Set(nil)
}

// UnsetRemoteGroupName ensures that no value is present for RemoteGroupName, not even an explicit nil
func (o *SecurityGroupRule) UnsetRemoteGroupName() {
	o.RemoteGroupName.Unset()
}

// GetRemoteIpPrefix returns the RemoteIpPrefix field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SecurityGroupRule) GetRemoteIpPrefix() string {
	if o == nil || o.RemoteIpPrefix.Get() == nil {
		var ret string
		return ret
	}

	return *o.RemoteIpPrefix.Get()
}

// GetRemoteIpPrefixOk returns a tuple with the RemoteIpPrefix field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRule) GetRemoteIpPrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoteIpPrefix.Get(), o.RemoteIpPrefix.IsSet()
}

// SetRemoteIpPrefix sets field value
func (o *SecurityGroupRule) SetRemoteIpPrefix(v string) {
	o.RemoteIpPrefix.Set(&v)
}

// GetSecurityGroupId returns the SecurityGroupId field value
func (o *SecurityGroupRule) GetSecurityGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecurityGroupId
}

// GetSecurityGroupIdOk returns a tuple with the SecurityGroupId field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetSecurityGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecurityGroupId, true
}

// SetSecurityGroupId sets field value
func (o *SecurityGroupRule) SetSecurityGroupId(v string) {
	o.SecurityGroupId = v
}

func (o SecurityGroupRule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityGroupRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	toSerialize["description"] = o.Description.Get()
	toSerialize["direction"] = o.Direction
	if o.Ethertype.IsSet() {
		toSerialize["ethertype"] = o.Ethertype.Get()
	}
	toSerialize["id"] = o.Id
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	toSerialize["port_range_max"] = o.PortRangeMax.Get()
	toSerialize["port_range_min"] = o.PortRangeMin.Get()
	toSerialize["protocol"] = o.Protocol.Get()
	toSerialize["remote_group_id"] = o.RemoteGroupId.Get()
	if o.RemoteGroupName.IsSet() {
		toSerialize["remote_group_name"] = o.RemoteGroupName.Get()
	}
	toSerialize["remote_ip_prefix"] = o.RemoteIpPrefix.Get()
	toSerialize["security_group_id"] = o.SecurityGroupId
	return toSerialize, nil
}

func (o *SecurityGroupRule) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"created_by",
		"description",
		"direction",
		"id",
		"modified_at",
		"modified_by",
		"port_range_max",
		"port_range_min",
		"protocol",
		"remote_group_id",
		"remote_ip_prefix",
		"security_group_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSecurityGroupRule := _SecurityGroupRule{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSecurityGroupRule)

	if err != nil {
		return err
	}

	*o = SecurityGroupRule(varSecurityGroupRule)

	return err
}

type NullableSecurityGroupRule struct {
	value *SecurityGroupRule
	isSet bool
}

func (v NullableSecurityGroupRule) Get() *SecurityGroupRule {
	return v.value
}

func (v *NullableSecurityGroupRule) Set(val *SecurityGroupRule) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupRule) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupRule(val *SecurityGroupRule) *NullableSecurityGroupRule {
	return &NullableSecurityGroupRule{value: val, isSet: true}
}

func (v NullableSecurityGroupRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


