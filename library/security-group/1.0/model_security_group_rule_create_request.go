/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev7080
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package securitygroup

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SecurityGroupRuleCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroupRuleCreateRequest{}

// SecurityGroupRuleCreateRequest struct for SecurityGroupRuleCreateRequest
type SecurityGroupRuleCreateRequest struct {
	Description NullableString `json:"description,omitempty"`
	// Security Group Rule Direction (Ingress, Egress)
	Direction string `json:"direction"`
	Ethertype NullableString `json:"ethertype,omitempty"`
	PortRangeMax NullableInt32 `json:"port_range_max,omitempty"`
	PortRangeMin NullableInt32 `json:"port_range_min,omitempty"`
	Protocol NullableString `json:"protocol"`
	RemoteGroupId NullableString `json:"remote_group_id,omitempty"`
	RemoteIpPrefix NullableString `json:"remote_ip_prefix,omitempty"`
	// Security Group ID
	SecurityGroupId string `json:"security_group_id"`
}

type _SecurityGroupRuleCreateRequest SecurityGroupRuleCreateRequest

// NewSecurityGroupRuleCreateRequest instantiates a new SecurityGroupRuleCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupRuleCreateRequest(direction string, protocol NullableString, securityGroupId string) *SecurityGroupRuleCreateRequest {
	this := SecurityGroupRuleCreateRequest{}
	this.Direction = direction
	this.Protocol = protocol
	this.SecurityGroupId = securityGroupId
	return &this
}

// NewSecurityGroupRuleCreateRequestWithDefaults instantiates a new SecurityGroupRuleCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupRuleCreateRequestWithDefaults() *SecurityGroupRuleCreateRequest {
	this := SecurityGroupRuleCreateRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupRuleCreateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRuleCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *SecurityGroupRuleCreateRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *SecurityGroupRuleCreateRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *SecurityGroupRuleCreateRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *SecurityGroupRuleCreateRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetDirection returns the Direction field value
func (o *SecurityGroupRuleCreateRequest) GetDirection() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupRuleCreateRequest) GetDirectionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Direction, true
}

// SetDirection sets field value
func (o *SecurityGroupRuleCreateRequest) SetDirection(v string) {
	o.Direction = v
}

// GetEthertype returns the Ethertype field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupRuleCreateRequest) GetEthertype() string {
	if o == nil || IsNil(o.Ethertype.Get()) {
		var ret string
		return ret
	}
	return *o.Ethertype.Get()
}

// GetEthertypeOk returns a tuple with the Ethertype field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRuleCreateRequest) GetEthertypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ethertype.Get(), o.Ethertype.IsSet()
}

// HasEthertype returns a boolean if a field has been set.
func (o *SecurityGroupRuleCreateRequest) HasEthertype() bool {
	if o != nil && o.Ethertype.IsSet() {
		return true
	}

	return false
}

// SetEthertype gets a reference to the given NullableString and assigns it to the Ethertype field.
func (o *SecurityGroupRuleCreateRequest) SetEthertype(v string) {
	o.Ethertype.Set(&v)
}
// SetEthertypeNil sets the value for Ethertype to be an explicit nil
func (o *SecurityGroupRuleCreateRequest) SetEthertypeNil() {
	o.Ethertype.Set(nil)
}

// UnsetEthertype ensures that no value is present for Ethertype, not even an explicit nil
func (o *SecurityGroupRuleCreateRequest) UnsetEthertype() {
	o.Ethertype.Unset()
}

// GetPortRangeMax returns the PortRangeMax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupRuleCreateRequest) GetPortRangeMax() int32 {
	if o == nil || IsNil(o.PortRangeMax.Get()) {
		var ret int32
		return ret
	}
	return *o.PortRangeMax.Get()
}

// GetPortRangeMaxOk returns a tuple with the PortRangeMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRuleCreateRequest) GetPortRangeMaxOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PortRangeMax.Get(), o.PortRangeMax.IsSet()
}

// HasPortRangeMax returns a boolean if a field has been set.
func (o *SecurityGroupRuleCreateRequest) HasPortRangeMax() bool {
	if o != nil && o.PortRangeMax.IsSet() {
		return true
	}

	return false
}

// SetPortRangeMax gets a reference to the given NullableInt32 and assigns it to the PortRangeMax field.
func (o *SecurityGroupRuleCreateRequest) SetPortRangeMax(v int32) {
	o.PortRangeMax.Set(&v)
}
// SetPortRangeMaxNil sets the value for PortRangeMax to be an explicit nil
func (o *SecurityGroupRuleCreateRequest) SetPortRangeMaxNil() {
	o.PortRangeMax.Set(nil)
}

// UnsetPortRangeMax ensures that no value is present for PortRangeMax, not even an explicit nil
func (o *SecurityGroupRuleCreateRequest) UnsetPortRangeMax() {
	o.PortRangeMax.Unset()
}

// GetPortRangeMin returns the PortRangeMin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupRuleCreateRequest) GetPortRangeMin() int32 {
	if o == nil || IsNil(o.PortRangeMin.Get()) {
		var ret int32
		return ret
	}
	return *o.PortRangeMin.Get()
}

// GetPortRangeMinOk returns a tuple with the PortRangeMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRuleCreateRequest) GetPortRangeMinOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PortRangeMin.Get(), o.PortRangeMin.IsSet()
}

// HasPortRangeMin returns a boolean if a field has been set.
func (o *SecurityGroupRuleCreateRequest) HasPortRangeMin() bool {
	if o != nil && o.PortRangeMin.IsSet() {
		return true
	}

	return false
}

// SetPortRangeMin gets a reference to the given NullableInt32 and assigns it to the PortRangeMin field.
func (o *SecurityGroupRuleCreateRequest) SetPortRangeMin(v int32) {
	o.PortRangeMin.Set(&v)
}
// SetPortRangeMinNil sets the value for PortRangeMin to be an explicit nil
func (o *SecurityGroupRuleCreateRequest) SetPortRangeMinNil() {
	o.PortRangeMin.Set(nil)
}

// UnsetPortRangeMin ensures that no value is present for PortRangeMin, not even an explicit nil
func (o *SecurityGroupRuleCreateRequest) UnsetPortRangeMin() {
	o.PortRangeMin.Unset()
}

// GetProtocol returns the Protocol field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SecurityGroupRuleCreateRequest) GetProtocol() string {
	if o == nil || o.Protocol.Get() == nil {
		var ret string
		return ret
	}

	return *o.Protocol.Get()
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRuleCreateRequest) GetProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Protocol.Get(), o.Protocol.IsSet()
}

// SetProtocol sets field value
func (o *SecurityGroupRuleCreateRequest) SetProtocol(v string) {
	o.Protocol.Set(&v)
}

// GetRemoteGroupId returns the RemoteGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupRuleCreateRequest) GetRemoteGroupId() string {
	if o == nil || IsNil(o.RemoteGroupId.Get()) {
		var ret string
		return ret
	}
	return *o.RemoteGroupId.Get()
}

// GetRemoteGroupIdOk returns a tuple with the RemoteGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRuleCreateRequest) GetRemoteGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoteGroupId.Get(), o.RemoteGroupId.IsSet()
}

// HasRemoteGroupId returns a boolean if a field has been set.
func (o *SecurityGroupRuleCreateRequest) HasRemoteGroupId() bool {
	if o != nil && o.RemoteGroupId.IsSet() {
		return true
	}

	return false
}

// SetRemoteGroupId gets a reference to the given NullableString and assigns it to the RemoteGroupId field.
func (o *SecurityGroupRuleCreateRequest) SetRemoteGroupId(v string) {
	o.RemoteGroupId.Set(&v)
}
// SetRemoteGroupIdNil sets the value for RemoteGroupId to be an explicit nil
func (o *SecurityGroupRuleCreateRequest) SetRemoteGroupIdNil() {
	o.RemoteGroupId.Set(nil)
}

// UnsetRemoteGroupId ensures that no value is present for RemoteGroupId, not even an explicit nil
func (o *SecurityGroupRuleCreateRequest) UnsetRemoteGroupId() {
	o.RemoteGroupId.Unset()
}

// GetRemoteIpPrefix returns the RemoteIpPrefix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupRuleCreateRequest) GetRemoteIpPrefix() string {
	if o == nil || IsNil(o.RemoteIpPrefix.Get()) {
		var ret string
		return ret
	}
	return *o.RemoteIpPrefix.Get()
}

// GetRemoteIpPrefixOk returns a tuple with the RemoteIpPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRuleCreateRequest) GetRemoteIpPrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoteIpPrefix.Get(), o.RemoteIpPrefix.IsSet()
}

// HasRemoteIpPrefix returns a boolean if a field has been set.
func (o *SecurityGroupRuleCreateRequest) HasRemoteIpPrefix() bool {
	if o != nil && o.RemoteIpPrefix.IsSet() {
		return true
	}

	return false
}

// SetRemoteIpPrefix gets a reference to the given NullableString and assigns it to the RemoteIpPrefix field.
func (o *SecurityGroupRuleCreateRequest) SetRemoteIpPrefix(v string) {
	o.RemoteIpPrefix.Set(&v)
}
// SetRemoteIpPrefixNil sets the value for RemoteIpPrefix to be an explicit nil
func (o *SecurityGroupRuleCreateRequest) SetRemoteIpPrefixNil() {
	o.RemoteIpPrefix.Set(nil)
}

// UnsetRemoteIpPrefix ensures that no value is present for RemoteIpPrefix, not even an explicit nil
func (o *SecurityGroupRuleCreateRequest) UnsetRemoteIpPrefix() {
	o.RemoteIpPrefix.Unset()
}

// GetSecurityGroupId returns the SecurityGroupId field value
func (o *SecurityGroupRuleCreateRequest) GetSecurityGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecurityGroupId
}

// GetSecurityGroupIdOk returns a tuple with the SecurityGroupId field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupRuleCreateRequest) GetSecurityGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecurityGroupId, true
}

// SetSecurityGroupId sets field value
func (o *SecurityGroupRuleCreateRequest) SetSecurityGroupId(v string) {
	o.SecurityGroupId = v
}

func (o SecurityGroupRuleCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityGroupRuleCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["direction"] = o.Direction
	if o.Ethertype.IsSet() {
		toSerialize["ethertype"] = o.Ethertype.Get()
	}
	if o.PortRangeMax.IsSet() {
		toSerialize["port_range_max"] = o.PortRangeMax.Get()
	}
	if o.PortRangeMin.IsSet() {
		toSerialize["port_range_min"] = o.PortRangeMin.Get()
	}
	toSerialize["protocol"] = o.Protocol.Get()
	if o.RemoteGroupId.IsSet() {
		toSerialize["remote_group_id"] = o.RemoteGroupId.Get()
	}
	if o.RemoteIpPrefix.IsSet() {
		toSerialize["remote_ip_prefix"] = o.RemoteIpPrefix.Get()
	}
	toSerialize["security_group_id"] = o.SecurityGroupId
	return toSerialize, nil
}

func (o *SecurityGroupRuleCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"direction",
		"protocol",
		"security_group_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSecurityGroupRuleCreateRequest := _SecurityGroupRuleCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSecurityGroupRuleCreateRequest)

	if err != nil {
		return err
	}

	*o = SecurityGroupRuleCreateRequest(varSecurityGroupRuleCreateRequest)

	return err
}

type NullableSecurityGroupRuleCreateRequest struct {
	value *SecurityGroupRuleCreateRequest
	isSet bool
}

func (v NullableSecurityGroupRuleCreateRequest) Get() *SecurityGroupRuleCreateRequest {
	return v.value
}

func (v *NullableSecurityGroupRuleCreateRequest) Set(val *SecurityGroupRuleCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupRuleCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupRuleCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupRuleCreateRequest(val *SecurityGroupRuleCreateRequest) *NullableSecurityGroupRuleCreateRequest {
	return &NullableSecurityGroupRuleCreateRequest{value: val, isSet: true}
}

func (v NullableSecurityGroupRuleCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupRuleCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


