/*
OSSCP Billing

OSSCP Billing

API version: 1.2.0.0rc5.dev38
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"encoding/json"
)

// checks if the CancellationFeeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CancellationFeeRequest{}

// CancellationFeeRequest struct for CancellationFeeRequest
type CancellationFeeRequest struct {
	// Planned Compute Id
	PlannedComputeId []string `json:"planned_compute_id,omitempty"`
	Region NullableString `json:"region,omitempty"`
}

// NewCancellationFeeRequest instantiates a new CancellationFeeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancellationFeeRequest() *CancellationFeeRequest {
	this := CancellationFeeRequest{}
	return &this
}

// NewCancellationFeeRequestWithDefaults instantiates a new CancellationFeeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancellationFeeRequestWithDefaults() *CancellationFeeRequest {
	this := CancellationFeeRequest{}
	return &this
}

// GetPlannedComputeId returns the PlannedComputeId field value if set, zero value otherwise.
func (o *CancellationFeeRequest) GetPlannedComputeId() []string {
	if o == nil || IsNil(o.PlannedComputeId) {
		var ret []string
		return ret
	}
	return o.PlannedComputeId
}

// GetPlannedComputeIdOk returns a tuple with the PlannedComputeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancellationFeeRequest) GetPlannedComputeIdOk() ([]string, bool) {
	if o == nil || IsNil(o.PlannedComputeId) {
		return nil, false
	}
	return o.PlannedComputeId, true
}

// HasPlannedComputeId returns a boolean if a field has been set.
func (o *CancellationFeeRequest) HasPlannedComputeId() bool {
	if o != nil && !IsNil(o.PlannedComputeId) {
		return true
	}

	return false
}

// SetPlannedComputeId gets a reference to the given []string and assigns it to the PlannedComputeId field.
func (o *CancellationFeeRequest) SetPlannedComputeId(v []string) {
	o.PlannedComputeId = v
}

// GetRegion returns the Region field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CancellationFeeRequest) GetRegion() string {
	if o == nil || IsNil(o.Region.Get()) {
		var ret string
		return ret
	}
	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CancellationFeeRequest) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// HasRegion returns a boolean if a field has been set.
func (o *CancellationFeeRequest) HasRegion() bool {
	if o != nil && o.Region.IsSet() {
		return true
	}

	return false
}

// SetRegion gets a reference to the given NullableString and assigns it to the Region field.
func (o *CancellationFeeRequest) SetRegion(v string) {
	o.Region.Set(&v)
}
// SetRegionNil sets the value for Region to be an explicit nil
func (o *CancellationFeeRequest) SetRegionNil() {
	o.Region.Set(nil)
}

// UnsetRegion ensures that no value is present for Region, not even an explicit nil
func (o *CancellationFeeRequest) UnsetRegion() {
	o.Region.Unset()
}

func (o CancellationFeeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CancellationFeeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PlannedComputeId) {
		toSerialize["planned_compute_id"] = o.PlannedComputeId
	}
	if o.Region.IsSet() {
		toSerialize["region"] = o.Region.Get()
	}
	return toSerialize, nil
}

type NullableCancellationFeeRequest struct {
	value *CancellationFeeRequest
	isSet bool
}

func (v NullableCancellationFeeRequest) Get() *CancellationFeeRequest {
	return v.value
}

func (v *NullableCancellationFeeRequest) Set(val *CancellationFeeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCancellationFeeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCancellationFeeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancellationFeeRequest(val *CancellationFeeRequest) *NullableCancellationFeeRequest {
	return &NullableCancellationFeeRequest{value: val, isSet: true}
}

func (v NullableCancellationFeeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancellationFeeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


