/*
OSSCP Billing

OSSCP Billing

API version: 1.2.0.0rc5.dev38
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PlannedComputeListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlannedComputeListResponse{}

// PlannedComputeListResponse struct for PlannedComputeListResponse
type PlannedComputeListResponse struct {
	// Current Page
	CurrentPage *int32 `json:"current_page,omitempty"`
	PlannedComputes []PlannedComputeDTO `json:"planned_computes"`
	// Total Count
	TotalCount *int32 `json:"total_count,omitempty"`
	// Total Pages
	TotalPages *int32 `json:"total_pages,omitempty"`
}

type _PlannedComputeListResponse PlannedComputeListResponse

// NewPlannedComputeListResponse instantiates a new PlannedComputeListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlannedComputeListResponse(plannedComputes []PlannedComputeDTO) *PlannedComputeListResponse {
	this := PlannedComputeListResponse{}
	var currentPage int32 = 0
	this.CurrentPage = &currentPage
	this.PlannedComputes = plannedComputes
	var totalCount int32 = 0
	this.TotalCount = &totalCount
	var totalPages int32 = 0
	this.TotalPages = &totalPages
	return &this
}

// NewPlannedComputeListResponseWithDefaults instantiates a new PlannedComputeListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlannedComputeListResponseWithDefaults() *PlannedComputeListResponse {
	this := PlannedComputeListResponse{}
	var currentPage int32 = 0
	this.CurrentPage = &currentPage
	var totalCount int32 = 0
	this.TotalCount = &totalCount
	var totalPages int32 = 0
	this.TotalPages = &totalPages
	return &this
}

// GetCurrentPage returns the CurrentPage field value if set, zero value otherwise.
func (o *PlannedComputeListResponse) GetCurrentPage() int32 {
	if o == nil || IsNil(o.CurrentPage) {
		var ret int32
		return ret
	}
	return *o.CurrentPage
}

// GetCurrentPageOk returns a tuple with the CurrentPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlannedComputeListResponse) GetCurrentPageOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentPage) {
		return nil, false
	}
	return o.CurrentPage, true
}

// HasCurrentPage returns a boolean if a field has been set.
func (o *PlannedComputeListResponse) HasCurrentPage() bool {
	if o != nil && !IsNil(o.CurrentPage) {
		return true
	}

	return false
}

// SetCurrentPage gets a reference to the given int32 and assigns it to the CurrentPage field.
func (o *PlannedComputeListResponse) SetCurrentPage(v int32) {
	o.CurrentPage = &v
}

// GetPlannedComputes returns the PlannedComputes field value
func (o *PlannedComputeListResponse) GetPlannedComputes() []PlannedComputeDTO {
	if o == nil {
		var ret []PlannedComputeDTO
		return ret
	}

	return o.PlannedComputes
}

// GetPlannedComputesOk returns a tuple with the PlannedComputes field value
// and a boolean to check if the value has been set.
func (o *PlannedComputeListResponse) GetPlannedComputesOk() ([]PlannedComputeDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlannedComputes, true
}

// SetPlannedComputes sets field value
func (o *PlannedComputeListResponse) SetPlannedComputes(v []PlannedComputeDTO) {
	o.PlannedComputes = v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *PlannedComputeListResponse) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlannedComputeListResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *PlannedComputeListResponse) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *PlannedComputeListResponse) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetTotalPages returns the TotalPages field value if set, zero value otherwise.
func (o *PlannedComputeListResponse) GetTotalPages() int32 {
	if o == nil || IsNil(o.TotalPages) {
		var ret int32
		return ret
	}
	return *o.TotalPages
}

// GetTotalPagesOk returns a tuple with the TotalPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlannedComputeListResponse) GetTotalPagesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalPages) {
		return nil, false
	}
	return o.TotalPages, true
}

// HasTotalPages returns a boolean if a field has been set.
func (o *PlannedComputeListResponse) HasTotalPages() bool {
	if o != nil && !IsNil(o.TotalPages) {
		return true
	}

	return false
}

// SetTotalPages gets a reference to the given int32 and assigns it to the TotalPages field.
func (o *PlannedComputeListResponse) SetTotalPages(v int32) {
	o.TotalPages = &v
}

func (o PlannedComputeListResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlannedComputeListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrentPage) {
		toSerialize["current_page"] = o.CurrentPage
	}
	toSerialize["planned_computes"] = o.PlannedComputes
	if !IsNil(o.TotalCount) {
		toSerialize["total_count"] = o.TotalCount
	}
	if !IsNil(o.TotalPages) {
		toSerialize["total_pages"] = o.TotalPages
	}
	return toSerialize, nil
}

func (o *PlannedComputeListResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"planned_computes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPlannedComputeListResponse := _PlannedComputeListResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPlannedComputeListResponse)

	if err != nil {
		return err
	}

	*o = PlannedComputeListResponse(varPlannedComputeListResponse)

	return err
}

type NullablePlannedComputeListResponse struct {
	value *PlannedComputeListResponse
	isSet bool
}

func (v NullablePlannedComputeListResponse) Get() *PlannedComputeListResponse {
	return v.value
}

func (v *NullablePlannedComputeListResponse) Set(val *PlannedComputeListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePlannedComputeListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePlannedComputeListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlannedComputeListResponse(val *PlannedComputeListResponse) *NullablePlannedComputeListResponse {
	return &NullablePlannedComputeListResponse{value: val, isSet: true}
}

func (v NullablePlannedComputeListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlannedComputeListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


