/*
OSSCP Billing

OSSCP Billing

API version: 1.2.0.0rc5.dev38
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProductListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductListResponse{}

// ProductListResponse struct for ProductListResponse
type ProductListResponse struct {
	Services []ProductResponse `json:"services"`
}

type _ProductListResponse ProductListResponse

// NewProductListResponse instantiates a new ProductListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductListResponse(services []ProductResponse) *ProductListResponse {
	this := ProductListResponse{}
	this.Services = services
	return &this
}

// NewProductListResponseWithDefaults instantiates a new ProductListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductListResponseWithDefaults() *ProductListResponse {
	this := ProductListResponse{}
	return &this
}

// GetServices returns the Services field value
func (o *ProductListResponse) GetServices() []ProductResponse {
	if o == nil {
		var ret []ProductResponse
		return ret
	}

	return o.Services
}

// GetServicesOk returns a tuple with the Services field value
// and a boolean to check if the value has been set.
func (o *ProductListResponse) GetServicesOk() ([]ProductResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Services, true
}

// SetServices sets field value
func (o *ProductListResponse) SetServices(v []ProductResponse) {
	o.Services = v
}

func (o ProductListResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["services"] = o.Services
	return toSerialize, nil
}

func (o *ProductListResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"services",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProductListResponse := _ProductListResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProductListResponse)

	if err != nil {
		return err
	}

	*o = ProductListResponse(varProductListResponse)

	return err
}

type NullableProductListResponse struct {
	value *ProductListResponse
	isSet bool
}

func (v NullableProductListResponse) Get() *ProductListResponse {
	return v.value
}

func (v *NullableProductListResponse) Set(val *ProductListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProductListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProductListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductListResponse(val *ProductListResponse) *NullableProductListResponse {
	return &NullableProductListResponse{value: val, isSet: true}
}

func (v NullableProductListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


