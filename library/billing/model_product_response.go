/*
OSSCP Billing

OSSCP Billing

API version: 1.2.0.0rc5.dev38
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"encoding/json"
)

// checks if the ProductResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductResponse{}

// ProductResponse struct for ProductResponse
type ProductResponse struct {
	DisplayName NullableString `json:"display_name,omitempty"`
	ServiceId NullableString `json:"service_id,omitempty"`
}

// NewProductResponse instantiates a new ProductResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductResponse() *ProductResponse {
	this := ProductResponse{}
	return &this
}

// NewProductResponseWithDefaults instantiates a new ProductResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductResponseWithDefaults() *ProductResponse {
	this := ProductResponse{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductResponse) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductResponse) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ProductResponse) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *ProductResponse) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *ProductResponse) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *ProductResponse) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductResponse) GetServiceId() string {
	if o == nil || IsNil(o.ServiceId.Get()) {
		var ret string
		return ret
	}
	return *o.ServiceId.Get()
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductResponse) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceId.Get(), o.ServiceId.IsSet()
}

// HasServiceId returns a boolean if a field has been set.
func (o *ProductResponse) HasServiceId() bool {
	if o != nil && o.ServiceId.IsSet() {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given NullableString and assigns it to the ServiceId field.
func (o *ProductResponse) SetServiceId(v string) {
	o.ServiceId.Set(&v)
}
// SetServiceIdNil sets the value for ServiceId to be an explicit nil
func (o *ProductResponse) SetServiceIdNil() {
	o.ServiceId.Set(nil)
}

// UnsetServiceId ensures that no value is present for ServiceId, not even an explicit nil
func (o *ProductResponse) UnsetServiceId() {
	o.ServiceId.Unset()
}

func (o ProductResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName.IsSet() {
		toSerialize["display_name"] = o.DisplayName.Get()
	}
	if o.ServiceId.IsSet() {
		toSerialize["service_id"] = o.ServiceId.Get()
	}
	return toSerialize, nil
}

type NullableProductResponse struct {
	value *ProductResponse
	isSet bool
}

func (v NullableProductResponse) Get() *ProductResponse {
	return v.value
}

func (v *NullableProductResponse) Set(val *ProductResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProductResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProductResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductResponse(val *ProductResponse) *NullableProductResponse {
	return &NullableProductResponse{value: val, isSet: true}
}

func (v NullableProductResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


