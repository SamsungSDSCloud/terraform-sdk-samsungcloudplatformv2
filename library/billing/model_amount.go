/*
OSSCP Billing

OSSCP Billing

API version: 1.2.0.0rc5.dev38
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"encoding/json"
)

// checks if the Amount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Amount{}

// Amount struct for Amount
type Amount struct {
	// KRW amount
	Krw *string `json:"krw,omitempty"`
	// USD amount
	Usd *string `json:"usd,omitempty"`
}

// NewAmount instantiates a new Amount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmount() *Amount {
	this := Amount{}
	var krw string = "0"
	this.Krw = &krw
	var usd string = "0"
	this.Usd = &usd
	return &this
}

// NewAmountWithDefaults instantiates a new Amount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmountWithDefaults() *Amount {
	this := Amount{}
	var krw string = "0"
	this.Krw = &krw
	var usd string = "0"
	this.Usd = &usd
	return &this
}

// GetKrw returns the Krw field value if set, zero value otherwise.
func (o *Amount) GetKrw() string {
	if o == nil || IsNil(o.Krw) {
		var ret string
		return ret
	}
	return *o.Krw
}

// GetKrwOk returns a tuple with the Krw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amount) GetKrwOk() (*string, bool) {
	if o == nil || IsNil(o.Krw) {
		return nil, false
	}
	return o.Krw, true
}

// HasKrw returns a boolean if a field has been set.
func (o *Amount) HasKrw() bool {
	if o != nil && !IsNil(o.Krw) {
		return true
	}

	return false
}

// SetKrw gets a reference to the given string and assigns it to the Krw field.
func (o *Amount) SetKrw(v string) {
	o.Krw = &v
}

// GetUsd returns the Usd field value if set, zero value otherwise.
func (o *Amount) GetUsd() string {
	if o == nil || IsNil(o.Usd) {
		var ret string
		return ret
	}
	return *o.Usd
}

// GetUsdOk returns a tuple with the Usd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amount) GetUsdOk() (*string, bool) {
	if o == nil || IsNil(o.Usd) {
		return nil, false
	}
	return o.Usd, true
}

// HasUsd returns a boolean if a field has been set.
func (o *Amount) HasUsd() bool {
	if o != nil && !IsNil(o.Usd) {
		return true
	}

	return false
}

// SetUsd gets a reference to the given string and assigns it to the Usd field.
func (o *Amount) SetUsd(v string) {
	o.Usd = &v
}

func (o Amount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Amount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Krw) {
		toSerialize["krw"] = o.Krw
	}
	if !IsNil(o.Usd) {
		toSerialize["usd"] = o.Usd
	}
	return toSerialize, nil
}

type NullableAmount struct {
	value *Amount
	isSet bool
}

func (v NullableAmount) Get() *Amount {
	return v.value
}

func (v *NullableAmount) Set(val *Amount) {
	v.value = val
	v.isSet = true
}

func (v NullableAmount) IsSet() bool {
	return v.isSet
}

func (v *NullableAmount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmount(val *Amount) *NullableAmount {
	return &NullableAmount{value: val, isSet: true}
}

func (v NullableAmount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


