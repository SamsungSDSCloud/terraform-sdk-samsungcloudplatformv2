/*
OSSCP Billing

OSSCP Billing

API version: 1.2.0.0rc5.dev38
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"encoding/json"
)

// checks if the ServerTypeDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerTypeDTO{}

// ServerTypeDTO struct for ServerTypeDTO
type ServerTypeDTO struct {
	Core NullableString `json:"core,omitempty"`
	GpuName NullableString `json:"gpu_name,omitempty"`
	InstanceType NullableString `json:"instance_type,omitempty"`
	MemoryGb NullableString `json:"memory_gb,omitempty"`
	// Scale up or not
	ScaleUpYn *bool `json:"scale_up_yn,omitempty"`
	ServerType NullableString `json:"server_type,omitempty"`
	ServerTypeDescription NullableString `json:"server_type_description,omitempty"`
}

// NewServerTypeDTO instantiates a new ServerTypeDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerTypeDTO() *ServerTypeDTO {
	this := ServerTypeDTO{}
	var scaleUpYn bool = true
	this.ScaleUpYn = &scaleUpYn
	return &this
}

// NewServerTypeDTOWithDefaults instantiates a new ServerTypeDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerTypeDTOWithDefaults() *ServerTypeDTO {
	this := ServerTypeDTO{}
	var scaleUpYn bool = true
	this.ScaleUpYn = &scaleUpYn
	return &this
}

// GetCore returns the Core field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerTypeDTO) GetCore() string {
	if o == nil || IsNil(o.Core.Get()) {
		var ret string
		return ret
	}
	return *o.Core.Get()
}

// GetCoreOk returns a tuple with the Core field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerTypeDTO) GetCoreOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Core.Get(), o.Core.IsSet()
}

// HasCore returns a boolean if a field has been set.
func (o *ServerTypeDTO) HasCore() bool {
	if o != nil && o.Core.IsSet() {
		return true
	}

	return false
}

// SetCore gets a reference to the given NullableString and assigns it to the Core field.
func (o *ServerTypeDTO) SetCore(v string) {
	o.Core.Set(&v)
}
// SetCoreNil sets the value for Core to be an explicit nil
func (o *ServerTypeDTO) SetCoreNil() {
	o.Core.Set(nil)
}

// UnsetCore ensures that no value is present for Core, not even an explicit nil
func (o *ServerTypeDTO) UnsetCore() {
	o.Core.Unset()
}

// GetGpuName returns the GpuName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerTypeDTO) GetGpuName() string {
	if o == nil || IsNil(o.GpuName.Get()) {
		var ret string
		return ret
	}
	return *o.GpuName.Get()
}

// GetGpuNameOk returns a tuple with the GpuName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerTypeDTO) GetGpuNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GpuName.Get(), o.GpuName.IsSet()
}

// HasGpuName returns a boolean if a field has been set.
func (o *ServerTypeDTO) HasGpuName() bool {
	if o != nil && o.GpuName.IsSet() {
		return true
	}

	return false
}

// SetGpuName gets a reference to the given NullableString and assigns it to the GpuName field.
func (o *ServerTypeDTO) SetGpuName(v string) {
	o.GpuName.Set(&v)
}
// SetGpuNameNil sets the value for GpuName to be an explicit nil
func (o *ServerTypeDTO) SetGpuNameNil() {
	o.GpuName.Set(nil)
}

// UnsetGpuName ensures that no value is present for GpuName, not even an explicit nil
func (o *ServerTypeDTO) UnsetGpuName() {
	o.GpuName.Unset()
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerTypeDTO) GetInstanceType() string {
	if o == nil || IsNil(o.InstanceType.Get()) {
		var ret string
		return ret
	}
	return *o.InstanceType.Get()
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerTypeDTO) GetInstanceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstanceType.Get(), o.InstanceType.IsSet()
}

// HasInstanceType returns a boolean if a field has been set.
func (o *ServerTypeDTO) HasInstanceType() bool {
	if o != nil && o.InstanceType.IsSet() {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given NullableString and assigns it to the InstanceType field.
func (o *ServerTypeDTO) SetInstanceType(v string) {
	o.InstanceType.Set(&v)
}
// SetInstanceTypeNil sets the value for InstanceType to be an explicit nil
func (o *ServerTypeDTO) SetInstanceTypeNil() {
	o.InstanceType.Set(nil)
}

// UnsetInstanceType ensures that no value is present for InstanceType, not even an explicit nil
func (o *ServerTypeDTO) UnsetInstanceType() {
	o.InstanceType.Unset()
}

// GetMemoryGb returns the MemoryGb field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerTypeDTO) GetMemoryGb() string {
	if o == nil || IsNil(o.MemoryGb.Get()) {
		var ret string
		return ret
	}
	return *o.MemoryGb.Get()
}

// GetMemoryGbOk returns a tuple with the MemoryGb field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerTypeDTO) GetMemoryGbOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemoryGb.Get(), o.MemoryGb.IsSet()
}

// HasMemoryGb returns a boolean if a field has been set.
func (o *ServerTypeDTO) HasMemoryGb() bool {
	if o != nil && o.MemoryGb.IsSet() {
		return true
	}

	return false
}

// SetMemoryGb gets a reference to the given NullableString and assigns it to the MemoryGb field.
func (o *ServerTypeDTO) SetMemoryGb(v string) {
	o.MemoryGb.Set(&v)
}
// SetMemoryGbNil sets the value for MemoryGb to be an explicit nil
func (o *ServerTypeDTO) SetMemoryGbNil() {
	o.MemoryGb.Set(nil)
}

// UnsetMemoryGb ensures that no value is present for MemoryGb, not even an explicit nil
func (o *ServerTypeDTO) UnsetMemoryGb() {
	o.MemoryGb.Unset()
}

// GetScaleUpYn returns the ScaleUpYn field value if set, zero value otherwise.
func (o *ServerTypeDTO) GetScaleUpYn() bool {
	if o == nil || IsNil(o.ScaleUpYn) {
		var ret bool
		return ret
	}
	return *o.ScaleUpYn
}

// GetScaleUpYnOk returns a tuple with the ScaleUpYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerTypeDTO) GetScaleUpYnOk() (*bool, bool) {
	if o == nil || IsNil(o.ScaleUpYn) {
		return nil, false
	}
	return o.ScaleUpYn, true
}

// HasScaleUpYn returns a boolean if a field has been set.
func (o *ServerTypeDTO) HasScaleUpYn() bool {
	if o != nil && !IsNil(o.ScaleUpYn) {
		return true
	}

	return false
}

// SetScaleUpYn gets a reference to the given bool and assigns it to the ScaleUpYn field.
func (o *ServerTypeDTO) SetScaleUpYn(v bool) {
	o.ScaleUpYn = &v
}

// GetServerType returns the ServerType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerTypeDTO) GetServerType() string {
	if o == nil || IsNil(o.ServerType.Get()) {
		var ret string
		return ret
	}
	return *o.ServerType.Get()
}

// GetServerTypeOk returns a tuple with the ServerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerTypeDTO) GetServerTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerType.Get(), o.ServerType.IsSet()
}

// HasServerType returns a boolean if a field has been set.
func (o *ServerTypeDTO) HasServerType() bool {
	if o != nil && o.ServerType.IsSet() {
		return true
	}

	return false
}

// SetServerType gets a reference to the given NullableString and assigns it to the ServerType field.
func (o *ServerTypeDTO) SetServerType(v string) {
	o.ServerType.Set(&v)
}
// SetServerTypeNil sets the value for ServerType to be an explicit nil
func (o *ServerTypeDTO) SetServerTypeNil() {
	o.ServerType.Set(nil)
}

// UnsetServerType ensures that no value is present for ServerType, not even an explicit nil
func (o *ServerTypeDTO) UnsetServerType() {
	o.ServerType.Unset()
}

// GetServerTypeDescription returns the ServerTypeDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerTypeDTO) GetServerTypeDescription() string {
	if o == nil || IsNil(o.ServerTypeDescription.Get()) {
		var ret string
		return ret
	}
	return *o.ServerTypeDescription.Get()
}

// GetServerTypeDescriptionOk returns a tuple with the ServerTypeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerTypeDTO) GetServerTypeDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerTypeDescription.Get(), o.ServerTypeDescription.IsSet()
}

// HasServerTypeDescription returns a boolean if a field has been set.
func (o *ServerTypeDTO) HasServerTypeDescription() bool {
	if o != nil && o.ServerTypeDescription.IsSet() {
		return true
	}

	return false
}

// SetServerTypeDescription gets a reference to the given NullableString and assigns it to the ServerTypeDescription field.
func (o *ServerTypeDTO) SetServerTypeDescription(v string) {
	o.ServerTypeDescription.Set(&v)
}
// SetServerTypeDescriptionNil sets the value for ServerTypeDescription to be an explicit nil
func (o *ServerTypeDTO) SetServerTypeDescriptionNil() {
	o.ServerTypeDescription.Set(nil)
}

// UnsetServerTypeDescription ensures that no value is present for ServerTypeDescription, not even an explicit nil
func (o *ServerTypeDTO) UnsetServerTypeDescription() {
	o.ServerTypeDescription.Unset()
}

func (o ServerTypeDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerTypeDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Core.IsSet() {
		toSerialize["core"] = o.Core.Get()
	}
	if o.GpuName.IsSet() {
		toSerialize["gpu_name"] = o.GpuName.Get()
	}
	if o.InstanceType.IsSet() {
		toSerialize["instance_type"] = o.InstanceType.Get()
	}
	if o.MemoryGb.IsSet() {
		toSerialize["memory_gb"] = o.MemoryGb.Get()
	}
	if !IsNil(o.ScaleUpYn) {
		toSerialize["scale_up_yn"] = o.ScaleUpYn
	}
	if o.ServerType.IsSet() {
		toSerialize["server_type"] = o.ServerType.Get()
	}
	if o.ServerTypeDescription.IsSet() {
		toSerialize["server_type_description"] = o.ServerTypeDescription.Get()
	}
	return toSerialize, nil
}

type NullableServerTypeDTO struct {
	value *ServerTypeDTO
	isSet bool
}

func (v NullableServerTypeDTO) Get() *ServerTypeDTO {
	return v.value
}

func (v *NullableServerTypeDTO) Set(val *ServerTypeDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableServerTypeDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableServerTypeDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerTypeDTO(val *ServerTypeDTO) *NullableServerTypeDTO {
	return &NullableServerTypeDTO{value: val, isSet: true}
}

func (v NullableServerTypeDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerTypeDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


