/*
OSSCP Billing

OSSCP Billing

API version: 1.2.0.0rc5.dev38
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billing

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PlannedComputeCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlannedComputeCreateRequest{}

// PlannedComputeCreateRequest struct for PlannedComputeCreateRequest
type PlannedComputeCreateRequest struct {
	// Account Id
	AccountId string `json:"account_id"`
	// Contract Type
	ContractType *PlannedComputeContractEnum `json:"contract_type,omitempty"`
	// OS Type
	OsType *PlannedComputeOSTypeEnum `json:"os_type,omitempty"`
	// Server Type
	ServerType string `json:"server_type"`
	// Service Id
	ServiceId string `json:"service_id"`
	// Service Name
	ServiceName *string `json:"service_name,omitempty"`
	// Tag Form
	Tag []TagDTO `json:"tag,omitempty"`
}

type _PlannedComputeCreateRequest PlannedComputeCreateRequest

// NewPlannedComputeCreateRequest instantiates a new PlannedComputeCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlannedComputeCreateRequest(accountId string, serverType string, serviceId string) *PlannedComputeCreateRequest {
	this := PlannedComputeCreateRequest{}
	this.AccountId = accountId
	this.ServerType = serverType
	this.ServiceId = serviceId
	return &this
}

// NewPlannedComputeCreateRequestWithDefaults instantiates a new PlannedComputeCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlannedComputeCreateRequestWithDefaults() *PlannedComputeCreateRequest {
	this := PlannedComputeCreateRequest{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *PlannedComputeCreateRequest) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *PlannedComputeCreateRequest) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *PlannedComputeCreateRequest) SetAccountId(v string) {
	o.AccountId = v
}

// GetContractType returns the ContractType field value if set, zero value otherwise.
func (o *PlannedComputeCreateRequest) GetContractType() PlannedComputeContractEnum {
	if o == nil || IsNil(o.ContractType) {
		var ret PlannedComputeContractEnum
		return ret
	}
	return *o.ContractType
}

// GetContractTypeOk returns a tuple with the ContractType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlannedComputeCreateRequest) GetContractTypeOk() (*PlannedComputeContractEnum, bool) {
	if o == nil || IsNil(o.ContractType) {
		return nil, false
	}
	return o.ContractType, true
}

// HasContractType returns a boolean if a field has been set.
func (o *PlannedComputeCreateRequest) HasContractType() bool {
	if o != nil && !IsNil(o.ContractType) {
		return true
	}

	return false
}

// SetContractType gets a reference to the given PlannedComputeContractEnum and assigns it to the ContractType field.
func (o *PlannedComputeCreateRequest) SetContractType(v PlannedComputeContractEnum) {
	o.ContractType = &v
}

// GetOsType returns the OsType field value if set, zero value otherwise.
func (o *PlannedComputeCreateRequest) GetOsType() PlannedComputeOSTypeEnum {
	if o == nil || IsNil(o.OsType) {
		var ret PlannedComputeOSTypeEnum
		return ret
	}
	return *o.OsType
}

// GetOsTypeOk returns a tuple with the OsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlannedComputeCreateRequest) GetOsTypeOk() (*PlannedComputeOSTypeEnum, bool) {
	if o == nil || IsNil(o.OsType) {
		return nil, false
	}
	return o.OsType, true
}

// HasOsType returns a boolean if a field has been set.
func (o *PlannedComputeCreateRequest) HasOsType() bool {
	if o != nil && !IsNil(o.OsType) {
		return true
	}

	return false
}

// SetOsType gets a reference to the given PlannedComputeOSTypeEnum and assigns it to the OsType field.
func (o *PlannedComputeCreateRequest) SetOsType(v PlannedComputeOSTypeEnum) {
	o.OsType = &v
}

// GetServerType returns the ServerType field value
func (o *PlannedComputeCreateRequest) GetServerType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerType
}

// GetServerTypeOk returns a tuple with the ServerType field value
// and a boolean to check if the value has been set.
func (o *PlannedComputeCreateRequest) GetServerTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerType, true
}

// SetServerType sets field value
func (o *PlannedComputeCreateRequest) SetServerType(v string) {
	o.ServerType = v
}

// GetServiceId returns the ServiceId field value
func (o *PlannedComputeCreateRequest) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *PlannedComputeCreateRequest) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *PlannedComputeCreateRequest) SetServiceId(v string) {
	o.ServiceId = v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *PlannedComputeCreateRequest) GetServiceName() string {
	if o == nil || IsNil(o.ServiceName) {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlannedComputeCreateRequest) GetServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceName) {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *PlannedComputeCreateRequest) HasServiceName() bool {
	if o != nil && !IsNil(o.ServiceName) {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *PlannedComputeCreateRequest) SetServiceName(v string) {
	o.ServiceName = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *PlannedComputeCreateRequest) GetTag() []TagDTO {
	if o == nil || IsNil(o.Tag) {
		var ret []TagDTO
		return ret
	}
	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlannedComputeCreateRequest) GetTagOk() ([]TagDTO, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *PlannedComputeCreateRequest) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given []TagDTO and assigns it to the Tag field.
func (o *PlannedComputeCreateRequest) SetTag(v []TagDTO) {
	o.Tag = v
}

func (o PlannedComputeCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlannedComputeCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	if !IsNil(o.ContractType) {
		toSerialize["contract_type"] = o.ContractType
	}
	if !IsNil(o.OsType) {
		toSerialize["os_type"] = o.OsType
	}
	toSerialize["server_type"] = o.ServerType
	toSerialize["service_id"] = o.ServiceId
	if !IsNil(o.ServiceName) {
		toSerialize["service_name"] = o.ServiceName
	}
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	return toSerialize, nil
}

func (o *PlannedComputeCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"server_type",
		"service_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPlannedComputeCreateRequest := _PlannedComputeCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPlannedComputeCreateRequest)

	if err != nil {
		return err
	}

	*o = PlannedComputeCreateRequest(varPlannedComputeCreateRequest)

	return err
}

type NullablePlannedComputeCreateRequest struct {
	value *PlannedComputeCreateRequest
	isSet bool
}

func (v NullablePlannedComputeCreateRequest) Get() *PlannedComputeCreateRequest {
	return v.value
}

func (v *NullablePlannedComputeCreateRequest) Set(val *PlannedComputeCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePlannedComputeCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePlannedComputeCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlannedComputeCreateRequest(val *PlannedComputeCreateRequest) *NullablePlannedComputeCreateRequest {
	return &NullablePlannedComputeCreateRequest{value: val, isSet: true}
}

func (v NullablePlannedComputeCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlannedComputeCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


