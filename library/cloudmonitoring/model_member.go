/*
Nuri Monitoring service

Nuri Monitoring service

API version: Nuri
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmonitoring

import (
	"encoding/json"
)

// checks if the Member type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Member{}

// Member struct for Member
type Member struct {
	AccountId          *string `json:"account_id,omitempty"`
	CompanyName        *string `json:"company_name,omitempty"`
	DstOffset          *string `json:"dst_offset,omitempty"`
	Email              *string `json:"email,omitempty"`
	Id                 *string `json:"id,omitempty"`
	LastLoginAt        *string `json:"last_login_at,omitempty"`
	MemberCreatedAt    *string `json:"member_created_at,omitempty"`
	PasswordReuseCount *int32  `json:"password_reuse_count,omitempty"`
	Timezone           *string `json:"timezone,omitempty"`
	TzId               *string `json:"tz_id,omitempty"`
	UserName           *string `json:"user_name,omitempty"`
	UtcOffset          *string `json:"utc_offset,omitempty"`
}

// NewMember instantiates a new Member object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMember() *Member {
	this := Member{}
	return &this
}

// NewMemberWithDefaults instantiates a new Member object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberWithDefaults() *Member {
	this := Member{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *Member) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *Member) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *Member) SetAccountId(v string) {
	o.AccountId = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *Member) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *Member) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *Member) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetDstOffset returns the DstOffset field value if set, zero value otherwise.
func (o *Member) GetDstOffset() string {
	if o == nil || IsNil(o.DstOffset) {
		var ret string
		return ret
	}
	return *o.DstOffset
}

// GetDstOffsetOk returns a tuple with the DstOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetDstOffsetOk() (*string, bool) {
	if o == nil || IsNil(o.DstOffset) {
		return nil, false
	}
	return o.DstOffset, true
}

// HasDstOffset returns a boolean if a field has been set.
func (o *Member) HasDstOffset() bool {
	if o != nil && !IsNil(o.DstOffset) {
		return true
	}

	return false
}

// SetDstOffset gets a reference to the given string and assigns it to the DstOffset field.
func (o *Member) SetDstOffset(v string) {
	o.DstOffset = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *Member) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *Member) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *Member) SetEmail(v string) {
	o.Email = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Member) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Member) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Member) SetId(v string) {
	o.Id = &v
}

// GetLastLoginAt returns the LastLoginAt field value if set, zero value otherwise.
func (o *Member) GetLastLoginAt() string {
	if o == nil || IsNil(o.LastLoginAt) {
		var ret string
		return ret
	}
	return *o.LastLoginAt
}

// GetLastLoginAtOk returns a tuple with the LastLoginAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetLastLoginAtOk() (*string, bool) {
	if o == nil || IsNil(o.LastLoginAt) {
		return nil, false
	}
	return o.LastLoginAt, true
}

// HasLastLoginAt returns a boolean if a field has been set.
func (o *Member) HasLastLoginAt() bool {
	if o != nil && !IsNil(o.LastLoginAt) {
		return true
	}

	return false
}

// SetLastLoginAt gets a reference to the given string and assigns it to the LastLoginAt field.
func (o *Member) SetLastLoginAt(v string) {
	o.LastLoginAt = &v
}

// GetMemberCreatedAt returns the MemberCreatedAt field value if set, zero value otherwise.
func (o *Member) GetMemberCreatedAt() string {
	if o == nil || IsNil(o.MemberCreatedAt) {
		var ret string
		return ret
	}
	return *o.MemberCreatedAt
}

// GetMemberCreatedAtOk returns a tuple with the MemberCreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetMemberCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.MemberCreatedAt) {
		return nil, false
	}
	return o.MemberCreatedAt, true
}

// HasMemberCreatedAt returns a boolean if a field has been set.
func (o *Member) HasMemberCreatedAt() bool {
	if o != nil && !IsNil(o.MemberCreatedAt) {
		return true
	}

	return false
}

// SetMemberCreatedAt gets a reference to the given string and assigns it to the MemberCreatedAt field.
func (o *Member) SetMemberCreatedAt(v string) {
	o.MemberCreatedAt = &v
}

// GetPasswordReuseCount returns the PasswordReuseCount field value if set, zero value otherwise.
func (o *Member) GetPasswordReuseCount() int32 {
	if o == nil || IsNil(o.PasswordReuseCount) {
		var ret int32
		return ret
	}
	return *o.PasswordReuseCount
}

// GetPasswordReuseCountOk returns a tuple with the PasswordReuseCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetPasswordReuseCountOk() (*int32, bool) {
	if o == nil || IsNil(o.PasswordReuseCount) {
		return nil, false
	}
	return o.PasswordReuseCount, true
}

// HasPasswordReuseCount returns a boolean if a field has been set.
func (o *Member) HasPasswordReuseCount() bool {
	if o != nil && !IsNil(o.PasswordReuseCount) {
		return true
	}

	return false
}

// SetPasswordReuseCount gets a reference to the given int32 and assigns it to the PasswordReuseCount field.
func (o *Member) SetPasswordReuseCount(v int32) {
	o.PasswordReuseCount = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *Member) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *Member) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *Member) SetTimezone(v string) {
	o.Timezone = &v
}

// GetTzId returns the TzId field value if set, zero value otherwise.
func (o *Member) GetTzId() string {
	if o == nil || IsNil(o.TzId) {
		var ret string
		return ret
	}
	return *o.TzId
}

// GetTzIdOk returns a tuple with the TzId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetTzIdOk() (*string, bool) {
	if o == nil || IsNil(o.TzId) {
		return nil, false
	}
	return o.TzId, true
}

// HasTzId returns a boolean if a field has been set.
func (o *Member) HasTzId() bool {
	if o != nil && !IsNil(o.TzId) {
		return true
	}

	return false
}

// SetTzId gets a reference to the given string and assigns it to the TzId field.
func (o *Member) SetTzId(v string) {
	o.TzId = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *Member) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *Member) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *Member) SetUserName(v string) {
	o.UserName = &v
}

// GetUtcOffset returns the UtcOffset field value if set, zero value otherwise.
func (o *Member) GetUtcOffset() string {
	if o == nil || IsNil(o.UtcOffset) {
		var ret string
		return ret
	}
	return *o.UtcOffset
}

// GetUtcOffsetOk returns a tuple with the UtcOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetUtcOffsetOk() (*string, bool) {
	if o == nil || IsNil(o.UtcOffset) {
		return nil, false
	}
	return o.UtcOffset, true
}

// HasUtcOffset returns a boolean if a field has been set.
func (o *Member) HasUtcOffset() bool {
	if o != nil && !IsNil(o.UtcOffset) {
		return true
	}

	return false
}

// SetUtcOffset gets a reference to the given string and assigns it to the UtcOffset field.
func (o *Member) SetUtcOffset(v string) {
	o.UtcOffset = &v
}

func (o Member) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Member) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.CompanyName) {
		toSerialize["company_name"] = o.CompanyName
	}
	if !IsNil(o.DstOffset) {
		toSerialize["dst_offset"] = o.DstOffset
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastLoginAt) {
		toSerialize["last_login_at"] = o.LastLoginAt
	}
	if !IsNil(o.MemberCreatedAt) {
		toSerialize["member_created_at"] = o.MemberCreatedAt
	}
	if !IsNil(o.PasswordReuseCount) {
		toSerialize["password_reuse_count"] = o.PasswordReuseCount
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	if !IsNil(o.TzId) {
		toSerialize["tz_id"] = o.TzId
	}
	if !IsNil(o.UserName) {
		toSerialize["user_name"] = o.UserName
	}
	if !IsNil(o.UtcOffset) {
		toSerialize["utc_offset"] = o.UtcOffset
	}
	return toSerialize, nil
}

type NullableMember struct {
	value *Member
	isSet bool
}

func (v NullableMember) Get() *Member {
	return v.value
}

func (v *NullableMember) Set(val *Member) {
	v.value = val
	v.isSet = true
}

func (v NullableMember) IsSet() bool {
	return v.isSet
}

func (v *NullableMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMember(val *Member) *NullableMember {
	return &NullableMember{value: val, isSet: true}
}

func (v NullableMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
