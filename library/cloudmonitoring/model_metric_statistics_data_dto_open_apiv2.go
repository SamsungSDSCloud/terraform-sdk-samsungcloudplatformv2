/*
Nuri Monitoring service

Nuri Monitoring service

API version: Nuri
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmonitoring

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the MetricStatisticsDataDtoOpenAPIV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricStatisticsDataDtoOpenAPIV2{}

// MetricStatisticsDataDtoOpenAPIV2 통계 성능 조회 시 응답을 전달하기 위한 객체
type MetricStatisticsDataDtoOpenAPIV2 struct {
	// 메트릭 키
	MetricKey *string `json:"metricKey,omitempty"`
	// 메트릭 이름
	MetricName *string `json:"metricName,omitempty"`
	// 메트릭 유형
	MetricType *string `json:"metricType,omitempty"`
	// 메트릭 단위
	MetricUnit *string `json:"metricUnit,omitempty"`
	// 개별항목 출력 이름
	ObjectDisplayName *string `json:"objectDisplayName,omitempty"`
	// 개별항목 이름
	ObjectName *string `json:"objectName,omitempty"`
	// 개별항목 유형
	ObjectType *string `json:"objectType,omitempty"`
	// 성능 데이터
	PerfData []map[string]interface{} `json:"perfData,omitempty"`
	// 상품의 이름
	ProductName *string `json:"productName,omitempty"`
	// 상품 리소스 아이디
	ProductResourceId *string `json:"productResourceId,omitempty"`
	// 통계 집계 주기 (단위: 분)
	StatisticsPeriod int32 `json:"statisticsPeriod"`
	// 통계 유형
	StatisticsType string `json:"statisticsType"`
}

type _MetricStatisticsDataDtoOpenAPIV2 MetricStatisticsDataDtoOpenAPIV2

// NewMetricStatisticsDataDtoOpenAPIV2 instantiates a new MetricStatisticsDataDtoOpenAPIV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricStatisticsDataDtoOpenAPIV2(statisticsPeriod int32, statisticsType string) *MetricStatisticsDataDtoOpenAPIV2 {
	this := MetricStatisticsDataDtoOpenAPIV2{}
	this.StatisticsPeriod = statisticsPeriod
	this.StatisticsType = statisticsType
	return &this
}

// NewMetricStatisticsDataDtoOpenAPIV2WithDefaults instantiates a new MetricStatisticsDataDtoOpenAPIV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricStatisticsDataDtoOpenAPIV2WithDefaults() *MetricStatisticsDataDtoOpenAPIV2 {
	this := MetricStatisticsDataDtoOpenAPIV2{}
	return &this
}

// GetMetricKey returns the MetricKey field value if set, zero value otherwise.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetMetricKey() string {
	if o == nil || IsNil(o.MetricKey) {
		var ret string
		return ret
	}
	return *o.MetricKey
}

// GetMetricKeyOk returns a tuple with the MetricKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetMetricKeyOk() (*string, bool) {
	if o == nil || IsNil(o.MetricKey) {
		return nil, false
	}
	return o.MetricKey, true
}

// HasMetricKey returns a boolean if a field has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) HasMetricKey() bool {
	if o != nil && !IsNil(o.MetricKey) {
		return true
	}

	return false
}

// SetMetricKey gets a reference to the given string and assigns it to the MetricKey field.
func (o *MetricStatisticsDataDtoOpenAPIV2) SetMetricKey(v string) {
	o.MetricKey = &v
}

// GetMetricName returns the MetricName field value if set, zero value otherwise.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetMetricName() string {
	if o == nil || IsNil(o.MetricName) {
		var ret string
		return ret
	}
	return *o.MetricName
}

// GetMetricNameOk returns a tuple with the MetricName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetMetricNameOk() (*string, bool) {
	if o == nil || IsNil(o.MetricName) {
		return nil, false
	}
	return o.MetricName, true
}

// HasMetricName returns a boolean if a field has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) HasMetricName() bool {
	if o != nil && !IsNil(o.MetricName) {
		return true
	}

	return false
}

// SetMetricName gets a reference to the given string and assigns it to the MetricName field.
func (o *MetricStatisticsDataDtoOpenAPIV2) SetMetricName(v string) {
	o.MetricName = &v
}

// GetMetricType returns the MetricType field value if set, zero value otherwise.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetMetricType() string {
	if o == nil || IsNil(o.MetricType) {
		var ret string
		return ret
	}
	return *o.MetricType
}

// GetMetricTypeOk returns a tuple with the MetricType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetMetricTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MetricType) {
		return nil, false
	}
	return o.MetricType, true
}

// HasMetricType returns a boolean if a field has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) HasMetricType() bool {
	if o != nil && !IsNil(o.MetricType) {
		return true
	}

	return false
}

// SetMetricType gets a reference to the given string and assigns it to the MetricType field.
func (o *MetricStatisticsDataDtoOpenAPIV2) SetMetricType(v string) {
	o.MetricType = &v
}

// GetMetricUnit returns the MetricUnit field value if set, zero value otherwise.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetMetricUnit() string {
	if o == nil || IsNil(o.MetricUnit) {
		var ret string
		return ret
	}
	return *o.MetricUnit
}

// GetMetricUnitOk returns a tuple with the MetricUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetMetricUnitOk() (*string, bool) {
	if o == nil || IsNil(o.MetricUnit) {
		return nil, false
	}
	return o.MetricUnit, true
}

// HasMetricUnit returns a boolean if a field has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) HasMetricUnit() bool {
	if o != nil && !IsNil(o.MetricUnit) {
		return true
	}

	return false
}

// SetMetricUnit gets a reference to the given string and assigns it to the MetricUnit field.
func (o *MetricStatisticsDataDtoOpenAPIV2) SetMetricUnit(v string) {
	o.MetricUnit = &v
}

// GetObjectDisplayName returns the ObjectDisplayName field value if set, zero value otherwise.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetObjectDisplayName() string {
	if o == nil || IsNil(o.ObjectDisplayName) {
		var ret string
		return ret
	}
	return *o.ObjectDisplayName
}

// GetObjectDisplayNameOk returns a tuple with the ObjectDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetObjectDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectDisplayName) {
		return nil, false
	}
	return o.ObjectDisplayName, true
}

// HasObjectDisplayName returns a boolean if a field has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) HasObjectDisplayName() bool {
	if o != nil && !IsNil(o.ObjectDisplayName) {
		return true
	}

	return false
}

// SetObjectDisplayName gets a reference to the given string and assigns it to the ObjectDisplayName field.
func (o *MetricStatisticsDataDtoOpenAPIV2) SetObjectDisplayName(v string) {
	o.ObjectDisplayName = &v
}

// GetObjectName returns the ObjectName field value if set, zero value otherwise.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetObjectName() string {
	if o == nil || IsNil(o.ObjectName) {
		var ret string
		return ret
	}
	return *o.ObjectName
}

// GetObjectNameOk returns a tuple with the ObjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetObjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectName) {
		return nil, false
	}
	return o.ObjectName, true
}

// HasObjectName returns a boolean if a field has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) HasObjectName() bool {
	if o != nil && !IsNil(o.ObjectName) {
		return true
	}

	return false
}

// SetObjectName gets a reference to the given string and assigns it to the ObjectName field.
func (o *MetricStatisticsDataDtoOpenAPIV2) SetObjectName(v string) {
	o.ObjectName = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetObjectType() string {
	if o == nil || IsNil(o.ObjectType) {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetObjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectType) {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) HasObjectType() bool {
	if o != nil && !IsNil(o.ObjectType) {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *MetricStatisticsDataDtoOpenAPIV2) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetPerfData returns the PerfData field value if set, zero value otherwise.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetPerfData() []map[string]interface{} {
	if o == nil || IsNil(o.PerfData) {
		var ret []map[string]interface{}
		return ret
	}
	return o.PerfData
}

// GetPerfDataOk returns a tuple with the PerfData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetPerfDataOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.PerfData) {
		return nil, false
	}
	return o.PerfData, true
}

// HasPerfData returns a boolean if a field has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) HasPerfData() bool {
	if o != nil && !IsNil(o.PerfData) {
		return true
	}

	return false
}

// SetPerfData gets a reference to the given []map[string]interface{} and assigns it to the PerfData field.
func (o *MetricStatisticsDataDtoOpenAPIV2) SetPerfData(v []map[string]interface{}) {
	o.PerfData = v
}

// GetProductName returns the ProductName field value if set, zero value otherwise.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetProductName() string {
	if o == nil || IsNil(o.ProductName) {
		var ret string
		return ret
	}
	return *o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetProductNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProductName) {
		return nil, false
	}
	return o.ProductName, true
}

// HasProductName returns a boolean if a field has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) HasProductName() bool {
	if o != nil && !IsNil(o.ProductName) {
		return true
	}

	return false
}

// SetProductName gets a reference to the given string and assigns it to the ProductName field.
func (o *MetricStatisticsDataDtoOpenAPIV2) SetProductName(v string) {
	o.ProductName = &v
}

// GetProductResourceId returns the ProductResourceId field value if set, zero value otherwise.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetProductResourceId() string {
	if o == nil || IsNil(o.ProductResourceId) {
		var ret string
		return ret
	}
	return *o.ProductResourceId
}

// GetProductResourceIdOk returns a tuple with the ProductResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetProductResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductResourceId) {
		return nil, false
	}
	return o.ProductResourceId, true
}

// HasProductResourceId returns a boolean if a field has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) HasProductResourceId() bool {
	if o != nil && !IsNil(o.ProductResourceId) {
		return true
	}

	return false
}

// SetProductResourceId gets a reference to the given string and assigns it to the ProductResourceId field.
func (o *MetricStatisticsDataDtoOpenAPIV2) SetProductResourceId(v string) {
	o.ProductResourceId = &v
}

// GetStatisticsPeriod returns the StatisticsPeriod field value
func (o *MetricStatisticsDataDtoOpenAPIV2) GetStatisticsPeriod() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StatisticsPeriod
}

// GetStatisticsPeriodOk returns a tuple with the StatisticsPeriod field value
// and a boolean to check if the value has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetStatisticsPeriodOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatisticsPeriod, true
}

// SetStatisticsPeriod sets field value
func (o *MetricStatisticsDataDtoOpenAPIV2) SetStatisticsPeriod(v int32) {
	o.StatisticsPeriod = v
}

// GetStatisticsType returns the StatisticsType field value
func (o *MetricStatisticsDataDtoOpenAPIV2) GetStatisticsType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatisticsType
}

// GetStatisticsTypeOk returns a tuple with the StatisticsType field value
// and a boolean to check if the value has been set.
func (o *MetricStatisticsDataDtoOpenAPIV2) GetStatisticsTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatisticsType, true
}

// SetStatisticsType sets field value
func (o *MetricStatisticsDataDtoOpenAPIV2) SetStatisticsType(v string) {
	o.StatisticsType = v
}

func (o MetricStatisticsDataDtoOpenAPIV2) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricStatisticsDataDtoOpenAPIV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MetricKey) {
		toSerialize["metricKey"] = o.MetricKey
	}
	if !IsNil(o.MetricName) {
		toSerialize["metricName"] = o.MetricName
	}
	if !IsNil(o.MetricType) {
		toSerialize["metricType"] = o.MetricType
	}
	if !IsNil(o.MetricUnit) {
		toSerialize["metricUnit"] = o.MetricUnit
	}
	if !IsNil(o.ObjectDisplayName) {
		toSerialize["objectDisplayName"] = o.ObjectDisplayName
	}
	if !IsNil(o.ObjectName) {
		toSerialize["objectName"] = o.ObjectName
	}
	if !IsNil(o.ObjectType) {
		toSerialize["objectType"] = o.ObjectType
	}
	if !IsNil(o.PerfData) {
		toSerialize["perfData"] = o.PerfData
	}
	if !IsNil(o.ProductName) {
		toSerialize["productName"] = o.ProductName
	}
	if !IsNil(o.ProductResourceId) {
		toSerialize["productResourceId"] = o.ProductResourceId
	}
	toSerialize["statisticsPeriod"] = o.StatisticsPeriod
	toSerialize["statisticsType"] = o.StatisticsType
	return toSerialize, nil
}

func (o *MetricStatisticsDataDtoOpenAPIV2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"statisticsPeriod",
		"statisticsType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMetricStatisticsDataDtoOpenAPIV2 := _MetricStatisticsDataDtoOpenAPIV2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMetricStatisticsDataDtoOpenAPIV2)

	if err != nil {
		return err
	}

	*o = MetricStatisticsDataDtoOpenAPIV2(varMetricStatisticsDataDtoOpenAPIV2)

	return err
}

type NullableMetricStatisticsDataDtoOpenAPIV2 struct {
	value *MetricStatisticsDataDtoOpenAPIV2
	isSet bool
}

func (v NullableMetricStatisticsDataDtoOpenAPIV2) Get() *MetricStatisticsDataDtoOpenAPIV2 {
	return v.value
}

func (v *NullableMetricStatisticsDataDtoOpenAPIV2) Set(val *MetricStatisticsDataDtoOpenAPIV2) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricStatisticsDataDtoOpenAPIV2) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricStatisticsDataDtoOpenAPIV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricStatisticsDataDtoOpenAPIV2(val *MetricStatisticsDataDtoOpenAPIV2) *NullableMetricStatisticsDataDtoOpenAPIV2 {
	return &NullableMetricStatisticsDataDtoOpenAPIV2{value: val, isSet: true}
}

func (v NullableMetricStatisticsDataDtoOpenAPIV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricStatisticsDataDtoOpenAPIV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
