/*
Nuri Monitoring service

Nuri Monitoring service

API version: Nuri
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmonitoring

import (
	"encoding/json"
)

// checks if the GroupSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupSummary{}

// GroupSummary 그룹 요약 객체
type GroupSummary struct {
	GroupName       *string       `json:"groupName,omitempty"`
	GroupResourceId *string       `json:"groupResourceId,omitempty"`
	GroupSq         *int64        `json:"groupSq,omitempty"`
	ProductList     []ProductList `json:"productList,omitempty"`
	ProductTypeCode *string       `json:"productTypeCode,omitempty"`
	ProductTypeName *string       `json:"productTypeName,omitempty"`
}

// NewGroupSummary instantiates a new GroupSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupSummary() *GroupSummary {
	this := GroupSummary{}
	return &this
}

// NewGroupSummaryWithDefaults instantiates a new GroupSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupSummaryWithDefaults() *GroupSummary {
	this := GroupSummary{}
	return &this
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *GroupSummary) GetGroupName() string {
	if o == nil || IsNil(o.GroupName) {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupSummary) GetGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.GroupName) {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *GroupSummary) HasGroupName() bool {
	if o != nil && !IsNil(o.GroupName) {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *GroupSummary) SetGroupName(v string) {
	o.GroupName = &v
}

// GetGroupResourceId returns the GroupResourceId field value if set, zero value otherwise.
func (o *GroupSummary) GetGroupResourceId() string {
	if o == nil || IsNil(o.GroupResourceId) {
		var ret string
		return ret
	}
	return *o.GroupResourceId
}

// GetGroupResourceIdOk returns a tuple with the GroupResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupSummary) GetGroupResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupResourceId) {
		return nil, false
	}
	return o.GroupResourceId, true
}

// HasGroupResourceId returns a boolean if a field has been set.
func (o *GroupSummary) HasGroupResourceId() bool {
	if o != nil && !IsNil(o.GroupResourceId) {
		return true
	}

	return false
}

// SetGroupResourceId gets a reference to the given string and assigns it to the GroupResourceId field.
func (o *GroupSummary) SetGroupResourceId(v string) {
	o.GroupResourceId = &v
}

// GetGroupSq returns the GroupSq field value if set, zero value otherwise.
func (o *GroupSummary) GetGroupSq() int64 {
	if o == nil || IsNil(o.GroupSq) {
		var ret int64
		return ret
	}
	return *o.GroupSq
}

// GetGroupSqOk returns a tuple with the GroupSq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupSummary) GetGroupSqOk() (*int64, bool) {
	if o == nil || IsNil(o.GroupSq) {
		return nil, false
	}
	return o.GroupSq, true
}

// HasGroupSq returns a boolean if a field has been set.
func (o *GroupSummary) HasGroupSq() bool {
	if o != nil && !IsNil(o.GroupSq) {
		return true
	}

	return false
}

// SetGroupSq gets a reference to the given int64 and assigns it to the GroupSq field.
func (o *GroupSummary) SetGroupSq(v int64) {
	o.GroupSq = &v
}

// GetProductList returns the ProductList field value if set, zero value otherwise.
func (o *GroupSummary) GetProductList() []ProductList {
	if o == nil || IsNil(o.ProductList) {
		var ret []ProductList
		return ret
	}
	return o.ProductList
}

// GetProductListOk returns a tuple with the ProductList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupSummary) GetProductListOk() ([]ProductList, bool) {
	if o == nil || IsNil(o.ProductList) {
		return nil, false
	}
	return o.ProductList, true
}

// HasProductList returns a boolean if a field has been set.
func (o *GroupSummary) HasProductList() bool {
	if o != nil && !IsNil(o.ProductList) {
		return true
	}

	return false
}

// SetProductList gets a reference to the given []ProductList and assigns it to the ProductList field.
func (o *GroupSummary) SetProductList(v []ProductList) {
	o.ProductList = v
}

// GetProductTypeCode returns the ProductTypeCode field value if set, zero value otherwise.
func (o *GroupSummary) GetProductTypeCode() string {
	if o == nil || IsNil(o.ProductTypeCode) {
		var ret string
		return ret
	}
	return *o.ProductTypeCode
}

// GetProductTypeCodeOk returns a tuple with the ProductTypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupSummary) GetProductTypeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductTypeCode) {
		return nil, false
	}
	return o.ProductTypeCode, true
}

// HasProductTypeCode returns a boolean if a field has been set.
func (o *GroupSummary) HasProductTypeCode() bool {
	if o != nil && !IsNil(o.ProductTypeCode) {
		return true
	}

	return false
}

// SetProductTypeCode gets a reference to the given string and assigns it to the ProductTypeCode field.
func (o *GroupSummary) SetProductTypeCode(v string) {
	o.ProductTypeCode = &v
}

// GetProductTypeName returns the ProductTypeName field value if set, zero value otherwise.
func (o *GroupSummary) GetProductTypeName() string {
	if o == nil || IsNil(o.ProductTypeName) {
		var ret string
		return ret
	}
	return *o.ProductTypeName
}

// GetProductTypeNameOk returns a tuple with the ProductTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupSummary) GetProductTypeNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProductTypeName) {
		return nil, false
	}
	return o.ProductTypeName, true
}

// HasProductTypeName returns a boolean if a field has been set.
func (o *GroupSummary) HasProductTypeName() bool {
	if o != nil && !IsNil(o.ProductTypeName) {
		return true
	}

	return false
}

// SetProductTypeName gets a reference to the given string and assigns it to the ProductTypeName field.
func (o *GroupSummary) SetProductTypeName(v string) {
	o.ProductTypeName = &v
}

func (o GroupSummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GroupName) {
		toSerialize["groupName"] = o.GroupName
	}
	if !IsNil(o.GroupResourceId) {
		toSerialize["groupResourceId"] = o.GroupResourceId
	}
	if !IsNil(o.GroupSq) {
		toSerialize["groupSq"] = o.GroupSq
	}
	if !IsNil(o.ProductList) {
		toSerialize["productList"] = o.ProductList
	}
	if !IsNil(o.ProductTypeCode) {
		toSerialize["productTypeCode"] = o.ProductTypeCode
	}
	if !IsNil(o.ProductTypeName) {
		toSerialize["productTypeName"] = o.ProductTypeName
	}
	return toSerialize, nil
}

type NullableGroupSummary struct {
	value *GroupSummary
	isSet bool
}

func (v NullableGroupSummary) Get() *GroupSummary {
	return v.value
}

func (v *NullableGroupSummary) Set(val *GroupSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupSummary(val *GroupSummary) *NullableGroupSummary {
	return &NullableGroupSummary{value: val, isSet: true}
}

func (v NullableGroupSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
