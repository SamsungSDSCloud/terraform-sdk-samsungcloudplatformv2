/*
Nuri Monitoring service

Nuri Monitoring service

API version: Nuri
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmonitoring

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the EventPolicyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventPolicyResponse{}

// EventPolicyResponse 이벤트 정책 조회 시 응답 전송 객체
type EventPolicyResponse struct {
	CheckAsg   *bool                  `json:"checkAsg,omitempty"`
	CreateBy   map[string]interface{} `json:"createBy,omitempty"`
	CreateById *string                `json:"createById,omitempty"`
	CreatedBy *string                 `json:"createdBy,omitempty"`
	CreatedByName *string 			  `json:"createdByName,omitempty"`
	ModifiedBy *string                `json:"modifiedBy,omitempty"`
	ModifiedByName *string 			  `json:"modifiedByName,omitempty"`
	CreatedDt  *time.Time             `json:"createdDt,omitempty"`
	ModifiedDt *time.Time             `json:"modifiedDt,omitempty"`
	// 이벤트 레벨
	EventLevel string `json:"eventLevel"`
	// 이벤트 메시지 접두사
	EventMessagePrefix *string `json:"eventMessagePrefix,omitempty"`
	// swagger.event.eventPolicyResponse.eventOccurTimeZone.value
	EventOccurTimeZone *string `json:"eventOccurTimeZone,omitempty"`
	// 이벤트 정책 아이디
	EventPolicyId         int64                  `json:"eventPolicyId"`
	EventPolicyStatistics *EventPolicyStatistics `json:"eventPolicyStatistics,omitempty"`
	EventThreshold        EventThreshold         `json:"eventThreshold"`
	// 결함허용 개수 - 설정한 조건에 맞는 값이 몇 번 반복해서 발생하면 이벤트를 발생시킬지 설정하는 값
	FtCount int64 `json:"ftCount"`
	// 로그 메트릭 여부
	IsLogMetric string `json:"isLogMetric"`
	// 메트릭 설명
	MetricDescription *string `json:"metricDescription,omitempty"`
	// 메트릭 설명
	MetricDescriptionEn *string `json:"metricDescriptionEn,omitempty"`
	// 메트릭 키
	MetricKey string `json:"metricKey"`
	// 메트릭 이름
	MetricName string `json:"metricName"`
	// 오브젝트 이름
	ObjectName *string `json:"objectName,omitempty"`
	// 상품 이름
	ProductName string `json:"productName"`
	// 상품 리소스 아이디
	ProductResourceId string `json:"productResourceId"`
	// 상품 시퀀스
	ProductSq int64 `json:"productSq"`
	// 메트릭 대상 유형
	ProductTargetType *string `json:"productTargetType,omitempty"`
	// 메트릭 대상 유형
	ProductTargetTypeEn *string                `json:"productTargetTypeEn,omitempty"`
	UpdateBy            map[string]interface{} `json:"updateBy,omitempty"`
	UpdateById          *string                `json:"updateById,omitempty"`
}

type _EventPolicyResponse EventPolicyResponse

// NewEventPolicyResponse instantiates a new EventPolicyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventPolicyResponse(eventLevel string, eventPolicyId int64, eventThreshold EventThreshold, ftCount int64, isLogMetric string, metricKey string, metricName string, productName string, productResourceId string, productSq int64) *EventPolicyResponse {
	this := EventPolicyResponse{}
	this.EventLevel = eventLevel
	this.EventPolicyId = eventPolicyId
	this.EventThreshold = eventThreshold
	this.FtCount = ftCount
	this.IsLogMetric = isLogMetric
	this.MetricKey = metricKey
	this.MetricName = metricName
	this.ProductName = productName
	this.ProductResourceId = productResourceId
	this.ProductSq = productSq
	return &this
}

// NewEventPolicyResponseWithDefaults instantiates a new EventPolicyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventPolicyResponseWithDefaults() *EventPolicyResponse {
	this := EventPolicyResponse{}
	return &this
}

// GetCheckAsg returns the CheckAsg field value if set, zero value otherwise.
func (o *EventPolicyResponse) GetCheckAsg() bool {
	if o == nil || IsNil(o.CheckAsg) {
		var ret bool
		return ret
	}
	return *o.CheckAsg
}

// GetCheckAsgOk returns a tuple with the CheckAsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetCheckAsgOk() (*bool, bool) {
	if o == nil || IsNil(o.CheckAsg) {
		return nil, false
	}
	return o.CheckAsg, true
}

// HasCheckAsg returns a boolean if a field has been set.
func (o *EventPolicyResponse) HasCheckAsg() bool {
	if o != nil && !IsNil(o.CheckAsg) {
		return true
	}

	return false
}

// SetCheckAsg gets a reference to the given bool and assigns it to the CheckAsg field.
func (o *EventPolicyResponse) SetCheckAsg(v bool) {
	o.CheckAsg = &v
}

// GetCreateBy returns the CreateBy field value if set, zero value otherwise.
func (o *EventPolicyResponse) GetCreateBy() map[string]interface{} {
	if o == nil || IsNil(o.CreateBy) {
		var ret map[string]interface{}
		return ret
	}
	return o.CreateBy
}

// GetCreateByOk returns a tuple with the CreateBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetCreateByOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CreateBy) {
		return map[string]interface{}{}, false
	}
	return o.CreateBy, true
}

// HasCreateBy returns a boolean if a field has been set.
func (o *EventPolicyResponse) HasCreateBy() bool {
	if o != nil && !IsNil(o.CreateBy) {
		return true
	}

	return false
}

// SetCreateBy gets a reference to the given map[string]interface{} and assigns it to the CreateBy field.
func (o *EventPolicyResponse) SetCreateBy(v map[string]interface{}) {
	o.CreateBy = v
}

// GetCreateById returns the CreateById field value if set, zero value otherwise.
func (o *EventPolicyResponse) GetCreateById() string {
	if o == nil || IsNil(o.CreateById) {
		var ret string
		return ret
	}
	return *o.CreateById
}

// GetCreateByIdOk returns a tuple with the CreateById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetCreateByIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreateById) {
		return nil, false
	}
	return o.CreateById, true
}

// HasCreateById returns a boolean if a field has been set.
func (o *EventPolicyResponse) HasCreateById() bool {
	if o != nil && !IsNil(o.CreateById) {
		return true
	}

	return false
}

// SetCreateById gets a reference to the given string and assigns it to the CreateById field.
func (o *EventPolicyResponse) SetCreateById(v string) {
	o.CreateById = &v
}

// GetEventLevel returns the EventLevel field value
func (o *EventPolicyResponse) GetEventLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventLevel
}

// GetEventLevelOk returns a tuple with the EventLevel field value
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetEventLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventLevel, true
}

// SetEventLevel sets field value
func (o *EventPolicyResponse) SetEventLevel(v string) {
	o.EventLevel = v
}

// GetEventMessagePrefix returns the EventMessagePrefix field value if set, zero value otherwise.
func (o *EventPolicyResponse) GetEventMessagePrefix() string {
	if o == nil || IsNil(o.EventMessagePrefix) {
		var ret string
		return ret
	}
	return *o.EventMessagePrefix
}

// GetEventMessagePrefixOk returns a tuple with the EventMessagePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetEventMessagePrefixOk() (*string, bool) {
	if o == nil || IsNil(o.EventMessagePrefix) {
		return nil, false
	}
	return o.EventMessagePrefix, true
}

// HasEventMessagePrefix returns a boolean if a field has been set.
func (o *EventPolicyResponse) HasEventMessagePrefix() bool {
	if o != nil && !IsNil(o.EventMessagePrefix) {
		return true
	}

	return false
}

// SetEventMessagePrefix gets a reference to the given string and assigns it to the EventMessagePrefix field.
func (o *EventPolicyResponse) SetEventMessagePrefix(v string) {
	o.EventMessagePrefix = &v
}

// GetEventOccurTimeZone returns the EventOccurTimeZone field value if set, zero value otherwise.
func (o *EventPolicyResponse) GetEventOccurTimeZone() string {
	if o == nil || IsNil(o.EventOccurTimeZone) {
		var ret string
		return ret
	}
	return *o.EventOccurTimeZone
}

// GetEventOccurTimeZoneOk returns a tuple with the EventOccurTimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetEventOccurTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.EventOccurTimeZone) {
		return nil, false
	}
	return o.EventOccurTimeZone, true
}

// HasEventOccurTimeZone returns a boolean if a field has been set.
func (o *EventPolicyResponse) HasEventOccurTimeZone() bool {
	if o != nil && !IsNil(o.EventOccurTimeZone) {
		return true
	}

	return false
}

// SetEventOccurTimeZone gets a reference to the given string and assigns it to the EventOccurTimeZone field.
func (o *EventPolicyResponse) SetEventOccurTimeZone(v string) {
	o.EventOccurTimeZone = &v
}

// GetEventPolicyId returns the EventPolicyId field value
func (o *EventPolicyResponse) GetEventPolicyId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EventPolicyId
}

// GetEventPolicyIdOk returns a tuple with the EventPolicyId field value
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetEventPolicyIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventPolicyId, true
}

// SetEventPolicyId sets field value
func (o *EventPolicyResponse) SetEventPolicyId(v int64) {
	o.EventPolicyId = v
}

// GetEventPolicyStatistics returns the EventPolicyStatistics field value if set, zero value otherwise.
func (o *EventPolicyResponse) GetEventPolicyStatistics() EventPolicyStatistics {
	if o == nil || IsNil(o.EventPolicyStatistics) {
		var ret EventPolicyStatistics
		return ret
	}
	return *o.EventPolicyStatistics
}

// GetEventPolicyStatisticsOk returns a tuple with the EventPolicyStatistics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetEventPolicyStatisticsOk() (*EventPolicyStatistics, bool) {
	if o == nil || IsNil(o.EventPolicyStatistics) {
		return nil, false
	}
	return o.EventPolicyStatistics, true
}

// HasEventPolicyStatistics returns a boolean if a field has been set.
func (o *EventPolicyResponse) HasEventPolicyStatistics() bool {
	if o != nil && !IsNil(o.EventPolicyStatistics) {
		return true
	}

	return false
}

// SetEventPolicyStatistics gets a reference to the given EventPolicyStatistics and assigns it to the EventPolicyStatistics field.
func (o *EventPolicyResponse) SetEventPolicyStatistics(v EventPolicyStatistics) {
	o.EventPolicyStatistics = &v
}

// GetEventThreshold returns the EventThreshold field value
func (o *EventPolicyResponse) GetEventThreshold() EventThreshold {
	if o == nil {
		var ret EventThreshold
		return ret
	}

	return o.EventThreshold
}

// GetEventThresholdOk returns a tuple with the EventThreshold field value
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetEventThresholdOk() (*EventThreshold, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventThreshold, true
}

// SetEventThreshold sets field value
func (o *EventPolicyResponse) SetEventThreshold(v EventThreshold) {
	o.EventThreshold = v
}

// GetFtCount returns the FtCount field value
func (o *EventPolicyResponse) GetFtCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FtCount
}

// GetFtCountOk returns a tuple with the FtCount field value
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetFtCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FtCount, true
}

// SetFtCount sets field value
func (o *EventPolicyResponse) SetFtCount(v int64) {
	o.FtCount = v
}

// GetIsLogMetric returns the IsLogMetric field value
func (o *EventPolicyResponse) GetIsLogMetric() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IsLogMetric
}

// GetIsLogMetricOk returns a tuple with the IsLogMetric field value
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetIsLogMetricOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsLogMetric, true
}

// SetIsLogMetric sets field value
func (o *EventPolicyResponse) SetIsLogMetric(v string) {
	o.IsLogMetric = v
}

// GetMetricDescription returns the MetricDescription field value if set, zero value otherwise.
func (o *EventPolicyResponse) GetMetricDescription() string {
	if o == nil || IsNil(o.MetricDescription) {
		var ret string
		return ret
	}
	return *o.MetricDescription
}

// GetMetricDescriptionOk returns a tuple with the MetricDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetMetricDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.MetricDescription) {
		return nil, false
	}
	return o.MetricDescription, true
}

// HasMetricDescription returns a boolean if a field has been set.
func (o *EventPolicyResponse) HasMetricDescription() bool {
	if o != nil && !IsNil(o.MetricDescription) {
		return true
	}

	return false
}

// SetMetricDescription gets a reference to the given string and assigns it to the MetricDescription field.
func (o *EventPolicyResponse) SetMetricDescription(v string) {
	o.MetricDescription = &v
}

// GetMetricDescriptionEn returns the MetricDescriptionEn field value if set, zero value otherwise.
func (o *EventPolicyResponse) GetMetricDescriptionEn() string {
	if o == nil || IsNil(o.MetricDescriptionEn) {
		var ret string
		return ret
	}
	return *o.MetricDescriptionEn
}

// GetMetricDescriptionEnOk returns a tuple with the MetricDescriptionEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetMetricDescriptionEnOk() (*string, bool) {
	if o == nil || IsNil(o.MetricDescriptionEn) {
		return nil, false
	}
	return o.MetricDescriptionEn, true
}

// HasMetricDescriptionEn returns a boolean if a field has been set.
func (o *EventPolicyResponse) HasMetricDescriptionEn() bool {
	if o != nil && !IsNil(o.MetricDescriptionEn) {
		return true
	}

	return false
}

// SetMetricDescriptionEn gets a reference to the given string and assigns it to the MetricDescriptionEn field.
func (o *EventPolicyResponse) SetMetricDescriptionEn(v string) {
	o.MetricDescriptionEn = &v
}

// GetMetricKey returns the MetricKey field value
func (o *EventPolicyResponse) GetMetricKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricKey
}

// GetMetricKeyOk returns a tuple with the MetricKey field value
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetMetricKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricKey, true
}

// SetMetricKey sets field value
func (o *EventPolicyResponse) SetMetricKey(v string) {
	o.MetricKey = v
}

// GetMetricName returns the MetricName field value
func (o *EventPolicyResponse) GetMetricName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricName
}

// GetMetricNameOk returns a tuple with the MetricName field value
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetMetricNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricName, true
}

// SetMetricName sets field value
func (o *EventPolicyResponse) SetMetricName(v string) {
	o.MetricName = v
}

// GetObjectName returns the ObjectName field value if set, zero value otherwise.
func (o *EventPolicyResponse) GetObjectName() string {
	if o == nil || IsNil(o.ObjectName) {
		var ret string
		return ret
	}
	return *o.ObjectName
}

// GetObjectNameOk returns a tuple with the ObjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetObjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectName) {
		return nil, false
	}
	return o.ObjectName, true
}

// HasObjectName returns a boolean if a field has been set.
func (o *EventPolicyResponse) HasObjectName() bool {
	if o != nil && !IsNil(o.ObjectName) {
		return true
	}

	return false
}

// SetObjectName gets a reference to the given string and assigns it to the ObjectName field.
func (o *EventPolicyResponse) SetObjectName(v string) {
	o.ObjectName = &v
}

// GetProductName returns the ProductName field value
func (o *EventPolicyResponse) GetProductName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetProductNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductName, true
}

// SetProductName sets field value
func (o *EventPolicyResponse) SetProductName(v string) {
	o.ProductName = v
}

// GetProductResourceId returns the ProductResourceId field value
func (o *EventPolicyResponse) GetProductResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductResourceId
}

// GetProductResourceIdOk returns a tuple with the ProductResourceId field value
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetProductResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductResourceId, true
}

// SetProductResourceId sets field value
func (o *EventPolicyResponse) SetProductResourceId(v string) {
	o.ProductResourceId = v
}

// GetProductSq returns the ProductSq field value
func (o *EventPolicyResponse) GetProductSq() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ProductSq
}

// GetProductSqOk returns a tuple with the ProductSq field value
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetProductSqOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductSq, true
}

// SetProductSq sets field value
func (o *EventPolicyResponse) SetProductSq(v int64) {
	o.ProductSq = v
}

// GetProductTargetType returns the ProductTargetType field value if set, zero value otherwise.
func (o *EventPolicyResponse) GetProductTargetType() string {
	if o == nil || IsNil(o.ProductTargetType) {
		var ret string
		return ret
	}
	return *o.ProductTargetType
}

// GetProductTargetTypeOk returns a tuple with the ProductTargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetProductTargetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductTargetType) {
		return nil, false
	}
	return o.ProductTargetType, true
}

// HasProductTargetType returns a boolean if a field has been set.
func (o *EventPolicyResponse) HasProductTargetType() bool {
	if o != nil && !IsNil(o.ProductTargetType) {
		return true
	}

	return false
}

// SetProductTargetType gets a reference to the given string and assigns it to the ProductTargetType field.
func (o *EventPolicyResponse) SetProductTargetType(v string) {
	o.ProductTargetType = &v
}

// GetProductTargetTypeEn returns the ProductTargetTypeEn field value if set, zero value otherwise.
func (o *EventPolicyResponse) GetProductTargetTypeEn() string {
	if o == nil || IsNil(o.ProductTargetTypeEn) {
		var ret string
		return ret
	}
	return *o.ProductTargetTypeEn
}

// GetProductTargetTypeEnOk returns a tuple with the ProductTargetTypeEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetProductTargetTypeEnOk() (*string, bool) {
	if o == nil || IsNil(o.ProductTargetTypeEn) {
		return nil, false
	}
	return o.ProductTargetTypeEn, true
}

// HasProductTargetTypeEn returns a boolean if a field has been set.
func (o *EventPolicyResponse) HasProductTargetTypeEn() bool {
	if o != nil && !IsNil(o.ProductTargetTypeEn) {
		return true
	}

	return false
}

// SetProductTargetTypeEn gets a reference to the given string and assigns it to the ProductTargetTypeEn field.
func (o *EventPolicyResponse) SetProductTargetTypeEn(v string) {
	o.ProductTargetTypeEn = &v
}

// GetUpdateBy returns the UpdateBy field value if set, zero value otherwise.
func (o *EventPolicyResponse) GetUpdateBy() map[string]interface{} {
	if o == nil || IsNil(o.UpdateBy) {
		var ret map[string]interface{}
		return ret
	}
	return o.UpdateBy
}

// GetUpdateByOk returns a tuple with the UpdateBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetUpdateByOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.UpdateBy) {
		return map[string]interface{}{}, false
	}
	return o.UpdateBy, true
}

// HasUpdateBy returns a boolean if a field has been set.
func (o *EventPolicyResponse) HasUpdateBy() bool {
	if o != nil && !IsNil(o.UpdateBy) {
		return true
	}

	return false
}

// SetUpdateBy gets a reference to the given map[string]interface{} and assigns it to the UpdateBy field.
func (o *EventPolicyResponse) SetUpdateBy(v map[string]interface{}) {
	o.UpdateBy = v
}

// GetUpdateById returns the UpdateById field value if set, zero value otherwise.
func (o *EventPolicyResponse) GetUpdateById() string {
	if o == nil || IsNil(o.UpdateById) {
		var ret string
		return ret
	}
	return *o.UpdateById
}

// GetUpdateByIdOk returns a tuple with the UpdateById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyResponse) GetUpdateByIdOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateById) {
		return nil, false
	}
	return o.UpdateById, true
}

// HasUpdateById returns a boolean if a field has been set.
func (o *EventPolicyResponse) HasUpdateById() bool {
	if o != nil && !IsNil(o.UpdateById) {
		return true
	}

	return false
}

// SetUpdateById gets a reference to the given string and assigns it to the UpdateById field.
func (o *EventPolicyResponse) SetUpdateById(v string) {
	o.UpdateById = &v
}

func (o EventPolicyResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventPolicyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CheckAsg) {
		toSerialize["checkAsg"] = o.CheckAsg
	}
	if !IsNil(o.CreateBy) {
		toSerialize["createBy"] = o.CreateBy
	}
	if !IsNil(o.CreateById) {
		toSerialize["createById"] = o.CreateById
	}
	toSerialize["eventLevel"] = o.EventLevel
	if !IsNil(o.EventMessagePrefix) {
		toSerialize["eventMessagePrefix"] = o.EventMessagePrefix
	}
	if !IsNil(o.EventOccurTimeZone) {
		toSerialize["eventOccurTimeZone"] = o.EventOccurTimeZone
	}
	toSerialize["eventPolicyId"] = o.EventPolicyId
	if !IsNil(o.EventPolicyStatistics) {
		toSerialize["eventPolicyStatistics"] = o.EventPolicyStatistics
	}
	toSerialize["eventThreshold"] = o.EventThreshold
	toSerialize["ftCount"] = o.FtCount
	toSerialize["isLogMetric"] = o.IsLogMetric
	if !IsNil(o.MetricDescription) {
		toSerialize["metricDescription"] = o.MetricDescription
	}
	if !IsNil(o.MetricDescriptionEn) {
		toSerialize["metricDescriptionEn"] = o.MetricDescriptionEn
	}
	toSerialize["metricKey"] = o.MetricKey
	toSerialize["metricName"] = o.MetricName
	if !IsNil(o.ObjectName) {
		toSerialize["objectName"] = o.ObjectName
	}
	toSerialize["productName"] = o.ProductName
	toSerialize["productResourceId"] = o.ProductResourceId
	toSerialize["productSq"] = o.ProductSq
	if !IsNil(o.ProductTargetType) {
		toSerialize["productTargetType"] = o.ProductTargetType
	}
	if !IsNil(o.ProductTargetTypeEn) {
		toSerialize["productTargetTypeEn"] = o.ProductTargetTypeEn
	}
	if !IsNil(o.UpdateBy) {
		toSerialize["updateBy"] = o.UpdateBy
	}
	if !IsNil(o.UpdateById) {
		toSerialize["updateById"] = o.UpdateById
	}
	return toSerialize, nil
}

func (o *EventPolicyResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"eventLevel",
		"eventPolicyId",
		"eventThreshold",
		"ftCount",
		//"isLogMetric",
		//"metricKey",
		//"metricName",
		//"productName",
		//"productResourceId",
		//"productSq",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEventPolicyResponse := _EventPolicyResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEventPolicyResponse)

	if err != nil {
		return err
	}

	*o = EventPolicyResponse(varEventPolicyResponse)

	return err
}

type NullableEventPolicyResponse struct {
	value *EventPolicyResponse
	isSet bool
}

func (v NullableEventPolicyResponse) Get() *EventPolicyResponse {
	return v.value
}

func (v *NullableEventPolicyResponse) Set(val *EventPolicyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEventPolicyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEventPolicyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventPolicyResponse(val *EventPolicyResponse) *NullableEventPolicyResponse {
	return &NullableEventPolicyResponse{value: val, isSet: true}
}

func (v NullableEventPolicyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventPolicyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
