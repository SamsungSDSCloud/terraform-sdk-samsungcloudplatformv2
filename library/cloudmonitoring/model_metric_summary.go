/*
Nuri Monitoring service

Nuri Monitoring service

API version: Nuri
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmonitoring

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the MetricSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricSummary{}

// MetricSummary 메트릭 요약 객체
type MetricSummary struct {
	// 로그 메트릭 여부
	IsLogMetric string `json:"isLogMetric"`
	// 오브젝트 존재여부
	IsObjectExist string `json:"isObjectExist"`
	// 메트릭 설명
	MetricDescription *string `json:"metricDescription,omitempty"`
	// 메트릭 설명
	MetricDescriptionEn *string `json:"metricDescriptionEn,omitempty"`
	// 메트릭 키
	MetricKey string `json:"metricKey"`
	// 메트릭 이름
	MetricName string `json:"metricName"`
	// 메트릭 셋 키
	MetricSetKey string `json:"metricSetKey"`
	// 메트릭 셋 이름
	MetricSetName string `json:"metricSetName"`
	// 메트릭 유형
	MetricType string `json:"metricType"`
	// 메트릭 단위
	MetricUnit string `json:"metricUnit"`
	// 메트릭 대상 유형
	ProductTargetType *string `json:"productTargetType,omitempty"`
	// 메트릭 대상 유형
	ProductTargetTypeEn *string `json:"productTargetTypeEn,omitempty"`
}

type _MetricSummary MetricSummary

// NewMetricSummary instantiates a new MetricSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricSummary(isLogMetric string, isObjectExist string, metricKey string, metricName string, metricSetKey string, metricSetName string, metricType string, metricUnit string) *MetricSummary {
	this := MetricSummary{}
	this.IsLogMetric = isLogMetric
	this.IsObjectExist = isObjectExist
	this.MetricKey = metricKey
	this.MetricName = metricName
	this.MetricSetKey = metricSetKey
	this.MetricSetName = metricSetName
	this.MetricType = metricType
	this.MetricUnit = metricUnit
	return &this
}

// NewMetricSummaryWithDefaults instantiates a new MetricSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricSummaryWithDefaults() *MetricSummary {
	this := MetricSummary{}
	return &this
}

// GetIsLogMetric returns the IsLogMetric field value
func (o *MetricSummary) GetIsLogMetric() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IsLogMetric
}

// GetIsLogMetricOk returns a tuple with the IsLogMetric field value
// and a boolean to check if the value has been set.
func (o *MetricSummary) GetIsLogMetricOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsLogMetric, true
}

// SetIsLogMetric sets field value
func (o *MetricSummary) SetIsLogMetric(v string) {
	o.IsLogMetric = v
}

// GetIsObjectExist returns the IsObjectExist field value
func (o *MetricSummary) GetIsObjectExist() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IsObjectExist
}

// GetIsObjectExistOk returns a tuple with the IsObjectExist field value
// and a boolean to check if the value has been set.
func (o *MetricSummary) GetIsObjectExistOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsObjectExist, true
}

// SetIsObjectExist sets field value
func (o *MetricSummary) SetIsObjectExist(v string) {
	o.IsObjectExist = v
}

// GetMetricDescription returns the MetricDescription field value if set, zero value otherwise.
func (o *MetricSummary) GetMetricDescription() string {
	if o == nil || IsNil(o.MetricDescription) {
		var ret string
		return ret
	}
	return *o.MetricDescription
}

// GetMetricDescriptionOk returns a tuple with the MetricDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricSummary) GetMetricDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.MetricDescription) {
		return nil, false
	}
	return o.MetricDescription, true
}

// HasMetricDescription returns a boolean if a field has been set.
func (o *MetricSummary) HasMetricDescription() bool {
	if o != nil && !IsNil(o.MetricDescription) {
		return true
	}

	return false
}

// SetMetricDescription gets a reference to the given string and assigns it to the MetricDescription field.
func (o *MetricSummary) SetMetricDescription(v string) {
	o.MetricDescription = &v
}

// GetMetricDescriptionEn returns the MetricDescriptionEn field value if set, zero value otherwise.
func (o *MetricSummary) GetMetricDescriptionEn() string {
	if o == nil || IsNil(o.MetricDescriptionEn) {
		var ret string
		return ret
	}
	return *o.MetricDescriptionEn
}

// GetMetricDescriptionEnOk returns a tuple with the MetricDescriptionEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricSummary) GetMetricDescriptionEnOk() (*string, bool) {
	if o == nil || IsNil(o.MetricDescriptionEn) {
		return nil, false
	}
	return o.MetricDescriptionEn, true
}

// HasMetricDescriptionEn returns a boolean if a field has been set.
func (o *MetricSummary) HasMetricDescriptionEn() bool {
	if o != nil && !IsNil(o.MetricDescriptionEn) {
		return true
	}

	return false
}

// SetMetricDescriptionEn gets a reference to the given string and assigns it to the MetricDescriptionEn field.
func (o *MetricSummary) SetMetricDescriptionEn(v string) {
	o.MetricDescriptionEn = &v
}

// GetMetricKey returns the MetricKey field value
func (o *MetricSummary) GetMetricKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricKey
}

// GetMetricKeyOk returns a tuple with the MetricKey field value
// and a boolean to check if the value has been set.
func (o *MetricSummary) GetMetricKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricKey, true
}

// SetMetricKey sets field value
func (o *MetricSummary) SetMetricKey(v string) {
	o.MetricKey = v
}

// GetMetricName returns the MetricName field value
func (o *MetricSummary) GetMetricName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricName
}

// GetMetricNameOk returns a tuple with the MetricName field value
// and a boolean to check if the value has been set.
func (o *MetricSummary) GetMetricNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricName, true
}

// SetMetricName sets field value
func (o *MetricSummary) SetMetricName(v string) {
	o.MetricName = v
}

// GetMetricSetKey returns the MetricSetKey field value
func (o *MetricSummary) GetMetricSetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricSetKey
}

// GetMetricSetKeyOk returns a tuple with the MetricSetKey field value
// and a boolean to check if the value has been set.
func (o *MetricSummary) GetMetricSetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricSetKey, true
}

// SetMetricSetKey sets field value
func (o *MetricSummary) SetMetricSetKey(v string) {
	o.MetricSetKey = v
}

// GetMetricSetName returns the MetricSetName field value
func (o *MetricSummary) GetMetricSetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricSetName
}

// GetMetricSetNameOk returns a tuple with the MetricSetName field value
// and a boolean to check if the value has been set.
func (o *MetricSummary) GetMetricSetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricSetName, true
}

// SetMetricSetName sets field value
func (o *MetricSummary) SetMetricSetName(v string) {
	o.MetricSetName = v
}

// GetMetricType returns the MetricType field value
func (o *MetricSummary) GetMetricType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricType
}

// GetMetricTypeOk returns a tuple with the MetricType field value
// and a boolean to check if the value has been set.
func (o *MetricSummary) GetMetricTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricType, true
}

// SetMetricType sets field value
func (o *MetricSummary) SetMetricType(v string) {
	o.MetricType = v
}

// GetMetricUnit returns the MetricUnit field value
func (o *MetricSummary) GetMetricUnit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricUnit
}

// GetMetricUnitOk returns a tuple with the MetricUnit field value
// and a boolean to check if the value has been set.
func (o *MetricSummary) GetMetricUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricUnit, true
}

// SetMetricUnit sets field value
func (o *MetricSummary) SetMetricUnit(v string) {
	o.MetricUnit = v
}

// GetProductTargetType returns the ProductTargetType field value if set, zero value otherwise.
func (o *MetricSummary) GetProductTargetType() string {
	if o == nil || IsNil(o.ProductTargetType) {
		var ret string
		return ret
	}
	return *o.ProductTargetType
}

// GetProductTargetTypeOk returns a tuple with the ProductTargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricSummary) GetProductTargetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductTargetType) {
		return nil, false
	}
	return o.ProductTargetType, true
}

// HasProductTargetType returns a boolean if a field has been set.
func (o *MetricSummary) HasProductTargetType() bool {
	if o != nil && !IsNil(o.ProductTargetType) {
		return true
	}

	return false
}

// SetProductTargetType gets a reference to the given string and assigns it to the ProductTargetType field.
func (o *MetricSummary) SetProductTargetType(v string) {
	o.ProductTargetType = &v
}

// GetProductTargetTypeEn returns the ProductTargetTypeEn field value if set, zero value otherwise.
func (o *MetricSummary) GetProductTargetTypeEn() string {
	if o == nil || IsNil(o.ProductTargetTypeEn) {
		var ret string
		return ret
	}
	return *o.ProductTargetTypeEn
}

// GetProductTargetTypeEnOk returns a tuple with the ProductTargetTypeEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricSummary) GetProductTargetTypeEnOk() (*string, bool) {
	if o == nil || IsNil(o.ProductTargetTypeEn) {
		return nil, false
	}
	return o.ProductTargetTypeEn, true
}

// HasProductTargetTypeEn returns a boolean if a field has been set.
func (o *MetricSummary) HasProductTargetTypeEn() bool {
	if o != nil && !IsNil(o.ProductTargetTypeEn) {
		return true
	}

	return false
}

// SetProductTargetTypeEn gets a reference to the given string and assigns it to the ProductTargetTypeEn field.
func (o *MetricSummary) SetProductTargetTypeEn(v string) {
	o.ProductTargetTypeEn = &v
}

func (o MetricSummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["isLogMetric"] = o.IsLogMetric
	toSerialize["isObjectExist"] = o.IsObjectExist
	if !IsNil(o.MetricDescription) {
		toSerialize["metricDescription"] = o.MetricDescription
	}
	if !IsNil(o.MetricDescriptionEn) {
		toSerialize["metricDescriptionEn"] = o.MetricDescriptionEn
	}
	toSerialize["metricKey"] = o.MetricKey
	toSerialize["metricName"] = o.MetricName
	toSerialize["metricSetKey"] = o.MetricSetKey
	toSerialize["metricSetName"] = o.MetricSetName
	toSerialize["metricType"] = o.MetricType
	toSerialize["metricUnit"] = o.MetricUnit
	if !IsNil(o.ProductTargetType) {
		toSerialize["productTargetType"] = o.ProductTargetType
	}
	if !IsNil(o.ProductTargetTypeEn) {
		toSerialize["productTargetTypeEn"] = o.ProductTargetTypeEn
	}
	return toSerialize, nil
}

func (o *MetricSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"isLogMetric",
		"isObjectExist",
		"metricKey",
		"metricName",
		"metricSetKey",
		"metricSetName",
		"metricType",
		"metricUnit",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMetricSummary := _MetricSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMetricSummary)

	if err != nil {
		return err
	}

	*o = MetricSummary(varMetricSummary)

	return err
}

type NullableMetricSummary struct {
	value *MetricSummary
	isSet bool
}

func (v NullableMetricSummary) Get() *MetricSummary {
	return v.value
}

func (v *NullableMetricSummary) Set(val *MetricSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricSummary(val *MetricSummary) *NullableMetricSummary {
	return &NullableMetricSummary{value: val, isSet: true}
}

func (v NullableMetricSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
