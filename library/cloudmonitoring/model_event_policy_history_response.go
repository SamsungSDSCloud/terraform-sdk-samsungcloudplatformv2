/*
Nuri Monitoring service

Nuri Monitoring service

API version: Nuri
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmonitoring

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the EventPolicyHistoryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventPolicyHistoryResponse{}

// EventPolicyHistoryResponse 이벤트 정책 변경 이력 조회 시 응답 전송 객체
type EventPolicyHistoryResponse struct {
	CreateBy   map[string]interface{} `json:"createBy,omitempty"`
	CreateById *string                `json:"createById,omitempty"`
	// swagger.event.eventPolicyResponse.disableObject.value
	DisableObject *string `json:"disableObject,omitempty"`
	// swagger.event.eventPolicyResponse.disableObject.value
	DisableYn *string `json:"disableYn,omitempty"`
	// 이벤트 레벨
	EventLevel string `json:"eventLevel"`
	// 이벤트 메시지 접두사
	EventMessagePrefix *string `json:"eventMessagePrefix,omitempty"`
	// swagger.event.eventPolicyResponse.eventOccurTimeZone.value
	EventOccurTimeZone *string `json:"eventOccurTimeZone,omitempty"`
	// 이벤트 정책 이력 아이디
	EventPolicyHistoryId int64 `json:"eventPolicyHistoryId"`
	// 이벤트 정책 이력 유형 - C : 등록, U : 수정, D : 삭제
	EventPolicyHistoryType string `json:"eventPolicyHistoryType"`
	// 이벤트 정책 아이디
	EventPolicyId         *int64                 `json:"eventPolicyId,omitempty"`
	EventPolicyStatistics *EventPolicyStatistics `json:"eventPolicyStatistics,omitempty"`
	EventThreshold        EventThreshold         `json:"eventThreshold"`
	// 결함허용 개수
	FtCount int64 `json:"ftCount"`
	// 메트릭 설명
	MetricDescription *string `json:"metricDescription,omitempty"`
	// 메트릭 설명
	MetricDescriptionEn *string `json:"metricDescriptionEn,omitempty"`
	// 메트릭 키
	MetricKey string `json:"metricKey"`
	// 메트릭 이름
	MetricName string `json:"metricName"`
	// 메트릭 단위
	MetricUnit                   *string                       `json:"metricUnit,omitempty"`
	ModifiedBy                   *string                       `json:"modifiedBy,omitempty"`
	ModifiedByName               *string                       `json:"modifiedByName,omitempty"`
	ModifiedDt                   *time.Time                    `json:"modifiedDt,omitempty"`
	NotificationRecipientHistory *NotificationRecipientHistory `json:"notificationRecipientHistory,omitempty"`
	// 오브젝트 이름
	ObjectDisplayName *string `json:"objectDisplayName,omitempty"`
	// 오브젝트 이름
	ObjectName *string `json:"objectName,omitempty"`
	// 개별항목 유형
	ObjectType *string `json:"objectType,omitempty"`
	// 상품 이름
	ProductName string `json:"productName"`
	// 상품 리소스 아이디
	ProductResourceId string `json:"productResourceId"`
	// 메트릭 대상 유형
	ProductTargetType *string `json:"productTargetType,omitempty"`
	// 메트릭 대상 유형
	ProductTargetTypeEn *string                `json:"productTargetTypeEn,omitempty"`
	UpdateBy            map[string]interface{} `json:"updateBy,omitempty"`
	UpdateById          *string                `json:"updateById,omitempty"`
}

type _EventPolicyHistoryResponse EventPolicyHistoryResponse

// NewEventPolicyHistoryResponse instantiates a new EventPolicyHistoryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventPolicyHistoryResponse(eventLevel string, eventPolicyHistoryId int64, eventPolicyHistoryType string, eventThreshold EventThreshold, ftCount int64, metricKey string, metricName string, productName string, productResourceId string) *EventPolicyHistoryResponse {
	this := EventPolicyHistoryResponse{}
	this.EventLevel = eventLevel
	this.EventPolicyHistoryId = eventPolicyHistoryId
	this.EventPolicyHistoryType = eventPolicyHistoryType
	this.EventThreshold = eventThreshold
	this.FtCount = ftCount
	this.MetricKey = metricKey
	this.MetricName = metricName
	this.ProductName = productName
	this.ProductResourceId = productResourceId
	return &this
}

// NewEventPolicyHistoryResponseWithDefaults instantiates a new EventPolicyHistoryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventPolicyHistoryResponseWithDefaults() *EventPolicyHistoryResponse {
	this := EventPolicyHistoryResponse{}
	return &this
}

// GetCreateBy returns the CreateBy field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetCreateBy() map[string]interface{} {
	if o == nil || IsNil(o.CreateBy) {
		var ret map[string]interface{}
		return ret
	}
	return o.CreateBy
}

// GetCreateByOk returns a tuple with the CreateBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetCreateByOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CreateBy) {
		return map[string]interface{}{}, false
	}
	return o.CreateBy, true
}

// HasCreateBy returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasCreateBy() bool {
	if o != nil && !IsNil(o.CreateBy) {
		return true
	}

	return false
}

// SetCreateBy gets a reference to the given map[string]interface{} and assigns it to the CreateBy field.
func (o *EventPolicyHistoryResponse) SetCreateBy(v map[string]interface{}) {
	o.CreateBy = v
}

// GetCreateById returns the CreateById field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetCreateById() string {
	if o == nil || IsNil(o.CreateById) {
		var ret string
		return ret
	}
	return *o.CreateById
}

// GetCreateByIdOk returns a tuple with the CreateById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetCreateByIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreateById) {
		return nil, false
	}
	return o.CreateById, true
}

// HasCreateById returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasCreateById() bool {
	if o != nil && !IsNil(o.CreateById) {
		return true
	}

	return false
}

// SetCreateById gets a reference to the given string and assigns it to the CreateById field.
func (o *EventPolicyHistoryResponse) SetCreateById(v string) {
	o.CreateById = &v
}

// GetDisableObject returns the DisableObject field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetDisableObject() string {
	if o == nil || IsNil(o.DisableObject) {
		var ret string
		return ret
	}
	return *o.DisableObject
}

// GetDisableObjectOk returns a tuple with the DisableObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetDisableObjectOk() (*string, bool) {
	if o == nil || IsNil(o.DisableObject) {
		return nil, false
	}
	return o.DisableObject, true
}

// HasDisableObject returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasDisableObject() bool {
	if o != nil && !IsNil(o.DisableObject) {
		return true
	}

	return false
}

// SetDisableObject gets a reference to the given string and assigns it to the DisableObject field.
func (o *EventPolicyHistoryResponse) SetDisableObject(v string) {
	o.DisableObject = &v
}

// GetDisableYn returns the DisableYn field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetDisableYn() string {
	if o == nil || IsNil(o.DisableYn) {
		var ret string
		return ret
	}
	return *o.DisableYn
}

// GetDisableYnOk returns a tuple with the DisableYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetDisableYnOk() (*string, bool) {
	if o == nil || IsNil(o.DisableYn) {
		return nil, false
	}
	return o.DisableYn, true
}

// HasDisableYn returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasDisableYn() bool {
	if o != nil && !IsNil(o.DisableYn) {
		return true
	}

	return false
}

// SetDisableYn gets a reference to the given string and assigns it to the DisableYn field.
func (o *EventPolicyHistoryResponse) SetDisableYn(v string) {
	o.DisableYn = &v
}

// GetEventLevel returns the EventLevel field value
func (o *EventPolicyHistoryResponse) GetEventLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventLevel
}

// GetEventLevelOk returns a tuple with the EventLevel field value
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetEventLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventLevel, true
}

// SetEventLevel sets field value
func (o *EventPolicyHistoryResponse) SetEventLevel(v string) {
	o.EventLevel = v
}

// GetEventMessagePrefix returns the EventMessagePrefix field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetEventMessagePrefix() string {
	if o == nil || IsNil(o.EventMessagePrefix) {
		var ret string
		return ret
	}
	return *o.EventMessagePrefix
}

// GetEventMessagePrefixOk returns a tuple with the EventMessagePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetEventMessagePrefixOk() (*string, bool) {
	if o == nil || IsNil(o.EventMessagePrefix) {
		return nil, false
	}
	return o.EventMessagePrefix, true
}

// HasEventMessagePrefix returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasEventMessagePrefix() bool {
	if o != nil && !IsNil(o.EventMessagePrefix) {
		return true
	}

	return false
}

// SetEventMessagePrefix gets a reference to the given string and assigns it to the EventMessagePrefix field.
func (o *EventPolicyHistoryResponse) SetEventMessagePrefix(v string) {
	o.EventMessagePrefix = &v
}

// GetEventOccurTimeZone returns the EventOccurTimeZone field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetEventOccurTimeZone() string {
	if o == nil || IsNil(o.EventOccurTimeZone) {
		var ret string
		return ret
	}
	return *o.EventOccurTimeZone
}

// GetEventOccurTimeZoneOk returns a tuple with the EventOccurTimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetEventOccurTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.EventOccurTimeZone) {
		return nil, false
	}
	return o.EventOccurTimeZone, true
}

// HasEventOccurTimeZone returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasEventOccurTimeZone() bool {
	if o != nil && !IsNil(o.EventOccurTimeZone) {
		return true
	}

	return false
}

// SetEventOccurTimeZone gets a reference to the given string and assigns it to the EventOccurTimeZone field.
func (o *EventPolicyHistoryResponse) SetEventOccurTimeZone(v string) {
	o.EventOccurTimeZone = &v
}

// GetEventPolicyHistoryId returns the EventPolicyHistoryId field value
func (o *EventPolicyHistoryResponse) GetEventPolicyHistoryId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EventPolicyHistoryId
}

// GetEventPolicyHistoryIdOk returns a tuple with the EventPolicyHistoryId field value
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetEventPolicyHistoryIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventPolicyHistoryId, true
}

// SetEventPolicyHistoryId sets field value
func (o *EventPolicyHistoryResponse) SetEventPolicyHistoryId(v int64) {
	o.EventPolicyHistoryId = v
}

// GetEventPolicyHistoryType returns the EventPolicyHistoryType field value
func (o *EventPolicyHistoryResponse) GetEventPolicyHistoryType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventPolicyHistoryType
}

// GetEventPolicyHistoryTypeOk returns a tuple with the EventPolicyHistoryType field value
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetEventPolicyHistoryTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventPolicyHistoryType, true
}

// SetEventPolicyHistoryType sets field value
func (o *EventPolicyHistoryResponse) SetEventPolicyHistoryType(v string) {
	o.EventPolicyHistoryType = v
}

// GetEventPolicyId returns the EventPolicyId field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetEventPolicyId() int64 {
	if o == nil || IsNil(o.EventPolicyId) {
		var ret int64
		return ret
	}
	return *o.EventPolicyId
}

// GetEventPolicyIdOk returns a tuple with the EventPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetEventPolicyIdOk() (*int64, bool) {
	if o == nil || IsNil(o.EventPolicyId) {
		return nil, false
	}
	return o.EventPolicyId, true
}

// HasEventPolicyId returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasEventPolicyId() bool {
	if o != nil && !IsNil(o.EventPolicyId) {
		return true
	}

	return false
}

// SetEventPolicyId gets a reference to the given int64 and assigns it to the EventPolicyId field.
func (o *EventPolicyHistoryResponse) SetEventPolicyId(v int64) {
	o.EventPolicyId = &v
}

// GetEventPolicyStatistics returns the EventPolicyStatistics field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetEventPolicyStatistics() EventPolicyStatistics {
	if o == nil || IsNil(o.EventPolicyStatistics) {
		var ret EventPolicyStatistics
		return ret
	}
	return *o.EventPolicyStatistics
}

// GetEventPolicyStatisticsOk returns a tuple with the EventPolicyStatistics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetEventPolicyStatisticsOk() (*EventPolicyStatistics, bool) {
	if o == nil || IsNil(o.EventPolicyStatistics) {
		return nil, false
	}
	return o.EventPolicyStatistics, true
}

// HasEventPolicyStatistics returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasEventPolicyStatistics() bool {
	if o != nil && !IsNil(o.EventPolicyStatistics) {
		return true
	}

	return false
}

// SetEventPolicyStatistics gets a reference to the given EventPolicyStatistics and assigns it to the EventPolicyStatistics field.
func (o *EventPolicyHistoryResponse) SetEventPolicyStatistics(v EventPolicyStatistics) {
	o.EventPolicyStatistics = &v
}

// GetEventThreshold returns the EventThreshold field value
func (o *EventPolicyHistoryResponse) GetEventThreshold() EventThreshold {
	if o == nil {
		var ret EventThreshold
		return ret
	}

	return o.EventThreshold
}

// GetEventThresholdOk returns a tuple with the EventThreshold field value
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetEventThresholdOk() (*EventThreshold, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventThreshold, true
}

// SetEventThreshold sets field value
func (o *EventPolicyHistoryResponse) SetEventThreshold(v EventThreshold) {
	o.EventThreshold = v
}

// GetFtCount returns the FtCount field value
func (o *EventPolicyHistoryResponse) GetFtCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FtCount
}

// GetFtCountOk returns a tuple with the FtCount field value
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetFtCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FtCount, true
}

// SetFtCount sets field value
func (o *EventPolicyHistoryResponse) SetFtCount(v int64) {
	o.FtCount = v
}

// GetMetricDescription returns the MetricDescription field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetMetricDescription() string {
	if o == nil || IsNil(o.MetricDescription) {
		var ret string
		return ret
	}
	return *o.MetricDescription
}

// GetMetricDescriptionOk returns a tuple with the MetricDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetMetricDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.MetricDescription) {
		return nil, false
	}
	return o.MetricDescription, true
}

// HasMetricDescription returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasMetricDescription() bool {
	if o != nil && !IsNil(o.MetricDescription) {
		return true
	}

	return false
}

// SetMetricDescription gets a reference to the given string and assigns it to the MetricDescription field.
func (o *EventPolicyHistoryResponse) SetMetricDescription(v string) {
	o.MetricDescription = &v
}

// GetMetricDescriptionEn returns the MetricDescriptionEn field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetMetricDescriptionEn() string {
	if o == nil || IsNil(o.MetricDescriptionEn) {
		var ret string
		return ret
	}
	return *o.MetricDescriptionEn
}

// GetMetricDescriptionEnOk returns a tuple with the MetricDescriptionEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetMetricDescriptionEnOk() (*string, bool) {
	if o == nil || IsNil(o.MetricDescriptionEn) {
		return nil, false
	}
	return o.MetricDescriptionEn, true
}

// HasMetricDescriptionEn returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasMetricDescriptionEn() bool {
	if o != nil && !IsNil(o.MetricDescriptionEn) {
		return true
	}

	return false
}

// SetMetricDescriptionEn gets a reference to the given string and assigns it to the MetricDescriptionEn field.
func (o *EventPolicyHistoryResponse) SetMetricDescriptionEn(v string) {
	o.MetricDescriptionEn = &v
}

// GetMetricKey returns the MetricKey field value
func (o *EventPolicyHistoryResponse) GetMetricKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricKey
}

// GetMetricKeyOk returns a tuple with the MetricKey field value
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetMetricKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricKey, true
}

// SetMetricKey sets field value
func (o *EventPolicyHistoryResponse) SetMetricKey(v string) {
	o.MetricKey = v
}

// GetMetricName returns the MetricName field value
func (o *EventPolicyHistoryResponse) GetMetricName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricName
}

// GetMetricNameOk returns a tuple with the MetricName field value
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetMetricNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricName, true
}

// SetMetricName sets field value
func (o *EventPolicyHistoryResponse) SetMetricName(v string) {
	o.MetricName = v
}

// GetMetricUnit returns the MetricUnit field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetMetricUnit() string {
	if o == nil || IsNil(o.MetricUnit) {
		var ret string
		return ret
	}
	return *o.MetricUnit
}

// GetMetricUnitOk returns a tuple with the MetricUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetMetricUnitOk() (*string, bool) {
	if o == nil || IsNil(o.MetricUnit) {
		return nil, false
	}
	return o.MetricUnit, true
}

// HasMetricUnit returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasMetricUnit() bool {
	if o != nil && !IsNil(o.MetricUnit) {
		return true
	}

	return false
}

// SetMetricUnit gets a reference to the given string and assigns it to the MetricUnit field.
func (o *EventPolicyHistoryResponse) SetMetricUnit(v string) {
	o.MetricUnit = &v
}

// GetModifiedBy returns the ModifiedBy field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetModifiedBy() string {
	if o == nil || IsNil(o.ModifiedBy) {
		var ret string
		return ret
	}
	return *o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedBy) {
		return nil, false
	}
	return o.ModifiedBy, true
}

// HasModifiedBy returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasModifiedBy() bool {
	if o != nil && !IsNil(o.ModifiedBy) {
		return true
	}

	return false
}

// SetModifiedBy gets a reference to the given string and assigns it to the ModifiedBy field.
func (o *EventPolicyHistoryResponse) SetModifiedBy(v string) {
	o.ModifiedBy = &v
}

// GetModifiedByName returns the ModifiedByName field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetModifiedByName() string {
	if o == nil || IsNil(o.ModifiedByName) {
		var ret string
		return ret
	}
	return *o.ModifiedByName
}

// GetModifiedByNameOk returns a tuple with the ModifiedByName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetModifiedByNameOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedByName) {
		return nil, false
	}
	return o.ModifiedByName, true
}

// HasModifiedByName returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasModifiedByName() bool {
	if o != nil && !IsNil(o.ModifiedByName) {
		return true
	}

	return false
}

// SetModifiedByName gets a reference to the given string and assigns it to the ModifiedByName field.
func (o *EventPolicyHistoryResponse) SetModifiedByName(v string) {
	o.ModifiedByName = &v
}

// GetModifiedDt returns the ModifiedDt field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetModifiedDt() time.Time {
	if o == nil || IsNil(o.ModifiedDt) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDt
}

// GetModifiedDtOk returns a tuple with the ModifiedDt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetModifiedDtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModifiedDt) {
		return nil, false
	}
	return o.ModifiedDt, true
}

// HasModifiedDt returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasModifiedDt() bool {
	if o != nil && !IsNil(o.ModifiedDt) {
		return true
	}

	return false
}

// SetModifiedDt gets a reference to the given time.Time and assigns it to the ModifiedDt field.
func (o *EventPolicyHistoryResponse) SetModifiedDt(v time.Time) {
	o.ModifiedDt = &v
}

// GetNotificationRecipientHistory returns the NotificationRecipientHistory field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetNotificationRecipientHistory() NotificationRecipientHistory {
	if o == nil || IsNil(o.NotificationRecipientHistory) {
		var ret NotificationRecipientHistory
		return ret
	}
	return *o.NotificationRecipientHistory
}

// GetNotificationRecipientHistoryOk returns a tuple with the NotificationRecipientHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetNotificationRecipientHistoryOk() (*NotificationRecipientHistory, bool) {
	if o == nil || IsNil(o.NotificationRecipientHistory) {
		return nil, false
	}
	return o.NotificationRecipientHistory, true
}

// HasNotificationRecipientHistory returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasNotificationRecipientHistory() bool {
	if o != nil && !IsNil(o.NotificationRecipientHistory) {
		return true
	}

	return false
}

// SetNotificationRecipientHistory gets a reference to the given NotificationRecipientHistory and assigns it to the NotificationRecipientHistory field.
func (o *EventPolicyHistoryResponse) SetNotificationRecipientHistory(v NotificationRecipientHistory) {
	o.NotificationRecipientHistory = &v
}

// GetObjectDisplayName returns the ObjectDisplayName field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetObjectDisplayName() string {
	if o == nil || IsNil(o.ObjectDisplayName) {
		var ret string
		return ret
	}
	return *o.ObjectDisplayName
}

// GetObjectDisplayNameOk returns a tuple with the ObjectDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetObjectDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectDisplayName) {
		return nil, false
	}
	return o.ObjectDisplayName, true
}

// HasObjectDisplayName returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasObjectDisplayName() bool {
	if o != nil && !IsNil(o.ObjectDisplayName) {
		return true
	}

	return false
}

// SetObjectDisplayName gets a reference to the given string and assigns it to the ObjectDisplayName field.
func (o *EventPolicyHistoryResponse) SetObjectDisplayName(v string) {
	o.ObjectDisplayName = &v
}

// GetObjectName returns the ObjectName field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetObjectName() string {
	if o == nil || IsNil(o.ObjectName) {
		var ret string
		return ret
	}
	return *o.ObjectName
}

// GetObjectNameOk returns a tuple with the ObjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetObjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectName) {
		return nil, false
	}
	return o.ObjectName, true
}

// HasObjectName returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasObjectName() bool {
	if o != nil && !IsNil(o.ObjectName) {
		return true
	}

	return false
}

// SetObjectName gets a reference to the given string and assigns it to the ObjectName field.
func (o *EventPolicyHistoryResponse) SetObjectName(v string) {
	o.ObjectName = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetObjectType() string {
	if o == nil || IsNil(o.ObjectType) {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetObjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectType) {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasObjectType() bool {
	if o != nil && !IsNil(o.ObjectType) {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *EventPolicyHistoryResponse) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetProductName returns the ProductName field value
func (o *EventPolicyHistoryResponse) GetProductName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetProductNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductName, true
}

// SetProductName sets field value
func (o *EventPolicyHistoryResponse) SetProductName(v string) {
	o.ProductName = v
}

// GetProductResourceId returns the ProductResourceId field value
func (o *EventPolicyHistoryResponse) GetProductResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductResourceId
}

// GetProductResourceIdOk returns a tuple with the ProductResourceId field value
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetProductResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductResourceId, true
}

// SetProductResourceId sets field value
func (o *EventPolicyHistoryResponse) SetProductResourceId(v string) {
	o.ProductResourceId = v
}

// GetProductTargetType returns the ProductTargetType field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetProductTargetType() string {
	if o == nil || IsNil(o.ProductTargetType) {
		var ret string
		return ret
	}
	return *o.ProductTargetType
}

// GetProductTargetTypeOk returns a tuple with the ProductTargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetProductTargetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductTargetType) {
		return nil, false
	}
	return o.ProductTargetType, true
}

// HasProductTargetType returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasProductTargetType() bool {
	if o != nil && !IsNil(o.ProductTargetType) {
		return true
	}

	return false
}

// SetProductTargetType gets a reference to the given string and assigns it to the ProductTargetType field.
func (o *EventPolicyHistoryResponse) SetProductTargetType(v string) {
	o.ProductTargetType = &v
}

// GetProductTargetTypeEn returns the ProductTargetTypeEn field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetProductTargetTypeEn() string {
	if o == nil || IsNil(o.ProductTargetTypeEn) {
		var ret string
		return ret
	}
	return *o.ProductTargetTypeEn
}

// GetProductTargetTypeEnOk returns a tuple with the ProductTargetTypeEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetProductTargetTypeEnOk() (*string, bool) {
	if o == nil || IsNil(o.ProductTargetTypeEn) {
		return nil, false
	}
	return o.ProductTargetTypeEn, true
}

// HasProductTargetTypeEn returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasProductTargetTypeEn() bool {
	if o != nil && !IsNil(o.ProductTargetTypeEn) {
		return true
	}

	return false
}

// SetProductTargetTypeEn gets a reference to the given string and assigns it to the ProductTargetTypeEn field.
func (o *EventPolicyHistoryResponse) SetProductTargetTypeEn(v string) {
	o.ProductTargetTypeEn = &v
}

// GetUpdateBy returns the UpdateBy field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetUpdateBy() map[string]interface{} {
	if o == nil || IsNil(o.UpdateBy) {
		var ret map[string]interface{}
		return ret
	}
	return o.UpdateBy
}

// GetUpdateByOk returns a tuple with the UpdateBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetUpdateByOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.UpdateBy) {
		return map[string]interface{}{}, false
	}
	return o.UpdateBy, true
}

// HasUpdateBy returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasUpdateBy() bool {
	if o != nil && !IsNil(o.UpdateBy) {
		return true
	}

	return false
}

// SetUpdateBy gets a reference to the given map[string]interface{} and assigns it to the UpdateBy field.
func (o *EventPolicyHistoryResponse) SetUpdateBy(v map[string]interface{}) {
	o.UpdateBy = v
}

// GetUpdateById returns the UpdateById field value if set, zero value otherwise.
func (o *EventPolicyHistoryResponse) GetUpdateById() string {
	if o == nil || IsNil(o.UpdateById) {
		var ret string
		return ret
	}
	return *o.UpdateById
}

// GetUpdateByIdOk returns a tuple with the UpdateById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyHistoryResponse) GetUpdateByIdOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateById) {
		return nil, false
	}
	return o.UpdateById, true
}

// HasUpdateById returns a boolean if a field has been set.
func (o *EventPolicyHistoryResponse) HasUpdateById() bool {
	if o != nil && !IsNil(o.UpdateById) {
		return true
	}

	return false
}

// SetUpdateById gets a reference to the given string and assigns it to the UpdateById field.
func (o *EventPolicyHistoryResponse) SetUpdateById(v string) {
	o.UpdateById = &v
}

func (o EventPolicyHistoryResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventPolicyHistoryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreateBy) {
		toSerialize["createBy"] = o.CreateBy
	}
	if !IsNil(o.CreateById) {
		toSerialize["createById"] = o.CreateById
	}
	if !IsNil(o.DisableObject) {
		toSerialize["disableObject"] = o.DisableObject
	}
	if !IsNil(o.DisableYn) {
		toSerialize["disableYn"] = o.DisableYn
	}
	toSerialize["eventLevel"] = o.EventLevel
	if !IsNil(o.EventMessagePrefix) {
		toSerialize["eventMessagePrefix"] = o.EventMessagePrefix
	}
	if !IsNil(o.EventOccurTimeZone) {
		toSerialize["eventOccurTimeZone"] = o.EventOccurTimeZone
	}
	toSerialize["eventPolicyHistoryId"] = o.EventPolicyHistoryId
	toSerialize["eventPolicyHistoryType"] = o.EventPolicyHistoryType
	if !IsNil(o.EventPolicyId) {
		toSerialize["eventPolicyId"] = o.EventPolicyId
	}
	if !IsNil(o.EventPolicyStatistics) {
		toSerialize["eventPolicyStatistics"] = o.EventPolicyStatistics
	}
	toSerialize["eventThreshold"] = o.EventThreshold
	toSerialize["ftCount"] = o.FtCount
	if !IsNil(o.MetricDescription) {
		toSerialize["metricDescription"] = o.MetricDescription
	}
	if !IsNil(o.MetricDescriptionEn) {
		toSerialize["metricDescriptionEn"] = o.MetricDescriptionEn
	}
	toSerialize["metricKey"] = o.MetricKey
	toSerialize["metricName"] = o.MetricName
	if !IsNil(o.MetricUnit) {
		toSerialize["metricUnit"] = o.MetricUnit
	}
	if !IsNil(o.ModifiedBy) {
		toSerialize["modifiedBy"] = o.ModifiedBy
	}
	if !IsNil(o.ModifiedByName) {
		toSerialize["modifiedByName"] = o.ModifiedByName
	}
	if !IsNil(o.ModifiedDt) {
		toSerialize["modifiedDt"] = o.ModifiedDt
	}
	if !IsNil(o.NotificationRecipientHistory) {
		toSerialize["notificationRecipientHistory"] = o.NotificationRecipientHistory
	}
	if !IsNil(o.ObjectDisplayName) {
		toSerialize["objectDisplayName"] = o.ObjectDisplayName
	}
	if !IsNil(o.ObjectName) {
		toSerialize["objectName"] = o.ObjectName
	}
	if !IsNil(o.ObjectType) {
		toSerialize["objectType"] = o.ObjectType
	}
	toSerialize["productName"] = o.ProductName
	toSerialize["productResourceId"] = o.ProductResourceId
	if !IsNil(o.ProductTargetType) {
		toSerialize["productTargetType"] = o.ProductTargetType
	}
	if !IsNil(o.ProductTargetTypeEn) {
		toSerialize["productTargetTypeEn"] = o.ProductTargetTypeEn
	}
	if !IsNil(o.UpdateBy) {
		toSerialize["updateBy"] = o.UpdateBy
	}
	if !IsNil(o.UpdateById) {
		toSerialize["updateById"] = o.UpdateById
	}
	return toSerialize, nil
}

func (o *EventPolicyHistoryResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"eventLevel",
		"eventPolicyHistoryId",
		"eventPolicyHistoryType",
		"eventThreshold",
		"ftCount",
		"metricKey",
		"metricName",
		"productName",
		"productResourceId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEventPolicyHistoryResponse := _EventPolicyHistoryResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEventPolicyHistoryResponse)

	if err != nil {
		return err
	}

	*o = EventPolicyHistoryResponse(varEventPolicyHistoryResponse)

	return err
}

type NullableEventPolicyHistoryResponse struct {
	value *EventPolicyHistoryResponse
	isSet bool
}

func (v NullableEventPolicyHistoryResponse) Get() *EventPolicyHistoryResponse {
	return v.value
}

func (v *NullableEventPolicyHistoryResponse) Set(val *EventPolicyHistoryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEventPolicyHistoryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEventPolicyHistoryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventPolicyHistoryResponse(val *EventPolicyHistoryResponse) *NullableEventPolicyHistoryResponse {
	return &NullableEventPolicyHistoryResponse{value: val, isSet: true}
}

func (v NullableEventPolicyHistoryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventPolicyHistoryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
