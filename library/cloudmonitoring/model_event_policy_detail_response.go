/*
Nuri Monitoring service

Nuri Monitoring service

API version: Nuri
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmonitoring

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the EventPolicyDetailResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventPolicyDetailResponse{}

// EventPolicyDetailResponse 이벤트 정책 조회 시 응답 전송 객체
type EventPolicyDetailResponse struct {
	AsgYn         *string                `json:"asgYn,omitempty"`
	AttrListStr   *string                `json:"attrListStr,omitempty"`
	CheckAsg      *bool                  `json:"checkAsg,omitempty"`
	CreateBy      map[string]interface{} `json:"createBy,omitempty"`
	CreateById    *string                `json:"createById,omitempty"`
	CreatedBy     *string                `json:"createdBy,omitempty"`
	CreatedByName *string                `json:"createdByName,omitempty"`
	CreatedDt     *time.Time             `json:"createdDt,omitempty"`
	// swagger.event.eventPolicyResponse.disableObject.value
	DisableObject *string `json:"disableObject,omitempty"`
	DisableYn     *string `json:"disableYn,omitempty"`
	// swagger.event.eventResponse.displayEventRule.value
	DisplayEventRule *string `json:"displayEventRule,omitempty"`
	// 이벤트 레벨
	EventLevel string `json:"eventLevel"`
	// 이벤트 메시지 접두사
	EventMessagePrefix *string `json:"eventMessagePrefix,omitempty"`
	// swagger.event.eventPolicyResponse.eventOccurTimeZone.value
	EventOccurTimeZone *string `json:"eventOccurTimeZone,omitempty"`
	// 이벤트 정책 아이디
	EventPolicyId         int64                  `json:"eventPolicyId"`
	EventPolicyStatistics *EventPolicyStatistics `json:"eventPolicyStatistics,omitempty"`
	EventThreshold        EventThreshold         `json:"eventThreshold"`
	// 결함허용 개수 - 설정한 조건에 맞는 값이 몇 번 반복해서 발생하면 이벤트를 발생시킬지 설정하는 값
	FtCount      int64         `json:"ftCount"`
	GroupSummary *GroupSummary `json:"groupSummary,omitempty"`
	// 로그 메트릭 여부
	IsLogMetric string `json:"isLogMetric"`
	// 메트릭 설명
	MetricDescription *string `json:"metricDescription,omitempty"`
	// 메트릭 설명
	MetricDescriptionEn *string `json:"metricDescriptionEn,omitempty"`
	// 메트릭 키
	MetricKey string `json:"metricKey"`
	// 메트릭 이름
	MetricName    *string       `json:"metricName,omitempty"`
	MetricSummary MetricSummary `json:"metricSummary"`
	// 메트릭 유형
	MetricType *string `json:"metricType,omitempty"`
	// 메트릭 단위
	MetricUnit     *string    `json:"metricUnit,omitempty"`
	ModifiedBy     *string    `json:"modifiedBy,omitempty"`
	ModifiedByName *string    `json:"modifiedByName,omitempty"`
	ModifiedDt     *time.Time `json:"modifiedDt,omitempty"`
	// 오브젝트 이름
	ObjectDisplayName *string `json:"objectDisplayName,omitempty"`
	// 오브젝트 이름
	ObjectName *string `json:"objectName,omitempty"`
	// 개별항목 유형
	ObjectType *string `json:"objectType,omitempty"`
	// 개별항목 유형 이름
	ObjectTypeName *string `json:"objectTypeName,omitempty"`
	// 상품 정보 속성
	ProductInfoAttrs []ProductInfoAttr `json:"productInfoAttrs,omitempty"`
	// 상품 이름
	ProductName *string `json:"productName,omitempty"`
	// 상품 리소스 아이디
	ProductResourceId *string `json:"productResourceId,omitempty"`
	// 상품 시퀀스
	ProductSq      *int64         `json:"productSq,omitempty"`
	ProductSummary ProductSummary `json:"productSummary"`
	// 메트릭 대상 유형
	ProductTargetType *string `json:"productTargetType,omitempty"`
	// 메트릭 대상 유형
	ProductTargetTypeEn *string `json:"productTargetTypeEn,omitempty"`
	// 시작일시
	StartDt    *time.Time             `json:"startDt,omitempty"`
	UpdateBy   map[string]interface{} `json:"updateBy,omitempty"`
	UpdateById *string                `json:"updateById,omitempty"`
	// 사용자 이름
	UserNameList []string `json:"userNameList,omitempty"`
	UserNameStr  *string  `json:"userNameStr,omitempty"`
	// swagger.event.eventPolicyResponse.disableObject.value
	UserNames *string `json:"userNames,omitempty"`
}

type _EventPolicyDetailResponse EventPolicyDetailResponse

// NewEventPolicyDetailResponse instantiates a new EventPolicyDetailResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventPolicyDetailResponse(eventLevel string, eventPolicyId int64, eventThreshold EventThreshold, ftCount int64, isLogMetric string, metricKey string, metricSummary MetricSummary, productSummary ProductSummary) *EventPolicyDetailResponse {
	this := EventPolicyDetailResponse{}
	this.EventLevel = eventLevel
	this.EventPolicyId = eventPolicyId
	this.EventThreshold = eventThreshold
	this.FtCount = ftCount
	this.IsLogMetric = isLogMetric
	this.MetricKey = metricKey
	this.MetricSummary = metricSummary
	this.ProductSummary = productSummary
	return &this
}

// NewEventPolicyDetailResponseWithDefaults instantiates a new EventPolicyDetailResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventPolicyDetailResponseWithDefaults() *EventPolicyDetailResponse {
	this := EventPolicyDetailResponse{}
	return &this
}

// GetAsgYn returns the AsgYn field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetAsgYn() string {
	if o == nil || IsNil(o.AsgYn) {
		var ret string
		return ret
	}
	return *o.AsgYn
}

// GetAsgYnOk returns a tuple with the AsgYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetAsgYnOk() (*string, bool) {
	if o == nil || IsNil(o.AsgYn) {
		return nil, false
	}
	return o.AsgYn, true
}

// HasAsgYn returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasAsgYn() bool {
	if o != nil && !IsNil(o.AsgYn) {
		return true
	}

	return false
}

// SetAsgYn gets a reference to the given string and assigns it to the AsgYn field.
func (o *EventPolicyDetailResponse) SetAsgYn(v string) {
	o.AsgYn = &v
}

// GetAttrListStr returns the AttrListStr field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetAttrListStr() string {
	if o == nil || IsNil(o.AttrListStr) {
		var ret string
		return ret
	}
	return *o.AttrListStr
}

// GetAttrListStrOk returns a tuple with the AttrListStr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetAttrListStrOk() (*string, bool) {
	if o == nil || IsNil(o.AttrListStr) {
		return nil, false
	}
	return o.AttrListStr, true
}

// HasAttrListStr returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasAttrListStr() bool {
	if o != nil && !IsNil(o.AttrListStr) {
		return true
	}

	return false
}

// SetAttrListStr gets a reference to the given string and assigns it to the AttrListStr field.
func (o *EventPolicyDetailResponse) SetAttrListStr(v string) {
	o.AttrListStr = &v
}

// GetCheckAsg returns the CheckAsg field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetCheckAsg() bool {
	if o == nil || IsNil(o.CheckAsg) {
		var ret bool
		return ret
	}
	return *o.CheckAsg
}

// GetCheckAsgOk returns a tuple with the CheckAsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetCheckAsgOk() (*bool, bool) {
	if o == nil || IsNil(o.CheckAsg) {
		return nil, false
	}
	return o.CheckAsg, true
}

// HasCheckAsg returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasCheckAsg() bool {
	if o != nil && !IsNil(o.CheckAsg) {
		return true
	}

	return false
}

// SetCheckAsg gets a reference to the given bool and assigns it to the CheckAsg field.
func (o *EventPolicyDetailResponse) SetCheckAsg(v bool) {
	o.CheckAsg = &v
}

// GetCreateBy returns the CreateBy field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetCreateBy() map[string]interface{} {
	if o == nil || IsNil(o.CreateBy) {
		var ret map[string]interface{}
		return ret
	}
	return o.CreateBy
}

// GetCreateByOk returns a tuple with the CreateBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetCreateByOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CreateBy) {
		return map[string]interface{}{}, false
	}
	return o.CreateBy, true
}

// HasCreateBy returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasCreateBy() bool {
	if o != nil && !IsNil(o.CreateBy) {
		return true
	}

	return false
}

// SetCreateBy gets a reference to the given map[string]interface{} and assigns it to the CreateBy field.
func (o *EventPolicyDetailResponse) SetCreateBy(v map[string]interface{}) {
	o.CreateBy = v
}

// GetCreateById returns the CreateById field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetCreateById() string {
	if o == nil || IsNil(o.CreateById) {
		var ret string
		return ret
	}
	return *o.CreateById
}

// GetCreateByIdOk returns a tuple with the CreateById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetCreateByIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreateById) {
		return nil, false
	}
	return o.CreateById, true
}

// HasCreateById returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasCreateById() bool {
	if o != nil && !IsNil(o.CreateById) {
		return true
	}

	return false
}

// SetCreateById gets a reference to the given string and assigns it to the CreateById field.
func (o *EventPolicyDetailResponse) SetCreateById(v string) {
	o.CreateById = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *EventPolicyDetailResponse) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreatedByName returns the CreatedByName field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetCreatedByName() string {
	if o == nil || IsNil(o.CreatedByName) {
		var ret string
		return ret
	}
	return *o.CreatedByName
}

// GetCreatedByNameOk returns a tuple with the CreatedByName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetCreatedByNameOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByName) {
		return nil, false
	}
	return o.CreatedByName, true
}

// HasCreatedByName returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasCreatedByName() bool {
	if o != nil && !IsNil(o.CreatedByName) {
		return true
	}

	return false
}

// SetCreatedByName gets a reference to the given string and assigns it to the CreatedByName field.
func (o *EventPolicyDetailResponse) SetCreatedByName(v string) {
	o.CreatedByName = &v
}

// GetCreatedDt returns the CreatedDt field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetCreatedDt() time.Time {
	if o == nil || IsNil(o.CreatedDt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDt
}

// GetCreatedDtOk returns a tuple with the CreatedDt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetCreatedDtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedDt) {
		return nil, false
	}
	return o.CreatedDt, true
}

// HasCreatedDt returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasCreatedDt() bool {
	if o != nil && !IsNil(o.CreatedDt) {
		return true
	}

	return false
}

// SetCreatedDt gets a reference to the given time.Time and assigns it to the CreatedDt field.
func (o *EventPolicyDetailResponse) SetCreatedDt(v time.Time) {
	o.CreatedDt = &v
}

// GetDisableObject returns the DisableObject field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetDisableObject() string {
	if o == nil || IsNil(o.DisableObject) {
		var ret string
		return ret
	}
	return *o.DisableObject
}

// GetDisableObjectOk returns a tuple with the DisableObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetDisableObjectOk() (*string, bool) {
	if o == nil || IsNil(o.DisableObject) {
		return nil, false
	}
	return o.DisableObject, true
}

// HasDisableObject returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasDisableObject() bool {
	if o != nil && !IsNil(o.DisableObject) {
		return true
	}

	return false
}

// SetDisableObject gets a reference to the given string and assigns it to the DisableObject field.
func (o *EventPolicyDetailResponse) SetDisableObject(v string) {
	o.DisableObject = &v
}

// GetDisableYn returns the DisableYn field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetDisableYn() string {
	if o == nil || IsNil(o.DisableYn) {
		var ret string
		return ret
	}
	return *o.DisableYn
}

// GetDisableYnOk returns a tuple with the DisableYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetDisableYnOk() (*string, bool) {
	if o == nil || IsNil(o.DisableYn) {
		return nil, false
	}
	return o.DisableYn, true
}

// HasDisableYn returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasDisableYn() bool {
	if o != nil && !IsNil(o.DisableYn) {
		return true
	}

	return false
}

// SetDisableYn gets a reference to the given string and assigns it to the DisableYn field.
func (o *EventPolicyDetailResponse) SetDisableYn(v string) {
	o.DisableYn = &v
}

// GetDisplayEventRule returns the DisplayEventRule field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetDisplayEventRule() string {
	if o == nil || IsNil(o.DisplayEventRule) {
		var ret string
		return ret
	}
	return *o.DisplayEventRule
}

// GetDisplayEventRuleOk returns a tuple with the DisplayEventRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetDisplayEventRuleOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayEventRule) {
		return nil, false
	}
	return o.DisplayEventRule, true
}

// HasDisplayEventRule returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasDisplayEventRule() bool {
	if o != nil && !IsNil(o.DisplayEventRule) {
		return true
	}

	return false
}

// SetDisplayEventRule gets a reference to the given string and assigns it to the DisplayEventRule field.
func (o *EventPolicyDetailResponse) SetDisplayEventRule(v string) {
	o.DisplayEventRule = &v
}

// GetEventLevel returns the EventLevel field value
func (o *EventPolicyDetailResponse) GetEventLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventLevel
}

// GetEventLevelOk returns a tuple with the EventLevel field value
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetEventLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventLevel, true
}

// SetEventLevel sets field value
func (o *EventPolicyDetailResponse) SetEventLevel(v string) {
	o.EventLevel = v
}

// GetEventMessagePrefix returns the EventMessagePrefix field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetEventMessagePrefix() string {
	if o == nil || IsNil(o.EventMessagePrefix) {
		var ret string
		return ret
	}
	return *o.EventMessagePrefix
}

// GetEventMessagePrefixOk returns a tuple with the EventMessagePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetEventMessagePrefixOk() (*string, bool) {
	if o == nil || IsNil(o.EventMessagePrefix) {
		return nil, false
	}
	return o.EventMessagePrefix, true
}

// HasEventMessagePrefix returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasEventMessagePrefix() bool {
	if o != nil && !IsNil(o.EventMessagePrefix) {
		return true
	}

	return false
}

// SetEventMessagePrefix gets a reference to the given string and assigns it to the EventMessagePrefix field.
func (o *EventPolicyDetailResponse) SetEventMessagePrefix(v string) {
	o.EventMessagePrefix = &v
}

// GetEventOccurTimeZone returns the EventOccurTimeZone field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetEventOccurTimeZone() string {
	if o == nil || IsNil(o.EventOccurTimeZone) {
		var ret string
		return ret
	}
	return *o.EventOccurTimeZone
}

// GetEventOccurTimeZoneOk returns a tuple with the EventOccurTimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetEventOccurTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.EventOccurTimeZone) {
		return nil, false
	}
	return o.EventOccurTimeZone, true
}

// HasEventOccurTimeZone returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasEventOccurTimeZone() bool {
	if o != nil && !IsNil(o.EventOccurTimeZone) {
		return true
	}

	return false
}

// SetEventOccurTimeZone gets a reference to the given string and assigns it to the EventOccurTimeZone field.
func (o *EventPolicyDetailResponse) SetEventOccurTimeZone(v string) {
	o.EventOccurTimeZone = &v
}

// GetEventPolicyId returns the EventPolicyId field value
func (o *EventPolicyDetailResponse) GetEventPolicyId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EventPolicyId
}

// GetEventPolicyIdOk returns a tuple with the EventPolicyId field value
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetEventPolicyIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventPolicyId, true
}

// SetEventPolicyId sets field value
func (o *EventPolicyDetailResponse) SetEventPolicyId(v int64) {
	o.EventPolicyId = v
}

// GetEventPolicyStatistics returns the EventPolicyStatistics field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetEventPolicyStatistics() EventPolicyStatistics {
	if o == nil || IsNil(o.EventPolicyStatistics) {
		var ret EventPolicyStatistics
		return ret
	}
	return *o.EventPolicyStatistics
}

// GetEventPolicyStatisticsOk returns a tuple with the EventPolicyStatistics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetEventPolicyStatisticsOk() (*EventPolicyStatistics, bool) {
	if o == nil || IsNil(o.EventPolicyStatistics) {
		return nil, false
	}
	return o.EventPolicyStatistics, true
}

// HasEventPolicyStatistics returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasEventPolicyStatistics() bool {
	if o != nil && !IsNil(o.EventPolicyStatistics) {
		return true
	}

	return false
}

// SetEventPolicyStatistics gets a reference to the given EventPolicyStatistics and assigns it to the EventPolicyStatistics field.
func (o *EventPolicyDetailResponse) SetEventPolicyStatistics(v EventPolicyStatistics) {
	o.EventPolicyStatistics = &v
}

// GetEventThreshold returns the EventThreshold field value
func (o *EventPolicyDetailResponse) GetEventThreshold() EventThreshold {
	if o == nil {
		var ret EventThreshold
		return ret
	}

	return o.EventThreshold
}

// GetEventThresholdOk returns a tuple with the EventThreshold field value
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetEventThresholdOk() (*EventThreshold, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventThreshold, true
}

// SetEventThreshold sets field value
func (o *EventPolicyDetailResponse) SetEventThreshold(v EventThreshold) {
	o.EventThreshold = v
}

// GetFtCount returns the FtCount field value
func (o *EventPolicyDetailResponse) GetFtCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FtCount
}

// GetFtCountOk returns a tuple with the FtCount field value
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetFtCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FtCount, true
}

// SetFtCount sets field value
func (o *EventPolicyDetailResponse) SetFtCount(v int64) {
	o.FtCount = v
}

// GetGroupSummary returns the GroupSummary field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetGroupSummary() GroupSummary {
	if o == nil || IsNil(o.GroupSummary) {
		var ret GroupSummary
		return ret
	}
	return *o.GroupSummary
}

// GetGroupSummaryOk returns a tuple with the GroupSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetGroupSummaryOk() (*GroupSummary, bool) {
	if o == nil || IsNil(o.GroupSummary) {
		return nil, false
	}
	return o.GroupSummary, true
}

// HasGroupSummary returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasGroupSummary() bool {
	if o != nil && !IsNil(o.GroupSummary) {
		return true
	}

	return false
}

// SetGroupSummary gets a reference to the given GroupSummary and assigns it to the GroupSummary field.
func (o *EventPolicyDetailResponse) SetGroupSummary(v GroupSummary) {
	o.GroupSummary = &v
}

// GetIsLogMetric returns the IsLogMetric field value
func (o *EventPolicyDetailResponse) GetIsLogMetric() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IsLogMetric
}

// GetIsLogMetricOk returns a tuple with the IsLogMetric field value
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetIsLogMetricOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsLogMetric, true
}

// SetIsLogMetric sets field value
func (o *EventPolicyDetailResponse) SetIsLogMetric(v string) {
	o.IsLogMetric = v
}

// GetMetricDescription returns the MetricDescription field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetMetricDescription() string {
	if o == nil || IsNil(o.MetricDescription) {
		var ret string
		return ret
	}
	return *o.MetricDescription
}

// GetMetricDescriptionOk returns a tuple with the MetricDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetMetricDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.MetricDescription) {
		return nil, false
	}
	return o.MetricDescription, true
}

// HasMetricDescription returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasMetricDescription() bool {
	if o != nil && !IsNil(o.MetricDescription) {
		return true
	}

	return false
}

// SetMetricDescription gets a reference to the given string and assigns it to the MetricDescription field.
func (o *EventPolicyDetailResponse) SetMetricDescription(v string) {
	o.MetricDescription = &v
}

// GetMetricDescriptionEn returns the MetricDescriptionEn field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetMetricDescriptionEn() string {
	if o == nil || IsNil(o.MetricDescriptionEn) {
		var ret string
		return ret
	}
	return *o.MetricDescriptionEn
}

// GetMetricDescriptionEnOk returns a tuple with the MetricDescriptionEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetMetricDescriptionEnOk() (*string, bool) {
	if o == nil || IsNil(o.MetricDescriptionEn) {
		return nil, false
	}
	return o.MetricDescriptionEn, true
}

// HasMetricDescriptionEn returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasMetricDescriptionEn() bool {
	if o != nil && !IsNil(o.MetricDescriptionEn) {
		return true
	}

	return false
}

// SetMetricDescriptionEn gets a reference to the given string and assigns it to the MetricDescriptionEn field.
func (o *EventPolicyDetailResponse) SetMetricDescriptionEn(v string) {
	o.MetricDescriptionEn = &v
}

// GetMetricKey returns the MetricKey field value
func (o *EventPolicyDetailResponse) GetMetricKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricKey
}

// GetMetricKeyOk returns a tuple with the MetricKey field value
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetMetricKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricKey, true
}

// SetMetricKey sets field value
func (o *EventPolicyDetailResponse) SetMetricKey(v string) {
	o.MetricKey = v
}

// GetMetricName returns the MetricName field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetMetricName() string {
	if o == nil || IsNil(o.MetricName) {
		var ret string
		return ret
	}
	return *o.MetricName
}

// GetMetricNameOk returns a tuple with the MetricName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetMetricNameOk() (*string, bool) {
	if o == nil || IsNil(o.MetricName) {
		return nil, false
	}
	return o.MetricName, true
}

// HasMetricName returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasMetricName() bool {
	if o != nil && !IsNil(o.MetricName) {
		return true
	}

	return false
}

// SetMetricName gets a reference to the given string and assigns it to the MetricName field.
func (o *EventPolicyDetailResponse) SetMetricName(v string) {
	o.MetricName = &v
}

// GetMetricSummary returns the MetricSummary field value
func (o *EventPolicyDetailResponse) GetMetricSummary() MetricSummary {
	if o == nil {
		var ret MetricSummary
		return ret
	}

	return o.MetricSummary
}

// GetMetricSummaryOk returns a tuple with the MetricSummary field value
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetMetricSummaryOk() (*MetricSummary, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricSummary, true
}

// SetMetricSummary sets field value
func (o *EventPolicyDetailResponse) SetMetricSummary(v MetricSummary) {
	o.MetricSummary = v
}

// GetMetricType returns the MetricType field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetMetricType() string {
	if o == nil || IsNil(o.MetricType) {
		var ret string
		return ret
	}
	return *o.MetricType
}

// GetMetricTypeOk returns a tuple with the MetricType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetMetricTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MetricType) {
		return nil, false
	}
	return o.MetricType, true
}

// HasMetricType returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasMetricType() bool {
	if o != nil && !IsNil(o.MetricType) {
		return true
	}

	return false
}

// SetMetricType gets a reference to the given string and assigns it to the MetricType field.
func (o *EventPolicyDetailResponse) SetMetricType(v string) {
	o.MetricType = &v
}

// GetMetricUnit returns the MetricUnit field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetMetricUnit() string {
	if o == nil || IsNil(o.MetricUnit) {
		var ret string
		return ret
	}
	return *o.MetricUnit
}

// GetMetricUnitOk returns a tuple with the MetricUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetMetricUnitOk() (*string, bool) {
	if o == nil || IsNil(o.MetricUnit) {
		return nil, false
	}
	return o.MetricUnit, true
}

// HasMetricUnit returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasMetricUnit() bool {
	if o != nil && !IsNil(o.MetricUnit) {
		return true
	}

	return false
}

// SetMetricUnit gets a reference to the given string and assigns it to the MetricUnit field.
func (o *EventPolicyDetailResponse) SetMetricUnit(v string) {
	o.MetricUnit = &v
}

// GetModifiedBy returns the ModifiedBy field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetModifiedBy() string {
	if o == nil || IsNil(o.ModifiedBy) {
		var ret string
		return ret
	}
	return *o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedBy) {
		return nil, false
	}
	return o.ModifiedBy, true
}

// HasModifiedBy returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasModifiedBy() bool {
	if o != nil && !IsNil(o.ModifiedBy) {
		return true
	}

	return false
}

// SetModifiedBy gets a reference to the given string and assigns it to the ModifiedBy field.
func (o *EventPolicyDetailResponse) SetModifiedBy(v string) {
	o.ModifiedBy = &v
}

// GetModifiedByName returns the ModifiedByName field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetModifiedByName() string {
	if o == nil || IsNil(o.ModifiedByName) {
		var ret string
		return ret
	}
	return *o.ModifiedByName
}

// GetModifiedByNameOk returns a tuple with the ModifiedByName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetModifiedByNameOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedByName) {
		return nil, false
	}
	return o.ModifiedByName, true
}

// HasModifiedByName returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasModifiedByName() bool {
	if o != nil && !IsNil(o.ModifiedByName) {
		return true
	}

	return false
}

// SetModifiedByName gets a reference to the given string and assigns it to the ModifiedByName field.
func (o *EventPolicyDetailResponse) SetModifiedByName(v string) {
	o.ModifiedByName = &v
}

// GetModifiedDt returns the ModifiedDt field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetModifiedDt() time.Time {
	if o == nil || IsNil(o.ModifiedDt) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDt
}

// GetModifiedDtOk returns a tuple with the ModifiedDt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetModifiedDtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModifiedDt) {
		return nil, false
	}
	return o.ModifiedDt, true
}

// HasModifiedDt returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasModifiedDt() bool {
	if o != nil && !IsNil(o.ModifiedDt) {
		return true
	}

	return false
}

// SetModifiedDt gets a reference to the given time.Time and assigns it to the ModifiedDt field.
func (o *EventPolicyDetailResponse) SetModifiedDt(v time.Time) {
	o.ModifiedDt = &v
}

// GetObjectDisplayName returns the ObjectDisplayName field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetObjectDisplayName() string {
	if o == nil || IsNil(o.ObjectDisplayName) {
		var ret string
		return ret
	}
	return *o.ObjectDisplayName
}

// GetObjectDisplayNameOk returns a tuple with the ObjectDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetObjectDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectDisplayName) {
		return nil, false
	}
	return o.ObjectDisplayName, true
}

// HasObjectDisplayName returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasObjectDisplayName() bool {
	if o != nil && !IsNil(o.ObjectDisplayName) {
		return true
	}

	return false
}

// SetObjectDisplayName gets a reference to the given string and assigns it to the ObjectDisplayName field.
func (o *EventPolicyDetailResponse) SetObjectDisplayName(v string) {
	o.ObjectDisplayName = &v
}

// GetObjectName returns the ObjectName field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetObjectName() string {
	if o == nil || IsNil(o.ObjectName) {
		var ret string
		return ret
	}
	return *o.ObjectName
}

// GetObjectNameOk returns a tuple with the ObjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetObjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectName) {
		return nil, false
	}
	return o.ObjectName, true
}

// HasObjectName returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasObjectName() bool {
	if o != nil && !IsNil(o.ObjectName) {
		return true
	}

	return false
}

// SetObjectName gets a reference to the given string and assigns it to the ObjectName field.
func (o *EventPolicyDetailResponse) SetObjectName(v string) {
	o.ObjectName = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetObjectType() string {
	if o == nil || IsNil(o.ObjectType) {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetObjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectType) {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasObjectType() bool {
	if o != nil && !IsNil(o.ObjectType) {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *EventPolicyDetailResponse) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetObjectTypeName returns the ObjectTypeName field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetObjectTypeName() string {
	if o == nil || IsNil(o.ObjectTypeName) {
		var ret string
		return ret
	}
	return *o.ObjectTypeName
}

// GetObjectTypeNameOk returns a tuple with the ObjectTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetObjectTypeNameOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectTypeName) {
		return nil, false
	}
	return o.ObjectTypeName, true
}

// HasObjectTypeName returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasObjectTypeName() bool {
	if o != nil && !IsNil(o.ObjectTypeName) {
		return true
	}

	return false
}

// SetObjectTypeName gets a reference to the given string and assigns it to the ObjectTypeName field.
func (o *EventPolicyDetailResponse) SetObjectTypeName(v string) {
	o.ObjectTypeName = &v
}

// GetProductInfoAttrs returns the ProductInfoAttrs field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetProductInfoAttrs() []ProductInfoAttr {
	if o == nil || IsNil(o.ProductInfoAttrs) {
		var ret []ProductInfoAttr
		return ret
	}
	return o.ProductInfoAttrs
}

// GetProductInfoAttrsOk returns a tuple with the ProductInfoAttrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetProductInfoAttrsOk() ([]ProductInfoAttr, bool) {
	if o == nil || IsNil(o.ProductInfoAttrs) {
		return nil, false
	}
	return o.ProductInfoAttrs, true
}

// HasProductInfoAttrs returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasProductInfoAttrs() bool {
	if o != nil && !IsNil(o.ProductInfoAttrs) {
		return true
	}

	return false
}

// SetProductInfoAttrs gets a reference to the given []ProductInfoAttr and assigns it to the ProductInfoAttrs field.
func (o *EventPolicyDetailResponse) SetProductInfoAttrs(v []ProductInfoAttr) {
	o.ProductInfoAttrs = v
}

// GetProductName returns the ProductName field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetProductName() string {
	if o == nil || IsNil(o.ProductName) {
		var ret string
		return ret
	}
	return *o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetProductNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProductName) {
		return nil, false
	}
	return o.ProductName, true
}

// HasProductName returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasProductName() bool {
	if o != nil && !IsNil(o.ProductName) {
		return true
	}

	return false
}

// SetProductName gets a reference to the given string and assigns it to the ProductName field.
func (o *EventPolicyDetailResponse) SetProductName(v string) {
	o.ProductName = &v
}

// GetProductResourceId returns the ProductResourceId field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetProductResourceId() string {
	if o == nil || IsNil(o.ProductResourceId) {
		var ret string
		return ret
	}
	return *o.ProductResourceId
}

// GetProductResourceIdOk returns a tuple with the ProductResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetProductResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductResourceId) {
		return nil, false
	}
	return o.ProductResourceId, true
}

// HasProductResourceId returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasProductResourceId() bool {
	if o != nil && !IsNil(o.ProductResourceId) {
		return true
	}

	return false
}

// SetProductResourceId gets a reference to the given string and assigns it to the ProductResourceId field.
func (o *EventPolicyDetailResponse) SetProductResourceId(v string) {
	o.ProductResourceId = &v
}

// GetProductSq returns the ProductSq field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetProductSq() int64 {
	if o == nil || IsNil(o.ProductSq) {
		var ret int64
		return ret
	}
	return *o.ProductSq
}

// GetProductSqOk returns a tuple with the ProductSq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetProductSqOk() (*int64, bool) {
	if o == nil || IsNil(o.ProductSq) {
		return nil, false
	}
	return o.ProductSq, true
}

// HasProductSq returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasProductSq() bool {
	if o != nil && !IsNil(o.ProductSq) {
		return true
	}

	return false
}

// SetProductSq gets a reference to the given int64 and assigns it to the ProductSq field.
func (o *EventPolicyDetailResponse) SetProductSq(v int64) {
	o.ProductSq = &v
}

// GetProductSummary returns the ProductSummary field value
func (o *EventPolicyDetailResponse) GetProductSummary() ProductSummary {
	if o == nil {
		var ret ProductSummary
		return ret
	}

	return o.ProductSummary
}

// GetProductSummaryOk returns a tuple with the ProductSummary field value
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetProductSummaryOk() (*ProductSummary, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductSummary, true
}

// SetProductSummary sets field value
func (o *EventPolicyDetailResponse) SetProductSummary(v ProductSummary) {
	o.ProductSummary = v
}

// GetProductTargetType returns the ProductTargetType field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetProductTargetType() string {
	if o == nil || IsNil(o.ProductTargetType) {
		var ret string
		return ret
	}
	return *o.ProductTargetType
}

// GetProductTargetTypeOk returns a tuple with the ProductTargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetProductTargetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductTargetType) {
		return nil, false
	}
	return o.ProductTargetType, true
}

// HasProductTargetType returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasProductTargetType() bool {
	if o != nil && !IsNil(o.ProductTargetType) {
		return true
	}

	return false
}

// SetProductTargetType gets a reference to the given string and assigns it to the ProductTargetType field.
func (o *EventPolicyDetailResponse) SetProductTargetType(v string) {
	o.ProductTargetType = &v
}

// GetProductTargetTypeEn returns the ProductTargetTypeEn field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetProductTargetTypeEn() string {
	if o == nil || IsNil(o.ProductTargetTypeEn) {
		var ret string
		return ret
	}
	return *o.ProductTargetTypeEn
}

// GetProductTargetTypeEnOk returns a tuple with the ProductTargetTypeEn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetProductTargetTypeEnOk() (*string, bool) {
	if o == nil || IsNil(o.ProductTargetTypeEn) {
		return nil, false
	}
	return o.ProductTargetTypeEn, true
}

// HasProductTargetTypeEn returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasProductTargetTypeEn() bool {
	if o != nil && !IsNil(o.ProductTargetTypeEn) {
		return true
	}

	return false
}

// SetProductTargetTypeEn gets a reference to the given string and assigns it to the ProductTargetTypeEn field.
func (o *EventPolicyDetailResponse) SetProductTargetTypeEn(v string) {
	o.ProductTargetTypeEn = &v
}

// GetStartDt returns the StartDt field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetStartDt() time.Time {
	if o == nil || IsNil(o.StartDt) {
		var ret time.Time
		return ret
	}
	return *o.StartDt
}

// GetStartDtOk returns a tuple with the StartDt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetStartDtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDt) {
		return nil, false
	}
	return o.StartDt, true
}

// HasStartDt returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasStartDt() bool {
	if o != nil && !IsNil(o.StartDt) {
		return true
	}

	return false
}

// SetStartDt gets a reference to the given time.Time and assigns it to the StartDt field.
func (o *EventPolicyDetailResponse) SetStartDt(v time.Time) {
	o.StartDt = &v
}

// GetUpdateBy returns the UpdateBy field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetUpdateBy() map[string]interface{} {
	if o == nil || IsNil(o.UpdateBy) {
		var ret map[string]interface{}
		return ret
	}
	return o.UpdateBy
}

// GetUpdateByOk returns a tuple with the UpdateBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetUpdateByOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.UpdateBy) {
		return map[string]interface{}{}, false
	}
	return o.UpdateBy, true
}

// HasUpdateBy returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasUpdateBy() bool {
	if o != nil && !IsNil(o.UpdateBy) {
		return true
	}

	return false
}

// SetUpdateBy gets a reference to the given map[string]interface{} and assigns it to the UpdateBy field.
func (o *EventPolicyDetailResponse) SetUpdateBy(v map[string]interface{}) {
	o.UpdateBy = v
}

// GetUpdateById returns the UpdateById field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetUpdateById() string {
	if o == nil || IsNil(o.UpdateById) {
		var ret string
		return ret
	}
	return *o.UpdateById
}

// GetUpdateByIdOk returns a tuple with the UpdateById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetUpdateByIdOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateById) {
		return nil, false
	}
	return o.UpdateById, true
}

// HasUpdateById returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasUpdateById() bool {
	if o != nil && !IsNil(o.UpdateById) {
		return true
	}

	return false
}

// SetUpdateById gets a reference to the given string and assigns it to the UpdateById field.
func (o *EventPolicyDetailResponse) SetUpdateById(v string) {
	o.UpdateById = &v
}

// GetUserNameList returns the UserNameList field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetUserNameList() []string {
	if o == nil || IsNil(o.UserNameList) {
		var ret []string
		return ret
	}
	return o.UserNameList
}

// GetUserNameListOk returns a tuple with the UserNameList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetUserNameListOk() ([]string, bool) {
	if o == nil || IsNil(o.UserNameList) {
		return nil, false
	}
	return o.UserNameList, true
}

// HasUserNameList returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasUserNameList() bool {
	if o != nil && !IsNil(o.UserNameList) {
		return true
	}

	return false
}

// SetUserNameList gets a reference to the given []string and assigns it to the UserNameList field.
func (o *EventPolicyDetailResponse) SetUserNameList(v []string) {
	o.UserNameList = v
}

// GetUserNameStr returns the UserNameStr field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetUserNameStr() string {
	if o == nil || IsNil(o.UserNameStr) {
		var ret string
		return ret
	}
	return *o.UserNameStr
}

// GetUserNameStrOk returns a tuple with the UserNameStr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetUserNameStrOk() (*string, bool) {
	if o == nil || IsNil(o.UserNameStr) {
		return nil, false
	}
	return o.UserNameStr, true
}

// HasUserNameStr returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasUserNameStr() bool {
	if o != nil && !IsNil(o.UserNameStr) {
		return true
	}

	return false
}

// SetUserNameStr gets a reference to the given string and assigns it to the UserNameStr field.
func (o *EventPolicyDetailResponse) SetUserNameStr(v string) {
	o.UserNameStr = &v
}

// GetUserNames returns the UserNames field value if set, zero value otherwise.
func (o *EventPolicyDetailResponse) GetUserNames() string {
	if o == nil || IsNil(o.UserNames) {
		var ret string
		return ret
	}
	return *o.UserNames
}

// GetUserNamesOk returns a tuple with the UserNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventPolicyDetailResponse) GetUserNamesOk() (*string, bool) {
	if o == nil || IsNil(o.UserNames) {
		return nil, false
	}
	return o.UserNames, true
}

// HasUserNames returns a boolean if a field has been set.
func (o *EventPolicyDetailResponse) HasUserNames() bool {
	if o != nil && !IsNil(o.UserNames) {
		return true
	}

	return false
}

// SetUserNames gets a reference to the given string and assigns it to the UserNames field.
func (o *EventPolicyDetailResponse) SetUserNames(v string) {
	o.UserNames = &v
}

func (o EventPolicyDetailResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventPolicyDetailResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AsgYn) {
		toSerialize["asgYn"] = o.AsgYn
	}
	if !IsNil(o.AttrListStr) {
		toSerialize["attrListStr"] = o.AttrListStr
	}
	if !IsNil(o.CheckAsg) {
		toSerialize["checkAsg"] = o.CheckAsg
	}
	if !IsNil(o.CreateBy) {
		toSerialize["createBy"] = o.CreateBy
	}
	if !IsNil(o.CreateById) {
		toSerialize["createById"] = o.CreateById
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.CreatedByName) {
		toSerialize["createdByName"] = o.CreatedByName
	}
	if !IsNil(o.CreatedDt) {
		toSerialize["createdDt"] = o.CreatedDt
	}
	if !IsNil(o.DisableObject) {
		toSerialize["disableObject"] = o.DisableObject
	}
	if !IsNil(o.DisableYn) {
		toSerialize["disableYn"] = o.DisableYn
	}
	if !IsNil(o.DisplayEventRule) {
		toSerialize["displayEventRule"] = o.DisplayEventRule
	}
	toSerialize["eventLevel"] = o.EventLevel
	if !IsNil(o.EventMessagePrefix) {
		toSerialize["eventMessagePrefix"] = o.EventMessagePrefix
	}
	if !IsNil(o.EventOccurTimeZone) {
		toSerialize["eventOccurTimeZone"] = o.EventOccurTimeZone
	}
	toSerialize["eventPolicyId"] = o.EventPolicyId
	if !IsNil(o.EventPolicyStatistics) {
		toSerialize["eventPolicyStatistics"] = o.EventPolicyStatistics
	}
	toSerialize["eventThreshold"] = o.EventThreshold
	toSerialize["ftCount"] = o.FtCount
	if !IsNil(o.GroupSummary) {
		toSerialize["groupSummary"] = o.GroupSummary
	}
	toSerialize["isLogMetric"] = o.IsLogMetric
	if !IsNil(o.MetricDescription) {
		toSerialize["metricDescription"] = o.MetricDescription
	}
	if !IsNil(o.MetricDescriptionEn) {
		toSerialize["metricDescriptionEn"] = o.MetricDescriptionEn
	}
	toSerialize["metricKey"] = o.MetricKey
	if !IsNil(o.MetricName) {
		toSerialize["metricName"] = o.MetricName
	}
	toSerialize["metricSummary"] = o.MetricSummary
	if !IsNil(o.MetricType) {
		toSerialize["metricType"] = o.MetricType
	}
	if !IsNil(o.MetricUnit) {
		toSerialize["metricUnit"] = o.MetricUnit
	}
	if !IsNil(o.ModifiedBy) {
		toSerialize["modifiedBy"] = o.ModifiedBy
	}
	if !IsNil(o.ModifiedByName) {
		toSerialize["modifiedByName"] = o.ModifiedByName
	}
	if !IsNil(o.ModifiedDt) {
		toSerialize["modifiedDt"] = o.ModifiedDt
	}
	if !IsNil(o.ObjectDisplayName) {
		toSerialize["objectDisplayName"] = o.ObjectDisplayName
	}
	if !IsNil(o.ObjectName) {
		toSerialize["objectName"] = o.ObjectName
	}
	if !IsNil(o.ObjectType) {
		toSerialize["objectType"] = o.ObjectType
	}
	if !IsNil(o.ObjectTypeName) {
		toSerialize["objectTypeName"] = o.ObjectTypeName
	}
	if !IsNil(o.ProductInfoAttrs) {
		toSerialize["productInfoAttrs"] = o.ProductInfoAttrs
	}
	if !IsNil(o.ProductName) {
		toSerialize["productName"] = o.ProductName
	}
	if !IsNil(o.ProductResourceId) {
		toSerialize["productResourceId"] = o.ProductResourceId
	}
	if !IsNil(o.ProductSq) {
		toSerialize["productSq"] = o.ProductSq
	}
	toSerialize["productSummary"] = o.ProductSummary
	if !IsNil(o.ProductTargetType) {
		toSerialize["productTargetType"] = o.ProductTargetType
	}
	if !IsNil(o.ProductTargetTypeEn) {
		toSerialize["productTargetTypeEn"] = o.ProductTargetTypeEn
	}
	if !IsNil(o.StartDt) {
		toSerialize["startDt"] = o.StartDt
	}
	if !IsNil(o.UpdateBy) {
		toSerialize["updateBy"] = o.UpdateBy
	}
	if !IsNil(o.UpdateById) {
		toSerialize["updateById"] = o.UpdateById
	}
	if !IsNil(o.UserNameList) {
		toSerialize["userNameList"] = o.UserNameList
	}
	if !IsNil(o.UserNameStr) {
		toSerialize["userNameStr"] = o.UserNameStr
	}
	if !IsNil(o.UserNames) {
		toSerialize["userNames"] = o.UserNames
	}
	return toSerialize, nil
}

func (o *EventPolicyDetailResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"eventLevel",
		"eventPolicyId",
		"eventThreshold",
		"ftCount",
		"isLogMetric",
		"metricKey",
		"metricSummary",
		"productSummary",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEventPolicyDetailResponse := _EventPolicyDetailResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEventPolicyDetailResponse)

	if err != nil {
		return err
	}

	*o = EventPolicyDetailResponse(varEventPolicyDetailResponse)

	return err
}

type NullableEventPolicyDetailResponse struct {
	value *EventPolicyDetailResponse
	isSet bool
}

func (v NullableEventPolicyDetailResponse) Get() *EventPolicyDetailResponse {
	return v.value
}

func (v *NullableEventPolicyDetailResponse) Set(val *EventPolicyDetailResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEventPolicyDetailResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEventPolicyDetailResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventPolicyDetailResponse(val *EventPolicyDetailResponse) *NullableEventPolicyDetailResponse {
	return &NullableEventPolicyDetailResponse{value: val, isSet: true}
}

func (v NullableEventPolicyDetailResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventPolicyDetailResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
