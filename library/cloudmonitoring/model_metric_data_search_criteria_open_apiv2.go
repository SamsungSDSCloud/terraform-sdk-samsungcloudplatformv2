/*
Nuri Monitoring service

Nuri Monitoring service

API version: Nuri
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmonitoring

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the MetricDataSearchCriteriaOpenAPIV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricDataSearchCriteriaOpenAPIV2{}

// MetricDataSearchCriteriaOpenAPIV2 메트릭 성능 데이터 조회 시 요청을 전달하기 위한 객체
type MetricDataSearchCriteriaOpenAPIV2 struct {
	// 유효하지 않은 값 제외 여부
	IgnoreInvalid *string `json:"ignoreInvalid,omitempty"`
	// 메트릭 데이터 조건
	MetricDataConditions []MetricDataConditionOpenAPIV2 `json:"metricDataConditions"`
	// 조회 종료 일시
	QueryEndDt string `json:"queryEndDt"`
	// 조회 시작 일시
	QueryStartDt string `json:"queryStartDt"`
}

type _MetricDataSearchCriteriaOpenAPIV2 MetricDataSearchCriteriaOpenAPIV2

// NewMetricDataSearchCriteriaOpenAPIV2 instantiates a new MetricDataSearchCriteriaOpenAPIV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricDataSearchCriteriaOpenAPIV2(metricDataConditions []MetricDataConditionOpenAPIV2, queryEndDt string, queryStartDt string) *MetricDataSearchCriteriaOpenAPIV2 {
	this := MetricDataSearchCriteriaOpenAPIV2{}
	this.MetricDataConditions = metricDataConditions
	this.QueryEndDt = queryEndDt
	this.QueryStartDt = queryStartDt
	return &this
}

// NewMetricDataSearchCriteriaOpenAPIV2WithDefaults instantiates a new MetricDataSearchCriteriaOpenAPIV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricDataSearchCriteriaOpenAPIV2WithDefaults() *MetricDataSearchCriteriaOpenAPIV2 {
	this := MetricDataSearchCriteriaOpenAPIV2{}
	return &this
}

// GetIgnoreInvalid returns the IgnoreInvalid field value if set, zero value otherwise.
func (o *MetricDataSearchCriteriaOpenAPIV2) GetIgnoreInvalid() string {
	if o == nil || IsNil(o.IgnoreInvalid) {
		var ret string
		return ret
	}
	return *o.IgnoreInvalid
}

// GetIgnoreInvalidOk returns a tuple with the IgnoreInvalid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDataSearchCriteriaOpenAPIV2) GetIgnoreInvalidOk() (*string, bool) {
	if o == nil || IsNil(o.IgnoreInvalid) {
		return nil, false
	}
	return o.IgnoreInvalid, true
}

// HasIgnoreInvalid returns a boolean if a field has been set.
func (o *MetricDataSearchCriteriaOpenAPIV2) HasIgnoreInvalid() bool {
	if o != nil && !IsNil(o.IgnoreInvalid) {
		return true
	}

	return false
}

// SetIgnoreInvalid gets a reference to the given string and assigns it to the IgnoreInvalid field.
func (o *MetricDataSearchCriteriaOpenAPIV2) SetIgnoreInvalid(v string) {
	o.IgnoreInvalid = &v
}

// GetMetricDataConditions returns the MetricDataConditions field value
func (o *MetricDataSearchCriteriaOpenAPIV2) GetMetricDataConditions() []MetricDataConditionOpenAPIV2 {
	if o == nil {
		var ret []MetricDataConditionOpenAPIV2
		return ret
	}

	return o.MetricDataConditions
}

// GetMetricDataConditionsOk returns a tuple with the MetricDataConditions field value
// and a boolean to check if the value has been set.
func (o *MetricDataSearchCriteriaOpenAPIV2) GetMetricDataConditionsOk() ([]MetricDataConditionOpenAPIV2, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetricDataConditions, true
}

// SetMetricDataConditions sets field value
func (o *MetricDataSearchCriteriaOpenAPIV2) SetMetricDataConditions(v []MetricDataConditionOpenAPIV2) {
	o.MetricDataConditions = v
}

// GetQueryEndDt returns the QueryEndDt field value
func (o *MetricDataSearchCriteriaOpenAPIV2) GetQueryEndDt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QueryEndDt
}

// GetQueryEndDtOk returns a tuple with the QueryEndDt field value
// and a boolean to check if the value has been set.
func (o *MetricDataSearchCriteriaOpenAPIV2) GetQueryEndDtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QueryEndDt, true
}

// SetQueryEndDt sets field value
func (o *MetricDataSearchCriteriaOpenAPIV2) SetQueryEndDt(v string) {
	o.QueryEndDt = v
}

// GetQueryStartDt returns the QueryStartDt field value
func (o *MetricDataSearchCriteriaOpenAPIV2) GetQueryStartDt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QueryStartDt
}

// GetQueryStartDtOk returns a tuple with the QueryStartDt field value
// and a boolean to check if the value has been set.
func (o *MetricDataSearchCriteriaOpenAPIV2) GetQueryStartDtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QueryStartDt, true
}

// SetQueryStartDt sets field value
func (o *MetricDataSearchCriteriaOpenAPIV2) SetQueryStartDt(v string) {
	o.QueryStartDt = v
}

func (o MetricDataSearchCriteriaOpenAPIV2) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricDataSearchCriteriaOpenAPIV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IgnoreInvalid) {
		toSerialize["ignoreInvalid"] = o.IgnoreInvalid
	}
	toSerialize["metricDataConditions"] = o.MetricDataConditions
	toSerialize["queryEndDt"] = o.QueryEndDt
	toSerialize["queryStartDt"] = o.QueryStartDt
	return toSerialize, nil
}

func (o *MetricDataSearchCriteriaOpenAPIV2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"metricDataConditions",
		"queryEndDt",
		"queryStartDt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMetricDataSearchCriteriaOpenAPIV2 := _MetricDataSearchCriteriaOpenAPIV2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMetricDataSearchCriteriaOpenAPIV2)

	if err != nil {
		return err
	}

	*o = MetricDataSearchCriteriaOpenAPIV2(varMetricDataSearchCriteriaOpenAPIV2)

	return err
}

type NullableMetricDataSearchCriteriaOpenAPIV2 struct {
	value *MetricDataSearchCriteriaOpenAPIV2
	isSet bool
}

func (v NullableMetricDataSearchCriteriaOpenAPIV2) Get() *MetricDataSearchCriteriaOpenAPIV2 {
	return v.value
}

func (v *NullableMetricDataSearchCriteriaOpenAPIV2) Set(val *MetricDataSearchCriteriaOpenAPIV2) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricDataSearchCriteriaOpenAPIV2) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricDataSearchCriteriaOpenAPIV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricDataSearchCriteriaOpenAPIV2(val *MetricDataSearchCriteriaOpenAPIV2) *NullableMetricDataSearchCriteriaOpenAPIV2 {
	return &NullableMetricDataSearchCriteriaOpenAPIV2{value: val, isSet: true}
}

func (v NullableMetricDataSearchCriteriaOpenAPIV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricDataSearchCriteriaOpenAPIV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
