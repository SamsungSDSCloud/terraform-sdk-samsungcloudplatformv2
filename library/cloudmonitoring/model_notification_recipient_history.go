/*
Nuri Monitoring service

Nuri Monitoring service

API version: Nuri
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmonitoring

import (
	"encoding/json"
)

// checks if the NotificationRecipientHistory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotificationRecipientHistory{}

// NotificationRecipientHistory 이벤트 알림 수신인 이력 정보 객체
type NotificationRecipientHistory struct {
	// 주소록 아이디
	AddrbookIds []int64 `json:"addrbookIds,omitempty"`
	// 사용자 아이디
	UserIds []string `json:"userIds,omitempty"`
	// 사용자 이름
	UserNames []string `json:"userNames,omitempty"`
}

// NewNotificationRecipientHistory instantiates a new NotificationRecipientHistory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationRecipientHistory() *NotificationRecipientHistory {
	this := NotificationRecipientHistory{}
	return &this
}

// NewNotificationRecipientHistoryWithDefaults instantiates a new NotificationRecipientHistory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationRecipientHistoryWithDefaults() *NotificationRecipientHistory {
	this := NotificationRecipientHistory{}
	return &this
}

// GetAddrbookIds returns the AddrbookIds field value if set, zero value otherwise.
func (o *NotificationRecipientHistory) GetAddrbookIds() []int64 {
	if o == nil || IsNil(o.AddrbookIds) {
		var ret []int64
		return ret
	}
	return o.AddrbookIds
}

// GetAddrbookIdsOk returns a tuple with the AddrbookIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationRecipientHistory) GetAddrbookIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.AddrbookIds) {
		return nil, false
	}
	return o.AddrbookIds, true
}

// HasAddrbookIds returns a boolean if a field has been set.
func (o *NotificationRecipientHistory) HasAddrbookIds() bool {
	if o != nil && !IsNil(o.AddrbookIds) {
		return true
	}

	return false
}

// SetAddrbookIds gets a reference to the given []int64 and assigns it to the AddrbookIds field.
func (o *NotificationRecipientHistory) SetAddrbookIds(v []int64) {
	o.AddrbookIds = v
}

// GetUserIds returns the UserIds field value if set, zero value otherwise.
func (o *NotificationRecipientHistory) GetUserIds() []string {
	if o == nil || IsNil(o.UserIds) {
		var ret []string
		return ret
	}
	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationRecipientHistory) GetUserIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.UserIds) {
		return nil, false
	}
	return o.UserIds, true
}

// HasUserIds returns a boolean if a field has been set.
func (o *NotificationRecipientHistory) HasUserIds() bool {
	if o != nil && !IsNil(o.UserIds) {
		return true
	}

	return false
}

// SetUserIds gets a reference to the given []string and assigns it to the UserIds field.
func (o *NotificationRecipientHistory) SetUserIds(v []string) {
	o.UserIds = v
}

// GetUserNames returns the UserNames field value if set, zero value otherwise.
func (o *NotificationRecipientHistory) GetUserNames() []string {
	if o == nil || IsNil(o.UserNames) {
		var ret []string
		return ret
	}
	return o.UserNames
}

// GetUserNamesOk returns a tuple with the UserNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationRecipientHistory) GetUserNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.UserNames) {
		return nil, false
	}
	return o.UserNames, true
}

// HasUserNames returns a boolean if a field has been set.
func (o *NotificationRecipientHistory) HasUserNames() bool {
	if o != nil && !IsNil(o.UserNames) {
		return true
	}

	return false
}

// SetUserNames gets a reference to the given []string and assigns it to the UserNames field.
func (o *NotificationRecipientHistory) SetUserNames(v []string) {
	o.UserNames = v
}

func (o NotificationRecipientHistory) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationRecipientHistory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddrbookIds) {
		toSerialize["addrbookIds"] = o.AddrbookIds
	}
	if !IsNil(o.UserIds) {
		toSerialize["userIds"] = o.UserIds
	}
	if !IsNil(o.UserNames) {
		toSerialize["userNames"] = o.UserNames
	}
	return toSerialize, nil
}

type NullableNotificationRecipientHistory struct {
	value *NotificationRecipientHistory
	isSet bool
}

func (v NullableNotificationRecipientHistory) Get() *NotificationRecipientHistory {
	return v.value
}

func (v *NullableNotificationRecipientHistory) Set(val *NotificationRecipientHistory) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationRecipientHistory) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationRecipientHistory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationRecipientHistory(val *NotificationRecipientHistory) *NullableNotificationRecipientHistory {
	return &NullableNotificationRecipientHistory{value: val, isSet: true}
}

func (v NullableNotificationRecipientHistory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationRecipientHistory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
