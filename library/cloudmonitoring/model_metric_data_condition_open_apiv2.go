/*
Nuri Monitoring service

Nuri Monitoring service

API version: Nuri
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmonitoring

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the MetricDataConditionOpenAPIV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricDataConditionOpenAPIV2{}

// MetricDataConditionOpenAPIV2 메트릭 데이터 조건 객체 - 조건은 200개까지 지정할 수 있습니다.
type MetricDataConditionOpenAPIV2 struct {
	// 메트릭
	MetricKey string `json:"metricKey"`
	// 개별항목 유형
	ObjectType *string `json:"objectType,omitempty"`
	// 상품 리소스 아이디 목록 - 상품 리소스 아이디는 50개까지 지정할 수 있습니다.
	ProductResourceInfos []ProductResourceInfo `json:"productResourceInfos"`
	// 통계 집계 주기 (단위: 분)
	StatisticsPeriod *int32 `json:"statisticsPeriod,omitempty"`
	// 통계 유형 - 유효한 값 : MIN, MAX, AVG, SUM
	StatisticsTypeList []string `json:"statisticsTypeList,omitempty"`
}

type _MetricDataConditionOpenAPIV2 MetricDataConditionOpenAPIV2

// NewMetricDataConditionOpenAPIV2 instantiates a new MetricDataConditionOpenAPIV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricDataConditionOpenAPIV2(metricKey string, productResourceInfos []ProductResourceInfo) *MetricDataConditionOpenAPIV2 {
	this := MetricDataConditionOpenAPIV2{}
	this.MetricKey = metricKey
	this.ProductResourceInfos = productResourceInfos
	return &this
}

// NewMetricDataConditionOpenAPIV2WithDefaults instantiates a new MetricDataConditionOpenAPIV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricDataConditionOpenAPIV2WithDefaults() *MetricDataConditionOpenAPIV2 {
	this := MetricDataConditionOpenAPIV2{}
	return &this
}

// GetMetricKey returns the MetricKey field value
func (o *MetricDataConditionOpenAPIV2) GetMetricKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricKey
}

// GetMetricKeyOk returns a tuple with the MetricKey field value
// and a boolean to check if the value has been set.
func (o *MetricDataConditionOpenAPIV2) GetMetricKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricKey, true
}

// SetMetricKey sets field value
func (o *MetricDataConditionOpenAPIV2) SetMetricKey(v string) {
	o.MetricKey = v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *MetricDataConditionOpenAPIV2) GetObjectType() string {
	if o == nil || IsNil(o.ObjectType) {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDataConditionOpenAPIV2) GetObjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectType) {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *MetricDataConditionOpenAPIV2) HasObjectType() bool {
	if o != nil && !IsNil(o.ObjectType) {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *MetricDataConditionOpenAPIV2) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetProductResourceInfos returns the ProductResourceInfos field value
func (o *MetricDataConditionOpenAPIV2) GetProductResourceInfos() []ProductResourceInfo {
	if o == nil {
		var ret []ProductResourceInfo
		return ret
	}

	return o.ProductResourceInfos
}

// GetProductResourceInfosOk returns a tuple with the ProductResourceInfos field value
// and a boolean to check if the value has been set.
func (o *MetricDataConditionOpenAPIV2) GetProductResourceInfosOk() ([]ProductResourceInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductResourceInfos, true
}

// SetProductResourceInfos sets field value
func (o *MetricDataConditionOpenAPIV2) SetProductResourceInfos(v []ProductResourceInfo) {
	o.ProductResourceInfos = v
}

// GetStatisticsPeriod returns the StatisticsPeriod field value if set, zero value otherwise.
func (o *MetricDataConditionOpenAPIV2) GetStatisticsPeriod() int32 {
	if o == nil || IsNil(o.StatisticsPeriod) {
		var ret int32
		return ret
	}
	return *o.StatisticsPeriod
}

// GetStatisticsPeriodOk returns a tuple with the StatisticsPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDataConditionOpenAPIV2) GetStatisticsPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.StatisticsPeriod) {
		return nil, false
	}
	return o.StatisticsPeriod, true
}

// HasStatisticsPeriod returns a boolean if a field has been set.
func (o *MetricDataConditionOpenAPIV2) HasStatisticsPeriod() bool {
	if o != nil && !IsNil(o.StatisticsPeriod) {
		return true
	}

	return false
}

// SetStatisticsPeriod gets a reference to the given int32 and assigns it to the StatisticsPeriod field.
func (o *MetricDataConditionOpenAPIV2) SetStatisticsPeriod(v int32) {
	o.StatisticsPeriod = &v
}

// GetStatisticsTypeList returns the StatisticsTypeList field value if set, zero value otherwise.
func (o *MetricDataConditionOpenAPIV2) GetStatisticsTypeList() []string {
	if o == nil || IsNil(o.StatisticsTypeList) {
		var ret []string
		return ret
	}
	return o.StatisticsTypeList
}

// GetStatisticsTypeListOk returns a tuple with the StatisticsTypeList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDataConditionOpenAPIV2) GetStatisticsTypeListOk() ([]string, bool) {
	if o == nil || IsNil(o.StatisticsTypeList) {
		return nil, false
	}
	return o.StatisticsTypeList, true
}

// HasStatisticsTypeList returns a boolean if a field has been set.
func (o *MetricDataConditionOpenAPIV2) HasStatisticsTypeList() bool {
	if o != nil && !IsNil(o.StatisticsTypeList) {
		return true
	}

	return false
}

// SetStatisticsTypeList gets a reference to the given []string and assigns it to the StatisticsTypeList field.
func (o *MetricDataConditionOpenAPIV2) SetStatisticsTypeList(v []string) {
	o.StatisticsTypeList = v
}

func (o MetricDataConditionOpenAPIV2) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricDataConditionOpenAPIV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["metricKey"] = o.MetricKey
	if !IsNil(o.ObjectType) {
		toSerialize["objectType"] = o.ObjectType
	}
	toSerialize["productResourceInfos"] = o.ProductResourceInfos
	if !IsNil(o.StatisticsPeriod) {
		toSerialize["statisticsPeriod"] = o.StatisticsPeriod
	}
	if !IsNil(o.StatisticsTypeList) {
		toSerialize["statisticsTypeList"] = o.StatisticsTypeList
	}
	return toSerialize, nil
}

func (o *MetricDataConditionOpenAPIV2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"metricKey",
		"productResourceInfos",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMetricDataConditionOpenAPIV2 := _MetricDataConditionOpenAPIV2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMetricDataConditionOpenAPIV2)

	if err != nil {
		return err
	}

	*o = MetricDataConditionOpenAPIV2(varMetricDataConditionOpenAPIV2)

	return err
}

type NullableMetricDataConditionOpenAPIV2 struct {
	value *MetricDataConditionOpenAPIV2
	isSet bool
}

func (v NullableMetricDataConditionOpenAPIV2) Get() *MetricDataConditionOpenAPIV2 {
	return v.value
}

func (v *NullableMetricDataConditionOpenAPIV2) Set(val *MetricDataConditionOpenAPIV2) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricDataConditionOpenAPIV2) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricDataConditionOpenAPIV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricDataConditionOpenAPIV2(val *MetricDataConditionOpenAPIV2) *NullableMetricDataConditionOpenAPIV2 {
	return &NullableMetricDataConditionOpenAPIV2{value: val, isSet: true}
}

func (v NullableMetricDataConditionOpenAPIV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricDataConditionOpenAPIV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
