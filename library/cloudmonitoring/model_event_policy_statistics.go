/*
Nuri Monitoring service

Nuri Monitoring service

API version: Nuri
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmonitoring

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the EventPolicyStatistics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventPolicyStatistics{}

// EventPolicyStatistics 이벤트 정책 통계 정보 객체
type EventPolicyStatistics struct {
	// 이벤트 정책 통계 기간 - 단위: 분
	EventPolicyStatisticsPeriod int64 `json:"eventPolicyStatisticsPeriod"`
	// 이벤트 정책 통계 유형
	EventPolicyStatisticsType string `json:"eventPolicyStatisticsType"`
}

type _EventPolicyStatistics EventPolicyStatistics

// NewEventPolicyStatistics instantiates a new EventPolicyStatistics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventPolicyStatistics(eventPolicyStatisticsPeriod int64, eventPolicyStatisticsType string) *EventPolicyStatistics {
	this := EventPolicyStatistics{}
	this.EventPolicyStatisticsPeriod = eventPolicyStatisticsPeriod
	this.EventPolicyStatisticsType = eventPolicyStatisticsType
	return &this
}

// NewEventPolicyStatisticsWithDefaults instantiates a new EventPolicyStatistics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventPolicyStatisticsWithDefaults() *EventPolicyStatistics {
	this := EventPolicyStatistics{}
	return &this
}

// GetEventPolicyStatisticsPeriod returns the EventPolicyStatisticsPeriod field value
func (o *EventPolicyStatistics) GetEventPolicyStatisticsPeriod() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EventPolicyStatisticsPeriod
}

// GetEventPolicyStatisticsPeriodOk returns a tuple with the EventPolicyStatisticsPeriod field value
// and a boolean to check if the value has been set.
func (o *EventPolicyStatistics) GetEventPolicyStatisticsPeriodOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventPolicyStatisticsPeriod, true
}

// SetEventPolicyStatisticsPeriod sets field value
func (o *EventPolicyStatistics) SetEventPolicyStatisticsPeriod(v int64) {
	o.EventPolicyStatisticsPeriod = v
}

// GetEventPolicyStatisticsType returns the EventPolicyStatisticsType field value
func (o *EventPolicyStatistics) GetEventPolicyStatisticsType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventPolicyStatisticsType
}

// GetEventPolicyStatisticsTypeOk returns a tuple with the EventPolicyStatisticsType field value
// and a boolean to check if the value has been set.
func (o *EventPolicyStatistics) GetEventPolicyStatisticsTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventPolicyStatisticsType, true
}

// SetEventPolicyStatisticsType sets field value
func (o *EventPolicyStatistics) SetEventPolicyStatisticsType(v string) {
	o.EventPolicyStatisticsType = v
}

func (o EventPolicyStatistics) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventPolicyStatistics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["eventPolicyStatisticsPeriod"] = o.EventPolicyStatisticsPeriod
	toSerialize["eventPolicyStatisticsType"] = o.EventPolicyStatisticsType
	return toSerialize, nil
}

func (o *EventPolicyStatistics) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"eventPolicyStatisticsPeriod",
		"eventPolicyStatisticsType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEventPolicyStatistics := _EventPolicyStatistics{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEventPolicyStatistics)

	if err != nil {
		return err
	}

	*o = EventPolicyStatistics(varEventPolicyStatistics)

	return err
}

type NullableEventPolicyStatistics struct {
	value *EventPolicyStatistics
	isSet bool
}

func (v NullableEventPolicyStatistics) Get() *EventPolicyStatistics {
	return v.value
}

func (v *NullableEventPolicyStatistics) Set(val *EventPolicyStatistics) {
	v.value = val
	v.isSet = true
}

func (v NullableEventPolicyStatistics) IsSet() bool {
	return v.isSet
}

func (v *NullableEventPolicyStatistics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventPolicyStatistics(val *EventPolicyStatistics) *NullableEventPolicyStatistics {
	return &NullableEventPolicyStatistics{value: val, isSet: true}
}

func (v NullableEventPolicyStatistics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventPolicyStatistics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
