/*
Nuri Monitoring service

Nuri Monitoring service

API version: Nuri
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmonitoring

import (
	"encoding/json"
)

// checks if the PageResponseProductTypeInfoDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PageResponseProductTypeInfoDto{}

// PageResponseProductTypeInfoDto struct for PageResponseProductTypeInfoDto
type PageResponseProductTypeInfoDto struct {
	Contents       []ProductTypeInfoDto `json:"contents,omitempty"`
	IsChanged      *bool                `json:"isChanged,omitempty"`
	ReturnCount    *int64               `json:"returnCount,omitempty"`
	ReturnPage     *int64               `json:"returnPage,omitempty"`
	Sort           []string             `json:"sort,omitempty"`
	SortableFields []string             `json:"sortableFields,omitempty"`
	TotalCount     *int64               `json:"totalCount,omitempty"`
}

// NewPageResponseProductTypeInfoDto instantiates a new PageResponseProductTypeInfoDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPageResponseProductTypeInfoDto() *PageResponseProductTypeInfoDto {
	this := PageResponseProductTypeInfoDto{}
	return &this
}

// NewPageResponseProductTypeInfoDtoWithDefaults instantiates a new PageResponseProductTypeInfoDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageResponseProductTypeInfoDtoWithDefaults() *PageResponseProductTypeInfoDto {
	this := PageResponseProductTypeInfoDto{}
	return &this
}

// GetContents returns the Contents field value if set, zero value otherwise.
func (o *PageResponseProductTypeInfoDto) GetContents() []ProductTypeInfoDto {
	if o == nil || IsNil(o.Contents) {
		var ret []ProductTypeInfoDto
		return ret
	}
	return o.Contents
}

// GetContentsOk returns a tuple with the Contents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageResponseProductTypeInfoDto) GetContentsOk() ([]ProductTypeInfoDto, bool) {
	if o == nil || IsNil(o.Contents) {
		return nil, false
	}
	return o.Contents, true
}

// HasContents returns a boolean if a field has been set.
func (o *PageResponseProductTypeInfoDto) HasContents() bool {
	if o != nil && !IsNil(o.Contents) {
		return true
	}

	return false
}

// SetContents gets a reference to the given []ProductTypeInfoDto and assigns it to the Contents field.
func (o *PageResponseProductTypeInfoDto) SetContents(v []ProductTypeInfoDto) {
	o.Contents = v
}

// GetIsChanged returns the IsChanged field value if set, zero value otherwise.
func (o *PageResponseProductTypeInfoDto) GetIsChanged() bool {
	if o == nil || IsNil(o.IsChanged) {
		var ret bool
		return ret
	}
	return *o.IsChanged
}

// GetIsChangedOk returns a tuple with the IsChanged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageResponseProductTypeInfoDto) GetIsChangedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsChanged) {
		return nil, false
	}
	return o.IsChanged, true
}

// HasIsChanged returns a boolean if a field has been set.
func (o *PageResponseProductTypeInfoDto) HasIsChanged() bool {
	if o != nil && !IsNil(o.IsChanged) {
		return true
	}

	return false
}

// SetIsChanged gets a reference to the given bool and assigns it to the IsChanged field.
func (o *PageResponseProductTypeInfoDto) SetIsChanged(v bool) {
	o.IsChanged = &v
}

// GetReturnCount returns the ReturnCount field value if set, zero value otherwise.
func (o *PageResponseProductTypeInfoDto) GetReturnCount() int64 {
	if o == nil || IsNil(o.ReturnCount) {
		var ret int64
		return ret
	}
	return *o.ReturnCount
}

// GetReturnCountOk returns a tuple with the ReturnCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageResponseProductTypeInfoDto) GetReturnCountOk() (*int64, bool) {
	if o == nil || IsNil(o.ReturnCount) {
		return nil, false
	}
	return o.ReturnCount, true
}

// HasReturnCount returns a boolean if a field has been set.
func (o *PageResponseProductTypeInfoDto) HasReturnCount() bool {
	if o != nil && !IsNil(o.ReturnCount) {
		return true
	}

	return false
}

// SetReturnCount gets a reference to the given int64 and assigns it to the ReturnCount field.
func (o *PageResponseProductTypeInfoDto) SetReturnCount(v int64) {
	o.ReturnCount = &v
}

// GetReturnPage returns the ReturnPage field value if set, zero value otherwise.
func (o *PageResponseProductTypeInfoDto) GetReturnPage() int64 {
	if o == nil || IsNil(o.ReturnPage) {
		var ret int64
		return ret
	}
	return *o.ReturnPage
}

// GetReturnPageOk returns a tuple with the ReturnPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageResponseProductTypeInfoDto) GetReturnPageOk() (*int64, bool) {
	if o == nil || IsNil(o.ReturnPage) {
		return nil, false
	}
	return o.ReturnPage, true
}

// HasReturnPage returns a boolean if a field has been set.
func (o *PageResponseProductTypeInfoDto) HasReturnPage() bool {
	if o != nil && !IsNil(o.ReturnPage) {
		return true
	}

	return false
}

// SetReturnPage gets a reference to the given int64 and assigns it to the ReturnPage field.
func (o *PageResponseProductTypeInfoDto) SetReturnPage(v int64) {
	o.ReturnPage = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *PageResponseProductTypeInfoDto) GetSort() []string {
	if o == nil || IsNil(o.Sort) {
		var ret []string
		return ret
	}
	return o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageResponseProductTypeInfoDto) GetSortOk() ([]string, bool) {
	if o == nil || IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *PageResponseProductTypeInfoDto) HasSort() bool {
	if o != nil && !IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given []string and assigns it to the Sort field.
func (o *PageResponseProductTypeInfoDto) SetSort(v []string) {
	o.Sort = v
}

// GetSortableFields returns the SortableFields field value if set, zero value otherwise.
func (o *PageResponseProductTypeInfoDto) GetSortableFields() []string {
	if o == nil || IsNil(o.SortableFields) {
		var ret []string
		return ret
	}
	return o.SortableFields
}

// GetSortableFieldsOk returns a tuple with the SortableFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageResponseProductTypeInfoDto) GetSortableFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.SortableFields) {
		return nil, false
	}
	return o.SortableFields, true
}

// HasSortableFields returns a boolean if a field has been set.
func (o *PageResponseProductTypeInfoDto) HasSortableFields() bool {
	if o != nil && !IsNil(o.SortableFields) {
		return true
	}

	return false
}

// SetSortableFields gets a reference to the given []string and assigns it to the SortableFields field.
func (o *PageResponseProductTypeInfoDto) SetSortableFields(v []string) {
	o.SortableFields = v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *PageResponseProductTypeInfoDto) GetTotalCount() int64 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int64
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageResponseProductTypeInfoDto) GetTotalCountOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *PageResponseProductTypeInfoDto) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int64 and assigns it to the TotalCount field.
func (o *PageResponseProductTypeInfoDto) SetTotalCount(v int64) {
	o.TotalCount = &v
}

func (o PageResponseProductTypeInfoDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PageResponseProductTypeInfoDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Contents) {
		toSerialize["contents"] = o.Contents
	}
	if !IsNil(o.IsChanged) {
		toSerialize["isChanged"] = o.IsChanged
	}
	if !IsNil(o.ReturnCount) {
		toSerialize["returnCount"] = o.ReturnCount
	}
	if !IsNil(o.ReturnPage) {
		toSerialize["returnPage"] = o.ReturnPage
	}
	if !IsNil(o.Sort) {
		toSerialize["sort"] = o.Sort
	}
	if !IsNil(o.SortableFields) {
		toSerialize["sortableFields"] = o.SortableFields
	}
	if !IsNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	return toSerialize, nil
}

type NullablePageResponseProductTypeInfoDto struct {
	value *PageResponseProductTypeInfoDto
	isSet bool
}

func (v NullablePageResponseProductTypeInfoDto) Get() *PageResponseProductTypeInfoDto {
	return v.value
}

func (v *NullablePageResponseProductTypeInfoDto) Set(val *PageResponseProductTypeInfoDto) {
	v.value = val
	v.isSet = true
}

func (v NullablePageResponseProductTypeInfoDto) IsSet() bool {
	return v.isSet
}

func (v *NullablePageResponseProductTypeInfoDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePageResponseProductTypeInfoDto(val *PageResponseProductTypeInfoDto) *NullablePageResponseProductTypeInfoDto {
	return &NullablePageResponseProductTypeInfoDto{value: val, isSet: true}
}

func (v NullablePageResponseProductTypeInfoDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePageResponseProductTypeInfoDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
