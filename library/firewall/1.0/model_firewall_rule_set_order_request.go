/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6882
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package firewall

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FirewallRuleSetOrderRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FirewallRuleSetOrderRequest{}

// FirewallRuleSetOrderRequest struct for FirewallRuleSetOrderRequest
type FirewallRuleSetOrderRequest struct {
	// Order Direction
	OrderDirection FirewallRuleOrderDirection `json:"order_direction"`
	// Order Rule ID
	OrderRuleId *string `json:"order_rule_id,omitempty"`
}

type _FirewallRuleSetOrderRequest FirewallRuleSetOrderRequest

// NewFirewallRuleSetOrderRequest instantiates a new FirewallRuleSetOrderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewallRuleSetOrderRequest(orderDirection FirewallRuleOrderDirection) *FirewallRuleSetOrderRequest {
	this := FirewallRuleSetOrderRequest{}
	this.OrderDirection = orderDirection
	return &this
}

// NewFirewallRuleSetOrderRequestWithDefaults instantiates a new FirewallRuleSetOrderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallRuleSetOrderRequestWithDefaults() *FirewallRuleSetOrderRequest {
	this := FirewallRuleSetOrderRequest{}
	return &this
}

// GetOrderDirection returns the OrderDirection field value
func (o *FirewallRuleSetOrderRequest) GetOrderDirection() FirewallRuleOrderDirection {
	if o == nil {
		var ret FirewallRuleOrderDirection
		return ret
	}

	return o.OrderDirection
}

// GetOrderDirectionOk returns a tuple with the OrderDirection field value
// and a boolean to check if the value has been set.
func (o *FirewallRuleSetOrderRequest) GetOrderDirectionOk() (*FirewallRuleOrderDirection, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderDirection, true
}

// SetOrderDirection sets field value
func (o *FirewallRuleSetOrderRequest) SetOrderDirection(v FirewallRuleOrderDirection) {
	o.OrderDirection = v
}

// GetOrderRuleId returns the OrderRuleId field value if set, zero value otherwise.
func (o *FirewallRuleSetOrderRequest) GetOrderRuleId() string {
	if o == nil || IsNil(o.OrderRuleId) {
		var ret string
		return ret
	}
	return *o.OrderRuleId
}

// GetOrderRuleIdOk returns a tuple with the OrderRuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallRuleSetOrderRequest) GetOrderRuleIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderRuleId) {
		return nil, false
	}
	return o.OrderRuleId, true
}

// HasOrderRuleId returns a boolean if a field has been set.
func (o *FirewallRuleSetOrderRequest) HasOrderRuleId() bool {
	if o != nil && !IsNil(o.OrderRuleId) {
		return true
	}

	return false
}

// SetOrderRuleId gets a reference to the given string and assigns it to the OrderRuleId field.
func (o *FirewallRuleSetOrderRequest) SetOrderRuleId(v string) {
	o.OrderRuleId = &v
}

func (o FirewallRuleSetOrderRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FirewallRuleSetOrderRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["order_direction"] = o.OrderDirection
	if !IsNil(o.OrderRuleId) {
		toSerialize["order_rule_id"] = o.OrderRuleId
	}
	return toSerialize, nil
}

func (o *FirewallRuleSetOrderRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"order_direction",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFirewallRuleSetOrderRequest := _FirewallRuleSetOrderRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFirewallRuleSetOrderRequest)

	if err != nil {
		return err
	}

	*o = FirewallRuleSetOrderRequest(varFirewallRuleSetOrderRequest)

	return err
}

type NullableFirewallRuleSetOrderRequest struct {
	value *FirewallRuleSetOrderRequest
	isSet bool
}

func (v NullableFirewallRuleSetOrderRequest) Get() *FirewallRuleSetOrderRequest {
	return v.value
}

func (v *NullableFirewallRuleSetOrderRequest) Set(val *FirewallRuleSetOrderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewallRuleSetOrderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewallRuleSetOrderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewallRuleSetOrderRequest(val *FirewallRuleSetOrderRequest) *NullableFirewallRuleSetOrderRequest {
	return &NullableFirewallRuleSetOrderRequest{value: val, isSet: true}
}

func (v NullableFirewallRuleSetOrderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewallRuleSetOrderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


