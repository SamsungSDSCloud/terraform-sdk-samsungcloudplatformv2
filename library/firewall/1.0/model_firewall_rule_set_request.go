/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6882
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package firewall

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FirewallRuleSetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FirewallRuleSetRequest{}

// FirewallRuleSetRequest struct for FirewallRuleSetRequest
type FirewallRuleSetRequest struct {
	// Firewall Rule Action
	Action FirewallRuleAction `json:"action"`
	Description NullableString `json:"description,omitempty"`
	// Destination Address
	DestinationAddress []string `json:"destination_address"`
	// Firewall Rule Direction
	Direction FirewallRuleDirection `json:"direction"`
	// Service Port
	Service []FirewallPort `json:"service"`
	// Source Address
	SourceAddress []string `json:"source_address"`
}

type _FirewallRuleSetRequest FirewallRuleSetRequest

// NewFirewallRuleSetRequest instantiates a new FirewallRuleSetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewallRuleSetRequest(action FirewallRuleAction, destinationAddress []string, direction FirewallRuleDirection, service []FirewallPort, sourceAddress []string) *FirewallRuleSetRequest {
	this := FirewallRuleSetRequest{}
	this.Action = action
	this.DestinationAddress = destinationAddress
	this.Direction = direction
	this.Service = service
	this.SourceAddress = sourceAddress
	return &this
}

// NewFirewallRuleSetRequestWithDefaults instantiates a new FirewallRuleSetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallRuleSetRequestWithDefaults() *FirewallRuleSetRequest {
	this := FirewallRuleSetRequest{}
	return &this
}

// GetAction returns the Action field value
func (o *FirewallRuleSetRequest) GetAction() FirewallRuleAction {
	if o == nil {
		var ret FirewallRuleAction
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *FirewallRuleSetRequest) GetActionOk() (*FirewallRuleAction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *FirewallRuleSetRequest) SetAction(v FirewallRuleAction) {
	o.Action = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FirewallRuleSetRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FirewallRuleSetRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *FirewallRuleSetRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *FirewallRuleSetRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *FirewallRuleSetRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *FirewallRuleSetRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetDestinationAddress returns the DestinationAddress field value
func (o *FirewallRuleSetRequest) GetDestinationAddress() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DestinationAddress
}

// GetDestinationAddressOk returns a tuple with the DestinationAddress field value
// and a boolean to check if the value has been set.
func (o *FirewallRuleSetRequest) GetDestinationAddressOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DestinationAddress, true
}

// SetDestinationAddress sets field value
func (o *FirewallRuleSetRequest) SetDestinationAddress(v []string) {
	o.DestinationAddress = v
}

// GetDirection returns the Direction field value
func (o *FirewallRuleSetRequest) GetDirection() FirewallRuleDirection {
	if o == nil {
		var ret FirewallRuleDirection
		return ret
	}

	return o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value
// and a boolean to check if the value has been set.
func (o *FirewallRuleSetRequest) GetDirectionOk() (*FirewallRuleDirection, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Direction, true
}

// SetDirection sets field value
func (o *FirewallRuleSetRequest) SetDirection(v FirewallRuleDirection) {
	o.Direction = v
}

// GetService returns the Service field value
func (o *FirewallRuleSetRequest) GetService() []FirewallPort {
	if o == nil {
		var ret []FirewallPort
		return ret
	}

	return o.Service
}

// GetServiceOk returns a tuple with the Service field value
// and a boolean to check if the value has been set.
func (o *FirewallRuleSetRequest) GetServiceOk() ([]FirewallPort, bool) {
	if o == nil {
		return nil, false
	}
	return o.Service, true
}

// SetService sets field value
func (o *FirewallRuleSetRequest) SetService(v []FirewallPort) {
	o.Service = v
}

// GetSourceAddress returns the SourceAddress field value
func (o *FirewallRuleSetRequest) GetSourceAddress() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SourceAddress
}

// GetSourceAddressOk returns a tuple with the SourceAddress field value
// and a boolean to check if the value has been set.
func (o *FirewallRuleSetRequest) GetSourceAddressOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceAddress, true
}

// SetSourceAddress sets field value
func (o *FirewallRuleSetRequest) SetSourceAddress(v []string) {
	o.SourceAddress = v
}

func (o FirewallRuleSetRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FirewallRuleSetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["destination_address"] = o.DestinationAddress
	toSerialize["direction"] = o.Direction
	toSerialize["service"] = o.Service
	toSerialize["source_address"] = o.SourceAddress
	return toSerialize, nil
}

func (o *FirewallRuleSetRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action",
		"destination_address",
		"direction",
		"service",
		"source_address",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFirewallRuleSetRequest := _FirewallRuleSetRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFirewallRuleSetRequest)

	if err != nil {
		return err
	}

	*o = FirewallRuleSetRequest(varFirewallRuleSetRequest)

	return err
}

type NullableFirewallRuleSetRequest struct {
	value *FirewallRuleSetRequest
	isSet bool
}

func (v NullableFirewallRuleSetRequest) Get() *FirewallRuleSetRequest {
	return v.value
}

func (v *NullableFirewallRuleSetRequest) Set(val *FirewallRuleSetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewallRuleSetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewallRuleSetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewallRuleSetRequest(val *FirewallRuleSetRequest) *NullableFirewallRuleSetRequest {
	return &NullableFirewallRuleSetRequest{value: val, isSet: true}
}

func (v NullableFirewallRuleSetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewallRuleSetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


