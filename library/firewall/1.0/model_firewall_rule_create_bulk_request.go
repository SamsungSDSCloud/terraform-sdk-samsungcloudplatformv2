/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6882
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package firewall

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FirewallRuleCreateBulkRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FirewallRuleCreateBulkRequest{}

// FirewallRuleCreateBulkRequest struct for FirewallRuleCreateBulkRequest
type FirewallRuleCreateBulkRequest struct {
	// Firewall ID
	FirewallId string `json:"firewall_id"`
	// Firewall Rule List
	FirewallRuleList []FirewallRuleCreateRequest `json:"firewall_rule_list"`
}

type _FirewallRuleCreateBulkRequest FirewallRuleCreateBulkRequest

// NewFirewallRuleCreateBulkRequest instantiates a new FirewallRuleCreateBulkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewallRuleCreateBulkRequest(firewallId string, firewallRuleList []FirewallRuleCreateRequest) *FirewallRuleCreateBulkRequest {
	this := FirewallRuleCreateBulkRequest{}
	this.FirewallId = firewallId
	this.FirewallRuleList = firewallRuleList
	return &this
}

// NewFirewallRuleCreateBulkRequestWithDefaults instantiates a new FirewallRuleCreateBulkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallRuleCreateBulkRequestWithDefaults() *FirewallRuleCreateBulkRequest {
	this := FirewallRuleCreateBulkRequest{}
	return &this
}

// GetFirewallId returns the FirewallId field value
func (o *FirewallRuleCreateBulkRequest) GetFirewallId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirewallId
}

// GetFirewallIdOk returns a tuple with the FirewallId field value
// and a boolean to check if the value has been set.
func (o *FirewallRuleCreateBulkRequest) GetFirewallIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirewallId, true
}

// SetFirewallId sets field value
func (o *FirewallRuleCreateBulkRequest) SetFirewallId(v string) {
	o.FirewallId = v
}

// GetFirewallRuleList returns the FirewallRuleList field value
func (o *FirewallRuleCreateBulkRequest) GetFirewallRuleList() []FirewallRuleCreateRequest {
	if o == nil {
		var ret []FirewallRuleCreateRequest
		return ret
	}

	return o.FirewallRuleList
}

// GetFirewallRuleListOk returns a tuple with the FirewallRuleList field value
// and a boolean to check if the value has been set.
func (o *FirewallRuleCreateBulkRequest) GetFirewallRuleListOk() ([]FirewallRuleCreateRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirewallRuleList, true
}

// SetFirewallRuleList sets field value
func (o *FirewallRuleCreateBulkRequest) SetFirewallRuleList(v []FirewallRuleCreateRequest) {
	o.FirewallRuleList = v
}

func (o FirewallRuleCreateBulkRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FirewallRuleCreateBulkRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["firewall_id"] = o.FirewallId
	toSerialize["firewall_rule_list"] = o.FirewallRuleList
	return toSerialize, nil
}

func (o *FirewallRuleCreateBulkRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"firewall_id",
		"firewall_rule_list",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFirewallRuleCreateBulkRequest := _FirewallRuleCreateBulkRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFirewallRuleCreateBulkRequest)

	if err != nil {
		return err
	}

	*o = FirewallRuleCreateBulkRequest(varFirewallRuleCreateBulkRequest)

	return err
}

type NullableFirewallRuleCreateBulkRequest struct {
	value *FirewallRuleCreateBulkRequest
	isSet bool
}

func (v NullableFirewallRuleCreateBulkRequest) Get() *FirewallRuleCreateBulkRequest {
	return v.value
}

func (v *NullableFirewallRuleCreateBulkRequest) Set(val *FirewallRuleCreateBulkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewallRuleCreateBulkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewallRuleCreateBulkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewallRuleCreateBulkRequest(val *FirewallRuleCreateBulkRequest) *NullableFirewallRuleCreateBulkRequest {
	return &NullableFirewallRuleCreateBulkRequest{value: val, isSet: true}
}

func (v NullableFirewallRuleCreateBulkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewallRuleCreateBulkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


