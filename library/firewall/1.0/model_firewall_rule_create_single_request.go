/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6882
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package firewall

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FirewallRuleCreateSingleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FirewallRuleCreateSingleRequest{}

// FirewallRuleCreateSingleRequest struct for FirewallRuleCreateSingleRequest
type FirewallRuleCreateSingleRequest struct {
	// Firewall ID
	FirewallId string `json:"firewall_id"`
	// Firewall Rule List
	FirewallRule FirewallRuleCreateRequest `json:"firewall_rule"`
}

type _FirewallRuleCreateSingleRequest FirewallRuleCreateSingleRequest

// NewFirewallRuleCreateSingleRequest instantiates a new FirewallRuleCreateSingleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewallRuleCreateSingleRequest(firewallId string, firewallRule FirewallRuleCreateRequest) *FirewallRuleCreateSingleRequest {
	this := FirewallRuleCreateSingleRequest{}
	this.FirewallId = firewallId
	this.FirewallRule = firewallRule
	return &this
}

// NewFirewallRuleCreateSingleRequestWithDefaults instantiates a new FirewallRuleCreateSingleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallRuleCreateSingleRequestWithDefaults() *FirewallRuleCreateSingleRequest {
	this := FirewallRuleCreateSingleRequest{}
	return &this
}

// GetFirewallId returns the FirewallId field value
func (o *FirewallRuleCreateSingleRequest) GetFirewallId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirewallId
}

// GetFirewallIdOk returns a tuple with the FirewallId field value
// and a boolean to check if the value has been set.
func (o *FirewallRuleCreateSingleRequest) GetFirewallIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirewallId, true
}

// SetFirewallId sets field value
func (o *FirewallRuleCreateSingleRequest) SetFirewallId(v string) {
	o.FirewallId = v
}

// GetFirewallRule returns the FirewallRule field value
func (o *FirewallRuleCreateSingleRequest) GetFirewallRule() FirewallRuleCreateRequest {
	if o == nil {
		var ret FirewallRuleCreateRequest
		return ret
	}

	return o.FirewallRule
}

// GetFirewallRuleOk returns a tuple with the FirewallRule field value
// and a boolean to check if the value has been set.
func (o *FirewallRuleCreateSingleRequest) GetFirewallRuleOk() (*FirewallRuleCreateRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirewallRule, true
}

// SetFirewallRule sets field value
func (o *FirewallRuleCreateSingleRequest) SetFirewallRule(v FirewallRuleCreateRequest) {
	o.FirewallRule = v
}

func (o FirewallRuleCreateSingleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FirewallRuleCreateSingleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["firewall_id"] = o.FirewallId
	toSerialize["firewall_rule"] = o.FirewallRule
	return toSerialize, nil
}

func (o *FirewallRuleCreateSingleRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"firewall_id",
		"firewall_rule",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFirewallRuleCreateSingleRequest := _FirewallRuleCreateSingleRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFirewallRuleCreateSingleRequest)

	if err != nil {
		return err
	}

	*o = FirewallRuleCreateSingleRequest(varFirewallRuleCreateSingleRequest)

	return err
}

type NullableFirewallRuleCreateSingleRequest struct {
	value *FirewallRuleCreateSingleRequest
	isSet bool
}

func (v NullableFirewallRuleCreateSingleRequest) Get() *FirewallRuleCreateSingleRequest {
	return v.value
}

func (v *NullableFirewallRuleCreateSingleRequest) Set(val *FirewallRuleCreateSingleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewallRuleCreateSingleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewallRuleCreateSingleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewallRuleCreateSingleRequest(val *FirewallRuleCreateSingleRequest) *NullableFirewallRuleCreateSingleRequest {
	return &NullableFirewallRuleCreateSingleRequest{value: val, isSet: true}
}

func (v NullableFirewallRuleCreateSingleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewallRuleCreateSingleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


