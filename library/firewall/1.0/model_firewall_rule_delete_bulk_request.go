/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6882
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package firewall

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FirewallRuleDeleteBulkRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FirewallRuleDeleteBulkRequest{}

// FirewallRuleDeleteBulkRequest struct for FirewallRuleDeleteBulkRequest
type FirewallRuleDeleteBulkRequest struct {
	// Firewall Rule ID
	FirewallRuleId []string `json:"firewall_rule_id"`
}

type _FirewallRuleDeleteBulkRequest FirewallRuleDeleteBulkRequest

// NewFirewallRuleDeleteBulkRequest instantiates a new FirewallRuleDeleteBulkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewallRuleDeleteBulkRequest(firewallRuleId []string) *FirewallRuleDeleteBulkRequest {
	this := FirewallRuleDeleteBulkRequest{}
	this.FirewallRuleId = firewallRuleId
	return &this
}

// NewFirewallRuleDeleteBulkRequestWithDefaults instantiates a new FirewallRuleDeleteBulkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallRuleDeleteBulkRequestWithDefaults() *FirewallRuleDeleteBulkRequest {
	this := FirewallRuleDeleteBulkRequest{}
	return &this
}

// GetFirewallRuleId returns the FirewallRuleId field value
func (o *FirewallRuleDeleteBulkRequest) GetFirewallRuleId() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.FirewallRuleId
}

// GetFirewallRuleIdOk returns a tuple with the FirewallRuleId field value
// and a boolean to check if the value has been set.
func (o *FirewallRuleDeleteBulkRequest) GetFirewallRuleIdOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirewallRuleId, true
}

// SetFirewallRuleId sets field value
func (o *FirewallRuleDeleteBulkRequest) SetFirewallRuleId(v []string) {
	o.FirewallRuleId = v
}

func (o FirewallRuleDeleteBulkRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FirewallRuleDeleteBulkRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["firewall_rule_id"] = o.FirewallRuleId
	return toSerialize, nil
}

func (o *FirewallRuleDeleteBulkRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"firewall_rule_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFirewallRuleDeleteBulkRequest := _FirewallRuleDeleteBulkRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFirewallRuleDeleteBulkRequest)

	if err != nil {
		return err
	}

	*o = FirewallRuleDeleteBulkRequest(varFirewallRuleDeleteBulkRequest)

	return err
}

type NullableFirewallRuleDeleteBulkRequest struct {
	value *FirewallRuleDeleteBulkRequest
	isSet bool
}

func (v NullableFirewallRuleDeleteBulkRequest) Get() *FirewallRuleDeleteBulkRequest {
	return v.value
}

func (v *NullableFirewallRuleDeleteBulkRequest) Set(val *FirewallRuleDeleteBulkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewallRuleDeleteBulkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewallRuleDeleteBulkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewallRuleDeleteBulkRequest(val *FirewallRuleDeleteBulkRequest) *NullableFirewallRuleDeleteBulkRequest {
	return &NullableFirewallRuleDeleteBulkRequest{value: val, isSet: true}
}

func (v NullableFirewallRuleDeleteBulkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewallRuleDeleteBulkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


