/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6882
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package firewall

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the Firewall type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Firewall{}

// Firewall struct for Firewall
type Firewall struct {
	// Account ID
	AccountId string `json:"account_id"`
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy string `json:"created_by"`
	// Firewall Size Name
	FlavorName *string `json:"flavor_name,omitempty"`
	// Firewall Rule Quota
	FlavorRuleQuota *int32 `json:"flavor_rule_quota,omitempty"`
	// Fw Resource ID
	FwResourceId string `json:"fw_resource_id"`
	// Firewall ID
	Id string `json:"id"`
	// Logging Use
	Loggable bool `json:"loggable"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy string `json:"modified_by"`
	// Firewall Name
	Name string `json:"name"`
	// Pre Product ID
	PreProductId *string `json:"pre_product_id,omitempty"`
	// Firewall Product Type
	ProductType FirewallProductType `json:"product_type"`
	// Firewall State
	State FirewallState `json:"state"`
	// Firewall Status
	Status FirewallStatusType `json:"status"`
	// Total Rule Count
	TotalRuleCount *int32 `json:"total_rule_count,omitempty"`
	VpcId NullableString `json:"vpc_id"`
	VpcName NullableString `json:"vpc_name"`
}

type _Firewall Firewall

// NewFirewall instantiates a new Firewall object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewall(accountId string, createdAt time.Time, createdBy string, fwResourceId string, id string, loggable bool, modifiedAt time.Time, modifiedBy string, name string, productType FirewallProductType, state FirewallState, status FirewallStatusType, vpcId NullableString, vpcName NullableString) *Firewall {
	this := Firewall{}
	this.AccountId = accountId
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	var flavorRuleQuota int32 = 0
	this.FlavorRuleQuota = &flavorRuleQuota
	this.FwResourceId = fwResourceId
	this.Id = id
	this.Loggable = loggable
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.Name = name
	this.ProductType = productType
	this.State = state
	this.Status = status
	var totalRuleCount int32 = 0
	this.TotalRuleCount = &totalRuleCount
	this.VpcId = vpcId
	this.VpcName = vpcName
	return &this
}

// NewFirewallWithDefaults instantiates a new Firewall object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallWithDefaults() *Firewall {
	this := Firewall{}
	var flavorRuleQuota int32 = 0
	this.FlavorRuleQuota = &flavorRuleQuota
	var totalRuleCount int32 = 0
	this.TotalRuleCount = &totalRuleCount
	return &this
}

// GetAccountId returns the AccountId field value
func (o *Firewall) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *Firewall) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *Firewall) SetAccountId(v string) {
	o.AccountId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Firewall) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Firewall) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Firewall) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *Firewall) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *Firewall) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *Firewall) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetFlavorName returns the FlavorName field value if set, zero value otherwise.
func (o *Firewall) GetFlavorName() string {
	if o == nil || IsNil(o.FlavorName) {
		var ret string
		return ret
	}
	return *o.FlavorName
}

// GetFlavorNameOk returns a tuple with the FlavorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Firewall) GetFlavorNameOk() (*string, bool) {
	if o == nil || IsNil(o.FlavorName) {
		return nil, false
	}
	return o.FlavorName, true
}

// HasFlavorName returns a boolean if a field has been set.
func (o *Firewall) HasFlavorName() bool {
	if o != nil && !IsNil(o.FlavorName) {
		return true
	}

	return false
}

// SetFlavorName gets a reference to the given string and assigns it to the FlavorName field.
func (o *Firewall) SetFlavorName(v string) {
	o.FlavorName = &v
}

// GetFlavorRuleQuota returns the FlavorRuleQuota field value if set, zero value otherwise.
func (o *Firewall) GetFlavorRuleQuota() int32 {
	if o == nil || IsNil(o.FlavorRuleQuota) {
		var ret int32
		return ret
	}
	return *o.FlavorRuleQuota
}

// GetFlavorRuleQuotaOk returns a tuple with the FlavorRuleQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Firewall) GetFlavorRuleQuotaOk() (*int32, bool) {
	if o == nil || IsNil(o.FlavorRuleQuota) {
		return nil, false
	}
	return o.FlavorRuleQuota, true
}

// HasFlavorRuleQuota returns a boolean if a field has been set.
func (o *Firewall) HasFlavorRuleQuota() bool {
	if o != nil && !IsNil(o.FlavorRuleQuota) {
		return true
	}

	return false
}

// SetFlavorRuleQuota gets a reference to the given int32 and assigns it to the FlavorRuleQuota field.
func (o *Firewall) SetFlavorRuleQuota(v int32) {
	o.FlavorRuleQuota = &v
}

// GetFwResourceId returns the FwResourceId field value
func (o *Firewall) GetFwResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FwResourceId
}

// GetFwResourceIdOk returns a tuple with the FwResourceId field value
// and a boolean to check if the value has been set.
func (o *Firewall) GetFwResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FwResourceId, true
}

// SetFwResourceId sets field value
func (o *Firewall) SetFwResourceId(v string) {
	o.FwResourceId = v
}

// GetId returns the Id field value
func (o *Firewall) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Firewall) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Firewall) SetId(v string) {
	o.Id = v
}

// GetLoggable returns the Loggable field value
func (o *Firewall) GetLoggable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Loggable
}

// GetLoggableOk returns a tuple with the Loggable field value
// and a boolean to check if the value has been set.
func (o *Firewall) GetLoggableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Loggable, true
}

// SetLoggable sets field value
func (o *Firewall) SetLoggable(v bool) {
	o.Loggable = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *Firewall) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *Firewall) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *Firewall) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *Firewall) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *Firewall) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *Firewall) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetName returns the Name field value
func (o *Firewall) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Firewall) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Firewall) SetName(v string) {
	o.Name = v
}

// GetPreProductId returns the PreProductId field value if set, zero value otherwise.
func (o *Firewall) GetPreProductId() string {
	if o == nil || IsNil(o.PreProductId) {
		var ret string
		return ret
	}
	return *o.PreProductId
}

// GetPreProductIdOk returns a tuple with the PreProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Firewall) GetPreProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.PreProductId) {
		return nil, false
	}
	return o.PreProductId, true
}

// HasPreProductId returns a boolean if a field has been set.
func (o *Firewall) HasPreProductId() bool {
	if o != nil && !IsNil(o.PreProductId) {
		return true
	}

	return false
}

// SetPreProductId gets a reference to the given string and assigns it to the PreProductId field.
func (o *Firewall) SetPreProductId(v string) {
	o.PreProductId = &v
}

// GetProductType returns the ProductType field value
func (o *Firewall) GetProductType() FirewallProductType {
	if o == nil {
		var ret FirewallProductType
		return ret
	}

	return o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value
// and a boolean to check if the value has been set.
func (o *Firewall) GetProductTypeOk() (*FirewallProductType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductType, true
}

// SetProductType sets field value
func (o *Firewall) SetProductType(v FirewallProductType) {
	o.ProductType = v
}

// GetState returns the State field value
func (o *Firewall) GetState() FirewallState {
	if o == nil {
		var ret FirewallState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *Firewall) GetStateOk() (*FirewallState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *Firewall) SetState(v FirewallState) {
	o.State = v
}

// GetStatus returns the Status field value
func (o *Firewall) GetStatus() FirewallStatusType {
	if o == nil {
		var ret FirewallStatusType
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Firewall) GetStatusOk() (*FirewallStatusType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Firewall) SetStatus(v FirewallStatusType) {
	o.Status = v
}

// GetTotalRuleCount returns the TotalRuleCount field value if set, zero value otherwise.
func (o *Firewall) GetTotalRuleCount() int32 {
	if o == nil || IsNil(o.TotalRuleCount) {
		var ret int32
		return ret
	}
	return *o.TotalRuleCount
}

// GetTotalRuleCountOk returns a tuple with the TotalRuleCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Firewall) GetTotalRuleCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalRuleCount) {
		return nil, false
	}
	return o.TotalRuleCount, true
}

// HasTotalRuleCount returns a boolean if a field has been set.
func (o *Firewall) HasTotalRuleCount() bool {
	if o != nil && !IsNil(o.TotalRuleCount) {
		return true
	}

	return false
}

// SetTotalRuleCount gets a reference to the given int32 and assigns it to the TotalRuleCount field.
func (o *Firewall) SetTotalRuleCount(v int32) {
	o.TotalRuleCount = &v
}

// GetVpcId returns the VpcId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Firewall) GetVpcId() string {
	if o == nil || o.VpcId.Get() == nil {
		var ret string
		return ret
	}

	return *o.VpcId.Get()
}

// GetVpcIdOk returns a tuple with the VpcId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Firewall) GetVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VpcId.Get(), o.VpcId.IsSet()
}

// SetVpcId sets field value
func (o *Firewall) SetVpcId(v string) {
	o.VpcId.Set(&v)
}

// GetVpcName returns the VpcName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Firewall) GetVpcName() string {
	if o == nil || o.VpcName.Get() == nil {
		var ret string
		return ret
	}

	return *o.VpcName.Get()
}

// GetVpcNameOk returns a tuple with the VpcName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Firewall) GetVpcNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VpcName.Get(), o.VpcName.IsSet()
}

// SetVpcName sets field value
func (o *Firewall) SetVpcName(v string) {
	o.VpcName.Set(&v)
}

func (o Firewall) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Firewall) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	if !IsNil(o.FlavorName) {
		toSerialize["flavor_name"] = o.FlavorName
	}
	if !IsNil(o.FlavorRuleQuota) {
		toSerialize["flavor_rule_quota"] = o.FlavorRuleQuota
	}
	toSerialize["fw_resource_id"] = o.FwResourceId
	toSerialize["id"] = o.Id
	toSerialize["loggable"] = o.Loggable
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	toSerialize["name"] = o.Name
	if !IsNil(o.PreProductId) {
		toSerialize["pre_product_id"] = o.PreProductId
	}
	toSerialize["product_type"] = o.ProductType
	toSerialize["state"] = o.State
	toSerialize["status"] = o.Status
	if !IsNil(o.TotalRuleCount) {
		toSerialize["total_rule_count"] = o.TotalRuleCount
	}
	toSerialize["vpc_id"] = o.VpcId.Get()
	toSerialize["vpc_name"] = o.VpcName.Get()
	return toSerialize, nil
}

func (o *Firewall) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"created_at",
		"created_by",
		"fw_resource_id",
		"id",
		"loggable",
		"modified_at",
		"modified_by",
		"name",
		"product_type",
		"state",
		"status",
		"vpc_id",
		"vpc_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFirewall := _Firewall{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFirewall)

	if err != nil {
		return err
	}

	*o = Firewall(varFirewall)

	return err
}

type NullableFirewall struct {
	value *Firewall
	isSet bool
}

func (v NullableFirewall) Get() *Firewall {
	return v.value
}

func (v *NullableFirewall) Set(val *Firewall) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewall) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewall) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewall(val *Firewall) *NullableFirewall {
	return &NullableFirewall{value: val, isSet: true}
}

func (v NullableFirewall) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewall) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


