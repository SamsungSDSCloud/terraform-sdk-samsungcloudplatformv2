/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev7263
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the HostedZoneCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HostedZoneCreateRequest{}

// HostedZoneCreateRequest struct for HostedZoneCreateRequest
type HostedZoneCreateRequest struct {
	Description NullableString `json:"description,omitempty"`
	// email
	Email string `json:"email"`
	// name
	Name string `json:"name"`
	// Tag List
	Tags []Tag          `json:"tags,omitempty"`
	Type NullableString `json:"type,omitempty" validate:"regexp=^(public|private)$"`
}

type _HostedZoneCreateRequest HostedZoneCreateRequest

// NewHostedZoneCreateRequest instantiates a new HostedZoneCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostedZoneCreateRequest(email string, name string) *HostedZoneCreateRequest {
	this := HostedZoneCreateRequest{}
	this.Email = email
	this.Name = name
	return &this
}

// NewHostedZoneCreateRequestWithDefaults instantiates a new HostedZoneCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostedZoneCreateRequestWithDefaults() *HostedZoneCreateRequest {
	this := HostedZoneCreateRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostedZoneCreateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostedZoneCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *HostedZoneCreateRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *HostedZoneCreateRequest) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *HostedZoneCreateRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *HostedZoneCreateRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetEmail returns the Email field value
func (o *HostedZoneCreateRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *HostedZoneCreateRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *HostedZoneCreateRequest) SetEmail(v string) {
	o.Email = v
}

// GetName returns the Name field value
func (o *HostedZoneCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *HostedZoneCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *HostedZoneCreateRequest) SetName(v string) {
	o.Name = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *HostedZoneCreateRequest) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostedZoneCreateRequest) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *HostedZoneCreateRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *HostedZoneCreateRequest) SetTags(v []Tag) {
	o.Tags = v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostedZoneCreateRequest) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostedZoneCreateRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *HostedZoneCreateRequest) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *HostedZoneCreateRequest) SetType(v string) {
	o.Type.Set(&v)
}

// SetTypeNil sets the value for Type to be an explicit nil
func (o *HostedZoneCreateRequest) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *HostedZoneCreateRequest) UnsetType() {
	o.Type.Unset()
}

func (o HostedZoneCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostedZoneCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["email"] = o.Email
	toSerialize["name"] = o.Name
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	return toSerialize, nil
}

func (o *HostedZoneCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHostedZoneCreateRequest := _HostedZoneCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHostedZoneCreateRequest)

	if err != nil {
		return err
	}

	*o = HostedZoneCreateRequest(varHostedZoneCreateRequest)

	return err
}

type NullableHostedZoneCreateRequest struct {
	value *HostedZoneCreateRequest
	isSet bool
}

func (v NullableHostedZoneCreateRequest) Get() *HostedZoneCreateRequest {
	return v.value
}

func (v *NullableHostedZoneCreateRequest) Set(val *HostedZoneCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHostedZoneCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHostedZoneCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostedZoneCreateRequest(val *HostedZoneCreateRequest) *NullableHostedZoneCreateRequest {
	return &NullableHostedZoneCreateRequest{value: val, isSet: true}
}

func (v NullableHostedZoneCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostedZoneCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
