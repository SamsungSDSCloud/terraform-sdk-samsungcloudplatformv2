/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev7263
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the HostedZoneSetResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HostedZoneSetResponse{}

// HostedZoneSetResponse struct for HostedZoneSetResponse
type HostedZoneSetResponse struct {
	// current action in progress
	Action      string                 `json:"action"`
	Attributes  map[string]interface{} `json:"attributes,omitempty"`
	CreatedAt   NullableString         `json:"created_at,omitempty"`
	Description NullableString         `json:"description,omitempty"`
	// email
	Email          string         `json:"email"`
	HostedZoneType NullableString `json:"hosted_zone_type,omitempty"`
	// Id
	Id      string                 `json:"id"`
	Links   map[string]interface{} `json:"links,omitempty"`
	Masters []string               `json:"masters,omitempty"`
	// name
	Name string `json:"name"`
	// Designate Pool ID
	PoolId string `json:"pool_id"`
	// ProjectID
	ProjectId string `json:"project_id"`
	// serial number
	Serial int32        `json:"serial"`
	Shared NullableBool `json:"shared,omitempty"`
	// The status
	Status        string         `json:"status"`
	TransferredAt NullableString `json:"transferred_at,omitempty"`
	Ttl           NullableInt32  `json:"ttl,omitempty"`
	Type          NullableString `json:"type,omitempty"`
	UpdatedAt     NullableString `json:"updated_at,omitempty"`
	Version       NullableInt32  `json:"version,omitempty"`
}

type _HostedZoneSetResponse HostedZoneSetResponse

// NewHostedZoneSetResponse instantiates a new HostedZoneSetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostedZoneSetResponse(action string, email string, id string, name string, poolId string, projectId string, serial int32, status string) *HostedZoneSetResponse {
	this := HostedZoneSetResponse{}
	this.Action = action
	this.Email = email
	this.Id = id
	this.Name = name
	this.PoolId = poolId
	this.ProjectId = projectId
	this.Serial = serial
	this.Status = status
	return &this
}

// NewHostedZoneSetResponseWithDefaults instantiates a new HostedZoneSetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostedZoneSetResponseWithDefaults() *HostedZoneSetResponse {
	this := HostedZoneSetResponse{}
	return &this
}

// GetAction returns the Action field value
func (o *HostedZoneSetResponse) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *HostedZoneSetResponse) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *HostedZoneSetResponse) SetAction(v string) {
	o.Action = v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostedZoneSetResponse) GetAttributes() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostedZoneSetResponse) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Attributes) {
		return map[string]interface{}{}, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *HostedZoneSetResponse) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *HostedZoneSetResponse) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostedZoneSetResponse) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostedZoneSetResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *HostedZoneSetResponse) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableString and assigns it to the CreatedAt field.
func (o *HostedZoneSetResponse) SetCreatedAt(v string) {
	o.CreatedAt.Set(&v)
}

// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *HostedZoneSetResponse) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *HostedZoneSetResponse) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostedZoneSetResponse) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostedZoneSetResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *HostedZoneSetResponse) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *HostedZoneSetResponse) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *HostedZoneSetResponse) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *HostedZoneSetResponse) UnsetDescription() {
	o.Description.Unset()
}

// GetEmail returns the Email field value
func (o *HostedZoneSetResponse) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *HostedZoneSetResponse) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *HostedZoneSetResponse) SetEmail(v string) {
	o.Email = v
}

// GetHostedZoneType returns the HostedZoneType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostedZoneSetResponse) GetHostedZoneType() string {
	if o == nil || IsNil(o.HostedZoneType.Get()) {
		var ret string
		return ret
	}
	return *o.HostedZoneType.Get()
}

// GetHostedZoneTypeOk returns a tuple with the HostedZoneType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostedZoneSetResponse) GetHostedZoneTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HostedZoneType.Get(), o.HostedZoneType.IsSet()
}

// HasHostedZoneType returns a boolean if a field has been set.
func (o *HostedZoneSetResponse) HasHostedZoneType() bool {
	if o != nil && o.HostedZoneType.IsSet() {
		return true
	}

	return false
}

// SetHostedZoneType gets a reference to the given NullableString and assigns it to the HostedZoneType field.
func (o *HostedZoneSetResponse) SetHostedZoneType(v string) {
	o.HostedZoneType.Set(&v)
}

// SetHostedZoneTypeNil sets the value for HostedZoneType to be an explicit nil
func (o *HostedZoneSetResponse) SetHostedZoneTypeNil() {
	o.HostedZoneType.Set(nil)
}

// UnsetHostedZoneType ensures that no value is present for HostedZoneType, not even an explicit nil
func (o *HostedZoneSetResponse) UnsetHostedZoneType() {
	o.HostedZoneType.Unset()
}

// GetId returns the Id field value
func (o *HostedZoneSetResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *HostedZoneSetResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *HostedZoneSetResponse) SetId(v string) {
	o.Id = v
}

// GetLinks returns the Links field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostedZoneSetResponse) GetLinks() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostedZoneSetResponse) GetLinksOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Links) {
		return map[string]interface{}{}, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *HostedZoneSetResponse) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]interface{} and assigns it to the Links field.
func (o *HostedZoneSetResponse) SetLinks(v map[string]interface{}) {
	o.Links = v
}

// GetMasters returns the Masters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostedZoneSetResponse) GetMasters() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Masters
}

// GetMastersOk returns a tuple with the Masters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostedZoneSetResponse) GetMastersOk() ([]string, bool) {
	if o == nil || IsNil(o.Masters) {
		return nil, false
	}
	return o.Masters, true
}

// HasMasters returns a boolean if a field has been set.
func (o *HostedZoneSetResponse) HasMasters() bool {
	if o != nil && !IsNil(o.Masters) {
		return true
	}

	return false
}

// SetMasters gets a reference to the given []string and assigns it to the Masters field.
func (o *HostedZoneSetResponse) SetMasters(v []string) {
	o.Masters = v
}

// GetName returns the Name field value
func (o *HostedZoneSetResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *HostedZoneSetResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *HostedZoneSetResponse) SetName(v string) {
	o.Name = v
}

// GetPoolId returns the PoolId field value
func (o *HostedZoneSetResponse) GetPoolId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PoolId
}

// GetPoolIdOk returns a tuple with the PoolId field value
// and a boolean to check if the value has been set.
func (o *HostedZoneSetResponse) GetPoolIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PoolId, true
}

// SetPoolId sets field value
func (o *HostedZoneSetResponse) SetPoolId(v string) {
	o.PoolId = v
}

// GetProjectId returns the ProjectId field value
func (o *HostedZoneSetResponse) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *HostedZoneSetResponse) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *HostedZoneSetResponse) SetProjectId(v string) {
	o.ProjectId = v
}

// GetSerial returns the Serial field value
func (o *HostedZoneSetResponse) GetSerial() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Serial
}

// GetSerialOk returns a tuple with the Serial field value
// and a boolean to check if the value has been set.
func (o *HostedZoneSetResponse) GetSerialOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Serial, true
}

// SetSerial sets field value
func (o *HostedZoneSetResponse) SetSerial(v int32) {
	o.Serial = v
}

// GetShared returns the Shared field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostedZoneSetResponse) GetShared() bool {
	if o == nil || IsNil(o.Shared.Get()) {
		var ret bool
		return ret
	}
	return *o.Shared.Get()
}

// GetSharedOk returns a tuple with the Shared field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostedZoneSetResponse) GetSharedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Shared.Get(), o.Shared.IsSet()
}

// HasShared returns a boolean if a field has been set.
func (o *HostedZoneSetResponse) HasShared() bool {
	if o != nil && o.Shared.IsSet() {
		return true
	}

	return false
}

// SetShared gets a reference to the given NullableBool and assigns it to the Shared field.
func (o *HostedZoneSetResponse) SetShared(v bool) {
	o.Shared.Set(&v)
}

// SetSharedNil sets the value for Shared to be an explicit nil
func (o *HostedZoneSetResponse) SetSharedNil() {
	o.Shared.Set(nil)
}

// UnsetShared ensures that no value is present for Shared, not even an explicit nil
func (o *HostedZoneSetResponse) UnsetShared() {
	o.Shared.Unset()
}

// GetStatus returns the Status field value
func (o *HostedZoneSetResponse) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *HostedZoneSetResponse) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *HostedZoneSetResponse) SetStatus(v string) {
	o.Status = v
}

// GetTransferredAt returns the TransferredAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostedZoneSetResponse) GetTransferredAt() string {
	if o == nil || IsNil(o.TransferredAt.Get()) {
		var ret string
		return ret
	}
	return *o.TransferredAt.Get()
}

// GetTransferredAtOk returns a tuple with the TransferredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostedZoneSetResponse) GetTransferredAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TransferredAt.Get(), o.TransferredAt.IsSet()
}

// HasTransferredAt returns a boolean if a field has been set.
func (o *HostedZoneSetResponse) HasTransferredAt() bool {
	if o != nil && o.TransferredAt.IsSet() {
		return true
	}

	return false
}

// SetTransferredAt gets a reference to the given NullableString and assigns it to the TransferredAt field.
func (o *HostedZoneSetResponse) SetTransferredAt(v string) {
	o.TransferredAt.Set(&v)
}

// SetTransferredAtNil sets the value for TransferredAt to be an explicit nil
func (o *HostedZoneSetResponse) SetTransferredAtNil() {
	o.TransferredAt.Set(nil)
}

// UnsetTransferredAt ensures that no value is present for TransferredAt, not even an explicit nil
func (o *HostedZoneSetResponse) UnsetTransferredAt() {
	o.TransferredAt.Unset()
}

// GetTtl returns the Ttl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostedZoneSetResponse) GetTtl() int32 {
	if o == nil || IsNil(o.Ttl.Get()) {
		var ret int32
		return ret
	}
	return *o.Ttl.Get()
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostedZoneSetResponse) GetTtlOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ttl.Get(), o.Ttl.IsSet()
}

// HasTtl returns a boolean if a field has been set.
func (o *HostedZoneSetResponse) HasTtl() bool {
	if o != nil && o.Ttl.IsSet() {
		return true
	}

	return false
}

// SetTtl gets a reference to the given NullableInt32 and assigns it to the Ttl field.
func (o *HostedZoneSetResponse) SetTtl(v int32) {
	o.Ttl.Set(&v)
}

// SetTtlNil sets the value for Ttl to be an explicit nil
func (o *HostedZoneSetResponse) SetTtlNil() {
	o.Ttl.Set(nil)
}

// UnsetTtl ensures that no value is present for Ttl, not even an explicit nil
func (o *HostedZoneSetResponse) UnsetTtl() {
	o.Ttl.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostedZoneSetResponse) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostedZoneSetResponse) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *HostedZoneSetResponse) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *HostedZoneSetResponse) SetType(v string) {
	o.Type.Set(&v)
}

// SetTypeNil sets the value for Type to be an explicit nil
func (o *HostedZoneSetResponse) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *HostedZoneSetResponse) UnsetType() {
	o.Type.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostedZoneSetResponse) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostedZoneSetResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *HostedZoneSetResponse) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableString and assigns it to the UpdatedAt field.
func (o *HostedZoneSetResponse) SetUpdatedAt(v string) {
	o.UpdatedAt.Set(&v)
}

// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *HostedZoneSetResponse) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *HostedZoneSetResponse) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HostedZoneSetResponse) GetVersion() int32 {
	if o == nil || IsNil(o.Version.Get()) {
		var ret int32
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HostedZoneSetResponse) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *HostedZoneSetResponse) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableInt32 and assigns it to the Version field.
func (o *HostedZoneSetResponse) SetVersion(v int32) {
	o.Version.Set(&v)
}

// SetVersionNil sets the value for Version to be an explicit nil
func (o *HostedZoneSetResponse) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *HostedZoneSetResponse) UnsetVersion() {
	o.Version.Unset()
}

func (o HostedZoneSetResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostedZoneSetResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["email"] = o.Email
	if o.HostedZoneType.IsSet() {
		toSerialize["hosted_zone_type"] = o.HostedZoneType.Get()
	}
	toSerialize["id"] = o.Id
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Masters != nil {
		toSerialize["masters"] = o.Masters
	}
	toSerialize["name"] = o.Name
	toSerialize["pool_id"] = o.PoolId
	toSerialize["project_id"] = o.ProjectId
	toSerialize["serial"] = o.Serial
	if o.Shared.IsSet() {
		toSerialize["shared"] = o.Shared.Get()
	}
	toSerialize["status"] = o.Status
	if o.TransferredAt.IsSet() {
		toSerialize["transferred_at"] = o.TransferredAt.Get()
	}
	if o.Ttl.IsSet() {
		toSerialize["ttl"] = o.Ttl.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updated_at"] = o.UpdatedAt.Get()
	}
	if o.Version.IsSet() {
		toSerialize["version"] = o.Version.Get()
	}
	return toSerialize, nil
}

func (o *HostedZoneSetResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action",
		"email",
		"id",
		"name",
		"pool_id",
		"project_id",
		"serial",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHostedZoneSetResponse := _HostedZoneSetResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHostedZoneSetResponse)

	if err != nil {
		return err
	}

	*o = HostedZoneSetResponse(varHostedZoneSetResponse)

	return err
}

type NullableHostedZoneSetResponse struct {
	value *HostedZoneSetResponse
	isSet bool
}

func (v NullableHostedZoneSetResponse) Get() *HostedZoneSetResponse {
	return v.value
}

func (v *NullableHostedZoneSetResponse) Set(val *HostedZoneSetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHostedZoneSetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHostedZoneSetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostedZoneSetResponse(val *HostedZoneSetResponse) *NullableHostedZoneSetResponse {
	return &NullableHostedZoneSetResponse{value: val, isSet: true}
}

func (v NullableHostedZoneSetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostedZoneSetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
