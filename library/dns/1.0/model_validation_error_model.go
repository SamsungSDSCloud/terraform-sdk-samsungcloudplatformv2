/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev7263
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"encoding/json"
)

// checks if the ValidationErrorModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidationErrorModel{}

// ValidationErrorModel struct for ValidationErrorModel
type ValidationErrorModel struct {
	Ctx  map[string]interface{} `json:"ctx,omitempty"`
	Loc  []string               `json:"loc,omitempty"`
	Msg  NullableString         `json:"msg,omitempty"`
	Type NullableString         `json:"type_,omitempty"`
}

// NewValidationErrorModel instantiates a new ValidationErrorModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidationErrorModel() *ValidationErrorModel {
	this := ValidationErrorModel{}
	return &this
}

// NewValidationErrorModelWithDefaults instantiates a new ValidationErrorModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidationErrorModelWithDefaults() *ValidationErrorModel {
	this := ValidationErrorModel{}
	return &this
}

// GetCtx returns the Ctx field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ValidationErrorModel) GetCtx() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Ctx
}

// GetCtxOk returns a tuple with the Ctx field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ValidationErrorModel) GetCtxOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Ctx) {
		return map[string]interface{}{}, false
	}
	return o.Ctx, true
}

// HasCtx returns a boolean if a field has been set.
func (o *ValidationErrorModel) HasCtx() bool {
	if o != nil && !IsNil(o.Ctx) {
		return true
	}

	return false
}

// SetCtx gets a reference to the given map[string]interface{} and assigns it to the Ctx field.
func (o *ValidationErrorModel) SetCtx(v map[string]interface{}) {
	o.Ctx = v
}

// GetLoc returns the Loc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ValidationErrorModel) GetLoc() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Loc
}

// GetLocOk returns a tuple with the Loc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ValidationErrorModel) GetLocOk() ([]string, bool) {
	if o == nil || IsNil(o.Loc) {
		return nil, false
	}
	return o.Loc, true
}

// HasLoc returns a boolean if a field has been set.
func (o *ValidationErrorModel) HasLoc() bool {
	if o != nil && !IsNil(o.Loc) {
		return true
	}

	return false
}

// SetLoc gets a reference to the given []string and assigns it to the Loc field.
func (o *ValidationErrorModel) SetLoc(v []string) {
	o.Loc = v
}

// GetMsg returns the Msg field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ValidationErrorModel) GetMsg() string {
	if o == nil || IsNil(o.Msg.Get()) {
		var ret string
		return ret
	}
	return *o.Msg.Get()
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ValidationErrorModel) GetMsgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Msg.Get(), o.Msg.IsSet()
}

// HasMsg returns a boolean if a field has been set.
func (o *ValidationErrorModel) HasMsg() bool {
	if o != nil && o.Msg.IsSet() {
		return true
	}

	return false
}

// SetMsg gets a reference to the given NullableString and assigns it to the Msg field.
func (o *ValidationErrorModel) SetMsg(v string) {
	o.Msg.Set(&v)
}

// SetMsgNil sets the value for Msg to be an explicit nil
func (o *ValidationErrorModel) SetMsgNil() {
	o.Msg.Set(nil)
}

// UnsetMsg ensures that no value is present for Msg, not even an explicit nil
func (o *ValidationErrorModel) UnsetMsg() {
	o.Msg.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ValidationErrorModel) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ValidationErrorModel) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *ValidationErrorModel) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *ValidationErrorModel) SetType(v string) {
	o.Type.Set(&v)
}

// SetTypeNil sets the value for Type to be an explicit nil
func (o *ValidationErrorModel) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *ValidationErrorModel) UnsetType() {
	o.Type.Unset()
}

func (o ValidationErrorModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidationErrorModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Ctx != nil {
		toSerialize["ctx"] = o.Ctx
	}
	if o.Loc != nil {
		toSerialize["loc"] = o.Loc
	}
	if o.Msg.IsSet() {
		toSerialize["msg"] = o.Msg.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type_"] = o.Type.Get()
	}
	return toSerialize, nil
}

type NullableValidationErrorModel struct {
	value *ValidationErrorModel
	isSet bool
}

func (v NullableValidationErrorModel) Get() *ValidationErrorModel {
	return v.value
}

func (v *NullableValidationErrorModel) Set(val *ValidationErrorModel) {
	v.value = val
	v.isSet = true
}

func (v NullableValidationErrorModel) IsSet() bool {
	return v.isSet
}

func (v *NullableValidationErrorModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidationErrorModel(val *ValidationErrorModel) *NullableValidationErrorModel {
	return &NullableValidationErrorModel{value: val, isSet: true}
}

func (v NullableValidationErrorModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidationErrorModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
