/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev7263
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"encoding/json"
)

// checks if the PrivateDnsSetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrivateDnsSetRequest{}

// PrivateDnsSetRequest struct for PrivateDnsSetRequest
type PrivateDnsSetRequest struct {
	ConnectedVpcIds []string       `json:"connected_vpc_ids,omitempty"`
	Description     NullableString `json:"description,omitempty"`
}

// NewPrivateDnsSetRequest instantiates a new PrivateDnsSetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateDnsSetRequest() *PrivateDnsSetRequest {
	this := PrivateDnsSetRequest{}
	return &this
}

// NewPrivateDnsSetRequestWithDefaults instantiates a new PrivateDnsSetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateDnsSetRequestWithDefaults() *PrivateDnsSetRequest {
	this := PrivateDnsSetRequest{}
	return &this
}

// GetConnectedVpcIds returns the ConnectedVpcIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrivateDnsSetRequest) GetConnectedVpcIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ConnectedVpcIds
}

// GetConnectedVpcIdsOk returns a tuple with the ConnectedVpcIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrivateDnsSetRequest) GetConnectedVpcIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ConnectedVpcIds) {
		return nil, false
	}
	return o.ConnectedVpcIds, true
}

// HasConnectedVpcIds returns a boolean if a field has been set.
func (o *PrivateDnsSetRequest) HasConnectedVpcIds() bool {
	if o != nil && !IsNil(o.ConnectedVpcIds) {
		return true
	}

	return false
}

// SetConnectedVpcIds gets a reference to the given []string and assigns it to the ConnectedVpcIds field.
func (o *PrivateDnsSetRequest) SetConnectedVpcIds(v []string) {
	o.ConnectedVpcIds = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrivateDnsSetRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrivateDnsSetRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *PrivateDnsSetRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *PrivateDnsSetRequest) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *PrivateDnsSetRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *PrivateDnsSetRequest) UnsetDescription() {
	o.Description.Unset()
}

func (o PrivateDnsSetRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrivateDnsSetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectedVpcIds != nil {
		toSerialize["connected_vpc_ids"] = o.ConnectedVpcIds
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	return toSerialize, nil
}

type NullablePrivateDnsSetRequest struct {
	value *PrivateDnsSetRequest
	isSet bool
}

func (v NullablePrivateDnsSetRequest) Get() *PrivateDnsSetRequest {
	return v.value
}

func (v *NullablePrivateDnsSetRequest) Set(val *PrivateDnsSetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateDnsSetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateDnsSetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateDnsSetRequest(val *PrivateDnsSetRequest) *NullablePrivateDnsSetRequest {
	return &NullablePrivateDnsSetRequest{value: val, isSet: true}
}

func (v NullablePrivateDnsSetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateDnsSetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
