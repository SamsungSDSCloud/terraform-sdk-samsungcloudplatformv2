/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev7263
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PublicDomainDetailResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicDomainDetailResponse{}

// PublicDomainDetailResponse struct for PublicDomainDetailResponse
type PublicDomainDetailResponse struct {
	PublicDomainName PublicDomainDetail `json:"public_domain_name"`
}

type _PublicDomainDetailResponse PublicDomainDetailResponse

// NewPublicDomainDetailResponse instantiates a new PublicDomainDetailResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicDomainDetailResponse(publicDomainName PublicDomainDetail) *PublicDomainDetailResponse {
	this := PublicDomainDetailResponse{}
	this.PublicDomainName = publicDomainName
	return &this
}

// NewPublicDomainDetailResponseWithDefaults instantiates a new PublicDomainDetailResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicDomainDetailResponseWithDefaults() *PublicDomainDetailResponse {
	this := PublicDomainDetailResponse{}
	return &this
}

// GetPublicDomainName returns the PublicDomainName field value
func (o *PublicDomainDetailResponse) GetPublicDomainName() PublicDomainDetail {
	if o == nil {
		var ret PublicDomainDetail
		return ret
	}

	return o.PublicDomainName
}

// GetPublicDomainNameOk returns a tuple with the PublicDomainName field value
// and a boolean to check if the value has been set.
func (o *PublicDomainDetailResponse) GetPublicDomainNameOk() (*PublicDomainDetail, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicDomainName, true
}

// SetPublicDomainName sets field value
func (o *PublicDomainDetailResponse) SetPublicDomainName(v PublicDomainDetail) {
	o.PublicDomainName = v
}

func (o PublicDomainDetailResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicDomainDetailResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["public_domain_name"] = o.PublicDomainName
	return toSerialize, nil
}

func (o *PublicDomainDetailResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"public_domain_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicDomainDetailResponse := _PublicDomainDetailResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicDomainDetailResponse)

	if err != nil {
		return err
	}

	*o = PublicDomainDetailResponse(varPublicDomainDetailResponse)

	return err
}

type NullablePublicDomainDetailResponse struct {
	value *PublicDomainDetailResponse
	isSet bool
}

func (v NullablePublicDomainDetailResponse) Get() *PublicDomainDetailResponse {
	return v.value
}

func (v *NullablePublicDomainDetailResponse) Set(val *PublicDomainDetailResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicDomainDetailResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicDomainDetailResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicDomainDetailResponse(val *PublicDomainDetailResponse) *NullablePublicDomainDetailResponse {
	return &NullablePublicDomainDetailResponse{value: val, isSet: true}
}

func (v NullablePublicDomainDetailResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicDomainDetailResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
