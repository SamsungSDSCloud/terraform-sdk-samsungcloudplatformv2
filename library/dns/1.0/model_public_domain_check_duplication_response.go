/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev7263
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PublicDomainCheckDuplicationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicDomainCheckDuplicationResponse{}

// PublicDomainCheckDuplicationResponse struct for PublicDomainCheckDuplicationResponse
type PublicDomainCheckDuplicationResponse struct {
	// Duplication status
	Duplication bool `json:"duplication"`
}

type _PublicDomainCheckDuplicationResponse PublicDomainCheckDuplicationResponse

// NewPublicDomainCheckDuplicationResponse instantiates a new PublicDomainCheckDuplicationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicDomainCheckDuplicationResponse(duplication bool) *PublicDomainCheckDuplicationResponse {
	this := PublicDomainCheckDuplicationResponse{}
	this.Duplication = duplication
	return &this
}

// NewPublicDomainCheckDuplicationResponseWithDefaults instantiates a new PublicDomainCheckDuplicationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicDomainCheckDuplicationResponseWithDefaults() *PublicDomainCheckDuplicationResponse {
	this := PublicDomainCheckDuplicationResponse{}
	return &this
}

// GetDuplication returns the Duplication field value
func (o *PublicDomainCheckDuplicationResponse) GetDuplication() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Duplication
}

// GetDuplicationOk returns a tuple with the Duplication field value
// and a boolean to check if the value has been set.
func (o *PublicDomainCheckDuplicationResponse) GetDuplicationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duplication, true
}

// SetDuplication sets field value
func (o *PublicDomainCheckDuplicationResponse) SetDuplication(v bool) {
	o.Duplication = v
}

func (o PublicDomainCheckDuplicationResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicDomainCheckDuplicationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["duplication"] = o.Duplication
	return toSerialize, nil
}

func (o *PublicDomainCheckDuplicationResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"duplication",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicDomainCheckDuplicationResponse := _PublicDomainCheckDuplicationResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicDomainCheckDuplicationResponse)

	if err != nil {
		return err
	}

	*o = PublicDomainCheckDuplicationResponse(varPublicDomainCheckDuplicationResponse)

	return err
}

type NullablePublicDomainCheckDuplicationResponse struct {
	value *PublicDomainCheckDuplicationResponse
	isSet bool
}

func (v NullablePublicDomainCheckDuplicationResponse) Get() *PublicDomainCheckDuplicationResponse {
	return v.value
}

func (v *NullablePublicDomainCheckDuplicationResponse) Set(val *PublicDomainCheckDuplicationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicDomainCheckDuplicationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicDomainCheckDuplicationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicDomainCheckDuplicationResponse(val *PublicDomainCheckDuplicationResponse) *NullablePublicDomainCheckDuplicationResponse {
	return &NullablePublicDomainCheckDuplicationResponse{value: val, isSet: true}
}

func (v NullablePublicDomainCheckDuplicationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicDomainCheckDuplicationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
