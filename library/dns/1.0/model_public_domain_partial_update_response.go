/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev7263
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PublicDomainPartialUpdateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicDomainPartialUpdateResponse{}

// PublicDomainPartialUpdateResponse struct for PublicDomainPartialUpdateResponse
type PublicDomainPartialUpdateResponse struct {
	AutoExtension NullableBool   `json:"auto_extension,omitempty"`
	Description   NullableString `json:"description,omitempty"`
	// Id
	Id string `json:"id"`
}

type _PublicDomainPartialUpdateResponse PublicDomainPartialUpdateResponse

// NewPublicDomainPartialUpdateResponse instantiates a new PublicDomainPartialUpdateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicDomainPartialUpdateResponse(id string) *PublicDomainPartialUpdateResponse {
	this := PublicDomainPartialUpdateResponse{}
	this.Id = id
	return &this
}

// NewPublicDomainPartialUpdateResponseWithDefaults instantiates a new PublicDomainPartialUpdateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicDomainPartialUpdateResponseWithDefaults() *PublicDomainPartialUpdateResponse {
	this := PublicDomainPartialUpdateResponse{}
	return &this
}

// GetAutoExtension returns the AutoExtension field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PublicDomainPartialUpdateResponse) GetAutoExtension() bool {
	if o == nil || IsNil(o.AutoExtension.Get()) {
		var ret bool
		return ret
	}
	return *o.AutoExtension.Get()
}

// GetAutoExtensionOk returns a tuple with the AutoExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicDomainPartialUpdateResponse) GetAutoExtensionOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutoExtension.Get(), o.AutoExtension.IsSet()
}

// HasAutoExtension returns a boolean if a field has been set.
func (o *PublicDomainPartialUpdateResponse) HasAutoExtension() bool {
	if o != nil && o.AutoExtension.IsSet() {
		return true
	}

	return false
}

// SetAutoExtension gets a reference to the given NullableBool and assigns it to the AutoExtension field.
func (o *PublicDomainPartialUpdateResponse) SetAutoExtension(v bool) {
	o.AutoExtension.Set(&v)
}

// SetAutoExtensionNil sets the value for AutoExtension to be an explicit nil
func (o *PublicDomainPartialUpdateResponse) SetAutoExtensionNil() {
	o.AutoExtension.Set(nil)
}

// UnsetAutoExtension ensures that no value is present for AutoExtension, not even an explicit nil
func (o *PublicDomainPartialUpdateResponse) UnsetAutoExtension() {
	o.AutoExtension.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PublicDomainPartialUpdateResponse) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicDomainPartialUpdateResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *PublicDomainPartialUpdateResponse) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *PublicDomainPartialUpdateResponse) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *PublicDomainPartialUpdateResponse) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *PublicDomainPartialUpdateResponse) UnsetDescription() {
	o.Description.Unset()
}

// GetId returns the Id field value
func (o *PublicDomainPartialUpdateResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PublicDomainPartialUpdateResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PublicDomainPartialUpdateResponse) SetId(v string) {
	o.Id = v
}

func (o PublicDomainPartialUpdateResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicDomainPartialUpdateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AutoExtension.IsSet() {
		toSerialize["auto_extension"] = o.AutoExtension.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

func (o *PublicDomainPartialUpdateResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicDomainPartialUpdateResponse := _PublicDomainPartialUpdateResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicDomainPartialUpdateResponse)

	if err != nil {
		return err
	}

	*o = PublicDomainPartialUpdateResponse(varPublicDomainPartialUpdateResponse)

	return err
}

type NullablePublicDomainPartialUpdateResponse struct {
	value *PublicDomainPartialUpdateResponse
	isSet bool
}

func (v NullablePublicDomainPartialUpdateResponse) Get() *PublicDomainPartialUpdateResponse {
	return v.value
}

func (v *NullablePublicDomainPartialUpdateResponse) Set(val *PublicDomainPartialUpdateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicDomainPartialUpdateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicDomainPartialUpdateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicDomainPartialUpdateResponse(val *PublicDomainPartialUpdateResponse) *NullablePublicDomainPartialUpdateResponse {
	return &NullablePublicDomainPartialUpdateResponse{value: val, isSet: true}
}

func (v NullablePublicDomainPartialUpdateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicDomainPartialUpdateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
