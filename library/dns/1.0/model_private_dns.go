/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev7263
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the PrivateDns type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrivateDns{}

// PrivateDns struct for PrivateDns
type PrivateDns struct {
	AuthDnsName NullableString `json:"auth_dns_name"`
	// Connected VPC ID
	ConnectedVpcIds []string `json:"connected_vpc_ids,omitempty"`
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy   string         `json:"created_by"`
	Description NullableString `json:"description"`
	// Private DNS ID
	Id string `json:"id"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy string `json:"modified_by"`
	// Private DNS Name
	Name             string         `json:"name"`
	PoolId           NullableString `json:"pool_id"`
	PoolName         NullableString `json:"pool_name"`
	RegisteredRegion NullableString `json:"registered_region"`
	ResolverIp       NullableString `json:"resolver_ip"`
	ResolverName     NullableString `json:"resolver_name"`
	// State
	State PrivateDnsState `json:"state"`
}

type _PrivateDns PrivateDns

// NewPrivateDns instantiates a new PrivateDns object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateDns(authDnsName NullableString, createdAt time.Time, createdBy string, description NullableString, id string, modifiedAt time.Time, modifiedBy string, name string, poolId NullableString, poolName NullableString, registeredRegion NullableString, resolverIp NullableString, resolverName NullableString, state PrivateDnsState) *PrivateDns {
	this := PrivateDns{}
	this.AuthDnsName = authDnsName
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.Description = description
	this.Id = id
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.Name = name
	this.PoolId = poolId
	this.PoolName = poolName
	this.RegisteredRegion = registeredRegion
	this.ResolverIp = resolverIp
	this.ResolverName = resolverName
	this.State = state
	return &this
}

// NewPrivateDnsWithDefaults instantiates a new PrivateDns object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateDnsWithDefaults() *PrivateDns {
	this := PrivateDns{}
	return &this
}

// GetAuthDnsName returns the AuthDnsName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PrivateDns) GetAuthDnsName() string {
	if o == nil || o.AuthDnsName.Get() == nil {
		var ret string
		return ret
	}

	return *o.AuthDnsName.Get()
}

// GetAuthDnsNameOk returns a tuple with the AuthDnsName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrivateDns) GetAuthDnsNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthDnsName.Get(), o.AuthDnsName.IsSet()
}

// SetAuthDnsName sets field value
func (o *PrivateDns) SetAuthDnsName(v string) {
	o.AuthDnsName.Set(&v)
}

// GetConnectedVpcIds returns the ConnectedVpcIds field value if set, zero value otherwise.
func (o *PrivateDns) GetConnectedVpcIds() []string {
	if o == nil || IsNil(o.ConnectedVpcIds) {
		var ret []string
		return ret
	}
	return o.ConnectedVpcIds
}

// GetConnectedVpcIdsOk returns a tuple with the ConnectedVpcIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateDns) GetConnectedVpcIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ConnectedVpcIds) {
		return nil, false
	}
	return o.ConnectedVpcIds, true
}

// HasConnectedVpcIds returns a boolean if a field has been set.
func (o *PrivateDns) HasConnectedVpcIds() bool {
	if o != nil && !IsNil(o.ConnectedVpcIds) {
		return true
	}

	return false
}

// SetConnectedVpcIds gets a reference to the given []string and assigns it to the ConnectedVpcIds field.
func (o *PrivateDns) SetConnectedVpcIds(v []string) {
	o.ConnectedVpcIds = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PrivateDns) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PrivateDns) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PrivateDns) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *PrivateDns) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *PrivateDns) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *PrivateDns) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PrivateDns) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrivateDns) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *PrivateDns) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetId returns the Id field value
func (o *PrivateDns) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PrivateDns) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PrivateDns) SetId(v string) {
	o.Id = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *PrivateDns) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *PrivateDns) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *PrivateDns) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *PrivateDns) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *PrivateDns) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *PrivateDns) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetName returns the Name field value
func (o *PrivateDns) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PrivateDns) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PrivateDns) SetName(v string) {
	o.Name = v
}

// GetPoolId returns the PoolId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PrivateDns) GetPoolId() string {
	if o == nil || o.PoolId.Get() == nil {
		var ret string
		return ret
	}

	return *o.PoolId.Get()
}

// GetPoolIdOk returns a tuple with the PoolId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrivateDns) GetPoolIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PoolId.Get(), o.PoolId.IsSet()
}

// SetPoolId sets field value
func (o *PrivateDns) SetPoolId(v string) {
	o.PoolId.Set(&v)
}

// GetPoolName returns the PoolName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PrivateDns) GetPoolName() string {
	if o == nil || o.PoolName.Get() == nil {
		var ret string
		return ret
	}

	return *o.PoolName.Get()
}

// GetPoolNameOk returns a tuple with the PoolName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrivateDns) GetPoolNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PoolName.Get(), o.PoolName.IsSet()
}

// SetPoolName sets field value
func (o *PrivateDns) SetPoolName(v string) {
	o.PoolName.Set(&v)
}

// GetRegisteredRegion returns the RegisteredRegion field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PrivateDns) GetRegisteredRegion() string {
	if o == nil || o.RegisteredRegion.Get() == nil {
		var ret string
		return ret
	}

	return *o.RegisteredRegion.Get()
}

// GetRegisteredRegionOk returns a tuple with the RegisteredRegion field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrivateDns) GetRegisteredRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RegisteredRegion.Get(), o.RegisteredRegion.IsSet()
}

// SetRegisteredRegion sets field value
func (o *PrivateDns) SetRegisteredRegion(v string) {
	o.RegisteredRegion.Set(&v)
}

// GetResolverIp returns the ResolverIp field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PrivateDns) GetResolverIp() string {
	if o == nil || o.ResolverIp.Get() == nil {
		var ret string
		return ret
	}

	return *o.ResolverIp.Get()
}

// GetResolverIpOk returns a tuple with the ResolverIp field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrivateDns) GetResolverIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResolverIp.Get(), o.ResolverIp.IsSet()
}

// SetResolverIp sets field value
func (o *PrivateDns) SetResolverIp(v string) {
	o.ResolverIp.Set(&v)
}

// GetResolverName returns the ResolverName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PrivateDns) GetResolverName() string {
	if o == nil || o.ResolverName.Get() == nil {
		var ret string
		return ret
	}

	return *o.ResolverName.Get()
}

// GetResolverNameOk returns a tuple with the ResolverName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrivateDns) GetResolverNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResolverName.Get(), o.ResolverName.IsSet()
}

// SetResolverName sets field value
func (o *PrivateDns) SetResolverName(v string) {
	o.ResolverName.Set(&v)
}

// GetState returns the State field value
func (o *PrivateDns) GetState() PrivateDnsState {
	if o == nil {
		var ret PrivateDnsState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *PrivateDns) GetStateOk() (*PrivateDnsState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *PrivateDns) SetState(v PrivateDnsState) {
	o.State = v
}

func (o PrivateDns) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrivateDns) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["auth_dns_name"] = o.AuthDnsName.Get()
	if !IsNil(o.ConnectedVpcIds) {
		toSerialize["connected_vpc_ids"] = o.ConnectedVpcIds
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	toSerialize["description"] = o.Description.Get()
	toSerialize["id"] = o.Id
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	toSerialize["name"] = o.Name
	toSerialize["pool_id"] = o.PoolId.Get()
	toSerialize["pool_name"] = o.PoolName.Get()
	toSerialize["registered_region"] = o.RegisteredRegion.Get()
	toSerialize["resolver_ip"] = o.ResolverIp.Get()
	toSerialize["resolver_name"] = o.ResolverName.Get()
	toSerialize["state"] = o.State
	return toSerialize, nil
}

func (o *PrivateDns) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"auth_dns_name",
		"created_at",
		"created_by",
		"description",
		"id",
		"modified_at",
		"modified_by",
		"name",
		"pool_id",
		"pool_name",
		"registered_region",
		"resolver_ip",
		"resolver_name",
		"state",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPrivateDns := _PrivateDns{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPrivateDns)

	if err != nil {
		return err
	}

	*o = PrivateDns(varPrivateDns)

	return err
}

type NullablePrivateDns struct {
	value *PrivateDns
	isSet bool
}

func (v NullablePrivateDns) Get() *PrivateDns {
	return v.value
}

func (v *NullablePrivateDns) Set(val *PrivateDns) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateDns) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateDns) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateDns(val *PrivateDns) *NullablePrivateDns {
	return &NullablePrivateDns{value: val, isSet: true}
}

func (v NullablePrivateDns) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateDns) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
