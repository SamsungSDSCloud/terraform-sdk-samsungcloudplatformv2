/*
OSSCP Logging Audit Service

OSSCP Logging Audit Service

API version: 1.2.2.dev64
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loggingaudit

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TrailShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrailShowResponse{}

// TrailShowResponse struct for TrailShowResponse
type TrailShowResponse struct {
	Trail Trail `json:"trail"`
}

type _TrailShowResponse TrailShowResponse

// NewTrailShowResponse instantiates a new TrailShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrailShowResponse(trail Trail) *TrailShowResponse {
	this := TrailShowResponse{}
	this.Trail = trail
	return &this
}

// NewTrailShowResponseWithDefaults instantiates a new TrailShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrailShowResponseWithDefaults() *TrailShowResponse {
	this := TrailShowResponse{}
	return &this
}

// GetTrail returns the Trail field value
func (o *TrailShowResponse) GetTrail() Trail {
	if o == nil {
		var ret Trail
		return ret
	}

	return o.Trail
}

// GetTrailOk returns a tuple with the Trail field value
// and a boolean to check if the value has been set.
func (o *TrailShowResponse) GetTrailOk() (*Trail, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Trail, true
}

// SetTrail sets field value
func (o *TrailShowResponse) SetTrail(v Trail) {
	o.Trail = v
}

func (o TrailShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrailShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["trail"] = o.Trail
	return toSerialize, nil
}

func (o *TrailShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"trail",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTrailShowResponse := _TrailShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTrailShowResponse)

	if err != nil {
		return err
	}

	*o = TrailShowResponse(varTrailShowResponse)

	return err
}

type NullableTrailShowResponse struct {
	value *TrailShowResponse
	isSet bool
}

func (v NullableTrailShowResponse) Get() *TrailShowResponse {
	return v.value
}

func (v *NullableTrailShowResponse) Set(val *TrailShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTrailShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTrailShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrailShowResponse(val *TrailShowResponse) *NullableTrailShowResponse {
	return &NullableTrailShowResponse{value: val, isSet: true}
}

func (v NullableTrailShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrailShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


