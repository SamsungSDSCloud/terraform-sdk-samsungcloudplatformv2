/*
OSSCP Logging Audit Service

OSSCP Logging Audit Service

API version: 1.2.2.dev64
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loggingaudit

import (
	"encoding/json"
)

// checks if the TrailSetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrailSetRequest{}

// TrailSetRequest struct for TrailSetRequest
type TrailSetRequest struct {
	LogTypeTotalYn NullableString `json:"log_type_total_yn,omitempty"`
	LogVerificationYn NullableString `json:"log_verification_yn,omitempty"`
	RegionNames []interface{} `json:"region_names,omitempty"`
	RegionTotalYn NullableString `json:"region_total_yn,omitempty"`
	ResourceTypeTotalYn NullableString `json:"resource_type_total_yn,omitempty"`
	TargetLogTypes []interface{} `json:"target_log_types,omitempty"`
	TargetResourceTypes []interface{} `json:"target_resource_types,omitempty"`
	TargetUsers []interface{} `json:"target_users,omitempty"`
	TrailDescription NullableString `json:"trail_description,omitempty"`
	TrailSaveType NullableString `json:"trail_save_type,omitempty" validate:"regexp=^(CSV|JSON)$"`
	UserTotalYn NullableString `json:"user_total_yn,omitempty"`
}

// NewTrailSetRequest instantiates a new TrailSetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrailSetRequest() *TrailSetRequest {
	this := TrailSetRequest{}
	return &this
}

// NewTrailSetRequestWithDefaults instantiates a new TrailSetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrailSetRequestWithDefaults() *TrailSetRequest {
	this := TrailSetRequest{}
	return &this
}

// GetLogTypeTotalYn returns the LogTypeTotalYn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrailSetRequest) GetLogTypeTotalYn() string {
	if o == nil || IsNil(o.LogTypeTotalYn.Get()) {
		var ret string
		return ret
	}
	return *o.LogTypeTotalYn.Get()
}

// GetLogTypeTotalYnOk returns a tuple with the LogTypeTotalYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrailSetRequest) GetLogTypeTotalYnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogTypeTotalYn.Get(), o.LogTypeTotalYn.IsSet()
}

// HasLogTypeTotalYn returns a boolean if a field has been set.
func (o *TrailSetRequest) HasLogTypeTotalYn() bool {
	if o != nil && o.LogTypeTotalYn.IsSet() {
		return true
	}

	return false
}

// SetLogTypeTotalYn gets a reference to the given NullableString and assigns it to the LogTypeTotalYn field.
func (o *TrailSetRequest) SetLogTypeTotalYn(v string) {
	o.LogTypeTotalYn.Set(&v)
}
// SetLogTypeTotalYnNil sets the value for LogTypeTotalYn to be an explicit nil
func (o *TrailSetRequest) SetLogTypeTotalYnNil() {
	o.LogTypeTotalYn.Set(nil)
}

// UnsetLogTypeTotalYn ensures that no value is present for LogTypeTotalYn, not even an explicit nil
func (o *TrailSetRequest) UnsetLogTypeTotalYn() {
	o.LogTypeTotalYn.Unset()
}

// GetLogVerificationYn returns the LogVerificationYn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrailSetRequest) GetLogVerificationYn() string {
	if o == nil || IsNil(o.LogVerificationYn.Get()) {
		var ret string
		return ret
	}
	return *o.LogVerificationYn.Get()
}

// GetLogVerificationYnOk returns a tuple with the LogVerificationYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrailSetRequest) GetLogVerificationYnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogVerificationYn.Get(), o.LogVerificationYn.IsSet()
}

// HasLogVerificationYn returns a boolean if a field has been set.
func (o *TrailSetRequest) HasLogVerificationYn() bool {
	if o != nil && o.LogVerificationYn.IsSet() {
		return true
	}

	return false
}

// SetLogVerificationYn gets a reference to the given NullableString and assigns it to the LogVerificationYn field.
func (o *TrailSetRequest) SetLogVerificationYn(v string) {
	o.LogVerificationYn.Set(&v)
}
// SetLogVerificationYnNil sets the value for LogVerificationYn to be an explicit nil
func (o *TrailSetRequest) SetLogVerificationYnNil() {
	o.LogVerificationYn.Set(nil)
}

// UnsetLogVerificationYn ensures that no value is present for LogVerificationYn, not even an explicit nil
func (o *TrailSetRequest) UnsetLogVerificationYn() {
	o.LogVerificationYn.Unset()
}

// GetRegionNames returns the RegionNames field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrailSetRequest) GetRegionNames() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}
	return o.RegionNames
}

// GetRegionNamesOk returns a tuple with the RegionNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrailSetRequest) GetRegionNamesOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.RegionNames) {
		return nil, false
	}
	return o.RegionNames, true
}

// HasRegionNames returns a boolean if a field has been set.
func (o *TrailSetRequest) HasRegionNames() bool {
	if o != nil && !IsNil(o.RegionNames) {
		return true
	}

	return false
}

// SetRegionNames gets a reference to the given []interface{} and assigns it to the RegionNames field.
func (o *TrailSetRequest) SetRegionNames(v []interface{}) {
	o.RegionNames = v
}

// GetRegionTotalYn returns the RegionTotalYn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrailSetRequest) GetRegionTotalYn() string {
	if o == nil || IsNil(o.RegionTotalYn.Get()) {
		var ret string
		return ret
	}
	return *o.RegionTotalYn.Get()
}

// GetRegionTotalYnOk returns a tuple with the RegionTotalYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrailSetRequest) GetRegionTotalYnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RegionTotalYn.Get(), o.RegionTotalYn.IsSet()
}

// HasRegionTotalYn returns a boolean if a field has been set.
func (o *TrailSetRequest) HasRegionTotalYn() bool {
	if o != nil && o.RegionTotalYn.IsSet() {
		return true
	}

	return false
}

// SetRegionTotalYn gets a reference to the given NullableString and assigns it to the RegionTotalYn field.
func (o *TrailSetRequest) SetRegionTotalYn(v string) {
	o.RegionTotalYn.Set(&v)
}
// SetRegionTotalYnNil sets the value for RegionTotalYn to be an explicit nil
func (o *TrailSetRequest) SetRegionTotalYnNil() {
	o.RegionTotalYn.Set(nil)
}

// UnsetRegionTotalYn ensures that no value is present for RegionTotalYn, not even an explicit nil
func (o *TrailSetRequest) UnsetRegionTotalYn() {
	o.RegionTotalYn.Unset()
}

// GetResourceTypeTotalYn returns the ResourceTypeTotalYn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrailSetRequest) GetResourceTypeTotalYn() string {
	if o == nil || IsNil(o.ResourceTypeTotalYn.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceTypeTotalYn.Get()
}

// GetResourceTypeTotalYnOk returns a tuple with the ResourceTypeTotalYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrailSetRequest) GetResourceTypeTotalYnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceTypeTotalYn.Get(), o.ResourceTypeTotalYn.IsSet()
}

// HasResourceTypeTotalYn returns a boolean if a field has been set.
func (o *TrailSetRequest) HasResourceTypeTotalYn() bool {
	if o != nil && o.ResourceTypeTotalYn.IsSet() {
		return true
	}

	return false
}

// SetResourceTypeTotalYn gets a reference to the given NullableString and assigns it to the ResourceTypeTotalYn field.
func (o *TrailSetRequest) SetResourceTypeTotalYn(v string) {
	o.ResourceTypeTotalYn.Set(&v)
}
// SetResourceTypeTotalYnNil sets the value for ResourceTypeTotalYn to be an explicit nil
func (o *TrailSetRequest) SetResourceTypeTotalYnNil() {
	o.ResourceTypeTotalYn.Set(nil)
}

// UnsetResourceTypeTotalYn ensures that no value is present for ResourceTypeTotalYn, not even an explicit nil
func (o *TrailSetRequest) UnsetResourceTypeTotalYn() {
	o.ResourceTypeTotalYn.Unset()
}

// GetTargetLogTypes returns the TargetLogTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrailSetRequest) GetTargetLogTypes() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}
	return o.TargetLogTypes
}

// GetTargetLogTypesOk returns a tuple with the TargetLogTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrailSetRequest) GetTargetLogTypesOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.TargetLogTypes) {
		return nil, false
	}
	return o.TargetLogTypes, true
}

// HasTargetLogTypes returns a boolean if a field has been set.
func (o *TrailSetRequest) HasTargetLogTypes() bool {
	if o != nil && !IsNil(o.TargetLogTypes) {
		return true
	}

	return false
}

// SetTargetLogTypes gets a reference to the given []interface{} and assigns it to the TargetLogTypes field.
func (o *TrailSetRequest) SetTargetLogTypes(v []interface{}) {
	o.TargetLogTypes = v
}

// GetTargetResourceTypes returns the TargetResourceTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrailSetRequest) GetTargetResourceTypes() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}
	return o.TargetResourceTypes
}

// GetTargetResourceTypesOk returns a tuple with the TargetResourceTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrailSetRequest) GetTargetResourceTypesOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.TargetResourceTypes) {
		return nil, false
	}
	return o.TargetResourceTypes, true
}

// HasTargetResourceTypes returns a boolean if a field has been set.
func (o *TrailSetRequest) HasTargetResourceTypes() bool {
	if o != nil && !IsNil(o.TargetResourceTypes) {
		return true
	}

	return false
}

// SetTargetResourceTypes gets a reference to the given []interface{} and assigns it to the TargetResourceTypes field.
func (o *TrailSetRequest) SetTargetResourceTypes(v []interface{}) {
	o.TargetResourceTypes = v
}

// GetTargetUsers returns the TargetUsers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrailSetRequest) GetTargetUsers() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}
	return o.TargetUsers
}

// GetTargetUsersOk returns a tuple with the TargetUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrailSetRequest) GetTargetUsersOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.TargetUsers) {
		return nil, false
	}
	return o.TargetUsers, true
}

// HasTargetUsers returns a boolean if a field has been set.
func (o *TrailSetRequest) HasTargetUsers() bool {
	if o != nil && !IsNil(o.TargetUsers) {
		return true
	}

	return false
}

// SetTargetUsers gets a reference to the given []interface{} and assigns it to the TargetUsers field.
func (o *TrailSetRequest) SetTargetUsers(v []interface{}) {
	o.TargetUsers = v
}

// GetTrailDescription returns the TrailDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrailSetRequest) GetTrailDescription() string {
	if o == nil || IsNil(o.TrailDescription.Get()) {
		var ret string
		return ret
	}
	return *o.TrailDescription.Get()
}

// GetTrailDescriptionOk returns a tuple with the TrailDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrailSetRequest) GetTrailDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrailDescription.Get(), o.TrailDescription.IsSet()
}

// HasTrailDescription returns a boolean if a field has been set.
func (o *TrailSetRequest) HasTrailDescription() bool {
	if o != nil && o.TrailDescription.IsSet() {
		return true
	}

	return false
}

// SetTrailDescription gets a reference to the given NullableString and assigns it to the TrailDescription field.
func (o *TrailSetRequest) SetTrailDescription(v string) {
	o.TrailDescription.Set(&v)
}
// SetTrailDescriptionNil sets the value for TrailDescription to be an explicit nil
func (o *TrailSetRequest) SetTrailDescriptionNil() {
	o.TrailDescription.Set(nil)
}

// UnsetTrailDescription ensures that no value is present for TrailDescription, not even an explicit nil
func (o *TrailSetRequest) UnsetTrailDescription() {
	o.TrailDescription.Unset()
}

// GetTrailSaveType returns the TrailSaveType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrailSetRequest) GetTrailSaveType() string {
	if o == nil || IsNil(o.TrailSaveType.Get()) {
		var ret string
		return ret
	}
	return *o.TrailSaveType.Get()
}

// GetTrailSaveTypeOk returns a tuple with the TrailSaveType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrailSetRequest) GetTrailSaveTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrailSaveType.Get(), o.TrailSaveType.IsSet()
}

// HasTrailSaveType returns a boolean if a field has been set.
func (o *TrailSetRequest) HasTrailSaveType() bool {
	if o != nil && o.TrailSaveType.IsSet() {
		return true
	}

	return false
}

// SetTrailSaveType gets a reference to the given NullableString and assigns it to the TrailSaveType field.
func (o *TrailSetRequest) SetTrailSaveType(v string) {
	o.TrailSaveType.Set(&v)
}
// SetTrailSaveTypeNil sets the value for TrailSaveType to be an explicit nil
func (o *TrailSetRequest) SetTrailSaveTypeNil() {
	o.TrailSaveType.Set(nil)
}

// UnsetTrailSaveType ensures that no value is present for TrailSaveType, not even an explicit nil
func (o *TrailSetRequest) UnsetTrailSaveType() {
	o.TrailSaveType.Unset()
}

// GetUserTotalYn returns the UserTotalYn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrailSetRequest) GetUserTotalYn() string {
	if o == nil || IsNil(o.UserTotalYn.Get()) {
		var ret string
		return ret
	}
	return *o.UserTotalYn.Get()
}

// GetUserTotalYnOk returns a tuple with the UserTotalYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrailSetRequest) GetUserTotalYnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserTotalYn.Get(), o.UserTotalYn.IsSet()
}

// HasUserTotalYn returns a boolean if a field has been set.
func (o *TrailSetRequest) HasUserTotalYn() bool {
	if o != nil && o.UserTotalYn.IsSet() {
		return true
	}

	return false
}

// SetUserTotalYn gets a reference to the given NullableString and assigns it to the UserTotalYn field.
func (o *TrailSetRequest) SetUserTotalYn(v string) {
	o.UserTotalYn.Set(&v)
}
// SetUserTotalYnNil sets the value for UserTotalYn to be an explicit nil
func (o *TrailSetRequest) SetUserTotalYnNil() {
	o.UserTotalYn.Set(nil)
}

// UnsetUserTotalYn ensures that no value is present for UserTotalYn, not even an explicit nil
func (o *TrailSetRequest) UnsetUserTotalYn() {
	o.UserTotalYn.Unset()
}

func (o TrailSetRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrailSetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.LogTypeTotalYn.IsSet() {
		toSerialize["log_type_total_yn"] = o.LogTypeTotalYn.Get()
	}
	if o.LogVerificationYn.IsSet() {
		toSerialize["log_verification_yn"] = o.LogVerificationYn.Get()
	}
	if o.RegionNames != nil {
		toSerialize["region_names"] = o.RegionNames
	}
	if o.RegionTotalYn.IsSet() {
		toSerialize["region_total_yn"] = o.RegionTotalYn.Get()
	}
	if o.ResourceTypeTotalYn.IsSet() {
		toSerialize["resource_type_total_yn"] = o.ResourceTypeTotalYn.Get()
	}
	if o.TargetLogTypes != nil {
		toSerialize["target_log_types"] = o.TargetLogTypes
	}
	if o.TargetResourceTypes != nil {
		toSerialize["target_resource_types"] = o.TargetResourceTypes
	}
	if o.TargetUsers != nil {
		toSerialize["target_users"] = o.TargetUsers
	}
	if o.TrailDescription.IsSet() {
		toSerialize["trail_description"] = o.TrailDescription.Get()
	}
	if o.TrailSaveType.IsSet() {
		toSerialize["trail_save_type"] = o.TrailSaveType.Get()
	}
	if o.UserTotalYn.IsSet() {
		toSerialize["user_total_yn"] = o.UserTotalYn.Get()
	}
	return toSerialize, nil
}

type NullableTrailSetRequest struct {
	value *TrailSetRequest
	isSet bool
}

func (v NullableTrailSetRequest) Get() *TrailSetRequest {
	return v.value
}

func (v *NullableTrailSetRequest) Set(val *TrailSetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTrailSetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTrailSetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrailSetRequest(val *TrailSetRequest) *NullableTrailSetRequest {
	return &NullableTrailSetRequest{value: val, isSet: true}
}

func (v NullableTrailSetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrailSetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


