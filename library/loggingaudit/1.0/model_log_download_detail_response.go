/*
OSSCP Logging Audit Service

OSSCP Logging Audit Service

API version: 1.2.2.dev64
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loggingaudit

import (
	"encoding/json"
)

// checks if the LogDownloadDetailResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogDownloadDetailResponse{}

// LogDownloadDetailResponse struct for LogDownloadDetailResponse
type LogDownloadDetailResponse struct {
	EventTopic NullableString `json:"EventTopic,omitempty"`
	RegionName NullableString `json:"RegionName,omitempty"`
	ResourceId NullableString `json:"ResourceId,omitempty"`
	ResourceName NullableString `json:"ResourceName,omitempty"`
	ResourceType NullableString `json:"ResourceType,omitempty"`
	WorkInfo NullableString `json:"WorkInfo,omitempty"`
	WorkResult NullableString `json:"WorkResult,omitempty"`
	WorkTime NullableString `json:"WorkTime,omitempty"`
	WorkerEmail NullableString `json:"WorkerEmail,omitempty"`
	WorkerID NullableString `json:"WorkerID,omitempty"`
	WorkerName NullableString `json:"WorkerName,omitempty"`
}

// NewLogDownloadDetailResponse instantiates a new LogDownloadDetailResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogDownloadDetailResponse() *LogDownloadDetailResponse {
	this := LogDownloadDetailResponse{}
	return &this
}

// NewLogDownloadDetailResponseWithDefaults instantiates a new LogDownloadDetailResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogDownloadDetailResponseWithDefaults() *LogDownloadDetailResponse {
	this := LogDownloadDetailResponse{}
	return &this
}

// GetEventTopic returns the EventTopic field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LogDownloadDetailResponse) GetEventTopic() string {
	if o == nil || IsNil(o.EventTopic.Get()) {
		var ret string
		return ret
	}
	return *o.EventTopic.Get()
}

// GetEventTopicOk returns a tuple with the EventTopic field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogDownloadDetailResponse) GetEventTopicOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventTopic.Get(), o.EventTopic.IsSet()
}

// HasEventTopic returns a boolean if a field has been set.
func (o *LogDownloadDetailResponse) HasEventTopic() bool {
	if o != nil && o.EventTopic.IsSet() {
		return true
	}

	return false
}

// SetEventTopic gets a reference to the given NullableString and assigns it to the EventTopic field.
func (o *LogDownloadDetailResponse) SetEventTopic(v string) {
	o.EventTopic.Set(&v)
}
// SetEventTopicNil sets the value for EventTopic to be an explicit nil
func (o *LogDownloadDetailResponse) SetEventTopicNil() {
	o.EventTopic.Set(nil)
}

// UnsetEventTopic ensures that no value is present for EventTopic, not even an explicit nil
func (o *LogDownloadDetailResponse) UnsetEventTopic() {
	o.EventTopic.Unset()
}

// GetRegionName returns the RegionName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LogDownloadDetailResponse) GetRegionName() string {
	if o == nil || IsNil(o.RegionName.Get()) {
		var ret string
		return ret
	}
	return *o.RegionName.Get()
}

// GetRegionNameOk returns a tuple with the RegionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogDownloadDetailResponse) GetRegionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RegionName.Get(), o.RegionName.IsSet()
}

// HasRegionName returns a boolean if a field has been set.
func (o *LogDownloadDetailResponse) HasRegionName() bool {
	if o != nil && o.RegionName.IsSet() {
		return true
	}

	return false
}

// SetRegionName gets a reference to the given NullableString and assigns it to the RegionName field.
func (o *LogDownloadDetailResponse) SetRegionName(v string) {
	o.RegionName.Set(&v)
}
// SetRegionNameNil sets the value for RegionName to be an explicit nil
func (o *LogDownloadDetailResponse) SetRegionNameNil() {
	o.RegionName.Set(nil)
}

// UnsetRegionName ensures that no value is present for RegionName, not even an explicit nil
func (o *LogDownloadDetailResponse) UnsetRegionName() {
	o.RegionName.Unset()
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LogDownloadDetailResponse) GetResourceId() string {
	if o == nil || IsNil(o.ResourceId.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceId.Get()
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogDownloadDetailResponse) GetResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceId.Get(), o.ResourceId.IsSet()
}

// HasResourceId returns a boolean if a field has been set.
func (o *LogDownloadDetailResponse) HasResourceId() bool {
	if o != nil && o.ResourceId.IsSet() {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given NullableString and assigns it to the ResourceId field.
func (o *LogDownloadDetailResponse) SetResourceId(v string) {
	o.ResourceId.Set(&v)
}
// SetResourceIdNil sets the value for ResourceId to be an explicit nil
func (o *LogDownloadDetailResponse) SetResourceIdNil() {
	o.ResourceId.Set(nil)
}

// UnsetResourceId ensures that no value is present for ResourceId, not even an explicit nil
func (o *LogDownloadDetailResponse) UnsetResourceId() {
	o.ResourceId.Unset()
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LogDownloadDetailResponse) GetResourceName() string {
	if o == nil || IsNil(o.ResourceName.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceName.Get()
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogDownloadDetailResponse) GetResourceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceName.Get(), o.ResourceName.IsSet()
}

// HasResourceName returns a boolean if a field has been set.
func (o *LogDownloadDetailResponse) HasResourceName() bool {
	if o != nil && o.ResourceName.IsSet() {
		return true
	}

	return false
}

// SetResourceName gets a reference to the given NullableString and assigns it to the ResourceName field.
func (o *LogDownloadDetailResponse) SetResourceName(v string) {
	o.ResourceName.Set(&v)
}
// SetResourceNameNil sets the value for ResourceName to be an explicit nil
func (o *LogDownloadDetailResponse) SetResourceNameNil() {
	o.ResourceName.Set(nil)
}

// UnsetResourceName ensures that no value is present for ResourceName, not even an explicit nil
func (o *LogDownloadDetailResponse) UnsetResourceName() {
	o.ResourceName.Unset()
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LogDownloadDetailResponse) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceType.Get()
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogDownloadDetailResponse) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceType.Get(), o.ResourceType.IsSet()
}

// HasResourceType returns a boolean if a field has been set.
func (o *LogDownloadDetailResponse) HasResourceType() bool {
	if o != nil && o.ResourceType.IsSet() {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given NullableString and assigns it to the ResourceType field.
func (o *LogDownloadDetailResponse) SetResourceType(v string) {
	o.ResourceType.Set(&v)
}
// SetResourceTypeNil sets the value for ResourceType to be an explicit nil
func (o *LogDownloadDetailResponse) SetResourceTypeNil() {
	o.ResourceType.Set(nil)
}

// UnsetResourceType ensures that no value is present for ResourceType, not even an explicit nil
func (o *LogDownloadDetailResponse) UnsetResourceType() {
	o.ResourceType.Unset()
}

// GetWorkInfo returns the WorkInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LogDownloadDetailResponse) GetWorkInfo() string {
	if o == nil || IsNil(o.WorkInfo.Get()) {
		var ret string
		return ret
	}
	return *o.WorkInfo.Get()
}

// GetWorkInfoOk returns a tuple with the WorkInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogDownloadDetailResponse) GetWorkInfoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkInfo.Get(), o.WorkInfo.IsSet()
}

// HasWorkInfo returns a boolean if a field has been set.
func (o *LogDownloadDetailResponse) HasWorkInfo() bool {
	if o != nil && o.WorkInfo.IsSet() {
		return true
	}

	return false
}

// SetWorkInfo gets a reference to the given NullableString and assigns it to the WorkInfo field.
func (o *LogDownloadDetailResponse) SetWorkInfo(v string) {
	o.WorkInfo.Set(&v)
}
// SetWorkInfoNil sets the value for WorkInfo to be an explicit nil
func (o *LogDownloadDetailResponse) SetWorkInfoNil() {
	o.WorkInfo.Set(nil)
}

// UnsetWorkInfo ensures that no value is present for WorkInfo, not even an explicit nil
func (o *LogDownloadDetailResponse) UnsetWorkInfo() {
	o.WorkInfo.Unset()
}

// GetWorkResult returns the WorkResult field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LogDownloadDetailResponse) GetWorkResult() string {
	if o == nil || IsNil(o.WorkResult.Get()) {
		var ret string
		return ret
	}
	return *o.WorkResult.Get()
}

// GetWorkResultOk returns a tuple with the WorkResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogDownloadDetailResponse) GetWorkResultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkResult.Get(), o.WorkResult.IsSet()
}

// HasWorkResult returns a boolean if a field has been set.
func (o *LogDownloadDetailResponse) HasWorkResult() bool {
	if o != nil && o.WorkResult.IsSet() {
		return true
	}

	return false
}

// SetWorkResult gets a reference to the given NullableString and assigns it to the WorkResult field.
func (o *LogDownloadDetailResponse) SetWorkResult(v string) {
	o.WorkResult.Set(&v)
}
// SetWorkResultNil sets the value for WorkResult to be an explicit nil
func (o *LogDownloadDetailResponse) SetWorkResultNil() {
	o.WorkResult.Set(nil)
}

// UnsetWorkResult ensures that no value is present for WorkResult, not even an explicit nil
func (o *LogDownloadDetailResponse) UnsetWorkResult() {
	o.WorkResult.Unset()
}

// GetWorkTime returns the WorkTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LogDownloadDetailResponse) GetWorkTime() string {
	if o == nil || IsNil(o.WorkTime.Get()) {
		var ret string
		return ret
	}
	return *o.WorkTime.Get()
}

// GetWorkTimeOk returns a tuple with the WorkTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogDownloadDetailResponse) GetWorkTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkTime.Get(), o.WorkTime.IsSet()
}

// HasWorkTime returns a boolean if a field has been set.
func (o *LogDownloadDetailResponse) HasWorkTime() bool {
	if o != nil && o.WorkTime.IsSet() {
		return true
	}

	return false
}

// SetWorkTime gets a reference to the given NullableString and assigns it to the WorkTime field.
func (o *LogDownloadDetailResponse) SetWorkTime(v string) {
	o.WorkTime.Set(&v)
}
// SetWorkTimeNil sets the value for WorkTime to be an explicit nil
func (o *LogDownloadDetailResponse) SetWorkTimeNil() {
	o.WorkTime.Set(nil)
}

// UnsetWorkTime ensures that no value is present for WorkTime, not even an explicit nil
func (o *LogDownloadDetailResponse) UnsetWorkTime() {
	o.WorkTime.Unset()
}

// GetWorkerEmail returns the WorkerEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LogDownloadDetailResponse) GetWorkerEmail() string {
	if o == nil || IsNil(o.WorkerEmail.Get()) {
		var ret string
		return ret
	}
	return *o.WorkerEmail.Get()
}

// GetWorkerEmailOk returns a tuple with the WorkerEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogDownloadDetailResponse) GetWorkerEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkerEmail.Get(), o.WorkerEmail.IsSet()
}

// HasWorkerEmail returns a boolean if a field has been set.
func (o *LogDownloadDetailResponse) HasWorkerEmail() bool {
	if o != nil && o.WorkerEmail.IsSet() {
		return true
	}

	return false
}

// SetWorkerEmail gets a reference to the given NullableString and assigns it to the WorkerEmail field.
func (o *LogDownloadDetailResponse) SetWorkerEmail(v string) {
	o.WorkerEmail.Set(&v)
}
// SetWorkerEmailNil sets the value for WorkerEmail to be an explicit nil
func (o *LogDownloadDetailResponse) SetWorkerEmailNil() {
	o.WorkerEmail.Set(nil)
}

// UnsetWorkerEmail ensures that no value is present for WorkerEmail, not even an explicit nil
func (o *LogDownloadDetailResponse) UnsetWorkerEmail() {
	o.WorkerEmail.Unset()
}

// GetWorkerID returns the WorkerID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LogDownloadDetailResponse) GetWorkerID() string {
	if o == nil || IsNil(o.WorkerID.Get()) {
		var ret string
		return ret
	}
	return *o.WorkerID.Get()
}

// GetWorkerIDOk returns a tuple with the WorkerID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogDownloadDetailResponse) GetWorkerIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkerID.Get(), o.WorkerID.IsSet()
}

// HasWorkerID returns a boolean if a field has been set.
func (o *LogDownloadDetailResponse) HasWorkerID() bool {
	if o != nil && o.WorkerID.IsSet() {
		return true
	}

	return false
}

// SetWorkerID gets a reference to the given NullableString and assigns it to the WorkerID field.
func (o *LogDownloadDetailResponse) SetWorkerID(v string) {
	o.WorkerID.Set(&v)
}
// SetWorkerIDNil sets the value for WorkerID to be an explicit nil
func (o *LogDownloadDetailResponse) SetWorkerIDNil() {
	o.WorkerID.Set(nil)
}

// UnsetWorkerID ensures that no value is present for WorkerID, not even an explicit nil
func (o *LogDownloadDetailResponse) UnsetWorkerID() {
	o.WorkerID.Unset()
}

// GetWorkerName returns the WorkerName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LogDownloadDetailResponse) GetWorkerName() string {
	if o == nil || IsNil(o.WorkerName.Get()) {
		var ret string
		return ret
	}
	return *o.WorkerName.Get()
}

// GetWorkerNameOk returns a tuple with the WorkerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogDownloadDetailResponse) GetWorkerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkerName.Get(), o.WorkerName.IsSet()
}

// HasWorkerName returns a boolean if a field has been set.
func (o *LogDownloadDetailResponse) HasWorkerName() bool {
	if o != nil && o.WorkerName.IsSet() {
		return true
	}

	return false
}

// SetWorkerName gets a reference to the given NullableString and assigns it to the WorkerName field.
func (o *LogDownloadDetailResponse) SetWorkerName(v string) {
	o.WorkerName.Set(&v)
}
// SetWorkerNameNil sets the value for WorkerName to be an explicit nil
func (o *LogDownloadDetailResponse) SetWorkerNameNil() {
	o.WorkerName.Set(nil)
}

// UnsetWorkerName ensures that no value is present for WorkerName, not even an explicit nil
func (o *LogDownloadDetailResponse) UnsetWorkerName() {
	o.WorkerName.Unset()
}

func (o LogDownloadDetailResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogDownloadDetailResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.EventTopic.IsSet() {
		toSerialize["EventTopic"] = o.EventTopic.Get()
	}
	if o.RegionName.IsSet() {
		toSerialize["RegionName"] = o.RegionName.Get()
	}
	if o.ResourceId.IsSet() {
		toSerialize["ResourceId"] = o.ResourceId.Get()
	}
	if o.ResourceName.IsSet() {
		toSerialize["ResourceName"] = o.ResourceName.Get()
	}
	if o.ResourceType.IsSet() {
		toSerialize["ResourceType"] = o.ResourceType.Get()
	}
	if o.WorkInfo.IsSet() {
		toSerialize["WorkInfo"] = o.WorkInfo.Get()
	}
	if o.WorkResult.IsSet() {
		toSerialize["WorkResult"] = o.WorkResult.Get()
	}
	if o.WorkTime.IsSet() {
		toSerialize["WorkTime"] = o.WorkTime.Get()
	}
	if o.WorkerEmail.IsSet() {
		toSerialize["WorkerEmail"] = o.WorkerEmail.Get()
	}
	if o.WorkerID.IsSet() {
		toSerialize["WorkerID"] = o.WorkerID.Get()
	}
	if o.WorkerName.IsSet() {
		toSerialize["WorkerName"] = o.WorkerName.Get()
	}
	return toSerialize, nil
}

type NullableLogDownloadDetailResponse struct {
	value *LogDownloadDetailResponse
	isSet bool
}

func (v NullableLogDownloadDetailResponse) Get() *LogDownloadDetailResponse {
	return v.value
}

func (v *NullableLogDownloadDetailResponse) Set(val *LogDownloadDetailResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLogDownloadDetailResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLogDownloadDetailResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogDownloadDetailResponse(val *LogDownloadDetailResponse) *NullableLogDownloadDetailResponse {
	return &NullableLogDownloadDetailResponse{value: val, isSet: true}
}

func (v NullableLogDownloadDetailResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogDownloadDetailResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


