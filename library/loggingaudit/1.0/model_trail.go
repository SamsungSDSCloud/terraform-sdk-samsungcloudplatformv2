/*
OSSCP Logging Audit Service

OSSCP Logging Audit Service

API version: 1.2.2.dev64
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loggingaudit

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the Trail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Trail{}

// Trail struct for Trail
type Trail struct {
	AccountId NullableString `json:"account_id,omitempty"`
	AccountName NullableString `json:"account_name,omitempty"`
	// Bucket name
	BucketName string `json:"bucket_name"`
	// Bucket region
	BucketRegion string `json:"bucket_region"`
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy string `json:"created_by"`
	CreatedUserId NullableString `json:"created_user_id,omitempty"`
	DelYn NullableString `json:"del_yn,omitempty"`
	// ID
	Id string `json:"id"`
	LogTypeTotalYn NullableString `json:"log_type_total_yn,omitempty"`
	LogVerificationYn NullableString `json:"log_verification_yn,omitempty"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy string `json:"modified_by"`
	// Region name list
	RegionNames []interface{} `json:"region_names,omitempty"`
	RegionTotalYn NullableString `json:"region_total_yn,omitempty"`
	ResourceTypeTotalYn NullableString `json:"resource_type_total_yn,omitempty"`
	State NullableString `json:"state,omitempty"`
	// Target log type list
	TargetLogTypes []interface{} `json:"target_log_types,omitempty"`
	// Target resource type list
	TargetResourceTypes []interface{} `json:"target_resource_types,omitempty"`
	// Target user list
	TargetUsers []interface{} `json:"target_users,omitempty"`
	TrailBatchEndAt NullableTime `json:"trail_batch_end_at,omitempty"`
	TrailBatchFirstStartAt NullableTime `json:"trail_batch_first_start_at,omitempty"`
	TrailBatchLastState NullableString `json:"trail_batch_last_state,omitempty"`
	TrailBatchStartAt NullableTime `json:"trail_batch_start_at,omitempty"`
	TrailBatchSuccessAt NullableTime `json:"trail_batch_success_at,omitempty"`
	TrailDescription NullableString `json:"trail_description,omitempty"`
	// Trail name
	TrailName string `json:"trail_name"`
	// Trail save type
	TrailSaveType string `json:"trail_save_type"`
	UserTotalYn NullableString `json:"user_total_yn,omitempty"`
}

type _Trail Trail

// NewTrail instantiates a new Trail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrail(bucketName string, bucketRegion string, createdAt time.Time, createdBy string, id string, modifiedAt time.Time, modifiedBy string, trailName string, trailSaveType string) *Trail {
	this := Trail{}
	this.BucketName = bucketName
	this.BucketRegion = bucketRegion
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.Id = id
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.TrailName = trailName
	this.TrailSaveType = trailSaveType
	return &this
}

// NewTrailWithDefaults instantiates a new Trail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrailWithDefaults() *Trail {
	this := Trail{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Trail) GetAccountId() string {
	if o == nil || IsNil(o.AccountId.Get()) {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Trail) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field has been set.
func (o *Trail) HasAccountId() bool {
	if o != nil && o.AccountId.IsSet() {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *Trail) SetAccountId(v string) {
	o.AccountId.Set(&v)
}
// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *Trail) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *Trail) UnsetAccountId() {
	o.AccountId.Unset()
}

// GetAccountName returns the AccountName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Trail) GetAccountName() string {
	if o == nil || IsNil(o.AccountName.Get()) {
		var ret string
		return ret
	}
	return *o.AccountName.Get()
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Trail) GetAccountNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountName.Get(), o.AccountName.IsSet()
}

// HasAccountName returns a boolean if a field has been set.
func (o *Trail) HasAccountName() bool {
	if o != nil && o.AccountName.IsSet() {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given NullableString and assigns it to the AccountName field.
func (o *Trail) SetAccountName(v string) {
	o.AccountName.Set(&v)
}
// SetAccountNameNil sets the value for AccountName to be an explicit nil
func (o *Trail) SetAccountNameNil() {
	o.AccountName.Set(nil)
}

// UnsetAccountName ensures that no value is present for AccountName, not even an explicit nil
func (o *Trail) UnsetAccountName() {
	o.AccountName.Unset()
}

// GetBucketName returns the BucketName field value
func (o *Trail) GetBucketName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BucketName
}

// GetBucketNameOk returns a tuple with the BucketName field value
// and a boolean to check if the value has been set.
func (o *Trail) GetBucketNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BucketName, true
}

// SetBucketName sets field value
func (o *Trail) SetBucketName(v string) {
	o.BucketName = v
}

// GetBucketRegion returns the BucketRegion field value
func (o *Trail) GetBucketRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BucketRegion
}

// GetBucketRegionOk returns a tuple with the BucketRegion field value
// and a boolean to check if the value has been set.
func (o *Trail) GetBucketRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BucketRegion, true
}

// SetBucketRegion sets field value
func (o *Trail) SetBucketRegion(v string) {
	o.BucketRegion = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Trail) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Trail) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Trail) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *Trail) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *Trail) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *Trail) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetCreatedUserId returns the CreatedUserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Trail) GetCreatedUserId() string {
	if o == nil || IsNil(o.CreatedUserId.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedUserId.Get()
}

// GetCreatedUserIdOk returns a tuple with the CreatedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Trail) GetCreatedUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedUserId.Get(), o.CreatedUserId.IsSet()
}

// HasCreatedUserId returns a boolean if a field has been set.
func (o *Trail) HasCreatedUserId() bool {
	if o != nil && o.CreatedUserId.IsSet() {
		return true
	}

	return false
}

// SetCreatedUserId gets a reference to the given NullableString and assigns it to the CreatedUserId field.
func (o *Trail) SetCreatedUserId(v string) {
	o.CreatedUserId.Set(&v)
}
// SetCreatedUserIdNil sets the value for CreatedUserId to be an explicit nil
func (o *Trail) SetCreatedUserIdNil() {
	o.CreatedUserId.Set(nil)
}

// UnsetCreatedUserId ensures that no value is present for CreatedUserId, not even an explicit nil
func (o *Trail) UnsetCreatedUserId() {
	o.CreatedUserId.Unset()
}

// GetDelYn returns the DelYn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Trail) GetDelYn() string {
	if o == nil || IsNil(o.DelYn.Get()) {
		var ret string
		return ret
	}
	return *o.DelYn.Get()
}

// GetDelYnOk returns a tuple with the DelYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Trail) GetDelYnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DelYn.Get(), o.DelYn.IsSet()
}

// HasDelYn returns a boolean if a field has been set.
func (o *Trail) HasDelYn() bool {
	if o != nil && o.DelYn.IsSet() {
		return true
	}

	return false
}

// SetDelYn gets a reference to the given NullableString and assigns it to the DelYn field.
func (o *Trail) SetDelYn(v string) {
	o.DelYn.Set(&v)
}
// SetDelYnNil sets the value for DelYn to be an explicit nil
func (o *Trail) SetDelYnNil() {
	o.DelYn.Set(nil)
}

// UnsetDelYn ensures that no value is present for DelYn, not even an explicit nil
func (o *Trail) UnsetDelYn() {
	o.DelYn.Unset()
}

// GetId returns the Id field value
func (o *Trail) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Trail) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Trail) SetId(v string) {
	o.Id = v
}

// GetLogTypeTotalYn returns the LogTypeTotalYn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Trail) GetLogTypeTotalYn() string {
	if o == nil || IsNil(o.LogTypeTotalYn.Get()) {
		var ret string
		return ret
	}
	return *o.LogTypeTotalYn.Get()
}

// GetLogTypeTotalYnOk returns a tuple with the LogTypeTotalYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Trail) GetLogTypeTotalYnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogTypeTotalYn.Get(), o.LogTypeTotalYn.IsSet()
}

// HasLogTypeTotalYn returns a boolean if a field has been set.
func (o *Trail) HasLogTypeTotalYn() bool {
	if o != nil && o.LogTypeTotalYn.IsSet() {
		return true
	}

	return false
}

// SetLogTypeTotalYn gets a reference to the given NullableString and assigns it to the LogTypeTotalYn field.
func (o *Trail) SetLogTypeTotalYn(v string) {
	o.LogTypeTotalYn.Set(&v)
}
// SetLogTypeTotalYnNil sets the value for LogTypeTotalYn to be an explicit nil
func (o *Trail) SetLogTypeTotalYnNil() {
	o.LogTypeTotalYn.Set(nil)
}

// UnsetLogTypeTotalYn ensures that no value is present for LogTypeTotalYn, not even an explicit nil
func (o *Trail) UnsetLogTypeTotalYn() {
	o.LogTypeTotalYn.Unset()
}

// GetLogVerificationYn returns the LogVerificationYn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Trail) GetLogVerificationYn() string {
	if o == nil || IsNil(o.LogVerificationYn.Get()) {
		var ret string
		return ret
	}
	return *o.LogVerificationYn.Get()
}

// GetLogVerificationYnOk returns a tuple with the LogVerificationYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Trail) GetLogVerificationYnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogVerificationYn.Get(), o.LogVerificationYn.IsSet()
}

// HasLogVerificationYn returns a boolean if a field has been set.
func (o *Trail) HasLogVerificationYn() bool {
	if o != nil && o.LogVerificationYn.IsSet() {
		return true
	}

	return false
}

// SetLogVerificationYn gets a reference to the given NullableString and assigns it to the LogVerificationYn field.
func (o *Trail) SetLogVerificationYn(v string) {
	o.LogVerificationYn.Set(&v)
}
// SetLogVerificationYnNil sets the value for LogVerificationYn to be an explicit nil
func (o *Trail) SetLogVerificationYnNil() {
	o.LogVerificationYn.Set(nil)
}

// UnsetLogVerificationYn ensures that no value is present for LogVerificationYn, not even an explicit nil
func (o *Trail) UnsetLogVerificationYn() {
	o.LogVerificationYn.Unset()
}

// GetModifiedAt returns the ModifiedAt field value
func (o *Trail) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *Trail) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *Trail) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *Trail) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *Trail) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *Trail) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetRegionNames returns the RegionNames field value if set, zero value otherwise.
func (o *Trail) GetRegionNames() []interface{} {
	if o == nil || IsNil(o.RegionNames) {
		var ret []interface{}
		return ret
	}
	return o.RegionNames
}

// GetRegionNamesOk returns a tuple with the RegionNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trail) GetRegionNamesOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.RegionNames) {
		return nil, false
	}
	return o.RegionNames, true
}

// HasRegionNames returns a boolean if a field has been set.
func (o *Trail) HasRegionNames() bool {
	if o != nil && !IsNil(o.RegionNames) {
		return true
	}

	return false
}

// SetRegionNames gets a reference to the given []interface{} and assigns it to the RegionNames field.
func (o *Trail) SetRegionNames(v []interface{}) {
	o.RegionNames = v
}

// GetRegionTotalYn returns the RegionTotalYn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Trail) GetRegionTotalYn() string {
	if o == nil || IsNil(o.RegionTotalYn.Get()) {
		var ret string
		return ret
	}
	return *o.RegionTotalYn.Get()
}

// GetRegionTotalYnOk returns a tuple with the RegionTotalYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Trail) GetRegionTotalYnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RegionTotalYn.Get(), o.RegionTotalYn.IsSet()
}

// HasRegionTotalYn returns a boolean if a field has been set.
func (o *Trail) HasRegionTotalYn() bool {
	if o != nil && o.RegionTotalYn.IsSet() {
		return true
	}

	return false
}

// SetRegionTotalYn gets a reference to the given NullableString and assigns it to the RegionTotalYn field.
func (o *Trail) SetRegionTotalYn(v string) {
	o.RegionTotalYn.Set(&v)
}
// SetRegionTotalYnNil sets the value for RegionTotalYn to be an explicit nil
func (o *Trail) SetRegionTotalYnNil() {
	o.RegionTotalYn.Set(nil)
}

// UnsetRegionTotalYn ensures that no value is present for RegionTotalYn, not even an explicit nil
func (o *Trail) UnsetRegionTotalYn() {
	o.RegionTotalYn.Unset()
}

// GetResourceTypeTotalYn returns the ResourceTypeTotalYn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Trail) GetResourceTypeTotalYn() string {
	if o == nil || IsNil(o.ResourceTypeTotalYn.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceTypeTotalYn.Get()
}

// GetResourceTypeTotalYnOk returns a tuple with the ResourceTypeTotalYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Trail) GetResourceTypeTotalYnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceTypeTotalYn.Get(), o.ResourceTypeTotalYn.IsSet()
}

// HasResourceTypeTotalYn returns a boolean if a field has been set.
func (o *Trail) HasResourceTypeTotalYn() bool {
	if o != nil && o.ResourceTypeTotalYn.IsSet() {
		return true
	}

	return false
}

// SetResourceTypeTotalYn gets a reference to the given NullableString and assigns it to the ResourceTypeTotalYn field.
func (o *Trail) SetResourceTypeTotalYn(v string) {
	o.ResourceTypeTotalYn.Set(&v)
}
// SetResourceTypeTotalYnNil sets the value for ResourceTypeTotalYn to be an explicit nil
func (o *Trail) SetResourceTypeTotalYnNil() {
	o.ResourceTypeTotalYn.Set(nil)
}

// UnsetResourceTypeTotalYn ensures that no value is present for ResourceTypeTotalYn, not even an explicit nil
func (o *Trail) UnsetResourceTypeTotalYn() {
	o.ResourceTypeTotalYn.Unset()
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Trail) GetState() string {
	if o == nil || IsNil(o.State.Get()) {
		var ret string
		return ret
	}
	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Trail) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// HasState returns a boolean if a field has been set.
func (o *Trail) HasState() bool {
	if o != nil && o.State.IsSet() {
		return true
	}

	return false
}

// SetState gets a reference to the given NullableString and assigns it to the State field.
func (o *Trail) SetState(v string) {
	o.State.Set(&v)
}
// SetStateNil sets the value for State to be an explicit nil
func (o *Trail) SetStateNil() {
	o.State.Set(nil)
}

// UnsetState ensures that no value is present for State, not even an explicit nil
func (o *Trail) UnsetState() {
	o.State.Unset()
}

// GetTargetLogTypes returns the TargetLogTypes field value if set, zero value otherwise.
func (o *Trail) GetTargetLogTypes() []interface{} {
	if o == nil || IsNil(o.TargetLogTypes) {
		var ret []interface{}
		return ret
	}
	return o.TargetLogTypes
}

// GetTargetLogTypesOk returns a tuple with the TargetLogTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trail) GetTargetLogTypesOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.TargetLogTypes) {
		return nil, false
	}
	return o.TargetLogTypes, true
}

// HasTargetLogTypes returns a boolean if a field has been set.
func (o *Trail) HasTargetLogTypes() bool {
	if o != nil && !IsNil(o.TargetLogTypes) {
		return true
	}

	return false
}

// SetTargetLogTypes gets a reference to the given []interface{} and assigns it to the TargetLogTypes field.
func (o *Trail) SetTargetLogTypes(v []interface{}) {
	o.TargetLogTypes = v
}

// GetTargetResourceTypes returns the TargetResourceTypes field value if set, zero value otherwise.
func (o *Trail) GetTargetResourceTypes() []interface{} {
	if o == nil || IsNil(o.TargetResourceTypes) {
		var ret []interface{}
		return ret
	}
	return o.TargetResourceTypes
}

// GetTargetResourceTypesOk returns a tuple with the TargetResourceTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trail) GetTargetResourceTypesOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.TargetResourceTypes) {
		return nil, false
	}
	return o.TargetResourceTypes, true
}

// HasTargetResourceTypes returns a boolean if a field has been set.
func (o *Trail) HasTargetResourceTypes() bool {
	if o != nil && !IsNil(o.TargetResourceTypes) {
		return true
	}

	return false
}

// SetTargetResourceTypes gets a reference to the given []interface{} and assigns it to the TargetResourceTypes field.
func (o *Trail) SetTargetResourceTypes(v []interface{}) {
	o.TargetResourceTypes = v
}

// GetTargetUsers returns the TargetUsers field value if set, zero value otherwise.
func (o *Trail) GetTargetUsers() []interface{} {
	if o == nil || IsNil(o.TargetUsers) {
		var ret []interface{}
		return ret
	}
	return o.TargetUsers
}

// GetTargetUsersOk returns a tuple with the TargetUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trail) GetTargetUsersOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.TargetUsers) {
		return nil, false
	}
	return o.TargetUsers, true
}

// HasTargetUsers returns a boolean if a field has been set.
func (o *Trail) HasTargetUsers() bool {
	if o != nil && !IsNil(o.TargetUsers) {
		return true
	}

	return false
}

// SetTargetUsers gets a reference to the given []interface{} and assigns it to the TargetUsers field.
func (o *Trail) SetTargetUsers(v []interface{}) {
	o.TargetUsers = v
}

// GetTrailBatchEndAt returns the TrailBatchEndAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Trail) GetTrailBatchEndAt() time.Time {
	if o == nil || IsNil(o.TrailBatchEndAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.TrailBatchEndAt.Get()
}

// GetTrailBatchEndAtOk returns a tuple with the TrailBatchEndAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Trail) GetTrailBatchEndAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrailBatchEndAt.Get(), o.TrailBatchEndAt.IsSet()
}

// HasTrailBatchEndAt returns a boolean if a field has been set.
func (o *Trail) HasTrailBatchEndAt() bool {
	if o != nil && o.TrailBatchEndAt.IsSet() {
		return true
	}

	return false
}

// SetTrailBatchEndAt gets a reference to the given NullableTime and assigns it to the TrailBatchEndAt field.
func (o *Trail) SetTrailBatchEndAt(v time.Time) {
	o.TrailBatchEndAt.Set(&v)
}
// SetTrailBatchEndAtNil sets the value for TrailBatchEndAt to be an explicit nil
func (o *Trail) SetTrailBatchEndAtNil() {
	o.TrailBatchEndAt.Set(nil)
}

// UnsetTrailBatchEndAt ensures that no value is present for TrailBatchEndAt, not even an explicit nil
func (o *Trail) UnsetTrailBatchEndAt() {
	o.TrailBatchEndAt.Unset()
}

// GetTrailBatchFirstStartAt returns the TrailBatchFirstStartAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Trail) GetTrailBatchFirstStartAt() time.Time {
	if o == nil || IsNil(o.TrailBatchFirstStartAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.TrailBatchFirstStartAt.Get()
}

// GetTrailBatchFirstStartAtOk returns a tuple with the TrailBatchFirstStartAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Trail) GetTrailBatchFirstStartAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrailBatchFirstStartAt.Get(), o.TrailBatchFirstStartAt.IsSet()
}

// HasTrailBatchFirstStartAt returns a boolean if a field has been set.
func (o *Trail) HasTrailBatchFirstStartAt() bool {
	if o != nil && o.TrailBatchFirstStartAt.IsSet() {
		return true
	}

	return false
}

// SetTrailBatchFirstStartAt gets a reference to the given NullableTime and assigns it to the TrailBatchFirstStartAt field.
func (o *Trail) SetTrailBatchFirstStartAt(v time.Time) {
	o.TrailBatchFirstStartAt.Set(&v)
}
// SetTrailBatchFirstStartAtNil sets the value for TrailBatchFirstStartAt to be an explicit nil
func (o *Trail) SetTrailBatchFirstStartAtNil() {
	o.TrailBatchFirstStartAt.Set(nil)
}

// UnsetTrailBatchFirstStartAt ensures that no value is present for TrailBatchFirstStartAt, not even an explicit nil
func (o *Trail) UnsetTrailBatchFirstStartAt() {
	o.TrailBatchFirstStartAt.Unset()
}

// GetTrailBatchLastState returns the TrailBatchLastState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Trail) GetTrailBatchLastState() string {
	if o == nil || IsNil(o.TrailBatchLastState.Get()) {
		var ret string
		return ret
	}
	return *o.TrailBatchLastState.Get()
}

// GetTrailBatchLastStateOk returns a tuple with the TrailBatchLastState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Trail) GetTrailBatchLastStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrailBatchLastState.Get(), o.TrailBatchLastState.IsSet()
}

// HasTrailBatchLastState returns a boolean if a field has been set.
func (o *Trail) HasTrailBatchLastState() bool {
	if o != nil && o.TrailBatchLastState.IsSet() {
		return true
	}

	return false
}

// SetTrailBatchLastState gets a reference to the given NullableString and assigns it to the TrailBatchLastState field.
func (o *Trail) SetTrailBatchLastState(v string) {
	o.TrailBatchLastState.Set(&v)
}
// SetTrailBatchLastStateNil sets the value for TrailBatchLastState to be an explicit nil
func (o *Trail) SetTrailBatchLastStateNil() {
	o.TrailBatchLastState.Set(nil)
}

// UnsetTrailBatchLastState ensures that no value is present for TrailBatchLastState, not even an explicit nil
func (o *Trail) UnsetTrailBatchLastState() {
	o.TrailBatchLastState.Unset()
}

// GetTrailBatchStartAt returns the TrailBatchStartAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Trail) GetTrailBatchStartAt() time.Time {
	if o == nil || IsNil(o.TrailBatchStartAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.TrailBatchStartAt.Get()
}

// GetTrailBatchStartAtOk returns a tuple with the TrailBatchStartAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Trail) GetTrailBatchStartAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrailBatchStartAt.Get(), o.TrailBatchStartAt.IsSet()
}

// HasTrailBatchStartAt returns a boolean if a field has been set.
func (o *Trail) HasTrailBatchStartAt() bool {
	if o != nil && o.TrailBatchStartAt.IsSet() {
		return true
	}

	return false
}

// SetTrailBatchStartAt gets a reference to the given NullableTime and assigns it to the TrailBatchStartAt field.
func (o *Trail) SetTrailBatchStartAt(v time.Time) {
	o.TrailBatchStartAt.Set(&v)
}
// SetTrailBatchStartAtNil sets the value for TrailBatchStartAt to be an explicit nil
func (o *Trail) SetTrailBatchStartAtNil() {
	o.TrailBatchStartAt.Set(nil)
}

// UnsetTrailBatchStartAt ensures that no value is present for TrailBatchStartAt, not even an explicit nil
func (o *Trail) UnsetTrailBatchStartAt() {
	o.TrailBatchStartAt.Unset()
}

// GetTrailBatchSuccessAt returns the TrailBatchSuccessAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Trail) GetTrailBatchSuccessAt() time.Time {
	if o == nil || IsNil(o.TrailBatchSuccessAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.TrailBatchSuccessAt.Get()
}

// GetTrailBatchSuccessAtOk returns a tuple with the TrailBatchSuccessAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Trail) GetTrailBatchSuccessAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrailBatchSuccessAt.Get(), o.TrailBatchSuccessAt.IsSet()
}

// HasTrailBatchSuccessAt returns a boolean if a field has been set.
func (o *Trail) HasTrailBatchSuccessAt() bool {
	if o != nil && o.TrailBatchSuccessAt.IsSet() {
		return true
	}

	return false
}

// SetTrailBatchSuccessAt gets a reference to the given NullableTime and assigns it to the TrailBatchSuccessAt field.
func (o *Trail) SetTrailBatchSuccessAt(v time.Time) {
	o.TrailBatchSuccessAt.Set(&v)
}
// SetTrailBatchSuccessAtNil sets the value for TrailBatchSuccessAt to be an explicit nil
func (o *Trail) SetTrailBatchSuccessAtNil() {
	o.TrailBatchSuccessAt.Set(nil)
}

// UnsetTrailBatchSuccessAt ensures that no value is present for TrailBatchSuccessAt, not even an explicit nil
func (o *Trail) UnsetTrailBatchSuccessAt() {
	o.TrailBatchSuccessAt.Unset()
}

// GetTrailDescription returns the TrailDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Trail) GetTrailDescription() string {
	if o == nil || IsNil(o.TrailDescription.Get()) {
		var ret string
		return ret
	}
	return *o.TrailDescription.Get()
}

// GetTrailDescriptionOk returns a tuple with the TrailDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Trail) GetTrailDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrailDescription.Get(), o.TrailDescription.IsSet()
}

// HasTrailDescription returns a boolean if a field has been set.
func (o *Trail) HasTrailDescription() bool {
	if o != nil && o.TrailDescription.IsSet() {
		return true
	}

	return false
}

// SetTrailDescription gets a reference to the given NullableString and assigns it to the TrailDescription field.
func (o *Trail) SetTrailDescription(v string) {
	o.TrailDescription.Set(&v)
}
// SetTrailDescriptionNil sets the value for TrailDescription to be an explicit nil
func (o *Trail) SetTrailDescriptionNil() {
	o.TrailDescription.Set(nil)
}

// UnsetTrailDescription ensures that no value is present for TrailDescription, not even an explicit nil
func (o *Trail) UnsetTrailDescription() {
	o.TrailDescription.Unset()
}

// GetTrailName returns the TrailName field value
func (o *Trail) GetTrailName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TrailName
}

// GetTrailNameOk returns a tuple with the TrailName field value
// and a boolean to check if the value has been set.
func (o *Trail) GetTrailNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrailName, true
}

// SetTrailName sets field value
func (o *Trail) SetTrailName(v string) {
	o.TrailName = v
}

// GetTrailSaveType returns the TrailSaveType field value
func (o *Trail) GetTrailSaveType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TrailSaveType
}

// GetTrailSaveTypeOk returns a tuple with the TrailSaveType field value
// and a boolean to check if the value has been set.
func (o *Trail) GetTrailSaveTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrailSaveType, true
}

// SetTrailSaveType sets field value
func (o *Trail) SetTrailSaveType(v string) {
	o.TrailSaveType = v
}

// GetUserTotalYn returns the UserTotalYn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Trail) GetUserTotalYn() string {
	if o == nil || IsNil(o.UserTotalYn.Get()) {
		var ret string
		return ret
	}
	return *o.UserTotalYn.Get()
}

// GetUserTotalYnOk returns a tuple with the UserTotalYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Trail) GetUserTotalYnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserTotalYn.Get(), o.UserTotalYn.IsSet()
}

// HasUserTotalYn returns a boolean if a field has been set.
func (o *Trail) HasUserTotalYn() bool {
	if o != nil && o.UserTotalYn.IsSet() {
		return true
	}

	return false
}

// SetUserTotalYn gets a reference to the given NullableString and assigns it to the UserTotalYn field.
func (o *Trail) SetUserTotalYn(v string) {
	o.UserTotalYn.Set(&v)
}
// SetUserTotalYnNil sets the value for UserTotalYn to be an explicit nil
func (o *Trail) SetUserTotalYnNil() {
	o.UserTotalYn.Set(nil)
}

// UnsetUserTotalYn ensures that no value is present for UserTotalYn, not even an explicit nil
func (o *Trail) UnsetUserTotalYn() {
	o.UserTotalYn.Unset()
}

func (o Trail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Trail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId.IsSet() {
		toSerialize["account_id"] = o.AccountId.Get()
	}
	if o.AccountName.IsSet() {
		toSerialize["account_name"] = o.AccountName.Get()
	}
	toSerialize["bucket_name"] = o.BucketName
	toSerialize["bucket_region"] = o.BucketRegion
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	if o.CreatedUserId.IsSet() {
		toSerialize["created_user_id"] = o.CreatedUserId.Get()
	}
	if o.DelYn.IsSet() {
		toSerialize["del_yn"] = o.DelYn.Get()
	}
	toSerialize["id"] = o.Id
	if o.LogTypeTotalYn.IsSet() {
		toSerialize["log_type_total_yn"] = o.LogTypeTotalYn.Get()
	}
	if o.LogVerificationYn.IsSet() {
		toSerialize["log_verification_yn"] = o.LogVerificationYn.Get()
	}
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	if !IsNil(o.RegionNames) {
		toSerialize["region_names"] = o.RegionNames
	}
	if o.RegionTotalYn.IsSet() {
		toSerialize["region_total_yn"] = o.RegionTotalYn.Get()
	}
	if o.ResourceTypeTotalYn.IsSet() {
		toSerialize["resource_type_total_yn"] = o.ResourceTypeTotalYn.Get()
	}
	if o.State.IsSet() {
		toSerialize["state"] = o.State.Get()
	}
	if !IsNil(o.TargetLogTypes) {
		toSerialize["target_log_types"] = o.TargetLogTypes
	}
	if !IsNil(o.TargetResourceTypes) {
		toSerialize["target_resource_types"] = o.TargetResourceTypes
	}
	if !IsNil(o.TargetUsers) {
		toSerialize["target_users"] = o.TargetUsers
	}
	if o.TrailBatchEndAt.IsSet() {
		toSerialize["trail_batch_end_at"] = o.TrailBatchEndAt.Get()
	}
	if o.TrailBatchFirstStartAt.IsSet() {
		toSerialize["trail_batch_first_start_at"] = o.TrailBatchFirstStartAt.Get()
	}
	if o.TrailBatchLastState.IsSet() {
		toSerialize["trail_batch_last_state"] = o.TrailBatchLastState.Get()
	}
	if o.TrailBatchStartAt.IsSet() {
		toSerialize["trail_batch_start_at"] = o.TrailBatchStartAt.Get()
	}
	if o.TrailBatchSuccessAt.IsSet() {
		toSerialize["trail_batch_success_at"] = o.TrailBatchSuccessAt.Get()
	}
	if o.TrailDescription.IsSet() {
		toSerialize["trail_description"] = o.TrailDescription.Get()
	}
	toSerialize["trail_name"] = o.TrailName
	toSerialize["trail_save_type"] = o.TrailSaveType
	if o.UserTotalYn.IsSet() {
		toSerialize["user_total_yn"] = o.UserTotalYn.Get()
	}
	return toSerialize, nil
}

func (o *Trail) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bucket_name",
		"bucket_region",
		"created_at",
		"created_by",
		"id",
		"modified_at",
		"modified_by",
		"trail_name",
		"trail_save_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTrail := _Trail{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTrail)

	if err != nil {
		return err
	}

	*o = Trail(varTrail)

	return err
}

type NullableTrail struct {
	value *Trail
	isSet bool
}

func (v NullableTrail) Get() *Trail {
	return v.value
}

func (v *NullableTrail) Set(val *Trail) {
	v.value = val
	v.isSet = true
}

func (v NullableTrail) IsSet() bool {
	return v.isSet
}

func (v *NullableTrail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrail(val *Trail) *NullableTrail {
	return &NullableTrail{value: val, isSet: true}
}

func (v NullableTrail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


