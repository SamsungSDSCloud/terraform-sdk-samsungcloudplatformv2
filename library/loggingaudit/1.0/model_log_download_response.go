/*
OSSCP Logging Audit Service

OSSCP Logging Audit Service

API version: 1.2.2.dev64
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loggingaudit

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LogDownloadResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogDownloadResponse{}

// LogDownloadResponse struct for LogDownloadResponse
type LogDownloadResponse struct {
	File []LogDownloadDetailResponse `json:"file"`
}

type _LogDownloadResponse LogDownloadResponse

// NewLogDownloadResponse instantiates a new LogDownloadResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogDownloadResponse(file []LogDownloadDetailResponse) *LogDownloadResponse {
	this := LogDownloadResponse{}
	this.File = file
	return &this
}

// NewLogDownloadResponseWithDefaults instantiates a new LogDownloadResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogDownloadResponseWithDefaults() *LogDownloadResponse {
	this := LogDownloadResponse{}
	return &this
}

// GetFile returns the File field value
func (o *LogDownloadResponse) GetFile() []LogDownloadDetailResponse {
	if o == nil {
		var ret []LogDownloadDetailResponse
		return ret
	}

	return o.File
}

// GetFileOk returns a tuple with the File field value
// and a boolean to check if the value has been set.
func (o *LogDownloadResponse) GetFileOk() ([]LogDownloadDetailResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.File, true
}

// SetFile sets field value
func (o *LogDownloadResponse) SetFile(v []LogDownloadDetailResponse) {
	o.File = v
}

func (o LogDownloadResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogDownloadResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["file"] = o.File
	return toSerialize, nil
}

func (o *LogDownloadResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"file",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLogDownloadResponse := _LogDownloadResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLogDownloadResponse)

	if err != nil {
		return err
	}

	*o = LogDownloadResponse(varLogDownloadResponse)

	return err
}

type NullableLogDownloadResponse struct {
	value *LogDownloadResponse
	isSet bool
}

func (v NullableLogDownloadResponse) Get() *LogDownloadResponse {
	return v.value
}

func (v *NullableLogDownloadResponse) Set(val *LogDownloadResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLogDownloadResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLogDownloadResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogDownloadResponse(val *LogDownloadResponse) *NullableLogDownloadResponse {
	return &NullableLogDownloadResponse{value: val, isSet: true}
}

func (v NullableLogDownloadResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogDownloadResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


