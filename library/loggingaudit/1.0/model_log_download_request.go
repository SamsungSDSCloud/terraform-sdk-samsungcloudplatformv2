/*
OSSCP Logging Audit Service

OSSCP Logging Audit Service

API version: 1.2.2.dev64
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loggingaudit

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LogDownloadRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogDownloadRequest{}

// LogDownloadRequest struct for LogDownloadRequest
type LogDownloadRequest struct {
	// Query finish date
	EndAt string `json:"end_at"`
	// Download file type
	FileType string `json:"file_type"`
	ProductName NullableString `json:"product_name,omitempty"`
	Region NullableString `json:"region,omitempty"`
	ResourceName NullableString `json:"resource_name,omitempty"`
	ResourceType NullableString `json:"resource_type,omitempty"`
	RootResourceId NullableString `json:"root_resource_id,omitempty"`
	// Query start date
	StartAt string `json:"start_at"`
	Status NullableString `json:"status,omitempty"`
	// Timezone info
	TimeZoneInfo string `json:"time_zone_info"`
	UserName NullableString `json:"user_name,omitempty"`
}

type _LogDownloadRequest LogDownloadRequest

// NewLogDownloadRequest instantiates a new LogDownloadRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogDownloadRequest(endAt string, fileType string, startAt string, timeZoneInfo string) *LogDownloadRequest {
	this := LogDownloadRequest{}
	this.EndAt = endAt
	this.FileType = fileType
	this.StartAt = startAt
	this.TimeZoneInfo = timeZoneInfo
	return &this
}

// NewLogDownloadRequestWithDefaults instantiates a new LogDownloadRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogDownloadRequestWithDefaults() *LogDownloadRequest {
	this := LogDownloadRequest{}
	return &this
}

// GetEndAt returns the EndAt field value
func (o *LogDownloadRequest) GetEndAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndAt
}

// GetEndAtOk returns a tuple with the EndAt field value
// and a boolean to check if the value has been set.
func (o *LogDownloadRequest) GetEndAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndAt, true
}

// SetEndAt sets field value
func (o *LogDownloadRequest) SetEndAt(v string) {
	o.EndAt = v
}

// GetFileType returns the FileType field value
func (o *LogDownloadRequest) GetFileType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileType
}

// GetFileTypeOk returns a tuple with the FileType field value
// and a boolean to check if the value has been set.
func (o *LogDownloadRequest) GetFileTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileType, true
}

// SetFileType sets field value
func (o *LogDownloadRequest) SetFileType(v string) {
	o.FileType = v
}

// GetProductName returns the ProductName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LogDownloadRequest) GetProductName() string {
	if o == nil || IsNil(o.ProductName.Get()) {
		var ret string
		return ret
	}
	return *o.ProductName.Get()
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogDownloadRequest) GetProductNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductName.Get(), o.ProductName.IsSet()
}

// HasProductName returns a boolean if a field has been set.
func (o *LogDownloadRequest) HasProductName() bool {
	if o != nil && o.ProductName.IsSet() {
		return true
	}

	return false
}

// SetProductName gets a reference to the given NullableString and assigns it to the ProductName field.
func (o *LogDownloadRequest) SetProductName(v string) {
	o.ProductName.Set(&v)
}
// SetProductNameNil sets the value for ProductName to be an explicit nil
func (o *LogDownloadRequest) SetProductNameNil() {
	o.ProductName.Set(nil)
}

// UnsetProductName ensures that no value is present for ProductName, not even an explicit nil
func (o *LogDownloadRequest) UnsetProductName() {
	o.ProductName.Unset()
}

// GetRegion returns the Region field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LogDownloadRequest) GetRegion() string {
	if o == nil || IsNil(o.Region.Get()) {
		var ret string
		return ret
	}
	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogDownloadRequest) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// HasRegion returns a boolean if a field has been set.
func (o *LogDownloadRequest) HasRegion() bool {
	if o != nil && o.Region.IsSet() {
		return true
	}

	return false
}

// SetRegion gets a reference to the given NullableString and assigns it to the Region field.
func (o *LogDownloadRequest) SetRegion(v string) {
	o.Region.Set(&v)
}
// SetRegionNil sets the value for Region to be an explicit nil
func (o *LogDownloadRequest) SetRegionNil() {
	o.Region.Set(nil)
}

// UnsetRegion ensures that no value is present for Region, not even an explicit nil
func (o *LogDownloadRequest) UnsetRegion() {
	o.Region.Unset()
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LogDownloadRequest) GetResourceName() string {
	if o == nil || IsNil(o.ResourceName.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceName.Get()
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogDownloadRequest) GetResourceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceName.Get(), o.ResourceName.IsSet()
}

// HasResourceName returns a boolean if a field has been set.
func (o *LogDownloadRequest) HasResourceName() bool {
	if o != nil && o.ResourceName.IsSet() {
		return true
	}

	return false
}

// SetResourceName gets a reference to the given NullableString and assigns it to the ResourceName field.
func (o *LogDownloadRequest) SetResourceName(v string) {
	o.ResourceName.Set(&v)
}
// SetResourceNameNil sets the value for ResourceName to be an explicit nil
func (o *LogDownloadRequest) SetResourceNameNil() {
	o.ResourceName.Set(nil)
}

// UnsetResourceName ensures that no value is present for ResourceName, not even an explicit nil
func (o *LogDownloadRequest) UnsetResourceName() {
	o.ResourceName.Unset()
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LogDownloadRequest) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceType.Get()
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogDownloadRequest) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceType.Get(), o.ResourceType.IsSet()
}

// HasResourceType returns a boolean if a field has been set.
func (o *LogDownloadRequest) HasResourceType() bool {
	if o != nil && o.ResourceType.IsSet() {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given NullableString and assigns it to the ResourceType field.
func (o *LogDownloadRequest) SetResourceType(v string) {
	o.ResourceType.Set(&v)
}
// SetResourceTypeNil sets the value for ResourceType to be an explicit nil
func (o *LogDownloadRequest) SetResourceTypeNil() {
	o.ResourceType.Set(nil)
}

// UnsetResourceType ensures that no value is present for ResourceType, not even an explicit nil
func (o *LogDownloadRequest) UnsetResourceType() {
	o.ResourceType.Unset()
}

// GetRootResourceId returns the RootResourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LogDownloadRequest) GetRootResourceId() string {
	if o == nil || IsNil(o.RootResourceId.Get()) {
		var ret string
		return ret
	}
	return *o.RootResourceId.Get()
}

// GetRootResourceIdOk returns a tuple with the RootResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogDownloadRequest) GetRootResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RootResourceId.Get(), o.RootResourceId.IsSet()
}

// HasRootResourceId returns a boolean if a field has been set.
func (o *LogDownloadRequest) HasRootResourceId() bool {
	if o != nil && o.RootResourceId.IsSet() {
		return true
	}

	return false
}

// SetRootResourceId gets a reference to the given NullableString and assigns it to the RootResourceId field.
func (o *LogDownloadRequest) SetRootResourceId(v string) {
	o.RootResourceId.Set(&v)
}
// SetRootResourceIdNil sets the value for RootResourceId to be an explicit nil
func (o *LogDownloadRequest) SetRootResourceIdNil() {
	o.RootResourceId.Set(nil)
}

// UnsetRootResourceId ensures that no value is present for RootResourceId, not even an explicit nil
func (o *LogDownloadRequest) UnsetRootResourceId() {
	o.RootResourceId.Unset()
}

// GetStartAt returns the StartAt field value
func (o *LogDownloadRequest) GetStartAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartAt
}

// GetStartAtOk returns a tuple with the StartAt field value
// and a boolean to check if the value has been set.
func (o *LogDownloadRequest) GetStartAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartAt, true
}

// SetStartAt sets field value
func (o *LogDownloadRequest) SetStartAt(v string) {
	o.StartAt = v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LogDownloadRequest) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogDownloadRequest) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *LogDownloadRequest) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *LogDownloadRequest) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *LogDownloadRequest) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *LogDownloadRequest) UnsetStatus() {
	o.Status.Unset()
}

// GetTimeZoneInfo returns the TimeZoneInfo field value
func (o *LogDownloadRequest) GetTimeZoneInfo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TimeZoneInfo
}

// GetTimeZoneInfoOk returns a tuple with the TimeZoneInfo field value
// and a boolean to check if the value has been set.
func (o *LogDownloadRequest) GetTimeZoneInfoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeZoneInfo, true
}

// SetTimeZoneInfo sets field value
func (o *LogDownloadRequest) SetTimeZoneInfo(v string) {
	o.TimeZoneInfo = v
}

// GetUserName returns the UserName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LogDownloadRequest) GetUserName() string {
	if o == nil || IsNil(o.UserName.Get()) {
		var ret string
		return ret
	}
	return *o.UserName.Get()
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LogDownloadRequest) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserName.Get(), o.UserName.IsSet()
}

// HasUserName returns a boolean if a field has been set.
func (o *LogDownloadRequest) HasUserName() bool {
	if o != nil && o.UserName.IsSet() {
		return true
	}

	return false
}

// SetUserName gets a reference to the given NullableString and assigns it to the UserName field.
func (o *LogDownloadRequest) SetUserName(v string) {
	o.UserName.Set(&v)
}
// SetUserNameNil sets the value for UserName to be an explicit nil
func (o *LogDownloadRequest) SetUserNameNil() {
	o.UserName.Set(nil)
}

// UnsetUserName ensures that no value is present for UserName, not even an explicit nil
func (o *LogDownloadRequest) UnsetUserName() {
	o.UserName.Unset()
}

func (o LogDownloadRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogDownloadRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["end_at"] = o.EndAt
	toSerialize["file_type"] = o.FileType
	if o.ProductName.IsSet() {
		toSerialize["product_name"] = o.ProductName.Get()
	}
	if o.Region.IsSet() {
		toSerialize["region"] = o.Region.Get()
	}
	if o.ResourceName.IsSet() {
		toSerialize["resource_name"] = o.ResourceName.Get()
	}
	if o.ResourceType.IsSet() {
		toSerialize["resource_type"] = o.ResourceType.Get()
	}
	if o.RootResourceId.IsSet() {
		toSerialize["root_resource_id"] = o.RootResourceId.Get()
	}
	toSerialize["start_at"] = o.StartAt
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	toSerialize["time_zone_info"] = o.TimeZoneInfo
	if o.UserName.IsSet() {
		toSerialize["user_name"] = o.UserName.Get()
	}
	return toSerialize, nil
}

func (o *LogDownloadRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"end_at",
		"file_type",
		"start_at",
		"time_zone_info",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLogDownloadRequest := _LogDownloadRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLogDownloadRequest)

	if err != nil {
		return err
	}

	*o = LogDownloadRequest(varLogDownloadRequest)

	return err
}

type NullableLogDownloadRequest struct {
	value *LogDownloadRequest
	isSet bool
}

func (v NullableLogDownloadRequest) Get() *LogDownloadRequest {
	return v.value
}

func (v *NullableLogDownloadRequest) Set(val *LogDownloadRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLogDownloadRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLogDownloadRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogDownloadRequest(val *LogDownloadRequest) *NullableLogDownloadRequest {
	return &NullableLogDownloadRequest{value: val, isSet: true}
}

func (v NullableLogDownloadRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogDownloadRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


