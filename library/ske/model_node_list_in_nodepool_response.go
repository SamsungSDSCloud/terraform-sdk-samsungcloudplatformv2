/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2273
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"encoding/json"
)

// checks if the NodeListInNodepoolResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodeListInNodepoolResponse{}

// NodeListInNodepoolResponse struct for NodeListInNodepoolResponse
type NodeListInNodepoolResponse struct {
	Count NullableInt32    `json:"count,omitempty"`
	Links []interface{}    `json:"links,omitempty"`
	Nodes []NodeInNodepool `json:"nodes,omitempty"`
}

// NewNodeListInNodepoolResponse instantiates a new NodeListInNodepoolResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeListInNodepoolResponse() *NodeListInNodepoolResponse {
	this := NodeListInNodepoolResponse{}
	return &this
}

// NewNodeListInNodepoolResponseWithDefaults instantiates a new NodeListInNodepoolResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeListInNodepoolResponseWithDefaults() *NodeListInNodepoolResponse {
	this := NodeListInNodepoolResponse{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodeListInNodepoolResponse) GetCount() int32 {
	if o == nil || IsNil(o.Count.Get()) {
		var ret int32
		return ret
	}
	return *o.Count.Get()
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodeListInNodepoolResponse) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Count.Get(), o.Count.IsSet()
}

// HasCount returns a boolean if a field has been set.
func (o *NodeListInNodepoolResponse) HasCount() bool {
	if o != nil && o.Count.IsSet() {
		return true
	}

	return false
}

// SetCount gets a reference to the given NullableInt32 and assigns it to the Count field.
func (o *NodeListInNodepoolResponse) SetCount(v int32) {
	o.Count.Set(&v)
}

// SetCountNil sets the value for Count to be an explicit nil
func (o *NodeListInNodepoolResponse) SetCountNil() {
	o.Count.Set(nil)
}

// UnsetCount ensures that no value is present for Count, not even an explicit nil
func (o *NodeListInNodepoolResponse) UnsetCount() {
	o.Count.Unset()
}

// GetLinks returns the Links field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodeListInNodepoolResponse) GetLinks() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodeListInNodepoolResponse) GetLinksOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *NodeListInNodepoolResponse) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []interface{} and assigns it to the Links field.
func (o *NodeListInNodepoolResponse) SetLinks(v []interface{}) {
	o.Links = v
}

// GetNodes returns the Nodes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodeListInNodepoolResponse) GetNodes() []NodeInNodepool {
	if o == nil {
		var ret []NodeInNodepool
		return ret
	}
	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodeListInNodepoolResponse) GetNodesOk() ([]NodeInNodepool, bool) {
	if o == nil || IsNil(o.Nodes) {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *NodeListInNodepoolResponse) HasNodes() bool {
	if o != nil && !IsNil(o.Nodes) {
		return true
	}

	return false
}

// SetNodes gets a reference to the given []NodeInNodepool and assigns it to the Nodes field.
func (o *NodeListInNodepoolResponse) SetNodes(v []NodeInNodepool) {
	o.Nodes = v
}

func (o NodeListInNodepoolResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodeListInNodepoolResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Count.IsSet() {
		toSerialize["count"] = o.Count.Get()
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Nodes != nil {
		toSerialize["nodes"] = o.Nodes
	}
	return toSerialize, nil
}

type NullableNodeListInNodepoolResponse struct {
	value *NodeListInNodepoolResponse
	isSet bool
}

func (v NullableNodeListInNodepoolResponse) Get() *NodeListInNodepoolResponse {
	return v.value
}

func (v *NullableNodeListInNodepoolResponse) Set(val *NodeListInNodepoolResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeListInNodepoolResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeListInNodepoolResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeListInNodepoolResponse(val *NodeListInNodepoolResponse) *NullableNodeListInNodepoolResponse {
	return &NullableNodeListInNodepoolResponse{value: val, isSet: true}
}

func (v NullableNodeListInNodepoolResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeListInNodepoolResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
