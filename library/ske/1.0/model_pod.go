/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the Pod type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Pod{}

// Pod struct for Pod
type Pod struct {
	Age         NullableString `json:"age"`
	Annotations []string       `json:"annotations"`
	// Cluster ID
	ClusterId string `json:"cluster_id"`
	// Cluster Name
	ClusterName       string                 `json:"cluster_name"`
	ContainerList     []PodContainerResponse `json:"container_list"`
	ContainerStatus   NullableString         `json:"container_status"`
	CreatedAt         NullableTime           `json:"created_at"`
	InitContainerList []PodContainerResponse `json:"init_container_list"`
	Labels            []string               `json:"labels"`
	// Pod Name
	Name string `json:"name"`
	// Namespace Name
	NamespaceName     string         `json:"namespace_name"`
	NodeIp            NullableString `json:"node_ip"`
	NodeName          NullableString `json:"node_name"`
	NodeSelector      []string       `json:"node_selector"`
	PodIp             NullableString `json:"pod_ip"`
	PodStatus         NullableString `json:"pod_status"`
	Priority          NullableInt32  `json:"priority"`
	PriorityClassName NullableString `json:"priority_class_name"`
	QosClass          NullableString `json:"qos_class"`
	Restarts          NullableString `json:"restarts"`
	StartTime         NullableTime   `json:"start_time"`
	// Resource ID
	Uid string `json:"uid"`
	// YAML
	Yaml string `json:"yaml"`
}

type _Pod Pod

// NewPod instantiates a new Pod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPod(age NullableString, annotations []string, clusterId string, clusterName string, containerList []PodContainerResponse, containerStatus NullableString, createdAt NullableTime, initContainerList []PodContainerResponse, labels []string, name string, namespaceName string, nodeIp NullableString, nodeName NullableString, nodeSelector []string, podIp NullableString, podStatus NullableString, priority NullableInt32, priorityClassName NullableString, qosClass NullableString, restarts NullableString, startTime NullableTime, uid string, yaml string) *Pod {
	this := Pod{}
	this.Age = age
	this.Annotations = annotations
	this.ClusterId = clusterId
	this.ClusterName = clusterName
	this.ContainerList = containerList
	this.ContainerStatus = containerStatus
	this.CreatedAt = createdAt
	this.InitContainerList = initContainerList
	this.Labels = labels
	this.Name = name
	this.NamespaceName = namespaceName
	this.NodeIp = nodeIp
	this.NodeName = nodeName
	this.NodeSelector = nodeSelector
	this.PodIp = podIp
	this.PodStatus = podStatus
	this.Priority = priority
	this.PriorityClassName = priorityClassName
	this.QosClass = qosClass
	this.Restarts = restarts
	this.StartTime = startTime
	this.Uid = uid
	this.Yaml = yaml
	return &this
}

// NewPodWithDefaults instantiates a new Pod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPodWithDefaults() *Pod {
	this := Pod{}
	return &this
}

// GetAge returns the Age field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Pod) GetAge() string {
	if o == nil || o.Age.Get() == nil {
		var ret string
		return ret
	}

	return *o.Age.Get()
}

// GetAgeOk returns a tuple with the Age field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pod) GetAgeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Age.Get(), o.Age.IsSet()
}

// SetAge sets field value
func (o *Pod) SetAge(v string) {
	o.Age.Set(&v)
}

// GetAnnotations returns the Annotations field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *Pod) GetAnnotations() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pod) GetAnnotationsOk() ([]string, bool) {
	if o == nil || IsNil(o.Annotations) {
		return nil, false
	}
	return o.Annotations, true
}

// SetAnnotations sets field value
func (o *Pod) SetAnnotations(v []string) {
	o.Annotations = v
}

// GetClusterId returns the ClusterId field value
func (o *Pod) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *Pod) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *Pod) SetClusterId(v string) {
	o.ClusterId = v
}

// GetClusterName returns the ClusterName field value
func (o *Pod) GetClusterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value
// and a boolean to check if the value has been set.
func (o *Pod) GetClusterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterName, true
}

// SetClusterName sets field value
func (o *Pod) SetClusterName(v string) {
	o.ClusterName = v
}

// GetContainerList returns the ContainerList field value
// If the value is explicit nil, the zero value for []PodContainerResponse will be returned
func (o *Pod) GetContainerList() []PodContainerResponse {
	if o == nil {
		var ret []PodContainerResponse
		return ret
	}

	return o.ContainerList
}

// GetContainerListOk returns a tuple with the ContainerList field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pod) GetContainerListOk() ([]PodContainerResponse, bool) {
	if o == nil || IsNil(o.ContainerList) {
		return nil, false
	}
	return o.ContainerList, true
}

// SetContainerList sets field value
func (o *Pod) SetContainerList(v []PodContainerResponse) {
	o.ContainerList = v
}

// GetContainerStatus returns the ContainerStatus field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Pod) GetContainerStatus() string {
	if o == nil || o.ContainerStatus.Get() == nil {
		var ret string
		return ret
	}

	return *o.ContainerStatus.Get()
}

// GetContainerStatusOk returns a tuple with the ContainerStatus field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pod) GetContainerStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContainerStatus.Get(), o.ContainerStatus.IsSet()
}

// SetContainerStatus sets field value
func (o *Pod) SetContainerStatus(v string) {
	o.ContainerStatus.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Pod) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pod) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// SetCreatedAt sets field value
func (o *Pod) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}

// GetInitContainerList returns the InitContainerList field value
// If the value is explicit nil, the zero value for []PodContainerResponse will be returned
func (o *Pod) GetInitContainerList() []PodContainerResponse {
	if o == nil {
		var ret []PodContainerResponse
		return ret
	}

	return o.InitContainerList
}

// GetInitContainerListOk returns a tuple with the InitContainerList field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pod) GetInitContainerListOk() ([]PodContainerResponse, bool) {
	if o == nil || IsNil(o.InitContainerList) {
		return nil, false
	}
	return o.InitContainerList, true
}

// SetInitContainerList sets field value
func (o *Pod) SetInitContainerList(v []PodContainerResponse) {
	o.InitContainerList = v
}

// GetLabels returns the Labels field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *Pod) GetLabels() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pod) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// SetLabels sets field value
func (o *Pod) SetLabels(v []string) {
	o.Labels = v
}

// GetName returns the Name field value
func (o *Pod) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Pod) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Pod) SetName(v string) {
	o.Name = v
}

// GetNamespaceName returns the NamespaceName field value
func (o *Pod) GetNamespaceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NamespaceName
}

// GetNamespaceNameOk returns a tuple with the NamespaceName field value
// and a boolean to check if the value has been set.
func (o *Pod) GetNamespaceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NamespaceName, true
}

// SetNamespaceName sets field value
func (o *Pod) SetNamespaceName(v string) {
	o.NamespaceName = v
}

// GetNodeIp returns the NodeIp field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Pod) GetNodeIp() string {
	if o == nil || o.NodeIp.Get() == nil {
		var ret string
		return ret
	}

	return *o.NodeIp.Get()
}

// GetNodeIpOk returns a tuple with the NodeIp field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pod) GetNodeIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NodeIp.Get(), o.NodeIp.IsSet()
}

// SetNodeIp sets field value
func (o *Pod) SetNodeIp(v string) {
	o.NodeIp.Set(&v)
}

// GetNodeName returns the NodeName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Pod) GetNodeName() string {
	if o == nil || o.NodeName.Get() == nil {
		var ret string
		return ret
	}

	return *o.NodeName.Get()
}

// GetNodeNameOk returns a tuple with the NodeName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pod) GetNodeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NodeName.Get(), o.NodeName.IsSet()
}

// SetNodeName sets field value
func (o *Pod) SetNodeName(v string) {
	o.NodeName.Set(&v)
}

// GetNodeSelector returns the NodeSelector field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *Pod) GetNodeSelector() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.NodeSelector
}

// GetNodeSelectorOk returns a tuple with the NodeSelector field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pod) GetNodeSelectorOk() ([]string, bool) {
	if o == nil || IsNil(o.NodeSelector) {
		return nil, false
	}
	return o.NodeSelector, true
}

// SetNodeSelector sets field value
func (o *Pod) SetNodeSelector(v []string) {
	o.NodeSelector = v
}

// GetPodIp returns the PodIp field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Pod) GetPodIp() string {
	if o == nil || o.PodIp.Get() == nil {
		var ret string
		return ret
	}

	return *o.PodIp.Get()
}

// GetPodIpOk returns a tuple with the PodIp field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pod) GetPodIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PodIp.Get(), o.PodIp.IsSet()
}

// SetPodIp sets field value
func (o *Pod) SetPodIp(v string) {
	o.PodIp.Set(&v)
}

// GetPodStatus returns the PodStatus field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Pod) GetPodStatus() string {
	if o == nil || o.PodStatus.Get() == nil {
		var ret string
		return ret
	}

	return *o.PodStatus.Get()
}

// GetPodStatusOk returns a tuple with the PodStatus field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pod) GetPodStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PodStatus.Get(), o.PodStatus.IsSet()
}

// SetPodStatus sets field value
func (o *Pod) SetPodStatus(v string) {
	o.PodStatus.Set(&v)
}

// GetPriority returns the Priority field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Pod) GetPriority() int32 {
	if o == nil || o.Priority.Get() == nil {
		var ret int32
		return ret
	}

	return *o.Priority.Get()
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pod) GetPriorityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Priority.Get(), o.Priority.IsSet()
}

// SetPriority sets field value
func (o *Pod) SetPriority(v int32) {
	o.Priority.Set(&v)
}

// GetPriorityClassName returns the PriorityClassName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Pod) GetPriorityClassName() string {
	if o == nil || o.PriorityClassName.Get() == nil {
		var ret string
		return ret
	}

	return *o.PriorityClassName.Get()
}

// GetPriorityClassNameOk returns a tuple with the PriorityClassName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pod) GetPriorityClassNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriorityClassName.Get(), o.PriorityClassName.IsSet()
}

// SetPriorityClassName sets field value
func (o *Pod) SetPriorityClassName(v string) {
	o.PriorityClassName.Set(&v)
}

// GetQosClass returns the QosClass field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Pod) GetQosClass() string {
	if o == nil || o.QosClass.Get() == nil {
		var ret string
		return ret
	}

	return *o.QosClass.Get()
}

// GetQosClassOk returns a tuple with the QosClass field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pod) GetQosClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.QosClass.Get(), o.QosClass.IsSet()
}

// SetQosClass sets field value
func (o *Pod) SetQosClass(v string) {
	o.QosClass.Set(&v)
}

// GetRestarts returns the Restarts field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Pod) GetRestarts() string {
	if o == nil || o.Restarts.Get() == nil {
		var ret string
		return ret
	}

	return *o.Restarts.Get()
}

// GetRestartsOk returns a tuple with the Restarts field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pod) GetRestartsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Restarts.Get(), o.Restarts.IsSet()
}

// SetRestarts sets field value
func (o *Pod) SetRestarts(v string) {
	o.Restarts.Set(&v)
}

// GetStartTime returns the StartTime field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Pod) GetStartTime() time.Time {
	if o == nil || o.StartTime.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.StartTime.Get()
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Pod) GetStartTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartTime.Get(), o.StartTime.IsSet()
}

// SetStartTime sets field value
func (o *Pod) SetStartTime(v time.Time) {
	o.StartTime.Set(&v)
}

// GetUid returns the Uid field value
func (o *Pod) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *Pod) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *Pod) SetUid(v string) {
	o.Uid = v
}

// GetYaml returns the Yaml field value
func (o *Pod) GetYaml() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Yaml
}

// GetYamlOk returns a tuple with the Yaml field value
// and a boolean to check if the value has been set.
func (o *Pod) GetYamlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Yaml, true
}

// SetYaml sets field value
func (o *Pod) SetYaml(v string) {
	o.Yaml = v
}

func (o Pod) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Pod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["age"] = o.Age.Get()
	if o.Annotations != nil {
		toSerialize["annotations"] = o.Annotations
	}
	toSerialize["cluster_id"] = o.ClusterId
	toSerialize["cluster_name"] = o.ClusterName
	if o.ContainerList != nil {
		toSerialize["container_list"] = o.ContainerList
	}
	toSerialize["container_status"] = o.ContainerStatus.Get()
	toSerialize["created_at"] = o.CreatedAt.Get()
	if o.InitContainerList != nil {
		toSerialize["init_container_list"] = o.InitContainerList
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	toSerialize["name"] = o.Name
	toSerialize["namespace_name"] = o.NamespaceName
	toSerialize["node_ip"] = o.NodeIp.Get()
	toSerialize["node_name"] = o.NodeName.Get()
	if o.NodeSelector != nil {
		toSerialize["node_selector"] = o.NodeSelector
	}
	toSerialize["pod_ip"] = o.PodIp.Get()
	toSerialize["pod_status"] = o.PodStatus.Get()
	toSerialize["priority"] = o.Priority.Get()
	toSerialize["priority_class_name"] = o.PriorityClassName.Get()
	toSerialize["qos_class"] = o.QosClass.Get()
	toSerialize["restarts"] = o.Restarts.Get()
	toSerialize["start_time"] = o.StartTime.Get()
	toSerialize["uid"] = o.Uid
	toSerialize["yaml"] = o.Yaml
	return toSerialize, nil
}

func (o *Pod) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"age",
		"annotations",
		"cluster_id",
		"cluster_name",
		"container_list",
		"container_status",
		"created_at",
		"init_container_list",
		"labels",
		"name",
		"namespace_name",
		"node_ip",
		"node_name",
		"node_selector",
		"pod_ip",
		"pod_status",
		"priority",
		"priority_class_name",
		"qos_class",
		"restarts",
		"start_time",
		"uid",
		"yaml",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPod := _Pod{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPod)

	if err != nil {
		return err
	}

	*o = Pod(varPod)

	return err
}

type NullablePod struct {
	value *Pod
	isSet bool
}

func (v NullablePod) Get() *Pod {
	return v.value
}

func (v *NullablePod) Set(val *Pod) {
	v.value = val
	v.isSet = true
}

func (v NullablePod) IsSet() bool {
	return v.isSet
}

func (v *NullablePod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePod(val *Pod) *NullablePod {
	return &NullablePod{value: val, isSet: true}
}

func (v NullablePod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
