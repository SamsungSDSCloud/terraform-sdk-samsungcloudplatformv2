/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ClusterUpgradeSetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterUpgradeSetRequest{}

// ClusterUpgradeSetRequest struct for ClusterUpgradeSetRequest
type ClusterUpgradeSetRequest struct {
	// Kubernetes Version
	KubernetesVersion string `json:"kubernetes_version"`
}

type _ClusterUpgradeSetRequest ClusterUpgradeSetRequest

// NewClusterUpgradeSetRequest instantiates a new ClusterUpgradeSetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterUpgradeSetRequest(kubernetesVersion string) *ClusterUpgradeSetRequest {
	this := ClusterUpgradeSetRequest{}
	this.KubernetesVersion = kubernetesVersion
	return &this
}

// NewClusterUpgradeSetRequestWithDefaults instantiates a new ClusterUpgradeSetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterUpgradeSetRequestWithDefaults() *ClusterUpgradeSetRequest {
	this := ClusterUpgradeSetRequest{}
	return &this
}

// GetKubernetesVersion returns the KubernetesVersion field value
func (o *ClusterUpgradeSetRequest) GetKubernetesVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KubernetesVersion
}

// GetKubernetesVersionOk returns a tuple with the KubernetesVersion field value
// and a boolean to check if the value has been set.
func (o *ClusterUpgradeSetRequest) GetKubernetesVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KubernetesVersion, true
}

// SetKubernetesVersion sets field value
func (o *ClusterUpgradeSetRequest) SetKubernetesVersion(v string) {
	o.KubernetesVersion = v
}

func (o ClusterUpgradeSetRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterUpgradeSetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["kubernetes_version"] = o.KubernetesVersion
	return toSerialize, nil
}

func (o *ClusterUpgradeSetRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"kubernetes_version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterUpgradeSetRequest := _ClusterUpgradeSetRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClusterUpgradeSetRequest)

	if err != nil {
		return err
	}

	*o = ClusterUpgradeSetRequest(varClusterUpgradeSetRequest)

	return err
}

type NullableClusterUpgradeSetRequest struct {
	value *ClusterUpgradeSetRequest
	isSet bool
}

func (v NullableClusterUpgradeSetRequest) Get() *ClusterUpgradeSetRequest {
	return v.value
}

func (v *NullableClusterUpgradeSetRequest) Set(val *ClusterUpgradeSetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterUpgradeSetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterUpgradeSetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterUpgradeSetRequest(val *ClusterUpgradeSetRequest) *NullableClusterUpgradeSetRequest {
	return &NullableClusterUpgradeSetRequest{value: val, isSet: true}
}

func (v NullableClusterUpgradeSetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterUpgradeSetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
