/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the PodSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PodSummary{}

// PodSummary struct for PodSummary
type PodSummary struct {
	Age NullableString `json:"age"`
	// Cluster ID
	ClusterId       string         `json:"cluster_id"`
	ContainerStatus NullableString `json:"container_status"`
	CreatedAt       NullableTime   `json:"created_at"`
	// Pod Name
	Name string `json:"name"`
	// Namespace Name
	NamespaceName string         `json:"namespace_name"`
	NodeName      NullableString `json:"node_name"`
	PodIp         NullableString `json:"pod_ip"`
	PodStatus     NullableString `json:"pod_status"`
	Restarts      NullableString `json:"restarts"`
	// Resource ID
	Uid string `json:"uid"`
}

type _PodSummary PodSummary

// NewPodSummary instantiates a new PodSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPodSummary(age NullableString, clusterId string, containerStatus NullableString, createdAt NullableTime, name string, namespaceName string, nodeName NullableString, podIp NullableString, podStatus NullableString, restarts NullableString, uid string) *PodSummary {
	this := PodSummary{}
	this.Age = age
	this.ClusterId = clusterId
	this.ContainerStatus = containerStatus
	this.CreatedAt = createdAt
	this.Name = name
	this.NamespaceName = namespaceName
	this.NodeName = nodeName
	this.PodIp = podIp
	this.PodStatus = podStatus
	this.Restarts = restarts
	this.Uid = uid
	return &this
}

// NewPodSummaryWithDefaults instantiates a new PodSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPodSummaryWithDefaults() *PodSummary {
	this := PodSummary{}
	return &this
}

// GetAge returns the Age field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PodSummary) GetAge() string {
	if o == nil || o.Age.Get() == nil {
		var ret string
		return ret
	}

	return *o.Age.Get()
}

// GetAgeOk returns a tuple with the Age field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PodSummary) GetAgeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Age.Get(), o.Age.IsSet()
}

// SetAge sets field value
func (o *PodSummary) SetAge(v string) {
	o.Age.Set(&v)
}

// GetClusterId returns the ClusterId field value
func (o *PodSummary) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *PodSummary) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *PodSummary) SetClusterId(v string) {
	o.ClusterId = v
}

// GetContainerStatus returns the ContainerStatus field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PodSummary) GetContainerStatus() string {
	if o == nil || o.ContainerStatus.Get() == nil {
		var ret string
		return ret
	}

	return *o.ContainerStatus.Get()
}

// GetContainerStatusOk returns a tuple with the ContainerStatus field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PodSummary) GetContainerStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContainerStatus.Get(), o.ContainerStatus.IsSet()
}

// SetContainerStatus sets field value
func (o *PodSummary) SetContainerStatus(v string) {
	o.ContainerStatus.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *PodSummary) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PodSummary) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// SetCreatedAt sets field value
func (o *PodSummary) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}

// GetName returns the Name field value
func (o *PodSummary) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PodSummary) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PodSummary) SetName(v string) {
	o.Name = v
}

// GetNamespaceName returns the NamespaceName field value
func (o *PodSummary) GetNamespaceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NamespaceName
}

// GetNamespaceNameOk returns a tuple with the NamespaceName field value
// and a boolean to check if the value has been set.
func (o *PodSummary) GetNamespaceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NamespaceName, true
}

// SetNamespaceName sets field value
func (o *PodSummary) SetNamespaceName(v string) {
	o.NamespaceName = v
}

// GetNodeName returns the NodeName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PodSummary) GetNodeName() string {
	if o == nil || o.NodeName.Get() == nil {
		var ret string
		return ret
	}

	return *o.NodeName.Get()
}

// GetNodeNameOk returns a tuple with the NodeName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PodSummary) GetNodeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NodeName.Get(), o.NodeName.IsSet()
}

// SetNodeName sets field value
func (o *PodSummary) SetNodeName(v string) {
	o.NodeName.Set(&v)
}

// GetPodIp returns the PodIp field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PodSummary) GetPodIp() string {
	if o == nil || o.PodIp.Get() == nil {
		var ret string
		return ret
	}

	return *o.PodIp.Get()
}

// GetPodIpOk returns a tuple with the PodIp field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PodSummary) GetPodIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PodIp.Get(), o.PodIp.IsSet()
}

// SetPodIp sets field value
func (o *PodSummary) SetPodIp(v string) {
	o.PodIp.Set(&v)
}

// GetPodStatus returns the PodStatus field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PodSummary) GetPodStatus() string {
	if o == nil || o.PodStatus.Get() == nil {
		var ret string
		return ret
	}

	return *o.PodStatus.Get()
}

// GetPodStatusOk returns a tuple with the PodStatus field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PodSummary) GetPodStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PodStatus.Get(), o.PodStatus.IsSet()
}

// SetPodStatus sets field value
func (o *PodSummary) SetPodStatus(v string) {
	o.PodStatus.Set(&v)
}

// GetRestarts returns the Restarts field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PodSummary) GetRestarts() string {
	if o == nil || o.Restarts.Get() == nil {
		var ret string
		return ret
	}

	return *o.Restarts.Get()
}

// GetRestartsOk returns a tuple with the Restarts field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PodSummary) GetRestartsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Restarts.Get(), o.Restarts.IsSet()
}

// SetRestarts sets field value
func (o *PodSummary) SetRestarts(v string) {
	o.Restarts.Set(&v)
}

// GetUid returns the Uid field value
func (o *PodSummary) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *PodSummary) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *PodSummary) SetUid(v string) {
	o.Uid = v
}

func (o PodSummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PodSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["age"] = o.Age.Get()
	toSerialize["cluster_id"] = o.ClusterId
	toSerialize["container_status"] = o.ContainerStatus.Get()
	toSerialize["created_at"] = o.CreatedAt.Get()
	toSerialize["name"] = o.Name
	toSerialize["namespace_name"] = o.NamespaceName
	toSerialize["node_name"] = o.NodeName.Get()
	toSerialize["pod_ip"] = o.PodIp.Get()
	toSerialize["pod_status"] = o.PodStatus.Get()
	toSerialize["restarts"] = o.Restarts.Get()
	toSerialize["uid"] = o.Uid
	return toSerialize, nil
}

func (o *PodSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"age",
		"cluster_id",
		"container_status",
		"created_at",
		"name",
		"namespace_name",
		"node_name",
		"pod_ip",
		"pod_status",
		"restarts",
		"uid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPodSummary := _PodSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPodSummary)

	if err != nil {
		return err
	}

	*o = PodSummary(varPodSummary)

	return err
}

type NullablePodSummary struct {
	value *PodSummary
	isSet bool
}

func (v NullablePodSummary) Get() *PodSummary {
	return v.value
}

func (v *NullablePodSummary) Set(val *PodSummary) {
	v.value = val
	v.isSet = true
}

func (v NullablePodSummary) IsSet() bool {
	return v.isSet
}

func (v *NullablePodSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePodSummary(val *PodSummary) *NullablePodSummary {
	return &NullablePodSummary{value: val, isSet: true}
}

func (v NullablePodSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePodSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
