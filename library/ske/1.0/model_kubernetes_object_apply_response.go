/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"encoding/json"
)

// checks if the KubernetesObjectApplyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubernetesObjectApplyResponse{}

// KubernetesObjectApplyResponse struct for KubernetesObjectApplyResponse
type KubernetesObjectApplyResponse struct {
	// Kubectl result
	KubectlResult *string `json:"kubectl_result,omitempty"`
	// YAML
	Yaml *string `json:"yaml,omitempty"`
}

// NewKubernetesObjectApplyResponse instantiates a new KubernetesObjectApplyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesObjectApplyResponse() *KubernetesObjectApplyResponse {
	this := KubernetesObjectApplyResponse{}
	return &this
}

// NewKubernetesObjectApplyResponseWithDefaults instantiates a new KubernetesObjectApplyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesObjectApplyResponseWithDefaults() *KubernetesObjectApplyResponse {
	this := KubernetesObjectApplyResponse{}
	return &this
}

// GetKubectlResult returns the KubectlResult field value if set, zero value otherwise.
func (o *KubernetesObjectApplyResponse) GetKubectlResult() string {
	if o == nil || IsNil(o.KubectlResult) {
		var ret string
		return ret
	}
	return *o.KubectlResult
}

// GetKubectlResultOk returns a tuple with the KubectlResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesObjectApplyResponse) GetKubectlResultOk() (*string, bool) {
	if o == nil || IsNil(o.KubectlResult) {
		return nil, false
	}
	return o.KubectlResult, true
}

// HasKubectlResult returns a boolean if a field has been set.
func (o *KubernetesObjectApplyResponse) HasKubectlResult() bool {
	if o != nil && !IsNil(o.KubectlResult) {
		return true
	}

	return false
}

// SetKubectlResult gets a reference to the given string and assigns it to the KubectlResult field.
func (o *KubernetesObjectApplyResponse) SetKubectlResult(v string) {
	o.KubectlResult = &v
}

// GetYaml returns the Yaml field value if set, zero value otherwise.
func (o *KubernetesObjectApplyResponse) GetYaml() string {
	if o == nil || IsNil(o.Yaml) {
		var ret string
		return ret
	}
	return *o.Yaml
}

// GetYamlOk returns a tuple with the Yaml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesObjectApplyResponse) GetYamlOk() (*string, bool) {
	if o == nil || IsNil(o.Yaml) {
		return nil, false
	}
	return o.Yaml, true
}

// HasYaml returns a boolean if a field has been set.
func (o *KubernetesObjectApplyResponse) HasYaml() bool {
	if o != nil && !IsNil(o.Yaml) {
		return true
	}

	return false
}

// SetYaml gets a reference to the given string and assigns it to the Yaml field.
func (o *KubernetesObjectApplyResponse) SetYaml(v string) {
	o.Yaml = &v
}

func (o KubernetesObjectApplyResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubernetesObjectApplyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.KubectlResult) {
		toSerialize["kubectl_result"] = o.KubectlResult
	}
	if !IsNil(o.Yaml) {
		toSerialize["yaml"] = o.Yaml
	}
	return toSerialize, nil
}

type NullableKubernetesObjectApplyResponse struct {
	value *KubernetesObjectApplyResponse
	isSet bool
}

func (v NullableKubernetesObjectApplyResponse) Get() *KubernetesObjectApplyResponse {
	return v.value
}

func (v *NullableKubernetesObjectApplyResponse) Set(val *KubernetesObjectApplyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesObjectApplyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesObjectApplyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesObjectApplyResponse(val *KubernetesObjectApplyResponse) *NullableKubernetesObjectApplyResponse {
	return &NullableKubernetesObjectApplyResponse{value: val, isSet: true}
}

func (v NullableKubernetesObjectApplyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesObjectApplyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
