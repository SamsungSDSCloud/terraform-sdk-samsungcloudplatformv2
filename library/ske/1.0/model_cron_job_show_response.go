/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CronJobShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CronJobShowResponse{}

// CronJobShowResponse struct for CronJobShowResponse
type CronJobShowResponse struct {
	CronJob CronJob `json:"cron_job"`
}

type _CronJobShowResponse CronJobShowResponse

// NewCronJobShowResponse instantiates a new CronJobShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCronJobShowResponse(cronJob CronJob) *CronJobShowResponse {
	this := CronJobShowResponse{}
	this.CronJob = cronJob
	return &this
}

// NewCronJobShowResponseWithDefaults instantiates a new CronJobShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCronJobShowResponseWithDefaults() *CronJobShowResponse {
	this := CronJobShowResponse{}
	return &this
}

// GetCronJob returns the CronJob field value
func (o *CronJobShowResponse) GetCronJob() CronJob {
	if o == nil {
		var ret CronJob
		return ret
	}

	return o.CronJob
}

// GetCronJobOk returns a tuple with the CronJob field value
// and a boolean to check if the value has been set.
func (o *CronJobShowResponse) GetCronJobOk() (*CronJob, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CronJob, true
}

// SetCronJob sets field value
func (o *CronJobShowResponse) SetCronJob(v CronJob) {
	o.CronJob = v
}

func (o CronJobShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CronJobShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cron_job"] = o.CronJob
	return toSerialize, nil
}

func (o *CronJobShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cron_job",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCronJobShowResponse := _CronJobShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCronJobShowResponse)

	if err != nil {
		return err
	}

	*o = CronJobShowResponse(varCronJobShowResponse)

	return err
}

type NullableCronJobShowResponse struct {
	value *CronJobShowResponse
	isSet bool
}

func (v NullableCronJobShowResponse) Get() *CronJobShowResponse {
	return v.value
}

func (v *NullableCronJobShowResponse) Set(val *CronJobShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCronJobShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCronJobShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCronJobShowResponse(val *CronJobShowResponse) *NullableCronJobShowResponse {
	return &NullableCronJobShowResponse{value: val, isSet: true}
}

func (v NullableCronJobShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCronJobShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
