/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the RoleBindingShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleBindingShowResponse{}

// RoleBindingShowResponse struct for RoleBindingShowResponse
type RoleBindingShowResponse struct {
	RoleBinding RoleBinding `json:"role_binding"`
}

type _RoleBindingShowResponse RoleBindingShowResponse

// NewRoleBindingShowResponse instantiates a new RoleBindingShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleBindingShowResponse(roleBinding RoleBinding) *RoleBindingShowResponse {
	this := RoleBindingShowResponse{}
	this.RoleBinding = roleBinding
	return &this
}

// NewRoleBindingShowResponseWithDefaults instantiates a new RoleBindingShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleBindingShowResponseWithDefaults() *RoleBindingShowResponse {
	this := RoleBindingShowResponse{}
	return &this
}

// GetRoleBinding returns the RoleBinding field value
func (o *RoleBindingShowResponse) GetRoleBinding() RoleBinding {
	if o == nil {
		var ret RoleBinding
		return ret
	}

	return o.RoleBinding
}

// GetRoleBindingOk returns a tuple with the RoleBinding field value
// and a boolean to check if the value has been set.
func (o *RoleBindingShowResponse) GetRoleBindingOk() (*RoleBinding, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleBinding, true
}

// SetRoleBinding sets field value
func (o *RoleBindingShowResponse) SetRoleBinding(v RoleBinding) {
	o.RoleBinding = v
}

func (o RoleBindingShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleBindingShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["role_binding"] = o.RoleBinding
	return toSerialize, nil
}

func (o *RoleBindingShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"role_binding",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoleBindingShowResponse := _RoleBindingShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRoleBindingShowResponse)

	if err != nil {
		return err
	}

	*o = RoleBindingShowResponse(varRoleBindingShowResponse)

	return err
}

type NullableRoleBindingShowResponse struct {
	value *RoleBindingShowResponse
	isSet bool
}

func (v NullableRoleBindingShowResponse) Get() *RoleBindingShowResponse {
	return v.value
}

func (v *NullableRoleBindingShowResponse) Set(val *RoleBindingShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleBindingShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleBindingShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleBindingShowResponse(val *RoleBindingShowResponse) *NullableRoleBindingShowResponse {
	return &NullableRoleBindingShowResponse{value: val, isSet: true}
}

func (v NullableRoleBindingShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleBindingShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
