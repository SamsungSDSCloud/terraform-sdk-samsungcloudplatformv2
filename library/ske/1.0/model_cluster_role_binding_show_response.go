/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ClusterRoleBindingShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterRoleBindingShowResponse{}

// ClusterRoleBindingShowResponse struct for ClusterRoleBindingShowResponse
type ClusterRoleBindingShowResponse struct {
	ClusterRoleBinding ClusterRoleBinding `json:"cluster_role_binding"`
}

type _ClusterRoleBindingShowResponse ClusterRoleBindingShowResponse

// NewClusterRoleBindingShowResponse instantiates a new ClusterRoleBindingShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterRoleBindingShowResponse(clusterRoleBinding ClusterRoleBinding) *ClusterRoleBindingShowResponse {
	this := ClusterRoleBindingShowResponse{}
	this.ClusterRoleBinding = clusterRoleBinding
	return &this
}

// NewClusterRoleBindingShowResponseWithDefaults instantiates a new ClusterRoleBindingShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterRoleBindingShowResponseWithDefaults() *ClusterRoleBindingShowResponse {
	this := ClusterRoleBindingShowResponse{}
	return &this
}

// GetClusterRoleBinding returns the ClusterRoleBinding field value
func (o *ClusterRoleBindingShowResponse) GetClusterRoleBinding() ClusterRoleBinding {
	if o == nil {
		var ret ClusterRoleBinding
		return ret
	}

	return o.ClusterRoleBinding
}

// GetClusterRoleBindingOk returns a tuple with the ClusterRoleBinding field value
// and a boolean to check if the value has been set.
func (o *ClusterRoleBindingShowResponse) GetClusterRoleBindingOk() (*ClusterRoleBinding, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterRoleBinding, true
}

// SetClusterRoleBinding sets field value
func (o *ClusterRoleBindingShowResponse) SetClusterRoleBinding(v ClusterRoleBinding) {
	o.ClusterRoleBinding = v
}

func (o ClusterRoleBindingShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterRoleBindingShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cluster_role_binding"] = o.ClusterRoleBinding
	return toSerialize, nil
}

func (o *ClusterRoleBindingShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cluster_role_binding",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterRoleBindingShowResponse := _ClusterRoleBindingShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClusterRoleBindingShowResponse)

	if err != nil {
		return err
	}

	*o = ClusterRoleBindingShowResponse(varClusterRoleBindingShowResponse)

	return err
}

type NullableClusterRoleBindingShowResponse struct {
	value *ClusterRoleBindingShowResponse
	isSet bool
}

func (v NullableClusterRoleBindingShowResponse) Get() *ClusterRoleBindingShowResponse {
	return v.value
}

func (v *NullableClusterRoleBindingShowResponse) Set(val *ClusterRoleBindingShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterRoleBindingShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterRoleBindingShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterRoleBindingShowResponse(val *ClusterRoleBindingShowResponse) *NullableClusterRoleBindingShowResponse {
	return &NullableClusterRoleBindingShowResponse{value: val, isSet: true}
}

func (v NullableClusterRoleBindingShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterRoleBindingShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
