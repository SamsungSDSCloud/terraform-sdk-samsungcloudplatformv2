/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the EndpointShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EndpointShowResponse{}

// EndpointShowResponse struct for EndpointShowResponse
type EndpointShowResponse struct {
	Endpoint Endpoint `json:"endpoint"`
}

type _EndpointShowResponse EndpointShowResponse

// NewEndpointShowResponse instantiates a new EndpointShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointShowResponse(endpoint Endpoint) *EndpointShowResponse {
	this := EndpointShowResponse{}
	this.Endpoint = endpoint
	return &this
}

// NewEndpointShowResponseWithDefaults instantiates a new EndpointShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointShowResponseWithDefaults() *EndpointShowResponse {
	this := EndpointShowResponse{}
	return &this
}

// GetEndpoint returns the Endpoint field value
func (o *EndpointShowResponse) GetEndpoint() Endpoint {
	if o == nil {
		var ret Endpoint
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *EndpointShowResponse) GetEndpointOk() (*Endpoint, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *EndpointShowResponse) SetEndpoint(v Endpoint) {
	o.Endpoint = v
}

func (o EndpointShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["endpoint"] = o.Endpoint
	return toSerialize, nil
}

func (o *EndpointShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"endpoint",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEndpointShowResponse := _EndpointShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEndpointShowResponse)

	if err != nil {
		return err
	}

	*o = EndpointShowResponse(varEndpointShowResponse)

	return err
}

type NullableEndpointShowResponse struct {
	value *EndpointShowResponse
	isSet bool
}

func (v NullableEndpointShowResponse) Get() *EndpointShowResponse {
	return v.value
}

func (v *NullableEndpointShowResponse) Set(val *EndpointShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointShowResponse(val *EndpointShowResponse) *NullableEndpointShowResponse {
	return &NullableEndpointShowResponse{value: val, isSet: true}
}

func (v NullableEndpointShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
