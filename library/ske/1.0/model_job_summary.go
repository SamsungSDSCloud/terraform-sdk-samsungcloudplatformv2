/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the JobSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobSummary{}

// JobSummary struct for JobSummary
type JobSummary struct {
	// Age
	Age string `json:"age"`
	// Annotations
	Annotations []string `json:"annotations"`
	// Cluster ID
	ClusterId string `json:"cluster_id"`
	// Completion
	Completion string `json:"completion"`
	// Created At
	CreatedAt time.Time    `json:"created_at"`
	EndAt     NullableTime `json:"end_at"`
	// Labels
	Labels []string `json:"labels"`
	// Job Name
	Name string `json:"name"`
	// Namespace Name
	NamespaceName string         `json:"namespace_name"`
	RunningAge    NullableString `json:"running_age"`
	// Selector Details
	SelectorDetails []string `json:"selector_details"`
	// Selectors
	Selectors []string `json:"selectors"`
	// Resource ID
	Uid string `json:"uid"`
}

type _JobSummary JobSummary

// NewJobSummary instantiates a new JobSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobSummary(age string, annotations []string, clusterId string, completion string, createdAt time.Time, endAt NullableTime, labels []string, name string, namespaceName string, runningAge NullableString, selectorDetails []string, selectors []string, uid string) *JobSummary {
	this := JobSummary{}
	this.Age = age
	this.Annotations = annotations
	this.ClusterId = clusterId
	this.Completion = completion
	this.CreatedAt = createdAt
	this.EndAt = endAt
	this.Labels = labels
	this.Name = name
	this.NamespaceName = namespaceName
	this.RunningAge = runningAge
	this.SelectorDetails = selectorDetails
	this.Selectors = selectors
	this.Uid = uid
	return &this
}

// NewJobSummaryWithDefaults instantiates a new JobSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobSummaryWithDefaults() *JobSummary {
	this := JobSummary{}
	return &this
}

// GetAge returns the Age field value
func (o *JobSummary) GetAge() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Age
}

// GetAgeOk returns a tuple with the Age field value
// and a boolean to check if the value has been set.
func (o *JobSummary) GetAgeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Age, true
}

// SetAge sets field value
func (o *JobSummary) SetAge(v string) {
	o.Age = v
}

// GetAnnotations returns the Annotations field value
func (o *JobSummary) GetAnnotations() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value
// and a boolean to check if the value has been set.
func (o *JobSummary) GetAnnotationsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Annotations, true
}

// SetAnnotations sets field value
func (o *JobSummary) SetAnnotations(v []string) {
	o.Annotations = v
}

// GetClusterId returns the ClusterId field value
func (o *JobSummary) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *JobSummary) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *JobSummary) SetClusterId(v string) {
	o.ClusterId = v
}

// GetCompletion returns the Completion field value
func (o *JobSummary) GetCompletion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Completion
}

// GetCompletionOk returns a tuple with the Completion field value
// and a boolean to check if the value has been set.
func (o *JobSummary) GetCompletionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Completion, true
}

// SetCompletion sets field value
func (o *JobSummary) SetCompletion(v string) {
	o.Completion = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *JobSummary) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *JobSummary) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *JobSummary) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetEndAt returns the EndAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *JobSummary) GetEndAt() time.Time {
	if o == nil || o.EndAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.EndAt.Get()
}

// GetEndAtOk returns a tuple with the EndAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobSummary) GetEndAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndAt.Get(), o.EndAt.IsSet()
}

// SetEndAt sets field value
func (o *JobSummary) SetEndAt(v time.Time) {
	o.EndAt.Set(&v)
}

// GetLabels returns the Labels field value
func (o *JobSummary) GetLabels() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *JobSummary) GetLabelsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Labels, true
}

// SetLabels sets field value
func (o *JobSummary) SetLabels(v []string) {
	o.Labels = v
}

// GetName returns the Name field value
func (o *JobSummary) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *JobSummary) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *JobSummary) SetName(v string) {
	o.Name = v
}

// GetNamespaceName returns the NamespaceName field value
func (o *JobSummary) GetNamespaceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NamespaceName
}

// GetNamespaceNameOk returns a tuple with the NamespaceName field value
// and a boolean to check if the value has been set.
func (o *JobSummary) GetNamespaceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NamespaceName, true
}

// SetNamespaceName sets field value
func (o *JobSummary) SetNamespaceName(v string) {
	o.NamespaceName = v
}

// GetRunningAge returns the RunningAge field value
// If the value is explicit nil, the zero value for string will be returned
func (o *JobSummary) GetRunningAge() string {
	if o == nil || o.RunningAge.Get() == nil {
		var ret string
		return ret
	}

	return *o.RunningAge.Get()
}

// GetRunningAgeOk returns a tuple with the RunningAge field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobSummary) GetRunningAgeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunningAge.Get(), o.RunningAge.IsSet()
}

// SetRunningAge sets field value
func (o *JobSummary) SetRunningAge(v string) {
	o.RunningAge.Set(&v)
}

// GetSelectorDetails returns the SelectorDetails field value
func (o *JobSummary) GetSelectorDetails() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SelectorDetails
}

// GetSelectorDetailsOk returns a tuple with the SelectorDetails field value
// and a boolean to check if the value has been set.
func (o *JobSummary) GetSelectorDetailsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SelectorDetails, true
}

// SetSelectorDetails sets field value
func (o *JobSummary) SetSelectorDetails(v []string) {
	o.SelectorDetails = v
}

// GetSelectors returns the Selectors field value
func (o *JobSummary) GetSelectors() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Selectors
}

// GetSelectorsOk returns a tuple with the Selectors field value
// and a boolean to check if the value has been set.
func (o *JobSummary) GetSelectorsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Selectors, true
}

// SetSelectors sets field value
func (o *JobSummary) SetSelectors(v []string) {
	o.Selectors = v
}

// GetUid returns the Uid field value
func (o *JobSummary) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *JobSummary) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *JobSummary) SetUid(v string) {
	o.Uid = v
}

func (o JobSummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["age"] = o.Age
	toSerialize["annotations"] = o.Annotations
	toSerialize["cluster_id"] = o.ClusterId
	toSerialize["completion"] = o.Completion
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["end_at"] = o.EndAt.Get()
	toSerialize["labels"] = o.Labels
	toSerialize["name"] = o.Name
	toSerialize["namespace_name"] = o.NamespaceName
	toSerialize["running_age"] = o.RunningAge.Get()
	toSerialize["selector_details"] = o.SelectorDetails
	toSerialize["selectors"] = o.Selectors
	toSerialize["uid"] = o.Uid
	return toSerialize, nil
}

func (o *JobSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"age",
		"annotations",
		"cluster_id",
		"completion",
		"created_at",
		"end_at",
		"labels",
		"name",
		"namespace_name",
		"running_age",
		"selector_details",
		"selectors",
		"uid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varJobSummary := _JobSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varJobSummary)

	if err != nil {
		return err
	}

	*o = JobSummary(varJobSummary)

	return err
}

type NullableJobSummary struct {
	value *JobSummary
	isSet bool
}

func (v NullableJobSummary) Get() *JobSummary {
	return v.value
}

func (v *NullableJobSummary) Set(val *JobSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableJobSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableJobSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobSummary(val *JobSummary) *NullableJobSummary {
	return &NullableJobSummary{value: val, isSet: true}
}

func (v NullableJobSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
