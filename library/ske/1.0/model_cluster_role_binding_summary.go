/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ClusterRoleBindingSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterRoleBindingSummary{}

// ClusterRoleBindingSummary struct for ClusterRoleBindingSummary
type ClusterRoleBindingSummary struct {
	// Age
	Age string `json:"age"`
	// Cluster ID
	ClusterId string `json:"cluster_id"`
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Groups
	Groups []string `json:"groups"`
	// Cluster Role Binding Name
	Name string `json:"name"`
	// Role
	Role RoleRef `json:"role"`
	// Service Accounts
	ServiceAccounts []string `json:"service_accounts"`
	// Resource ID
	Uid string `json:"uid"`
	// Users
	Users []string `json:"users"`
}

type _ClusterRoleBindingSummary ClusterRoleBindingSummary

// NewClusterRoleBindingSummary instantiates a new ClusterRoleBindingSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterRoleBindingSummary(age string, clusterId string, createdAt time.Time, groups []string, name string, role RoleRef, serviceAccounts []string, uid string, users []string) *ClusterRoleBindingSummary {
	this := ClusterRoleBindingSummary{}
	this.Age = age
	this.ClusterId = clusterId
	this.CreatedAt = createdAt
	this.Groups = groups
	this.Name = name
	this.Role = role
	this.ServiceAccounts = serviceAccounts
	this.Uid = uid
	this.Users = users
	return &this
}

// NewClusterRoleBindingSummaryWithDefaults instantiates a new ClusterRoleBindingSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterRoleBindingSummaryWithDefaults() *ClusterRoleBindingSummary {
	this := ClusterRoleBindingSummary{}
	return &this
}

// GetAge returns the Age field value
func (o *ClusterRoleBindingSummary) GetAge() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Age
}

// GetAgeOk returns a tuple with the Age field value
// and a boolean to check if the value has been set.
func (o *ClusterRoleBindingSummary) GetAgeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Age, true
}

// SetAge sets field value
func (o *ClusterRoleBindingSummary) SetAge(v string) {
	o.Age = v
}

// GetClusterId returns the ClusterId field value
func (o *ClusterRoleBindingSummary) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *ClusterRoleBindingSummary) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *ClusterRoleBindingSummary) SetClusterId(v string) {
	o.ClusterId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ClusterRoleBindingSummary) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ClusterRoleBindingSummary) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ClusterRoleBindingSummary) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetGroups returns the Groups field value
func (o *ClusterRoleBindingSummary) GetGroups() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value
// and a boolean to check if the value has been set.
func (o *ClusterRoleBindingSummary) GetGroupsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Groups, true
}

// SetGroups sets field value
func (o *ClusterRoleBindingSummary) SetGroups(v []string) {
	o.Groups = v
}

// GetName returns the Name field value
func (o *ClusterRoleBindingSummary) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ClusterRoleBindingSummary) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ClusterRoleBindingSummary) SetName(v string) {
	o.Name = v
}

// GetRole returns the Role field value
func (o *ClusterRoleBindingSummary) GetRole() RoleRef {
	if o == nil {
		var ret RoleRef
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *ClusterRoleBindingSummary) GetRoleOk() (*RoleRef, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *ClusterRoleBindingSummary) SetRole(v RoleRef) {
	o.Role = v
}

// GetServiceAccounts returns the ServiceAccounts field value
func (o *ClusterRoleBindingSummary) GetServiceAccounts() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ServiceAccounts
}

// GetServiceAccountsOk returns a tuple with the ServiceAccounts field value
// and a boolean to check if the value has been set.
func (o *ClusterRoleBindingSummary) GetServiceAccountsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceAccounts, true
}

// SetServiceAccounts sets field value
func (o *ClusterRoleBindingSummary) SetServiceAccounts(v []string) {
	o.ServiceAccounts = v
}

// GetUid returns the Uid field value
func (o *ClusterRoleBindingSummary) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *ClusterRoleBindingSummary) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *ClusterRoleBindingSummary) SetUid(v string) {
	o.Uid = v
}

// GetUsers returns the Users field value
func (o *ClusterRoleBindingSummary) GetUsers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Users
}

// GetUsersOk returns a tuple with the Users field value
// and a boolean to check if the value has been set.
func (o *ClusterRoleBindingSummary) GetUsersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Users, true
}

// SetUsers sets field value
func (o *ClusterRoleBindingSummary) SetUsers(v []string) {
	o.Users = v
}

func (o ClusterRoleBindingSummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterRoleBindingSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["age"] = o.Age
	toSerialize["cluster_id"] = o.ClusterId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["groups"] = o.Groups
	toSerialize["name"] = o.Name
	toSerialize["role"] = o.Role
	toSerialize["service_accounts"] = o.ServiceAccounts
	toSerialize["uid"] = o.Uid
	toSerialize["users"] = o.Users
	return toSerialize, nil
}

func (o *ClusterRoleBindingSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"age",
		"cluster_id",
		"created_at",
		"groups",
		"name",
		"role",
		"service_accounts",
		"uid",
		"users",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterRoleBindingSummary := _ClusterRoleBindingSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClusterRoleBindingSummary)

	if err != nil {
		return err
	}

	*o = ClusterRoleBindingSummary(varClusterRoleBindingSummary)

	return err
}

type NullableClusterRoleBindingSummary struct {
	value *ClusterRoleBindingSummary
	isSet bool
}

func (v NullableClusterRoleBindingSummary) Get() *ClusterRoleBindingSummary {
	return v.value
}

func (v *NullableClusterRoleBindingSummary) Set(val *ClusterRoleBindingSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterRoleBindingSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterRoleBindingSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterRoleBindingSummary(val *ClusterRoleBindingSummary) *NullableClusterRoleBindingSummary {
	return &NullableClusterRoleBindingSummary{value: val, isSet: true}
}

func (v NullableClusterRoleBindingSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterRoleBindingSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
