/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the StatefulSetSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatefulSetSummary{}

// StatefulSetSummary struct for StatefulSetSummary
type StatefulSetSummary struct {
	// Age
	Age string `json:"age"`
	// Cluster ID
	ClusterId string `json:"cluster_id"`
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Stateful Set Name
	Name string `json:"name"`
	// Namespace Name
	NamespaceName string `json:"namespace_name"`
	// Ready Replicas
	ReadyReplicas int32 `json:"ready_replicas"`
	// Spec Replicas
	SpecReplicas int32 `json:"spec_replicas"`
	// Status Replicas
	StatusReplicas int32 `json:"status_replicas"`
	// Resource ID
	Uid string `json:"uid"`
}

type _StatefulSetSummary StatefulSetSummary

// NewStatefulSetSummary instantiates a new StatefulSetSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatefulSetSummary(age string, clusterId string, createdAt time.Time, name string, namespaceName string, readyReplicas int32, specReplicas int32, statusReplicas int32, uid string) *StatefulSetSummary {
	this := StatefulSetSummary{}
	this.Age = age
	this.ClusterId = clusterId
	this.CreatedAt = createdAt
	this.Name = name
	this.NamespaceName = namespaceName
	this.ReadyReplicas = readyReplicas
	this.SpecReplicas = specReplicas
	this.StatusReplicas = statusReplicas
	this.Uid = uid
	return &this
}

// NewStatefulSetSummaryWithDefaults instantiates a new StatefulSetSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatefulSetSummaryWithDefaults() *StatefulSetSummary {
	this := StatefulSetSummary{}
	return &this
}

// GetAge returns the Age field value
func (o *StatefulSetSummary) GetAge() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Age
}

// GetAgeOk returns a tuple with the Age field value
// and a boolean to check if the value has been set.
func (o *StatefulSetSummary) GetAgeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Age, true
}

// SetAge sets field value
func (o *StatefulSetSummary) SetAge(v string) {
	o.Age = v
}

// GetClusterId returns the ClusterId field value
func (o *StatefulSetSummary) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *StatefulSetSummary) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *StatefulSetSummary) SetClusterId(v string) {
	o.ClusterId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *StatefulSetSummary) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *StatefulSetSummary) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *StatefulSetSummary) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetName returns the Name field value
func (o *StatefulSetSummary) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *StatefulSetSummary) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *StatefulSetSummary) SetName(v string) {
	o.Name = v
}

// GetNamespaceName returns the NamespaceName field value
func (o *StatefulSetSummary) GetNamespaceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NamespaceName
}

// GetNamespaceNameOk returns a tuple with the NamespaceName field value
// and a boolean to check if the value has been set.
func (o *StatefulSetSummary) GetNamespaceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NamespaceName, true
}

// SetNamespaceName sets field value
func (o *StatefulSetSummary) SetNamespaceName(v string) {
	o.NamespaceName = v
}

// GetReadyReplicas returns the ReadyReplicas field value
func (o *StatefulSetSummary) GetReadyReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ReadyReplicas
}

// GetReadyReplicasOk returns a tuple with the ReadyReplicas field value
// and a boolean to check if the value has been set.
func (o *StatefulSetSummary) GetReadyReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReadyReplicas, true
}

// SetReadyReplicas sets field value
func (o *StatefulSetSummary) SetReadyReplicas(v int32) {
	o.ReadyReplicas = v
}

// GetSpecReplicas returns the SpecReplicas field value
func (o *StatefulSetSummary) GetSpecReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SpecReplicas
}

// GetSpecReplicasOk returns a tuple with the SpecReplicas field value
// and a boolean to check if the value has been set.
func (o *StatefulSetSummary) GetSpecReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpecReplicas, true
}

// SetSpecReplicas sets field value
func (o *StatefulSetSummary) SetSpecReplicas(v int32) {
	o.SpecReplicas = v
}

// GetStatusReplicas returns the StatusReplicas field value
func (o *StatefulSetSummary) GetStatusReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StatusReplicas
}

// GetStatusReplicasOk returns a tuple with the StatusReplicas field value
// and a boolean to check if the value has been set.
func (o *StatefulSetSummary) GetStatusReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusReplicas, true
}

// SetStatusReplicas sets field value
func (o *StatefulSetSummary) SetStatusReplicas(v int32) {
	o.StatusReplicas = v
}

// GetUid returns the Uid field value
func (o *StatefulSetSummary) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *StatefulSetSummary) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *StatefulSetSummary) SetUid(v string) {
	o.Uid = v
}

func (o StatefulSetSummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatefulSetSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["age"] = o.Age
	toSerialize["cluster_id"] = o.ClusterId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["name"] = o.Name
	toSerialize["namespace_name"] = o.NamespaceName
	toSerialize["ready_replicas"] = o.ReadyReplicas
	toSerialize["spec_replicas"] = o.SpecReplicas
	toSerialize["status_replicas"] = o.StatusReplicas
	toSerialize["uid"] = o.Uid
	return toSerialize, nil
}

func (o *StatefulSetSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"age",
		"cluster_id",
		"created_at",
		"name",
		"namespace_name",
		"ready_replicas",
		"spec_replicas",
		"status_replicas",
		"uid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStatefulSetSummary := _StatefulSetSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStatefulSetSummary)

	if err != nil {
		return err
	}

	*o = StatefulSetSummary(varStatefulSetSummary)

	return err
}

type NullableStatefulSetSummary struct {
	value *StatefulSetSummary
	isSet bool
}

func (v NullableStatefulSetSummary) Get() *StatefulSetSummary {
	return v.value
}

func (v *NullableStatefulSetSummary) Set(val *StatefulSetSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableStatefulSetSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableStatefulSetSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatefulSetSummary(val *StatefulSetSummary) *NullableStatefulSetSummary {
	return &NullableStatefulSetSummary{value: val, isSet: true}
}

func (v NullableStatefulSetSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatefulSetSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
