/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the DaemonSetSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaemonSetSummary{}

// DaemonSetSummary struct for DaemonSetSummary
type DaemonSetSummary struct {
	// Age
	Age string `json:"age"`
	// Cluster ID
	ClusterId string `json:"cluster_id"`
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Current Number Scheduled
	CurrentNumberScheduled int32 `json:"current_number_scheduled"`
	// Desired Number Scheduled
	DesiredNumberScheduled int32 `json:"desired_number_scheduled"`
	// Daemon Set Name
	Name string `json:"name"`
	// Namespace Name
	NamespaceName string `json:"namespace_name"`
	// Node Selector
	NodeSelector []string `json:"node_selector"`
	// Number Available
	NumberAvailable int32 `json:"number_available"`
	// Number Ready
	NumberReady int32 `json:"number_ready"`
	// Resource ID
	Uid string `json:"uid"`
	// Updated Number Scheduled
	UpdatedNumberScheduled int32 `json:"updated_number_scheduled"`
}

type _DaemonSetSummary DaemonSetSummary

// NewDaemonSetSummary instantiates a new DaemonSetSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaemonSetSummary(age string, clusterId string, createdAt time.Time, currentNumberScheduled int32, desiredNumberScheduled int32, name string, namespaceName string, nodeSelector []string, numberAvailable int32, numberReady int32, uid string, updatedNumberScheduled int32) *DaemonSetSummary {
	this := DaemonSetSummary{}
	this.Age = age
	this.ClusterId = clusterId
	this.CreatedAt = createdAt
	this.CurrentNumberScheduled = currentNumberScheduled
	this.DesiredNumberScheduled = desiredNumberScheduled
	this.Name = name
	this.NamespaceName = namespaceName
	this.NodeSelector = nodeSelector
	this.NumberAvailable = numberAvailable
	this.NumberReady = numberReady
	this.Uid = uid
	this.UpdatedNumberScheduled = updatedNumberScheduled
	return &this
}

// NewDaemonSetSummaryWithDefaults instantiates a new DaemonSetSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaemonSetSummaryWithDefaults() *DaemonSetSummary {
	this := DaemonSetSummary{}
	return &this
}

// GetAge returns the Age field value
func (o *DaemonSetSummary) GetAge() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Age
}

// GetAgeOk returns a tuple with the Age field value
// and a boolean to check if the value has been set.
func (o *DaemonSetSummary) GetAgeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Age, true
}

// SetAge sets field value
func (o *DaemonSetSummary) SetAge(v string) {
	o.Age = v
}

// GetClusterId returns the ClusterId field value
func (o *DaemonSetSummary) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *DaemonSetSummary) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *DaemonSetSummary) SetClusterId(v string) {
	o.ClusterId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *DaemonSetSummary) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *DaemonSetSummary) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *DaemonSetSummary) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCurrentNumberScheduled returns the CurrentNumberScheduled field value
func (o *DaemonSetSummary) GetCurrentNumberScheduled() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CurrentNumberScheduled
}

// GetCurrentNumberScheduledOk returns a tuple with the CurrentNumberScheduled field value
// and a boolean to check if the value has been set.
func (o *DaemonSetSummary) GetCurrentNumberScheduledOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentNumberScheduled, true
}

// SetCurrentNumberScheduled sets field value
func (o *DaemonSetSummary) SetCurrentNumberScheduled(v int32) {
	o.CurrentNumberScheduled = v
}

// GetDesiredNumberScheduled returns the DesiredNumberScheduled field value
func (o *DaemonSetSummary) GetDesiredNumberScheduled() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DesiredNumberScheduled
}

// GetDesiredNumberScheduledOk returns a tuple with the DesiredNumberScheduled field value
// and a boolean to check if the value has been set.
func (o *DaemonSetSummary) GetDesiredNumberScheduledOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DesiredNumberScheduled, true
}

// SetDesiredNumberScheduled sets field value
func (o *DaemonSetSummary) SetDesiredNumberScheduled(v int32) {
	o.DesiredNumberScheduled = v
}

// GetName returns the Name field value
func (o *DaemonSetSummary) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DaemonSetSummary) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DaemonSetSummary) SetName(v string) {
	o.Name = v
}

// GetNamespaceName returns the NamespaceName field value
func (o *DaemonSetSummary) GetNamespaceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NamespaceName
}

// GetNamespaceNameOk returns a tuple with the NamespaceName field value
// and a boolean to check if the value has been set.
func (o *DaemonSetSummary) GetNamespaceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NamespaceName, true
}

// SetNamespaceName sets field value
func (o *DaemonSetSummary) SetNamespaceName(v string) {
	o.NamespaceName = v
}

// GetNodeSelector returns the NodeSelector field value
func (o *DaemonSetSummary) GetNodeSelector() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.NodeSelector
}

// GetNodeSelectorOk returns a tuple with the NodeSelector field value
// and a boolean to check if the value has been set.
func (o *DaemonSetSummary) GetNodeSelectorOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NodeSelector, true
}

// SetNodeSelector sets field value
func (o *DaemonSetSummary) SetNodeSelector(v []string) {
	o.NodeSelector = v
}

// GetNumberAvailable returns the NumberAvailable field value
func (o *DaemonSetSummary) GetNumberAvailable() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumberAvailable
}

// GetNumberAvailableOk returns a tuple with the NumberAvailable field value
// and a boolean to check if the value has been set.
func (o *DaemonSetSummary) GetNumberAvailableOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumberAvailable, true
}

// SetNumberAvailable sets field value
func (o *DaemonSetSummary) SetNumberAvailable(v int32) {
	o.NumberAvailable = v
}

// GetNumberReady returns the NumberReady field value
func (o *DaemonSetSummary) GetNumberReady() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumberReady
}

// GetNumberReadyOk returns a tuple with the NumberReady field value
// and a boolean to check if the value has been set.
func (o *DaemonSetSummary) GetNumberReadyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumberReady, true
}

// SetNumberReady sets field value
func (o *DaemonSetSummary) SetNumberReady(v int32) {
	o.NumberReady = v
}

// GetUid returns the Uid field value
func (o *DaemonSetSummary) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *DaemonSetSummary) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *DaemonSetSummary) SetUid(v string) {
	o.Uid = v
}

// GetUpdatedNumberScheduled returns the UpdatedNumberScheduled field value
func (o *DaemonSetSummary) GetUpdatedNumberScheduled() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UpdatedNumberScheduled
}

// GetUpdatedNumberScheduledOk returns a tuple with the UpdatedNumberScheduled field value
// and a boolean to check if the value has been set.
func (o *DaemonSetSummary) GetUpdatedNumberScheduledOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedNumberScheduled, true
}

// SetUpdatedNumberScheduled sets field value
func (o *DaemonSetSummary) SetUpdatedNumberScheduled(v int32) {
	o.UpdatedNumberScheduled = v
}

func (o DaemonSetSummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaemonSetSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["age"] = o.Age
	toSerialize["cluster_id"] = o.ClusterId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["current_number_scheduled"] = o.CurrentNumberScheduled
	toSerialize["desired_number_scheduled"] = o.DesiredNumberScheduled
	toSerialize["name"] = o.Name
	toSerialize["namespace_name"] = o.NamespaceName
	toSerialize["node_selector"] = o.NodeSelector
	toSerialize["number_available"] = o.NumberAvailable
	toSerialize["number_ready"] = o.NumberReady
	toSerialize["uid"] = o.Uid
	toSerialize["updated_number_scheduled"] = o.UpdatedNumberScheduled
	return toSerialize, nil
}

func (o *DaemonSetSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"age",
		"cluster_id",
		"created_at",
		"current_number_scheduled",
		"desired_number_scheduled",
		"name",
		"namespace_name",
		"node_selector",
		"number_available",
		"number_ready",
		"uid",
		"updated_number_scheduled",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDaemonSetSummary := _DaemonSetSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDaemonSetSummary)

	if err != nil {
		return err
	}

	*o = DaemonSetSummary(varDaemonSetSummary)

	return err
}

type NullableDaemonSetSummary struct {
	value *DaemonSetSummary
	isSet bool
}

func (v NullableDaemonSetSummary) Get() *DaemonSetSummary {
	return v.value
}

func (v *NullableDaemonSetSummary) Set(val *DaemonSetSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableDaemonSetSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableDaemonSetSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaemonSetSummary(val *DaemonSetSummary) *NullableDaemonSetSummary {
	return &NullableDaemonSetSummary{value: val, isSet: true}
}

func (v NullableDaemonSetSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaemonSetSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
