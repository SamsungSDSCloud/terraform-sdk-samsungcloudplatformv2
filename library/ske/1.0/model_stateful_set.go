/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the StatefulSet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatefulSet{}

// StatefulSet struct for StatefulSet
type StatefulSet struct {
	// Age
	Age string `json:"age"`
	// Annotations
	Annotations []string `json:"annotations"`
	// Cluster ID
	ClusterId string `json:"cluster_id"`
	// Cluster Name
	ClusterName string `json:"cluster_name"`
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Labels
	Labels []string `json:"labels"`
	// Stateful Set Name
	Name string `json:"name"`
	// Namespace Name
	NamespaceName string `json:"namespace_name"`
	// Ready Replicas
	ReadyReplicas int32 `json:"ready_replicas"`
	// Selector Details
	SelectorDetails []string `json:"selector_details"`
	// Selectors
	Selectors []string `json:"selectors"`
	// Spec Replicas
	SpecReplicas int32 `json:"spec_replicas"`
	// Status Replicas
	StatusReplicas int32 `json:"status_replicas"`
	// Resource ID
	Uid            string         `json:"uid"`
	UpdateStrategy NullableString `json:"update_strategy"`
	// YAML
	Yaml string `json:"yaml"`
}

type _StatefulSet StatefulSet

// NewStatefulSet instantiates a new StatefulSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatefulSet(age string, annotations []string, clusterId string, clusterName string, createdAt time.Time, labels []string, name string, namespaceName string, readyReplicas int32, selectorDetails []string, selectors []string, specReplicas int32, statusReplicas int32, uid string, updateStrategy NullableString, yaml string) *StatefulSet {
	this := StatefulSet{}
	this.Age = age
	this.Annotations = annotations
	this.ClusterId = clusterId
	this.ClusterName = clusterName
	this.CreatedAt = createdAt
	this.Labels = labels
	this.Name = name
	this.NamespaceName = namespaceName
	this.ReadyReplicas = readyReplicas
	this.SelectorDetails = selectorDetails
	this.Selectors = selectors
	this.SpecReplicas = specReplicas
	this.StatusReplicas = statusReplicas
	this.Uid = uid
	this.UpdateStrategy = updateStrategy
	this.Yaml = yaml
	return &this
}

// NewStatefulSetWithDefaults instantiates a new StatefulSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatefulSetWithDefaults() *StatefulSet {
	this := StatefulSet{}
	return &this
}

// GetAge returns the Age field value
func (o *StatefulSet) GetAge() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Age
}

// GetAgeOk returns a tuple with the Age field value
// and a boolean to check if the value has been set.
func (o *StatefulSet) GetAgeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Age, true
}

// SetAge sets field value
func (o *StatefulSet) SetAge(v string) {
	o.Age = v
}

// GetAnnotations returns the Annotations field value
func (o *StatefulSet) GetAnnotations() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value
// and a boolean to check if the value has been set.
func (o *StatefulSet) GetAnnotationsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Annotations, true
}

// SetAnnotations sets field value
func (o *StatefulSet) SetAnnotations(v []string) {
	o.Annotations = v
}

// GetClusterId returns the ClusterId field value
func (o *StatefulSet) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *StatefulSet) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *StatefulSet) SetClusterId(v string) {
	o.ClusterId = v
}

// GetClusterName returns the ClusterName field value
func (o *StatefulSet) GetClusterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value
// and a boolean to check if the value has been set.
func (o *StatefulSet) GetClusterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterName, true
}

// SetClusterName sets field value
func (o *StatefulSet) SetClusterName(v string) {
	o.ClusterName = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *StatefulSet) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *StatefulSet) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *StatefulSet) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetLabels returns the Labels field value
func (o *StatefulSet) GetLabels() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *StatefulSet) GetLabelsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Labels, true
}

// SetLabels sets field value
func (o *StatefulSet) SetLabels(v []string) {
	o.Labels = v
}

// GetName returns the Name field value
func (o *StatefulSet) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *StatefulSet) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *StatefulSet) SetName(v string) {
	o.Name = v
}

// GetNamespaceName returns the NamespaceName field value
func (o *StatefulSet) GetNamespaceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NamespaceName
}

// GetNamespaceNameOk returns a tuple with the NamespaceName field value
// and a boolean to check if the value has been set.
func (o *StatefulSet) GetNamespaceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NamespaceName, true
}

// SetNamespaceName sets field value
func (o *StatefulSet) SetNamespaceName(v string) {
	o.NamespaceName = v
}

// GetReadyReplicas returns the ReadyReplicas field value
func (o *StatefulSet) GetReadyReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ReadyReplicas
}

// GetReadyReplicasOk returns a tuple with the ReadyReplicas field value
// and a boolean to check if the value has been set.
func (o *StatefulSet) GetReadyReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReadyReplicas, true
}

// SetReadyReplicas sets field value
func (o *StatefulSet) SetReadyReplicas(v int32) {
	o.ReadyReplicas = v
}

// GetSelectorDetails returns the SelectorDetails field value
func (o *StatefulSet) GetSelectorDetails() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SelectorDetails
}

// GetSelectorDetailsOk returns a tuple with the SelectorDetails field value
// and a boolean to check if the value has been set.
func (o *StatefulSet) GetSelectorDetailsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SelectorDetails, true
}

// SetSelectorDetails sets field value
func (o *StatefulSet) SetSelectorDetails(v []string) {
	o.SelectorDetails = v
}

// GetSelectors returns the Selectors field value
func (o *StatefulSet) GetSelectors() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Selectors
}

// GetSelectorsOk returns a tuple with the Selectors field value
// and a boolean to check if the value has been set.
func (o *StatefulSet) GetSelectorsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Selectors, true
}

// SetSelectors sets field value
func (o *StatefulSet) SetSelectors(v []string) {
	o.Selectors = v
}

// GetSpecReplicas returns the SpecReplicas field value
func (o *StatefulSet) GetSpecReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SpecReplicas
}

// GetSpecReplicasOk returns a tuple with the SpecReplicas field value
// and a boolean to check if the value has been set.
func (o *StatefulSet) GetSpecReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpecReplicas, true
}

// SetSpecReplicas sets field value
func (o *StatefulSet) SetSpecReplicas(v int32) {
	o.SpecReplicas = v
}

// GetStatusReplicas returns the StatusReplicas field value
func (o *StatefulSet) GetStatusReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StatusReplicas
}

// GetStatusReplicasOk returns a tuple with the StatusReplicas field value
// and a boolean to check if the value has been set.
func (o *StatefulSet) GetStatusReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusReplicas, true
}

// SetStatusReplicas sets field value
func (o *StatefulSet) SetStatusReplicas(v int32) {
	o.StatusReplicas = v
}

// GetUid returns the Uid field value
func (o *StatefulSet) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *StatefulSet) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *StatefulSet) SetUid(v string) {
	o.Uid = v
}

// GetUpdateStrategy returns the UpdateStrategy field value
// If the value is explicit nil, the zero value for string will be returned
func (o *StatefulSet) GetUpdateStrategy() string {
	if o == nil || o.UpdateStrategy.Get() == nil {
		var ret string
		return ret
	}

	return *o.UpdateStrategy.Get()
}

// GetUpdateStrategyOk returns a tuple with the UpdateStrategy field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StatefulSet) GetUpdateStrategyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdateStrategy.Get(), o.UpdateStrategy.IsSet()
}

// SetUpdateStrategy sets field value
func (o *StatefulSet) SetUpdateStrategy(v string) {
	o.UpdateStrategy.Set(&v)
}

// GetYaml returns the Yaml field value
func (o *StatefulSet) GetYaml() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Yaml
}

// GetYamlOk returns a tuple with the Yaml field value
// and a boolean to check if the value has been set.
func (o *StatefulSet) GetYamlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Yaml, true
}

// SetYaml sets field value
func (o *StatefulSet) SetYaml(v string) {
	o.Yaml = v
}

func (o StatefulSet) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatefulSet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["age"] = o.Age
	toSerialize["annotations"] = o.Annotations
	toSerialize["cluster_id"] = o.ClusterId
	toSerialize["cluster_name"] = o.ClusterName
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["labels"] = o.Labels
	toSerialize["name"] = o.Name
	toSerialize["namespace_name"] = o.NamespaceName
	toSerialize["ready_replicas"] = o.ReadyReplicas
	toSerialize["selector_details"] = o.SelectorDetails
	toSerialize["selectors"] = o.Selectors
	toSerialize["spec_replicas"] = o.SpecReplicas
	toSerialize["status_replicas"] = o.StatusReplicas
	toSerialize["uid"] = o.Uid
	toSerialize["update_strategy"] = o.UpdateStrategy.Get()
	toSerialize["yaml"] = o.Yaml
	return toSerialize, nil
}

func (o *StatefulSet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"age",
		"annotations",
		"cluster_id",
		"cluster_name",
		"created_at",
		"labels",
		"name",
		"namespace_name",
		"ready_replicas",
		"selector_details",
		"selectors",
		"spec_replicas",
		"status_replicas",
		"uid",
		"update_strategy",
		"yaml",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStatefulSet := _StatefulSet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStatefulSet)

	if err != nil {
		return err
	}

	*o = StatefulSet(varStatefulSet)

	return err
}

type NullableStatefulSet struct {
	value *StatefulSet
	isSet bool
}

func (v NullableStatefulSet) Get() *StatefulSet {
	return v.value
}

func (v *NullableStatefulSet) Set(val *StatefulSet) {
	v.value = val
	v.isSet = true
}

func (v NullableStatefulSet) IsSet() bool {
	return v.isSet
}

func (v *NullableStatefulSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatefulSet(val *StatefulSet) *NullableStatefulSet {
	return &NullableStatefulSet{value: val, isSet: true}
}

func (v NullableStatefulSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatefulSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
