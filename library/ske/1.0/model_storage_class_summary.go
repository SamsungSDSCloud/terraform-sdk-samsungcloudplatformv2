/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the StorageClassSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StorageClassSummary{}

// StorageClassSummary struct for StorageClassSummary
type StorageClassSummary struct {
	Age                  NullableString `json:"age"`
	AllowVolumeExpansion NullableString `json:"allow_volume_expansion"`
	// Cluster ID
	ClusterId    string         `json:"cluster_id"`
	CreatedAt    NullableTime   `json:"created_at"`
	DefaultClass NullableString `json:"default_class"`
	// Storage Class Name
	Name            string         `json:"name"`
	Provisioner     NullableString `json:"provisioner"`
	PvReclaimPolicy NullableString `json:"pv_reclaim_policy"`
	// Resource ID
	Uid               string         `json:"uid"`
	VolumeBindingMode NullableString `json:"volume_binding_mode"`
}

type _StorageClassSummary StorageClassSummary

// NewStorageClassSummary instantiates a new StorageClassSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStorageClassSummary(age NullableString, allowVolumeExpansion NullableString, clusterId string, createdAt NullableTime, defaultClass NullableString, name string, provisioner NullableString, pvReclaimPolicy NullableString, uid string, volumeBindingMode NullableString) *StorageClassSummary {
	this := StorageClassSummary{}
	this.Age = age
	this.AllowVolumeExpansion = allowVolumeExpansion
	this.ClusterId = clusterId
	this.CreatedAt = createdAt
	this.DefaultClass = defaultClass
	this.Name = name
	this.Provisioner = provisioner
	this.PvReclaimPolicy = pvReclaimPolicy
	this.Uid = uid
	this.VolumeBindingMode = volumeBindingMode
	return &this
}

// NewStorageClassSummaryWithDefaults instantiates a new StorageClassSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStorageClassSummaryWithDefaults() *StorageClassSummary {
	this := StorageClassSummary{}
	return &this
}

// GetAge returns the Age field value
// If the value is explicit nil, the zero value for string will be returned
func (o *StorageClassSummary) GetAge() string {
	if o == nil || o.Age.Get() == nil {
		var ret string
		return ret
	}

	return *o.Age.Get()
}

// GetAgeOk returns a tuple with the Age field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StorageClassSummary) GetAgeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Age.Get(), o.Age.IsSet()
}

// SetAge sets field value
func (o *StorageClassSummary) SetAge(v string) {
	o.Age.Set(&v)
}

// GetAllowVolumeExpansion returns the AllowVolumeExpansion field value
// If the value is explicit nil, the zero value for string will be returned
func (o *StorageClassSummary) GetAllowVolumeExpansion() string {
	if o == nil || o.AllowVolumeExpansion.Get() == nil {
		var ret string
		return ret
	}

	return *o.AllowVolumeExpansion.Get()
}

// GetAllowVolumeExpansionOk returns a tuple with the AllowVolumeExpansion field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StorageClassSummary) GetAllowVolumeExpansionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowVolumeExpansion.Get(), o.AllowVolumeExpansion.IsSet()
}

// SetAllowVolumeExpansion sets field value
func (o *StorageClassSummary) SetAllowVolumeExpansion(v string) {
	o.AllowVolumeExpansion.Set(&v)
}

// GetClusterId returns the ClusterId field value
func (o *StorageClassSummary) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *StorageClassSummary) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *StorageClassSummary) SetClusterId(v string) {
	o.ClusterId = v
}

// GetCreatedAt returns the CreatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *StorageClassSummary) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StorageClassSummary) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// SetCreatedAt sets field value
func (o *StorageClassSummary) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}

// GetDefaultClass returns the DefaultClass field value
// If the value is explicit nil, the zero value for string will be returned
func (o *StorageClassSummary) GetDefaultClass() string {
	if o == nil || o.DefaultClass.Get() == nil {
		var ret string
		return ret
	}

	return *o.DefaultClass.Get()
}

// GetDefaultClassOk returns a tuple with the DefaultClass field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StorageClassSummary) GetDefaultClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultClass.Get(), o.DefaultClass.IsSet()
}

// SetDefaultClass sets field value
func (o *StorageClassSummary) SetDefaultClass(v string) {
	o.DefaultClass.Set(&v)
}

// GetName returns the Name field value
func (o *StorageClassSummary) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *StorageClassSummary) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *StorageClassSummary) SetName(v string) {
	o.Name = v
}

// GetProvisioner returns the Provisioner field value
// If the value is explicit nil, the zero value for string will be returned
func (o *StorageClassSummary) GetProvisioner() string {
	if o == nil || o.Provisioner.Get() == nil {
		var ret string
		return ret
	}

	return *o.Provisioner.Get()
}

// GetProvisionerOk returns a tuple with the Provisioner field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StorageClassSummary) GetProvisionerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Provisioner.Get(), o.Provisioner.IsSet()
}

// SetProvisioner sets field value
func (o *StorageClassSummary) SetProvisioner(v string) {
	o.Provisioner.Set(&v)
}

// GetPvReclaimPolicy returns the PvReclaimPolicy field value
// If the value is explicit nil, the zero value for string will be returned
func (o *StorageClassSummary) GetPvReclaimPolicy() string {
	if o == nil || o.PvReclaimPolicy.Get() == nil {
		var ret string
		return ret
	}

	return *o.PvReclaimPolicy.Get()
}

// GetPvReclaimPolicyOk returns a tuple with the PvReclaimPolicy field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StorageClassSummary) GetPvReclaimPolicyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PvReclaimPolicy.Get(), o.PvReclaimPolicy.IsSet()
}

// SetPvReclaimPolicy sets field value
func (o *StorageClassSummary) SetPvReclaimPolicy(v string) {
	o.PvReclaimPolicy.Set(&v)
}

// GetUid returns the Uid field value
func (o *StorageClassSummary) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *StorageClassSummary) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *StorageClassSummary) SetUid(v string) {
	o.Uid = v
}

// GetVolumeBindingMode returns the VolumeBindingMode field value
// If the value is explicit nil, the zero value for string will be returned
func (o *StorageClassSummary) GetVolumeBindingMode() string {
	if o == nil || o.VolumeBindingMode.Get() == nil {
		var ret string
		return ret
	}

	return *o.VolumeBindingMode.Get()
}

// GetVolumeBindingModeOk returns a tuple with the VolumeBindingMode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StorageClassSummary) GetVolumeBindingModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumeBindingMode.Get(), o.VolumeBindingMode.IsSet()
}

// SetVolumeBindingMode sets field value
func (o *StorageClassSummary) SetVolumeBindingMode(v string) {
	o.VolumeBindingMode.Set(&v)
}

func (o StorageClassSummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StorageClassSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["age"] = o.Age.Get()
	toSerialize["allow_volume_expansion"] = o.AllowVolumeExpansion.Get()
	toSerialize["cluster_id"] = o.ClusterId
	toSerialize["created_at"] = o.CreatedAt.Get()
	toSerialize["default_class"] = o.DefaultClass.Get()
	toSerialize["name"] = o.Name
	toSerialize["provisioner"] = o.Provisioner.Get()
	toSerialize["pv_reclaim_policy"] = o.PvReclaimPolicy.Get()
	toSerialize["uid"] = o.Uid
	toSerialize["volume_binding_mode"] = o.VolumeBindingMode.Get()
	return toSerialize, nil
}

func (o *StorageClassSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"age",
		"allow_volume_expansion",
		"cluster_id",
		"created_at",
		"default_class",
		"name",
		"provisioner",
		"pv_reclaim_policy",
		"uid",
		"volume_binding_mode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStorageClassSummary := _StorageClassSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStorageClassSummary)

	if err != nil {
		return err
	}

	*o = StorageClassSummary(varStorageClassSummary)

	return err
}

type NullableStorageClassSummary struct {
	value *StorageClassSummary
	isSet bool
}

func (v NullableStorageClassSummary) Get() *StorageClassSummary {
	return v.value
}

func (v *NullableStorageClassSummary) Set(val *StorageClassSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageClassSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageClassSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageClassSummary(val *StorageClassSummary) *NullableStorageClassSummary {
	return &NullableStorageClassSummary{value: val, isSet: true}
}

func (v NullableStorageClassSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageClassSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
