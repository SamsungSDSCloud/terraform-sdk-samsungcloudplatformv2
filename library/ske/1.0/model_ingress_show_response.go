/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the IngressShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IngressShowResponse{}

// IngressShowResponse struct for IngressShowResponse
type IngressShowResponse struct {
	Ingress Ingress `json:"ingress"`
}

type _IngressShowResponse IngressShowResponse

// NewIngressShowResponse instantiates a new IngressShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIngressShowResponse(ingress Ingress) *IngressShowResponse {
	this := IngressShowResponse{}
	this.Ingress = ingress
	return &this
}

// NewIngressShowResponseWithDefaults instantiates a new IngressShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIngressShowResponseWithDefaults() *IngressShowResponse {
	this := IngressShowResponse{}
	return &this
}

// GetIngress returns the Ingress field value
func (o *IngressShowResponse) GetIngress() Ingress {
	if o == nil {
		var ret Ingress
		return ret
	}

	return o.Ingress
}

// GetIngressOk returns a tuple with the Ingress field value
// and a boolean to check if the value has been set.
func (o *IngressShowResponse) GetIngressOk() (*Ingress, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ingress, true
}

// SetIngress sets field value
func (o *IngressShowResponse) SetIngress(v Ingress) {
	o.Ingress = v
}

func (o IngressShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IngressShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ingress"] = o.Ingress
	return toSerialize, nil
}

func (o *IngressShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ingress",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIngressShowResponse := _IngressShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varIngressShowResponse)

	if err != nil {
		return err
	}

	*o = IngressShowResponse(varIngressShowResponse)

	return err
}

type NullableIngressShowResponse struct {
	value *IngressShowResponse
	isSet bool
}

func (v NullableIngressShowResponse) Get() *IngressShowResponse {
	return v.value
}

func (v *NullableIngressShowResponse) Set(val *IngressShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIngressShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIngressShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIngressShowResponse(val *IngressShowResponse) *NullableIngressShowResponse {
	return &NullableIngressShowResponse{value: val, isSet: true}
}

func (v NullableIngressShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIngressShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
