/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the NodeSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodeSummary{}

// NodeSummary struct for NodeSummary
type NodeSummary struct {
	// Age
	Age string `json:"age"`
	// Cluster ID
	ClusterId        string         `json:"cluster_id"`
	ContainerVersion NullableString `json:"container_version"`
	// Created At
	CreatedAt         time.Time      `json:"created_at"`
	ExternalIpAddress NullableString `json:"external_ip_address"`
	Ip                NullableString `json:"ip"`
	KernelVersion     NullableString `json:"kernel_version"`
	KubernetesVersion NullableString `json:"kubernetes_version"`
	// Node Name
	Name string `json:"name"`
	// Node Status
	NodeStatus string         `json:"node_status"`
	OsImage    NullableString `json:"os_image"`
	// Resource ID
	Uid string `json:"uid"`
}

type _NodeSummary NodeSummary

// NewNodeSummary instantiates a new NodeSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeSummary(age string, clusterId string, containerVersion NullableString, createdAt time.Time, externalIpAddress NullableString, ip NullableString, kernelVersion NullableString, kubernetesVersion NullableString, name string, nodeStatus string, osImage NullableString, uid string) *NodeSummary {
	this := NodeSummary{}
	this.Age = age
	this.ClusterId = clusterId
	this.ContainerVersion = containerVersion
	this.CreatedAt = createdAt
	this.ExternalIpAddress = externalIpAddress
	this.Ip = ip
	this.KernelVersion = kernelVersion
	this.KubernetesVersion = kubernetesVersion
	this.Name = name
	this.NodeStatus = nodeStatus
	this.OsImage = osImage
	this.Uid = uid
	return &this
}

// NewNodeSummaryWithDefaults instantiates a new NodeSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeSummaryWithDefaults() *NodeSummary {
	this := NodeSummary{}
	return &this
}

// GetAge returns the Age field value
func (o *NodeSummary) GetAge() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Age
}

// GetAgeOk returns a tuple with the Age field value
// and a boolean to check if the value has been set.
func (o *NodeSummary) GetAgeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Age, true
}

// SetAge sets field value
func (o *NodeSummary) SetAge(v string) {
	o.Age = v
}

// GetClusterId returns the ClusterId field value
func (o *NodeSummary) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *NodeSummary) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *NodeSummary) SetClusterId(v string) {
	o.ClusterId = v
}

// GetContainerVersion returns the ContainerVersion field value
// If the value is explicit nil, the zero value for string will be returned
func (o *NodeSummary) GetContainerVersion() string {
	if o == nil || o.ContainerVersion.Get() == nil {
		var ret string
		return ret
	}

	return *o.ContainerVersion.Get()
}

// GetContainerVersionOk returns a tuple with the ContainerVersion field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodeSummary) GetContainerVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContainerVersion.Get(), o.ContainerVersion.IsSet()
}

// SetContainerVersion sets field value
func (o *NodeSummary) SetContainerVersion(v string) {
	o.ContainerVersion.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
func (o *NodeSummary) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *NodeSummary) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *NodeSummary) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetExternalIpAddress returns the ExternalIpAddress field value
// If the value is explicit nil, the zero value for string will be returned
func (o *NodeSummary) GetExternalIpAddress() string {
	if o == nil || o.ExternalIpAddress.Get() == nil {
		var ret string
		return ret
	}

	return *o.ExternalIpAddress.Get()
}

// GetExternalIpAddressOk returns a tuple with the ExternalIpAddress field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodeSummary) GetExternalIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalIpAddress.Get(), o.ExternalIpAddress.IsSet()
}

// SetExternalIpAddress sets field value
func (o *NodeSummary) SetExternalIpAddress(v string) {
	o.ExternalIpAddress.Set(&v)
}

// GetIp returns the Ip field value
// If the value is explicit nil, the zero value for string will be returned
func (o *NodeSummary) GetIp() string {
	if o == nil || o.Ip.Get() == nil {
		var ret string
		return ret
	}

	return *o.Ip.Get()
}

// GetIpOk returns a tuple with the Ip field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodeSummary) GetIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ip.Get(), o.Ip.IsSet()
}

// SetIp sets field value
func (o *NodeSummary) SetIp(v string) {
	o.Ip.Set(&v)
}

// GetKernelVersion returns the KernelVersion field value
// If the value is explicit nil, the zero value for string will be returned
func (o *NodeSummary) GetKernelVersion() string {
	if o == nil || o.KernelVersion.Get() == nil {
		var ret string
		return ret
	}

	return *o.KernelVersion.Get()
}

// GetKernelVersionOk returns a tuple with the KernelVersion field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodeSummary) GetKernelVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KernelVersion.Get(), o.KernelVersion.IsSet()
}

// SetKernelVersion sets field value
func (o *NodeSummary) SetKernelVersion(v string) {
	o.KernelVersion.Set(&v)
}

// GetKubernetesVersion returns the KubernetesVersion field value
// If the value is explicit nil, the zero value for string will be returned
func (o *NodeSummary) GetKubernetesVersion() string {
	if o == nil || o.KubernetesVersion.Get() == nil {
		var ret string
		return ret
	}

	return *o.KubernetesVersion.Get()
}

// GetKubernetesVersionOk returns a tuple with the KubernetesVersion field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodeSummary) GetKubernetesVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KubernetesVersion.Get(), o.KubernetesVersion.IsSet()
}

// SetKubernetesVersion sets field value
func (o *NodeSummary) SetKubernetesVersion(v string) {
	o.KubernetesVersion.Set(&v)
}

// GetName returns the Name field value
func (o *NodeSummary) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NodeSummary) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NodeSummary) SetName(v string) {
	o.Name = v
}

// GetNodeStatus returns the NodeStatus field value
func (o *NodeSummary) GetNodeStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeStatus
}

// GetNodeStatusOk returns a tuple with the NodeStatus field value
// and a boolean to check if the value has been set.
func (o *NodeSummary) GetNodeStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeStatus, true
}

// SetNodeStatus sets field value
func (o *NodeSummary) SetNodeStatus(v string) {
	o.NodeStatus = v
}

// GetOsImage returns the OsImage field value
// If the value is explicit nil, the zero value for string will be returned
func (o *NodeSummary) GetOsImage() string {
	if o == nil || o.OsImage.Get() == nil {
		var ret string
		return ret
	}

	return *o.OsImage.Get()
}

// GetOsImageOk returns a tuple with the OsImage field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodeSummary) GetOsImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OsImage.Get(), o.OsImage.IsSet()
}

// SetOsImage sets field value
func (o *NodeSummary) SetOsImage(v string) {
	o.OsImage.Set(&v)
}

// GetUid returns the Uid field value
func (o *NodeSummary) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *NodeSummary) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *NodeSummary) SetUid(v string) {
	o.Uid = v
}

func (o NodeSummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodeSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["age"] = o.Age
	toSerialize["cluster_id"] = o.ClusterId
	toSerialize["container_version"] = o.ContainerVersion.Get()
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["external_ip_address"] = o.ExternalIpAddress.Get()
	toSerialize["ip"] = o.Ip.Get()
	toSerialize["kernel_version"] = o.KernelVersion.Get()
	toSerialize["kubernetes_version"] = o.KubernetesVersion.Get()
	toSerialize["name"] = o.Name
	toSerialize["node_status"] = o.NodeStatus
	toSerialize["os_image"] = o.OsImage.Get()
	toSerialize["uid"] = o.Uid
	return toSerialize, nil
}

func (o *NodeSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"age",
		"cluster_id",
		"container_version",
		"created_at",
		"external_ip_address",
		"ip",
		"kernel_version",
		"kubernetes_version",
		"name",
		"node_status",
		"os_image",
		"uid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNodeSummary := _NodeSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNodeSummary)

	if err != nil {
		return err
	}

	*o = NodeSummary(varNodeSummary)

	return err
}

type NullableNodeSummary struct {
	value *NodeSummary
	isSet bool
}

func (v NullableNodeSummary) Get() *NodeSummary {
	return v.value
}

func (v *NullableNodeSummary) Set(val *NodeSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeSummary(val *NodeSummary) *NullableNodeSummary {
	return &NullableNodeSummary{value: val, isSet: true}
}

func (v NullableNodeSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
