/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ClusterRoleShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterRoleShowResponse{}

// ClusterRoleShowResponse struct for ClusterRoleShowResponse
type ClusterRoleShowResponse struct {
	ClusterRole ClusterRole `json:"cluster_role"`
}

type _ClusterRoleShowResponse ClusterRoleShowResponse

// NewClusterRoleShowResponse instantiates a new ClusterRoleShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterRoleShowResponse(clusterRole ClusterRole) *ClusterRoleShowResponse {
	this := ClusterRoleShowResponse{}
	this.ClusterRole = clusterRole
	return &this
}

// NewClusterRoleShowResponseWithDefaults instantiates a new ClusterRoleShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterRoleShowResponseWithDefaults() *ClusterRoleShowResponse {
	this := ClusterRoleShowResponse{}
	return &this
}

// GetClusterRole returns the ClusterRole field value
func (o *ClusterRoleShowResponse) GetClusterRole() ClusterRole {
	if o == nil {
		var ret ClusterRole
		return ret
	}

	return o.ClusterRole
}

// GetClusterRoleOk returns a tuple with the ClusterRole field value
// and a boolean to check if the value has been set.
func (o *ClusterRoleShowResponse) GetClusterRoleOk() (*ClusterRole, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterRole, true
}

// SetClusterRole sets field value
func (o *ClusterRoleShowResponse) SetClusterRole(v ClusterRole) {
	o.ClusterRole = v
}

func (o ClusterRoleShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterRoleShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cluster_role"] = o.ClusterRole
	return toSerialize, nil
}

func (o *ClusterRoleShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cluster_role",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterRoleShowResponse := _ClusterRoleShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClusterRoleShowResponse)

	if err != nil {
		return err
	}

	*o = ClusterRoleShowResponse(varClusterRoleShowResponse)

	return err
}

type NullableClusterRoleShowResponse struct {
	value *ClusterRoleShowResponse
	isSet bool
}

func (v NullableClusterRoleShowResponse) Get() *ClusterRoleShowResponse {
	return v.value
}

func (v *NullableClusterRoleShowResponse) Set(val *ClusterRoleShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterRoleShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterRoleShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterRoleShowResponse(val *ClusterRoleShowResponse) *NullableClusterRoleShowResponse {
	return &NullableClusterRoleShowResponse{value: val, isSet: true}
}

func (v NullableClusterRoleShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterRoleShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
