/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the NodepoolCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodepoolCreateRequest{}

// NodepoolCreateRequest struct for NodepoolCreateRequest
type NodepoolCreateRequest struct {
	// Cluster ID
	ClusterId        string         `json:"cluster_id"`
	CustomImageId    NullableString `json:"custom_image_id,omitempty"`
	DesiredNodeCount NullableInt32  `json:"desired_node_count,omitempty"`
	// Image OS
	ImageOs string `json:"image_os"`
	// Image OS Version
	ImageOsVersion string `json:"image_os_version"`
	// Is Auto Recovery
	IsAutoRecovery bool `json:"is_auto_recovery"`
	// Is Auto Scale
	IsAutoScale bool `json:"is_auto_scale"`
	// Keypair Name
	KeypairName string `json:"keypair_name"`
	// Kubernetes Version
	KubernetesVersion string          `json:"kubernetes_version"`
	Labels            []NodepoolLabel `json:"labels,omitempty"`
	MaxNodeCount      NullableInt32   `json:"max_node_count,omitempty"`
	MinNodeCount      NullableInt32   `json:"min_node_count,omitempty"`
	// Nodepool Name
	Name string `json:"name"`
	// Server Type ID
	ServerTypeId string          `json:"server_type_id"`
	Taints       []NodepoolTaint `json:"taints,omitempty"`
	// Volume Size
	VolumeSize int32 `json:"volume_size"`
	// Volume Type Name
	VolumeTypeName string `json:"volume_type_name"`
}

type _NodepoolCreateRequest NodepoolCreateRequest

// NewNodepoolCreateRequest instantiates a new NodepoolCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodepoolCreateRequest(clusterId string, imageOs string, imageOsVersion string, isAutoRecovery bool, isAutoScale bool, keypairName string, kubernetesVersion string, name string, serverTypeId string, volumeSize int32, volumeTypeName string) *NodepoolCreateRequest {
	this := NodepoolCreateRequest{}
	this.ClusterId = clusterId
	this.ImageOs = imageOs
	this.ImageOsVersion = imageOsVersion
	this.IsAutoRecovery = isAutoRecovery
	this.IsAutoScale = isAutoScale
	this.KeypairName = keypairName
	this.KubernetesVersion = kubernetesVersion
	this.Name = name
	this.ServerTypeId = serverTypeId
	this.VolumeSize = volumeSize
	this.VolumeTypeName = volumeTypeName
	return &this
}

// NewNodepoolCreateRequestWithDefaults instantiates a new NodepoolCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodepoolCreateRequestWithDefaults() *NodepoolCreateRequest {
	this := NodepoolCreateRequest{}
	return &this
}

// GetClusterId returns the ClusterId field value
func (o *NodepoolCreateRequest) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *NodepoolCreateRequest) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *NodepoolCreateRequest) SetClusterId(v string) {
	o.ClusterId = v
}

// GetCustomImageId returns the CustomImageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodepoolCreateRequest) GetCustomImageId() string {
	if o == nil || IsNil(o.CustomImageId.Get()) {
		var ret string
		return ret
	}
	return *o.CustomImageId.Get()
}

// GetCustomImageIdOk returns a tuple with the CustomImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodepoolCreateRequest) GetCustomImageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomImageId.Get(), o.CustomImageId.IsSet()
}

// HasCustomImageId returns a boolean if a field has been set.
func (o *NodepoolCreateRequest) HasCustomImageId() bool {
	if o != nil && o.CustomImageId.IsSet() {
		return true
	}

	return false
}

// SetCustomImageId gets a reference to the given NullableString and assigns it to the CustomImageId field.
func (o *NodepoolCreateRequest) SetCustomImageId(v string) {
	o.CustomImageId.Set(&v)
}

// SetCustomImageIdNil sets the value for CustomImageId to be an explicit nil
func (o *NodepoolCreateRequest) SetCustomImageIdNil() {
	o.CustomImageId.Set(nil)
}

// UnsetCustomImageId ensures that no value is present for CustomImageId, not even an explicit nil
func (o *NodepoolCreateRequest) UnsetCustomImageId() {
	o.CustomImageId.Unset()
}

// GetDesiredNodeCount returns the DesiredNodeCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodepoolCreateRequest) GetDesiredNodeCount() int32 {
	if o == nil || IsNil(o.DesiredNodeCount.Get()) {
		var ret int32
		return ret
	}
	return *o.DesiredNodeCount.Get()
}

// GetDesiredNodeCountOk returns a tuple with the DesiredNodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodepoolCreateRequest) GetDesiredNodeCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DesiredNodeCount.Get(), o.DesiredNodeCount.IsSet()
}

// HasDesiredNodeCount returns a boolean if a field has been set.
func (o *NodepoolCreateRequest) HasDesiredNodeCount() bool {
	if o != nil && o.DesiredNodeCount.IsSet() {
		return true
	}

	return false
}

// SetDesiredNodeCount gets a reference to the given NullableInt32 and assigns it to the DesiredNodeCount field.
func (o *NodepoolCreateRequest) SetDesiredNodeCount(v int32) {
	o.DesiredNodeCount.Set(&v)
}

// SetDesiredNodeCountNil sets the value for DesiredNodeCount to be an explicit nil
func (o *NodepoolCreateRequest) SetDesiredNodeCountNil() {
	o.DesiredNodeCount.Set(nil)
}

// UnsetDesiredNodeCount ensures that no value is present for DesiredNodeCount, not even an explicit nil
func (o *NodepoolCreateRequest) UnsetDesiredNodeCount() {
	o.DesiredNodeCount.Unset()
}

// GetImageOs returns the ImageOs field value
func (o *NodepoolCreateRequest) GetImageOs() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageOs
}

// GetImageOsOk returns a tuple with the ImageOs field value
// and a boolean to check if the value has been set.
func (o *NodepoolCreateRequest) GetImageOsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageOs, true
}

// SetImageOs sets field value
func (o *NodepoolCreateRequest) SetImageOs(v string) {
	o.ImageOs = v
}

// GetImageOsVersion returns the ImageOsVersion field value
func (o *NodepoolCreateRequest) GetImageOsVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageOsVersion
}

// GetImageOsVersionOk returns a tuple with the ImageOsVersion field value
// and a boolean to check if the value has been set.
func (o *NodepoolCreateRequest) GetImageOsVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageOsVersion, true
}

// SetImageOsVersion sets field value
func (o *NodepoolCreateRequest) SetImageOsVersion(v string) {
	o.ImageOsVersion = v
}

// GetIsAutoRecovery returns the IsAutoRecovery field value
func (o *NodepoolCreateRequest) GetIsAutoRecovery() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsAutoRecovery
}

// GetIsAutoRecoveryOk returns a tuple with the IsAutoRecovery field value
// and a boolean to check if the value has been set.
func (o *NodepoolCreateRequest) GetIsAutoRecoveryOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsAutoRecovery, true
}

// SetIsAutoRecovery sets field value
func (o *NodepoolCreateRequest) SetIsAutoRecovery(v bool) {
	o.IsAutoRecovery = v
}

// GetIsAutoScale returns the IsAutoScale field value
func (o *NodepoolCreateRequest) GetIsAutoScale() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsAutoScale
}

// GetIsAutoScaleOk returns a tuple with the IsAutoScale field value
// and a boolean to check if the value has been set.
func (o *NodepoolCreateRequest) GetIsAutoScaleOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsAutoScale, true
}

// SetIsAutoScale sets field value
func (o *NodepoolCreateRequest) SetIsAutoScale(v bool) {
	o.IsAutoScale = v
}

// GetKeypairName returns the KeypairName field value
func (o *NodepoolCreateRequest) GetKeypairName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeypairName
}

// GetKeypairNameOk returns a tuple with the KeypairName field value
// and a boolean to check if the value has been set.
func (o *NodepoolCreateRequest) GetKeypairNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeypairName, true
}

// SetKeypairName sets field value
func (o *NodepoolCreateRequest) SetKeypairName(v string) {
	o.KeypairName = v
}

// GetKubernetesVersion returns the KubernetesVersion field value
func (o *NodepoolCreateRequest) GetKubernetesVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KubernetesVersion
}

// GetKubernetesVersionOk returns a tuple with the KubernetesVersion field value
// and a boolean to check if the value has been set.
func (o *NodepoolCreateRequest) GetKubernetesVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KubernetesVersion, true
}

// SetKubernetesVersion sets field value
func (o *NodepoolCreateRequest) SetKubernetesVersion(v string) {
	o.KubernetesVersion = v
}

// GetLabels returns the Labels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodepoolCreateRequest) GetLabels() []NodepoolLabel {
	if o == nil {
		var ret []NodepoolLabel
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodepoolCreateRequest) GetLabelsOk() ([]NodepoolLabel, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *NodepoolCreateRequest) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []NodepoolLabel and assigns it to the Labels field.
func (o *NodepoolCreateRequest) SetLabels(v []NodepoolLabel) {
	o.Labels = v
}

// GetMaxNodeCount returns the MaxNodeCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodepoolCreateRequest) GetMaxNodeCount() int32 {
	if o == nil || IsNil(o.MaxNodeCount.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxNodeCount.Get()
}

// GetMaxNodeCountOk returns a tuple with the MaxNodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodepoolCreateRequest) GetMaxNodeCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxNodeCount.Get(), o.MaxNodeCount.IsSet()
}

// HasMaxNodeCount returns a boolean if a field has been set.
func (o *NodepoolCreateRequest) HasMaxNodeCount() bool {
	if o != nil && o.MaxNodeCount.IsSet() {
		return true
	}

	return false
}

// SetMaxNodeCount gets a reference to the given NullableInt32 and assigns it to the MaxNodeCount field.
func (o *NodepoolCreateRequest) SetMaxNodeCount(v int32) {
	o.MaxNodeCount.Set(&v)
}

// SetMaxNodeCountNil sets the value for MaxNodeCount to be an explicit nil
func (o *NodepoolCreateRequest) SetMaxNodeCountNil() {
	o.MaxNodeCount.Set(nil)
}

// UnsetMaxNodeCount ensures that no value is present for MaxNodeCount, not even an explicit nil
func (o *NodepoolCreateRequest) UnsetMaxNodeCount() {
	o.MaxNodeCount.Unset()
}

// GetMinNodeCount returns the MinNodeCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodepoolCreateRequest) GetMinNodeCount() int32 {
	if o == nil || IsNil(o.MinNodeCount.Get()) {
		var ret int32
		return ret
	}
	return *o.MinNodeCount.Get()
}

// GetMinNodeCountOk returns a tuple with the MinNodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodepoolCreateRequest) GetMinNodeCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinNodeCount.Get(), o.MinNodeCount.IsSet()
}

// HasMinNodeCount returns a boolean if a field has been set.
func (o *NodepoolCreateRequest) HasMinNodeCount() bool {
	if o != nil && o.MinNodeCount.IsSet() {
		return true
	}

	return false
}

// SetMinNodeCount gets a reference to the given NullableInt32 and assigns it to the MinNodeCount field.
func (o *NodepoolCreateRequest) SetMinNodeCount(v int32) {
	o.MinNodeCount.Set(&v)
}

// SetMinNodeCountNil sets the value for MinNodeCount to be an explicit nil
func (o *NodepoolCreateRequest) SetMinNodeCountNil() {
	o.MinNodeCount.Set(nil)
}

// UnsetMinNodeCount ensures that no value is present for MinNodeCount, not even an explicit nil
func (o *NodepoolCreateRequest) UnsetMinNodeCount() {
	o.MinNodeCount.Unset()
}

// GetName returns the Name field value
func (o *NodepoolCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NodepoolCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NodepoolCreateRequest) SetName(v string) {
	o.Name = v
}

// GetServerTypeId returns the ServerTypeId field value
func (o *NodepoolCreateRequest) GetServerTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerTypeId
}

// GetServerTypeIdOk returns a tuple with the ServerTypeId field value
// and a boolean to check if the value has been set.
func (o *NodepoolCreateRequest) GetServerTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerTypeId, true
}

// SetServerTypeId sets field value
func (o *NodepoolCreateRequest) SetServerTypeId(v string) {
	o.ServerTypeId = v
}

// GetTaints returns the Taints field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodepoolCreateRequest) GetTaints() []NodepoolTaint {
	if o == nil {
		var ret []NodepoolTaint
		return ret
	}
	return o.Taints
}

// GetTaintsOk returns a tuple with the Taints field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodepoolCreateRequest) GetTaintsOk() ([]NodepoolTaint, bool) {
	if o == nil || IsNil(o.Taints) {
		return nil, false
	}
	return o.Taints, true
}

// HasTaints returns a boolean if a field has been set.
func (o *NodepoolCreateRequest) HasTaints() bool {
	if o != nil && !IsNil(o.Taints) {
		return true
	}

	return false
}

// SetTaints gets a reference to the given []NodepoolTaint and assigns it to the Taints field.
func (o *NodepoolCreateRequest) SetTaints(v []NodepoolTaint) {
	o.Taints = v
}

// GetVolumeSize returns the VolumeSize field value
func (o *NodepoolCreateRequest) GetVolumeSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VolumeSize
}

// GetVolumeSizeOk returns a tuple with the VolumeSize field value
// and a boolean to check if the value has been set.
func (o *NodepoolCreateRequest) GetVolumeSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolumeSize, true
}

// SetVolumeSize sets field value
func (o *NodepoolCreateRequest) SetVolumeSize(v int32) {
	o.VolumeSize = v
}

// GetVolumeTypeName returns the VolumeTypeName field value
func (o *NodepoolCreateRequest) GetVolumeTypeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VolumeTypeName
}

// GetVolumeTypeNameOk returns a tuple with the VolumeTypeName field value
// and a boolean to check if the value has been set.
func (o *NodepoolCreateRequest) GetVolumeTypeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolumeTypeName, true
}

// SetVolumeTypeName sets field value
func (o *NodepoolCreateRequest) SetVolumeTypeName(v string) {
	o.VolumeTypeName = v
}

func (o NodepoolCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodepoolCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cluster_id"] = o.ClusterId
	if o.CustomImageId.IsSet() {
		toSerialize["custom_image_id"] = o.CustomImageId.Get()
	}
	if o.DesiredNodeCount.IsSet() {
		toSerialize["desired_node_count"] = o.DesiredNodeCount.Get()
	}
	toSerialize["image_os"] = o.ImageOs
	toSerialize["image_os_version"] = o.ImageOsVersion
	toSerialize["is_auto_recovery"] = o.IsAutoRecovery
	toSerialize["is_auto_scale"] = o.IsAutoScale
	toSerialize["keypair_name"] = o.KeypairName
	toSerialize["kubernetes_version"] = o.KubernetesVersion
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.MaxNodeCount.IsSet() {
		toSerialize["max_node_count"] = o.MaxNodeCount.Get()
	}
	if o.MinNodeCount.IsSet() {
		toSerialize["min_node_count"] = o.MinNodeCount.Get()
	}
	toSerialize["name"] = o.Name
	toSerialize["server_type_id"] = o.ServerTypeId
	if o.Taints != nil {
		toSerialize["taints"] = o.Taints
	}
	toSerialize["volume_size"] = o.VolumeSize
	toSerialize["volume_type_name"] = o.VolumeTypeName
	return toSerialize, nil
}

func (o *NodepoolCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cluster_id",
		"image_os",
		"image_os_version",
		"is_auto_recovery",
		"is_auto_scale",
		"keypair_name",
		"kubernetes_version",
		"name",
		"server_type_id",
		"volume_size",
		"volume_type_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNodepoolCreateRequest := _NodepoolCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNodepoolCreateRequest)

	if err != nil {
		return err
	}

	*o = NodepoolCreateRequest(varNodepoolCreateRequest)

	return err
}

type NullableNodepoolCreateRequest struct {
	value *NodepoolCreateRequest
	isSet bool
}

func (v NullableNodepoolCreateRequest) Get() *NodepoolCreateRequest {
	return v.value
}

func (v *NullableNodepoolCreateRequest) Set(val *NodepoolCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNodepoolCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNodepoolCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodepoolCreateRequest(val *NodepoolCreateRequest) *NullableNodepoolCreateRequest {
	return &NullableNodepoolCreateRequest{value: val, isSet: true}
}

func (v NullableNodepoolCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodepoolCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
