/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"encoding/json"
)

// checks if the NodepoolListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodepoolListResponse{}

// NodepoolListResponse struct for NodepoolListResponse
type NodepoolListResponse struct {
	Count NullableInt32 `json:"count,omitempty"`
	Links []interface{} `json:"links,omitempty"`
	// Node Pool List
	Nodepools []NodepoolSummary `json:"nodepools,omitempty"`
}

// NewNodepoolListResponse instantiates a new NodepoolListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodepoolListResponse() *NodepoolListResponse {
	this := NodepoolListResponse{}
	return &this
}

// NewNodepoolListResponseWithDefaults instantiates a new NodepoolListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodepoolListResponseWithDefaults() *NodepoolListResponse {
	this := NodepoolListResponse{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodepoolListResponse) GetCount() int32 {
	if o == nil || IsNil(o.Count.Get()) {
		var ret int32
		return ret
	}
	return *o.Count.Get()
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodepoolListResponse) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Count.Get(), o.Count.IsSet()
}

// HasCount returns a boolean if a field has been set.
func (o *NodepoolListResponse) HasCount() bool {
	if o != nil && o.Count.IsSet() {
		return true
	}

	return false
}

// SetCount gets a reference to the given NullableInt32 and assigns it to the Count field.
func (o *NodepoolListResponse) SetCount(v int32) {
	o.Count.Set(&v)
}

// SetCountNil sets the value for Count to be an explicit nil
func (o *NodepoolListResponse) SetCountNil() {
	o.Count.Set(nil)
}

// UnsetCount ensures that no value is present for Count, not even an explicit nil
func (o *NodepoolListResponse) UnsetCount() {
	o.Count.Unset()
}

// GetLinks returns the Links field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NodepoolListResponse) GetLinks() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NodepoolListResponse) GetLinksOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *NodepoolListResponse) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []interface{} and assigns it to the Links field.
func (o *NodepoolListResponse) SetLinks(v []interface{}) {
	o.Links = v
}

// GetNodepools returns the Nodepools field value if set, zero value otherwise.
func (o *NodepoolListResponse) GetNodepools() []NodepoolSummary {
	if o == nil || IsNil(o.Nodepools) {
		var ret []NodepoolSummary
		return ret
	}
	return o.Nodepools
}

// GetNodepoolsOk returns a tuple with the Nodepools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodepoolListResponse) GetNodepoolsOk() ([]NodepoolSummary, bool) {
	if o == nil || IsNil(o.Nodepools) {
		return nil, false
	}
	return o.Nodepools, true
}

// HasNodepools returns a boolean if a field has been set.
func (o *NodepoolListResponse) HasNodepools() bool {
	if o != nil && !IsNil(o.Nodepools) {
		return true
	}

	return false
}

// SetNodepools gets a reference to the given []NodepoolSummary and assigns it to the Nodepools field.
func (o *NodepoolListResponse) SetNodepools(v []NodepoolSummary) {
	o.Nodepools = v
}

func (o NodepoolListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodepoolListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Count.IsSet() {
		toSerialize["count"] = o.Count.Get()
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Nodepools) {
		toSerialize["nodepools"] = o.Nodepools
	}
	return toSerialize, nil
}

type NullableNodepoolListResponse struct {
	value *NodepoolListResponse
	isSet bool
}

func (v NullableNodepoolListResponse) Get() *NodepoolListResponse {
	return v.value
}

func (v *NullableNodepoolListResponse) Set(val *NodepoolListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableNodepoolListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableNodepoolListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodepoolListResponse(val *NodepoolListResponse) *NullableNodepoolListResponse {
	return &NullableNodepoolListResponse{value: val, isSet: true}
}

func (v NullableNodepoolListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodepoolListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
