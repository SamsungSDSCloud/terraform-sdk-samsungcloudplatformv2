/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the IngressClassShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IngressClassShowResponse{}

// IngressClassShowResponse struct for IngressClassShowResponse
type IngressClassShowResponse struct {
	IngressClass IngressClass `json:"ingress_class"`
}

type _IngressClassShowResponse IngressClassShowResponse

// NewIngressClassShowResponse instantiates a new IngressClassShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIngressClassShowResponse(ingressClass IngressClass) *IngressClassShowResponse {
	this := IngressClassShowResponse{}
	this.IngressClass = ingressClass
	return &this
}

// NewIngressClassShowResponseWithDefaults instantiates a new IngressClassShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIngressClassShowResponseWithDefaults() *IngressClassShowResponse {
	this := IngressClassShowResponse{}
	return &this
}

// GetIngressClass returns the IngressClass field value
func (o *IngressClassShowResponse) GetIngressClass() IngressClass {
	if o == nil {
		var ret IngressClass
		return ret
	}

	return o.IngressClass
}

// GetIngressClassOk returns a tuple with the IngressClass field value
// and a boolean to check if the value has been set.
func (o *IngressClassShowResponse) GetIngressClassOk() (*IngressClass, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IngressClass, true
}

// SetIngressClass sets field value
func (o *IngressClassShowResponse) SetIngressClass(v IngressClass) {
	o.IngressClass = v
}

func (o IngressClassShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IngressClassShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ingress_class"] = o.IngressClass
	return toSerialize, nil
}

func (o *IngressClassShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ingress_class",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIngressClassShowResponse := _IngressClassShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varIngressClassShowResponse)

	if err != nil {
		return err
	}

	*o = IngressClassShowResponse(varIngressClassShowResponse)

	return err
}

type NullableIngressClassShowResponse struct {
	value *IngressClassShowResponse
	isSet bool
}

func (v NullableIngressClassShowResponse) Get() *IngressClassShowResponse {
	return v.value
}

func (v *NullableIngressClassShowResponse) Set(val *IngressClassShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIngressClassShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIngressClassShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIngressClassShowResponse(val *IngressClassShowResponse) *NullableIngressClassShowResponse {
	return &NullableIngressClassShowResponse{value: val, isSet: true}
}

func (v NullableIngressClassShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIngressClassShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
