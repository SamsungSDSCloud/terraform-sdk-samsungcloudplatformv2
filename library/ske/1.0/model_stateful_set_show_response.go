/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the StatefulSetShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatefulSetShowResponse{}

// StatefulSetShowResponse struct for StatefulSetShowResponse
type StatefulSetShowResponse struct {
	StatefulSet StatefulSet `json:"stateful_set"`
}

type _StatefulSetShowResponse StatefulSetShowResponse

// NewStatefulSetShowResponse instantiates a new StatefulSetShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatefulSetShowResponse(statefulSet StatefulSet) *StatefulSetShowResponse {
	this := StatefulSetShowResponse{}
	this.StatefulSet = statefulSet
	return &this
}

// NewStatefulSetShowResponseWithDefaults instantiates a new StatefulSetShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatefulSetShowResponseWithDefaults() *StatefulSetShowResponse {
	this := StatefulSetShowResponse{}
	return &this
}

// GetStatefulSet returns the StatefulSet field value
func (o *StatefulSetShowResponse) GetStatefulSet() StatefulSet {
	if o == nil {
		var ret StatefulSet
		return ret
	}

	return o.StatefulSet
}

// GetStatefulSetOk returns a tuple with the StatefulSet field value
// and a boolean to check if the value has been set.
func (o *StatefulSetShowResponse) GetStatefulSetOk() (*StatefulSet, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatefulSet, true
}

// SetStatefulSet sets field value
func (o *StatefulSetShowResponse) SetStatefulSet(v StatefulSet) {
	o.StatefulSet = v
}

func (o StatefulSetShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatefulSetShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["stateful_set"] = o.StatefulSet
	return toSerialize, nil
}

func (o *StatefulSetShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"stateful_set",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStatefulSetShowResponse := _StatefulSetShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStatefulSetShowResponse)

	if err != nil {
		return err
	}

	*o = StatefulSetShowResponse(varStatefulSetShowResponse)

	return err
}

type NullableStatefulSetShowResponse struct {
	value *StatefulSetShowResponse
	isSet bool
}

func (v NullableStatefulSetShowResponse) Get() *StatefulSetShowResponse {
	return v.value
}

func (v *NullableStatefulSetShowResponse) Set(val *StatefulSetShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableStatefulSetShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableStatefulSetShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatefulSetShowResponse(val *StatefulSetShowResponse) *NullableStatefulSetShowResponse {
	return &NullableStatefulSetShowResponse{value: val, isSet: true}
}

func (v NullableStatefulSetShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatefulSetShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
