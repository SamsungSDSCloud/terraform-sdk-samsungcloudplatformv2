/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the KubernetesServiceShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubernetesServiceShowResponse{}

// KubernetesServiceShowResponse struct for KubernetesServiceShowResponse
type KubernetesServiceShowResponse struct {
	Service KubernetesService `json:"service"`
}

type _KubernetesServiceShowResponse KubernetesServiceShowResponse

// NewKubernetesServiceShowResponse instantiates a new KubernetesServiceShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesServiceShowResponse(service KubernetesService) *KubernetesServiceShowResponse {
	this := KubernetesServiceShowResponse{}
	this.Service = service
	return &this
}

// NewKubernetesServiceShowResponseWithDefaults instantiates a new KubernetesServiceShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesServiceShowResponseWithDefaults() *KubernetesServiceShowResponse {
	this := KubernetesServiceShowResponse{}
	return &this
}

// GetService returns the Service field value
func (o *KubernetesServiceShowResponse) GetService() KubernetesService {
	if o == nil {
		var ret KubernetesService
		return ret
	}

	return o.Service
}

// GetServiceOk returns a tuple with the Service field value
// and a boolean to check if the value has been set.
func (o *KubernetesServiceShowResponse) GetServiceOk() (*KubernetesService, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Service, true
}

// SetService sets field value
func (o *KubernetesServiceShowResponse) SetService(v KubernetesService) {
	o.Service = v
}

func (o KubernetesServiceShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubernetesServiceShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["service"] = o.Service
	return toSerialize, nil
}

func (o *KubernetesServiceShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"service",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKubernetesServiceShowResponse := _KubernetesServiceShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKubernetesServiceShowResponse)

	if err != nil {
		return err
	}

	*o = KubernetesServiceShowResponse(varKubernetesServiceShowResponse)

	return err
}

type NullableKubernetesServiceShowResponse struct {
	value *KubernetesServiceShowResponse
	isSet bool
}

func (v NullableKubernetesServiceShowResponse) Get() *KubernetesServiceShowResponse {
	return v.value
}

func (v *NullableKubernetesServiceShowResponse) Set(val *KubernetesServiceShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesServiceShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesServiceShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesServiceShowResponse(val *KubernetesServiceShowResponse) *NullableKubernetesServiceShowResponse {
	return &NullableKubernetesServiceShowResponse{value: val, isSet: true}
}

func (v NullableKubernetesServiceShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesServiceShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
