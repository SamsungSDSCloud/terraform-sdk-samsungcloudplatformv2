/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the StorageClassShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StorageClassShowResponse{}

// StorageClassShowResponse struct for StorageClassShowResponse
type StorageClassShowResponse struct {
	StorageClass StorageClass `json:"storage_class"`
}

type _StorageClassShowResponse StorageClassShowResponse

// NewStorageClassShowResponse instantiates a new StorageClassShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStorageClassShowResponse(storageClass StorageClass) *StorageClassShowResponse {
	this := StorageClassShowResponse{}
	this.StorageClass = storageClass
	return &this
}

// NewStorageClassShowResponseWithDefaults instantiates a new StorageClassShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStorageClassShowResponseWithDefaults() *StorageClassShowResponse {
	this := StorageClassShowResponse{}
	return &this
}

// GetStorageClass returns the StorageClass field value
func (o *StorageClassShowResponse) GetStorageClass() StorageClass {
	if o == nil {
		var ret StorageClass
		return ret
	}

	return o.StorageClass
}

// GetStorageClassOk returns a tuple with the StorageClass field value
// and a boolean to check if the value has been set.
func (o *StorageClassShowResponse) GetStorageClassOk() (*StorageClass, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageClass, true
}

// SetStorageClass sets field value
func (o *StorageClassShowResponse) SetStorageClass(v StorageClass) {
	o.StorageClass = v
}

func (o StorageClassShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StorageClassShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["storage_class"] = o.StorageClass
	return toSerialize, nil
}

func (o *StorageClassShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"storage_class",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStorageClassShowResponse := _StorageClassShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStorageClassShowResponse)

	if err != nil {
		return err
	}

	*o = StorageClassShowResponse(varStorageClassShowResponse)

	return err
}

type NullableStorageClassShowResponse struct {
	value *StorageClassShowResponse
	isSet bool
}

func (v NullableStorageClassShowResponse) Get() *StorageClassShowResponse {
	return v.value
}

func (v *NullableStorageClassShowResponse) Set(val *StorageClassShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageClassShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageClassShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageClassShowResponse(val *StorageClassShowResponse) *NullableStorageClassShowResponse {
	return &NullableStorageClassShowResponse{value: val, isSet: true}
}

func (v NullableStorageClassShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageClassShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
