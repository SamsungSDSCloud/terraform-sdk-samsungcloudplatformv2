/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2582
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the Deployment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Deployment{}

// Deployment struct for Deployment
type Deployment struct {
	// Age
	Age         string   `json:"age"`
	Annotations []string `json:"annotations"`
	// Available Replicas
	AvailableReplicas int32 `json:"available_replicas"`
	// Cluster ID
	ClusterId string `json:"cluster_id"`
	// Cluster Name
	ClusterName string `json:"cluster_name"`
	// Created At
	CreatedAt       time.Time      `json:"created_at"`
	Labels          []string       `json:"labels"`
	MaxSurge        NullableString `json:"max_surge"`
	MaxUnavailable  NullableString `json:"max_unavailable"`
	MinReadySeconds NullableString `json:"min_ready_seconds"`
	// Deployment Name
	Name string `json:"name"`
	// Namespace Name
	NamespaceName string `json:"namespace_name"`
	// Ready Replicas
	ReadyReplicas   int32    `json:"ready_replicas"`
	Selector        []string `json:"selector"`
	SelectorDetails []string `json:"selector_details"`
	// Spec Replicas
	SpecReplicas int32 `json:"spec_replicas"`
	// Status Replicas
	StatusReplicas int32          `json:"status_replicas"`
	StrategyType   NullableString `json:"strategy_type"`
	// Resource ID
	Uid string `json:"uid"`
	// Unavailable Replicas
	UnavailableReplicas int32 `json:"unavailable_replicas"`
	// Updated Replicas
	UpdatedReplicas int32 `json:"updated_replicas"`
	// YAML
	Yaml string `json:"yaml"`
}

type _Deployment Deployment

// NewDeployment instantiates a new Deployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployment(age string, annotations []string, availableReplicas int32, clusterId string, clusterName string, createdAt time.Time, labels []string, maxSurge NullableString, maxUnavailable NullableString, minReadySeconds NullableString, name string, namespaceName string, readyReplicas int32, selector []string, selectorDetails []string, specReplicas int32, statusReplicas int32, strategyType NullableString, uid string, unavailableReplicas int32, updatedReplicas int32, yaml string) *Deployment {
	this := Deployment{}
	this.Age = age
	this.Annotations = annotations
	this.AvailableReplicas = availableReplicas
	this.ClusterId = clusterId
	this.ClusterName = clusterName
	this.CreatedAt = createdAt
	this.Labels = labels
	this.MaxSurge = maxSurge
	this.MaxUnavailable = maxUnavailable
	this.MinReadySeconds = minReadySeconds
	this.Name = name
	this.NamespaceName = namespaceName
	this.ReadyReplicas = readyReplicas
	this.Selector = selector
	this.SelectorDetails = selectorDetails
	this.SpecReplicas = specReplicas
	this.StatusReplicas = statusReplicas
	this.StrategyType = strategyType
	this.Uid = uid
	this.UnavailableReplicas = unavailableReplicas
	this.UpdatedReplicas = updatedReplicas
	this.Yaml = yaml
	return &this
}

// NewDeploymentWithDefaults instantiates a new Deployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentWithDefaults() *Deployment {
	this := Deployment{}
	return &this
}

// GetAge returns the Age field value
func (o *Deployment) GetAge() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Age
}

// GetAgeOk returns a tuple with the Age field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetAgeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Age, true
}

// SetAge sets field value
func (o *Deployment) SetAge(v string) {
	o.Age = v
}

// GetAnnotations returns the Annotations field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *Deployment) GetAnnotations() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetAnnotationsOk() ([]string, bool) {
	if o == nil || IsNil(o.Annotations) {
		return nil, false
	}
	return o.Annotations, true
}

// SetAnnotations sets field value
func (o *Deployment) SetAnnotations(v []string) {
	o.Annotations = v
}

// GetAvailableReplicas returns the AvailableReplicas field value
func (o *Deployment) GetAvailableReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AvailableReplicas
}

// GetAvailableReplicasOk returns a tuple with the AvailableReplicas field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetAvailableReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvailableReplicas, true
}

// SetAvailableReplicas sets field value
func (o *Deployment) SetAvailableReplicas(v int32) {
	o.AvailableReplicas = v
}

// GetClusterId returns the ClusterId field value
func (o *Deployment) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *Deployment) SetClusterId(v string) {
	o.ClusterId = v
}

// GetClusterName returns the ClusterName field value
func (o *Deployment) GetClusterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetClusterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterName, true
}

// SetClusterName sets field value
func (o *Deployment) SetClusterName(v string) {
	o.ClusterName = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Deployment) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Deployment) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetLabels returns the Labels field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *Deployment) GetLabels() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// SetLabels sets field value
func (o *Deployment) SetLabels(v []string) {
	o.Labels = v
}

// GetMaxSurge returns the MaxSurge field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Deployment) GetMaxSurge() string {
	if o == nil || o.MaxSurge.Get() == nil {
		var ret string
		return ret
	}

	return *o.MaxSurge.Get()
}

// GetMaxSurgeOk returns a tuple with the MaxSurge field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetMaxSurgeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxSurge.Get(), o.MaxSurge.IsSet()
}

// SetMaxSurge sets field value
func (o *Deployment) SetMaxSurge(v string) {
	o.MaxSurge.Set(&v)
}

// GetMaxUnavailable returns the MaxUnavailable field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Deployment) GetMaxUnavailable() string {
	if o == nil || o.MaxUnavailable.Get() == nil {
		var ret string
		return ret
	}

	return *o.MaxUnavailable.Get()
}

// GetMaxUnavailableOk returns a tuple with the MaxUnavailable field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetMaxUnavailableOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxUnavailable.Get(), o.MaxUnavailable.IsSet()
}

// SetMaxUnavailable sets field value
func (o *Deployment) SetMaxUnavailable(v string) {
	o.MaxUnavailable.Set(&v)
}

// GetMinReadySeconds returns the MinReadySeconds field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Deployment) GetMinReadySeconds() string {
	if o == nil || o.MinReadySeconds.Get() == nil {
		var ret string
		return ret
	}

	return *o.MinReadySeconds.Get()
}

// GetMinReadySecondsOk returns a tuple with the MinReadySeconds field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetMinReadySecondsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinReadySeconds.Get(), o.MinReadySeconds.IsSet()
}

// SetMinReadySeconds sets field value
func (o *Deployment) SetMinReadySeconds(v string) {
	o.MinReadySeconds.Set(&v)
}

// GetName returns the Name field value
func (o *Deployment) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Deployment) SetName(v string) {
	o.Name = v
}

// GetNamespaceName returns the NamespaceName field value
func (o *Deployment) GetNamespaceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NamespaceName
}

// GetNamespaceNameOk returns a tuple with the NamespaceName field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetNamespaceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NamespaceName, true
}

// SetNamespaceName sets field value
func (o *Deployment) SetNamespaceName(v string) {
	o.NamespaceName = v
}

// GetReadyReplicas returns the ReadyReplicas field value
func (o *Deployment) GetReadyReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ReadyReplicas
}

// GetReadyReplicasOk returns a tuple with the ReadyReplicas field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetReadyReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReadyReplicas, true
}

// SetReadyReplicas sets field value
func (o *Deployment) SetReadyReplicas(v int32) {
	o.ReadyReplicas = v
}

// GetSelector returns the Selector field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *Deployment) GetSelector() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Selector
}

// GetSelectorOk returns a tuple with the Selector field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetSelectorOk() ([]string, bool) {
	if o == nil || IsNil(o.Selector) {
		return nil, false
	}
	return o.Selector, true
}

// SetSelector sets field value
func (o *Deployment) SetSelector(v []string) {
	o.Selector = v
}

// GetSelectorDetails returns the SelectorDetails field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *Deployment) GetSelectorDetails() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SelectorDetails
}

// GetSelectorDetailsOk returns a tuple with the SelectorDetails field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetSelectorDetailsOk() ([]string, bool) {
	if o == nil || IsNil(o.SelectorDetails) {
		return nil, false
	}
	return o.SelectorDetails, true
}

// SetSelectorDetails sets field value
func (o *Deployment) SetSelectorDetails(v []string) {
	o.SelectorDetails = v
}

// GetSpecReplicas returns the SpecReplicas field value
func (o *Deployment) GetSpecReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SpecReplicas
}

// GetSpecReplicasOk returns a tuple with the SpecReplicas field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetSpecReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpecReplicas, true
}

// SetSpecReplicas sets field value
func (o *Deployment) SetSpecReplicas(v int32) {
	o.SpecReplicas = v
}

// GetStatusReplicas returns the StatusReplicas field value
func (o *Deployment) GetStatusReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StatusReplicas
}

// GetStatusReplicasOk returns a tuple with the StatusReplicas field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetStatusReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusReplicas, true
}

// SetStatusReplicas sets field value
func (o *Deployment) SetStatusReplicas(v int32) {
	o.StatusReplicas = v
}

// GetStrategyType returns the StrategyType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Deployment) GetStrategyType() string {
	if o == nil || o.StrategyType.Get() == nil {
		var ret string
		return ret
	}

	return *o.StrategyType.Get()
}

// GetStrategyTypeOk returns a tuple with the StrategyType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetStrategyTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StrategyType.Get(), o.StrategyType.IsSet()
}

// SetStrategyType sets field value
func (o *Deployment) SetStrategyType(v string) {
	o.StrategyType.Set(&v)
}

// GetUid returns the Uid field value
func (o *Deployment) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *Deployment) SetUid(v string) {
	o.Uid = v
}

// GetUnavailableReplicas returns the UnavailableReplicas field value
func (o *Deployment) GetUnavailableReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UnavailableReplicas
}

// GetUnavailableReplicasOk returns a tuple with the UnavailableReplicas field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetUnavailableReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnavailableReplicas, true
}

// SetUnavailableReplicas sets field value
func (o *Deployment) SetUnavailableReplicas(v int32) {
	o.UnavailableReplicas = v
}

// GetUpdatedReplicas returns the UpdatedReplicas field value
func (o *Deployment) GetUpdatedReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UpdatedReplicas
}

// GetUpdatedReplicasOk returns a tuple with the UpdatedReplicas field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetUpdatedReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedReplicas, true
}

// SetUpdatedReplicas sets field value
func (o *Deployment) SetUpdatedReplicas(v int32) {
	o.UpdatedReplicas = v
}

// GetYaml returns the Yaml field value
func (o *Deployment) GetYaml() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Yaml
}

// GetYamlOk returns a tuple with the Yaml field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetYamlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Yaml, true
}

// SetYaml sets field value
func (o *Deployment) SetYaml(v string) {
	o.Yaml = v
}

func (o Deployment) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Deployment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["age"] = o.Age
	if o.Annotations != nil {
		toSerialize["annotations"] = o.Annotations
	}
	toSerialize["available_replicas"] = o.AvailableReplicas
	toSerialize["cluster_id"] = o.ClusterId
	toSerialize["cluster_name"] = o.ClusterName
	toSerialize["created_at"] = o.CreatedAt
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	toSerialize["max_surge"] = o.MaxSurge.Get()
	toSerialize["max_unavailable"] = o.MaxUnavailable.Get()
	toSerialize["min_ready_seconds"] = o.MinReadySeconds.Get()
	toSerialize["name"] = o.Name
	toSerialize["namespace_name"] = o.NamespaceName
	toSerialize["ready_replicas"] = o.ReadyReplicas
	if o.Selector != nil {
		toSerialize["selector"] = o.Selector
	}
	if o.SelectorDetails != nil {
		toSerialize["selector_details"] = o.SelectorDetails
	}
	toSerialize["spec_replicas"] = o.SpecReplicas
	toSerialize["status_replicas"] = o.StatusReplicas
	toSerialize["strategy_type"] = o.StrategyType.Get()
	toSerialize["uid"] = o.Uid
	toSerialize["unavailable_replicas"] = o.UnavailableReplicas
	toSerialize["updated_replicas"] = o.UpdatedReplicas
	toSerialize["yaml"] = o.Yaml
	return toSerialize, nil
}

func (o *Deployment) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"age",
		"annotations",
		"available_replicas",
		"cluster_id",
		"cluster_name",
		"created_at",
		"labels",
		"max_surge",
		"max_unavailable",
		"min_ready_seconds",
		"name",
		"namespace_name",
		"ready_replicas",
		"selector",
		"selector_details",
		"spec_replicas",
		"status_replicas",
		"strategy_type",
		"uid",
		"unavailable_replicas",
		"updated_replicas",
		"yaml",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeployment := _Deployment{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeployment)

	if err != nil {
		return err
	}

	*o = Deployment(varDeployment)

	return err
}

type NullableDeployment struct {
	value *Deployment
	isSet bool
}

func (v NullableDeployment) Get() *Deployment {
	return v.value
}

func (v *NullableDeployment) Set(val *Deployment) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployment(val *Deployment) *NullableDeployment {
	return &NullableDeployment{value: val, isSet: true}
}

func (v NullableDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
