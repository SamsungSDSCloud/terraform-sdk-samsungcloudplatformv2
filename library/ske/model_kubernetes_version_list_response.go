/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2273
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the KubernetesVersionListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubernetesVersionListResponse{}

// KubernetesVersionListResponse struct for KubernetesVersionListResponse
type KubernetesVersionListResponse struct {
	KubernetesVersions []KubernetesVersion `json:"kubernetes_versions"`
}

type _KubernetesVersionListResponse KubernetesVersionListResponse

// NewKubernetesVersionListResponse instantiates a new KubernetesVersionListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesVersionListResponse(kubernetesVersions []KubernetesVersion) *KubernetesVersionListResponse {
	this := KubernetesVersionListResponse{}
	this.KubernetesVersions = kubernetesVersions
	return &this
}

// NewKubernetesVersionListResponseWithDefaults instantiates a new KubernetesVersionListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesVersionListResponseWithDefaults() *KubernetesVersionListResponse {
	this := KubernetesVersionListResponse{}
	return &this
}

// GetKubernetesVersions returns the KubernetesVersions field value
func (o *KubernetesVersionListResponse) GetKubernetesVersions() []KubernetesVersion {
	if o == nil {
		var ret []KubernetesVersion
		return ret
	}

	return o.KubernetesVersions
}

// GetKubernetesVersionsOk returns a tuple with the KubernetesVersions field value
// and a boolean to check if the value has been set.
func (o *KubernetesVersionListResponse) GetKubernetesVersionsOk() ([]KubernetesVersion, bool) {
	if o == nil {
		return nil, false
	}
	return o.KubernetesVersions, true
}

// SetKubernetesVersions sets field value
func (o *KubernetesVersionListResponse) SetKubernetesVersions(v []KubernetesVersion) {
	o.KubernetesVersions = v
}

func (o KubernetesVersionListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubernetesVersionListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["kubernetes_versions"] = o.KubernetesVersions
	return toSerialize, nil
}

func (o *KubernetesVersionListResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"kubernetes_versions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKubernetesVersionListResponse := _KubernetesVersionListResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKubernetesVersionListResponse)

	if err != nil {
		return err
	}

	*o = KubernetesVersionListResponse(varKubernetesVersionListResponse)

	return err
}

type NullableKubernetesVersionListResponse struct {
	value *KubernetesVersionListResponse
	isSet bool
}

func (v NullableKubernetesVersionListResponse) Get() *KubernetesVersionListResponse {
	return v.value
}

func (v *NullableKubernetesVersionListResponse) Set(val *KubernetesVersionListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesVersionListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesVersionListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesVersionListResponse(val *KubernetesVersionListResponse) *NullableKubernetesVersionListResponse {
	return &NullableKubernetesVersionListResponse{value: val, isSet: true}
}

func (v NullableKubernetesVersionListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesVersionListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
