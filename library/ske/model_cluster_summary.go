/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2273
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ClusterSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterSummary{}

// ClusterSummary struct for ClusterSummary
type ClusterSummary struct {
	// Account ID
	AccountId string `json:"account_id"`
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Cluster ID
	Id string `json:"id"`
	// Cluster Version
	KubernetesVersion string `json:"kubernetes_version"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Cluster Name
	Name      string        `json:"name"`
	NodeCount NullableInt32 `json:"node_count"`
	// Cluster Status
	Status   string         `json:"status"`
	SubnetId NullableString `json:"subnet_id"`
}

type _ClusterSummary ClusterSummary

// NewClusterSummary instantiates a new ClusterSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterSummary(accountId string, createdAt time.Time, id string, kubernetesVersion string, modifiedAt time.Time, name string, nodeCount NullableInt32, status string, subnetId NullableString) *ClusterSummary {
	this := ClusterSummary{}
	this.AccountId = accountId
	this.CreatedAt = createdAt
	this.Id = id
	this.KubernetesVersion = kubernetesVersion
	this.ModifiedAt = modifiedAt
	this.Name = name
	this.NodeCount = nodeCount
	this.Status = status
	this.SubnetId = subnetId
	return &this
}

// NewClusterSummaryWithDefaults instantiates a new ClusterSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterSummaryWithDefaults() *ClusterSummary {
	this := ClusterSummary{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *ClusterSummary) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *ClusterSummary) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *ClusterSummary) SetAccountId(v string) {
	o.AccountId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ClusterSummary) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ClusterSummary) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ClusterSummary) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetId returns the Id field value
func (o *ClusterSummary) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ClusterSummary) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ClusterSummary) SetId(v string) {
	o.Id = v
}

// GetKubernetesVersion returns the KubernetesVersion field value
func (o *ClusterSummary) GetKubernetesVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KubernetesVersion
}

// GetKubernetesVersionOk returns a tuple with the KubernetesVersion field value
// and a boolean to check if the value has been set.
func (o *ClusterSummary) GetKubernetesVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KubernetesVersion, true
}

// SetKubernetesVersion sets field value
func (o *ClusterSummary) SetKubernetesVersion(v string) {
	o.KubernetesVersion = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *ClusterSummary) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *ClusterSummary) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *ClusterSummary) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetName returns the Name field value
func (o *ClusterSummary) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ClusterSummary) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ClusterSummary) SetName(v string) {
	o.Name = v
}

// GetNodeCount returns the NodeCount field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *ClusterSummary) GetNodeCount() int32 {
	if o == nil || o.NodeCount.Get() == nil {
		var ret int32
		return ret
	}

	return *o.NodeCount.Get()
}

// GetNodeCountOk returns a tuple with the NodeCount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterSummary) GetNodeCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NodeCount.Get(), o.NodeCount.IsSet()
}

// SetNodeCount sets field value
func (o *ClusterSummary) SetNodeCount(v int32) {
	o.NodeCount.Set(&v)
}

// GetStatus returns the Status field value
func (o *ClusterSummary) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ClusterSummary) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ClusterSummary) SetStatus(v string) {
	o.Status = v
}

// GetSubnetId returns the SubnetId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ClusterSummary) GetSubnetId() string {
	if o == nil || o.SubnetId.Get() == nil {
		var ret string
		return ret
	}

	return *o.SubnetId.Get()
}

// GetSubnetIdOk returns a tuple with the SubnetId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterSummary) GetSubnetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubnetId.Get(), o.SubnetId.IsSet()
}

// SetSubnetId sets field value
func (o *ClusterSummary) SetSubnetId(v string) {
	o.SubnetId.Set(&v)
}

func (o ClusterSummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["id"] = o.Id
	toSerialize["kubernetes_version"] = o.KubernetesVersion
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["name"] = o.Name
	toSerialize["node_count"] = o.NodeCount.Get()
	toSerialize["status"] = o.Status
	toSerialize["subnet_id"] = o.SubnetId.Get()
	return toSerialize, nil
}

func (o *ClusterSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"created_at",
		"id",
		"kubernetes_version",
		"modified_at",
		"name",
		"node_count",
		"status",
		"subnet_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterSummary := _ClusterSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClusterSummary)

	if err != nil {
		return err
	}

	*o = ClusterSummary(varClusterSummary)

	return err
}

type NullableClusterSummary struct {
	value *ClusterSummary
	isSet bool
}

func (v NullableClusterSummary) Get() *ClusterSummary {
	return v.value
}

func (v *NullableClusterSummary) Set(val *ClusterSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterSummary(val *ClusterSummary) *NullableClusterSummary {
	return &NullableClusterSummary{value: val, isSet: true}
}

func (v NullableClusterSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
