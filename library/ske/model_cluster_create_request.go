/*
SCP Kubernetes Service

SCP Kubernetes Service

API version: 0.0.1.dev2273
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ske

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ClusterCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterCreateRequest{}

// ClusterCreateRequest struct for ClusterCreateRequest
type ClusterCreateRequest struct {
	// Cloud Logging Enabled
	CloudLoggingEnabled bool `json:"cloud_logging_enabled"`
	// Cluster Version
	KubernetesVersion string `json:"kubernetes_version" validate:"regexp=^v[0-9]{1}\\\\.[0-9]{1,2}\\\\.[0-9]{1,2}$"`
	// Cluster Name
	Name                                  string                                 `json:"name" validate:"regexp=^[a-z][a-z0-9\\\\-]*[a-z0-9]$"`
	PrivateEndpointAccessControlResources []PrivateEndpointAccessControlResource `json:"private_endpoint_access_control_resources,omitempty"`
	PublicEndpointAccessControlIp         NullableString                         `json:"public_endpoint_access_control_ip,omitempty"`
	// Security group ID list
	SecurityGroupIdList []string `json:"security_group_id_list"`
	// Subnet ID
	SubnetId string `json:"subnet_id"`
	Tags     []Tag  `json:"tags,omitempty"`
	// Volume ID
	VolumeId string `json:"volume_id"`
	// VPC ID
	VpcId string `json:"vpc_id"`
}

type _ClusterCreateRequest ClusterCreateRequest

// NewClusterCreateRequest instantiates a new ClusterCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterCreateRequest(cloudLoggingEnabled bool, kubernetesVersion string, name string, securityGroupIdList []string, subnetId string, volumeId string, vpcId string) *ClusterCreateRequest {
	this := ClusterCreateRequest{}
	this.CloudLoggingEnabled = cloudLoggingEnabled
	this.KubernetesVersion = kubernetesVersion
	this.Name = name
	this.SecurityGroupIdList = securityGroupIdList
	this.SubnetId = subnetId
	this.VolumeId = volumeId
	this.VpcId = vpcId
	return &this
}

// NewClusterCreateRequestWithDefaults instantiates a new ClusterCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterCreateRequestWithDefaults() *ClusterCreateRequest {
	this := ClusterCreateRequest{}
	return &this
}

// GetCloudLoggingEnabled returns the CloudLoggingEnabled field value
func (o *ClusterCreateRequest) GetCloudLoggingEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CloudLoggingEnabled
}

// GetCloudLoggingEnabledOk returns a tuple with the CloudLoggingEnabled field value
// and a boolean to check if the value has been set.
func (o *ClusterCreateRequest) GetCloudLoggingEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudLoggingEnabled, true
}

// SetCloudLoggingEnabled sets field value
func (o *ClusterCreateRequest) SetCloudLoggingEnabled(v bool) {
	o.CloudLoggingEnabled = v
}

// GetKubernetesVersion returns the KubernetesVersion field value
func (o *ClusterCreateRequest) GetKubernetesVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KubernetesVersion
}

// GetKubernetesVersionOk returns a tuple with the KubernetesVersion field value
// and a boolean to check if the value has been set.
func (o *ClusterCreateRequest) GetKubernetesVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KubernetesVersion, true
}

// SetKubernetesVersion sets field value
func (o *ClusterCreateRequest) SetKubernetesVersion(v string) {
	o.KubernetesVersion = v
}

// GetName returns the Name field value
func (o *ClusterCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ClusterCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ClusterCreateRequest) SetName(v string) {
	o.Name = v
}

// GetPrivateEndpointAccessControlResources returns the PrivateEndpointAccessControlResources field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterCreateRequest) GetPrivateEndpointAccessControlResources() []PrivateEndpointAccessControlResource {
	if o == nil {
		var ret []PrivateEndpointAccessControlResource
		return ret
	}
	return o.PrivateEndpointAccessControlResources
}

// GetPrivateEndpointAccessControlResourcesOk returns a tuple with the PrivateEndpointAccessControlResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterCreateRequest) GetPrivateEndpointAccessControlResourcesOk() ([]PrivateEndpointAccessControlResource, bool) {
	if o == nil || IsNil(o.PrivateEndpointAccessControlResources) {
		return nil, false
	}
	return o.PrivateEndpointAccessControlResources, true
}

// HasPrivateEndpointAccessControlResources returns a boolean if a field has been set.
func (o *ClusterCreateRequest) HasPrivateEndpointAccessControlResources() bool {
	if o != nil && !IsNil(o.PrivateEndpointAccessControlResources) {
		return true
	}

	return false
}

// SetPrivateEndpointAccessControlResources gets a reference to the given []PrivateEndpointAccessControlResource and assigns it to the PrivateEndpointAccessControlResources field.
func (o *ClusterCreateRequest) SetPrivateEndpointAccessControlResources(v []PrivateEndpointAccessControlResource) {
	o.PrivateEndpointAccessControlResources = v
}

// GetPublicEndpointAccessControlIp returns the PublicEndpointAccessControlIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterCreateRequest) GetPublicEndpointAccessControlIp() string {
	if o == nil || IsNil(o.PublicEndpointAccessControlIp.Get()) {
		var ret string
		return ret
	}
	return *o.PublicEndpointAccessControlIp.Get()
}

// GetPublicEndpointAccessControlIpOk returns a tuple with the PublicEndpointAccessControlIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterCreateRequest) GetPublicEndpointAccessControlIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublicEndpointAccessControlIp.Get(), o.PublicEndpointAccessControlIp.IsSet()
}

// HasPublicEndpointAccessControlIp returns a boolean if a field has been set.
func (o *ClusterCreateRequest) HasPublicEndpointAccessControlIp() bool {
	if o != nil && o.PublicEndpointAccessControlIp.IsSet() {
		return true
	}

	return false
}

// SetPublicEndpointAccessControlIp gets a reference to the given NullableString and assigns it to the PublicEndpointAccessControlIp field.
func (o *ClusterCreateRequest) SetPublicEndpointAccessControlIp(v string) {
	o.PublicEndpointAccessControlIp.Set(&v)
}

// SetPublicEndpointAccessControlIpNil sets the value for PublicEndpointAccessControlIp to be an explicit nil
func (o *ClusterCreateRequest) SetPublicEndpointAccessControlIpNil() {
	o.PublicEndpointAccessControlIp.Set(nil)
}

// UnsetPublicEndpointAccessControlIp ensures that no value is present for PublicEndpointAccessControlIp, not even an explicit nil
func (o *ClusterCreateRequest) UnsetPublicEndpointAccessControlIp() {
	o.PublicEndpointAccessControlIp.Unset()
}

// GetSecurityGroupIdList returns the SecurityGroupIdList field value
func (o *ClusterCreateRequest) GetSecurityGroupIdList() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SecurityGroupIdList
}

// GetSecurityGroupIdListOk returns a tuple with the SecurityGroupIdList field value
// and a boolean to check if the value has been set.
func (o *ClusterCreateRequest) GetSecurityGroupIdListOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecurityGroupIdList, true
}

// SetSecurityGroupIdList sets field value
func (o *ClusterCreateRequest) SetSecurityGroupIdList(v []string) {
	o.SecurityGroupIdList = v
}

// GetSubnetId returns the SubnetId field value
func (o *ClusterCreateRequest) GetSubnetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value
// and a boolean to check if the value has been set.
func (o *ClusterCreateRequest) GetSubnetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubnetId, true
}

// SetSubnetId sets field value
func (o *ClusterCreateRequest) SetSubnetId(v string) {
	o.SubnetId = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterCreateRequest) GetTags() []Tag {
	if o == nil {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterCreateRequest) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ClusterCreateRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *ClusterCreateRequest) SetTags(v []Tag) {
	o.Tags = v
}

// GetVolumeId returns the VolumeId field value
func (o *ClusterCreateRequest) GetVolumeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value
// and a boolean to check if the value has been set.
func (o *ClusterCreateRequest) GetVolumeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolumeId, true
}

// SetVolumeId sets field value
func (o *ClusterCreateRequest) SetVolumeId(v string) {
	o.VolumeId = v
}

// GetVpcId returns the VpcId field value
func (o *ClusterCreateRequest) GetVpcId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VpcId
}

// GetVpcIdOk returns a tuple with the VpcId field value
// and a boolean to check if the value has been set.
func (o *ClusterCreateRequest) GetVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VpcId, true
}

// SetVpcId sets field value
func (o *ClusterCreateRequest) SetVpcId(v string) {
	o.VpcId = v
}

func (o ClusterCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cloud_logging_enabled"] = o.CloudLoggingEnabled
	toSerialize["kubernetes_version"] = o.KubernetesVersion
	toSerialize["name"] = o.Name
	if o.PrivateEndpointAccessControlResources != nil {
		toSerialize["private_endpoint_access_control_resources"] = o.PrivateEndpointAccessControlResources
	}
	if o.PublicEndpointAccessControlIp.IsSet() {
		toSerialize["public_endpoint_access_control_ip"] = o.PublicEndpointAccessControlIp.Get()
	}
	toSerialize["security_group_id_list"] = o.SecurityGroupIdList
	toSerialize["subnet_id"] = o.SubnetId
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["volume_id"] = o.VolumeId
	toSerialize["vpc_id"] = o.VpcId
	return toSerialize, nil
}

func (o *ClusterCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cloud_logging_enabled",
		"kubernetes_version",
		"name",
		"security_group_id_list",
		"subnet_id",
		"volume_id",
		"vpc_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterCreateRequest := _ClusterCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClusterCreateRequest)

	if err != nil {
		return err
	}

	*o = ClusterCreateRequest(varClusterCreateRequest)

	return err
}

type NullableClusterCreateRequest struct {
	value *ClusterCreateRequest
	isSet bool
}

func (v NullableClusterCreateRequest) Get() *ClusterCreateRequest {
	return v.value
}

func (v *NullableClusterCreateRequest) Set(val *ClusterCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterCreateRequest(val *ClusterCreateRequest) *NullableClusterCreateRequest {
	return &NullableClusterCreateRequest{value: val, isSet: true}
}

func (v NullableClusterCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
