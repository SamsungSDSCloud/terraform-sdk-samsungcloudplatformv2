/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2181
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vertica

import (
	"encoding/json"
)

// checks if the MaintenanceResponseOption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MaintenanceResponseOption{}

// MaintenanceResponseOption struct for MaintenanceResponseOption
type MaintenanceResponseOption struct {
	PeriodHour        NullableString    `json:"period_hour,omitempty"`
	StartingDayOfWeek NullableDayOfWeek `json:"starting_day_of_week,omitempty"`
	StartingTime      NullableString    `json:"starting_time,omitempty"`
	// Maintenance period usage state
	UseMaintenanceOption *bool `json:"use_maintenance_option,omitempty"`
}

// NewMaintenanceResponseOption instantiates a new MaintenanceResponseOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaintenanceResponseOption() *MaintenanceResponseOption {
	this := MaintenanceResponseOption{}
	var useMaintenanceOption bool = false
	this.UseMaintenanceOption = &useMaintenanceOption
	return &this
}

// NewMaintenanceResponseOptionWithDefaults instantiates a new MaintenanceResponseOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaintenanceResponseOptionWithDefaults() *MaintenanceResponseOption {
	this := MaintenanceResponseOption{}
	var useMaintenanceOption bool = false
	this.UseMaintenanceOption = &useMaintenanceOption
	return &this
}

// GetPeriodHour returns the PeriodHour field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MaintenanceResponseOption) GetPeriodHour() string {
	if o == nil || IsNil(o.PeriodHour.Get()) {
		var ret string
		return ret
	}
	return *o.PeriodHour.Get()
}

// GetPeriodHourOk returns a tuple with the PeriodHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MaintenanceResponseOption) GetPeriodHourOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PeriodHour.Get(), o.PeriodHour.IsSet()
}

// HasPeriodHour returns a boolean if a field has been set.
func (o *MaintenanceResponseOption) HasPeriodHour() bool {
	if o != nil && o.PeriodHour.IsSet() {
		return true
	}

	return false
}

// SetPeriodHour gets a reference to the given NullableString and assigns it to the PeriodHour field.
func (o *MaintenanceResponseOption) SetPeriodHour(v string) {
	o.PeriodHour.Set(&v)
}

// SetPeriodHourNil sets the value for PeriodHour to be an explicit nil
func (o *MaintenanceResponseOption) SetPeriodHourNil() {
	o.PeriodHour.Set(nil)
}

// UnsetPeriodHour ensures that no value is present for PeriodHour, not even an explicit nil
func (o *MaintenanceResponseOption) UnsetPeriodHour() {
	o.PeriodHour.Unset()
}

// GetStartingDayOfWeek returns the StartingDayOfWeek field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MaintenanceResponseOption) GetStartingDayOfWeek() DayOfWeek {
	if o == nil || IsNil(o.StartingDayOfWeek.Get()) {
		var ret DayOfWeek
		return ret
	}
	return *o.StartingDayOfWeek.Get()
}

// GetStartingDayOfWeekOk returns a tuple with the StartingDayOfWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MaintenanceResponseOption) GetStartingDayOfWeekOk() (*DayOfWeek, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartingDayOfWeek.Get(), o.StartingDayOfWeek.IsSet()
}

// HasStartingDayOfWeek returns a boolean if a field has been set.
func (o *MaintenanceResponseOption) HasStartingDayOfWeek() bool {
	if o != nil && o.StartingDayOfWeek.IsSet() {
		return true
	}

	return false
}

// SetStartingDayOfWeek gets a reference to the given NullableDayOfWeek and assigns it to the StartingDayOfWeek field.
func (o *MaintenanceResponseOption) SetStartingDayOfWeek(v DayOfWeek) {
	o.StartingDayOfWeek.Set(&v)
}

// SetStartingDayOfWeekNil sets the value for StartingDayOfWeek to be an explicit nil
func (o *MaintenanceResponseOption) SetStartingDayOfWeekNil() {
	o.StartingDayOfWeek.Set(nil)
}

// UnsetStartingDayOfWeek ensures that no value is present for StartingDayOfWeek, not even an explicit nil
func (o *MaintenanceResponseOption) UnsetStartingDayOfWeek() {
	o.StartingDayOfWeek.Unset()
}

// GetStartingTime returns the StartingTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MaintenanceResponseOption) GetStartingTime() string {
	if o == nil || IsNil(o.StartingTime.Get()) {
		var ret string
		return ret
	}
	return *o.StartingTime.Get()
}

// GetStartingTimeOk returns a tuple with the StartingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MaintenanceResponseOption) GetStartingTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartingTime.Get(), o.StartingTime.IsSet()
}

// HasStartingTime returns a boolean if a field has been set.
func (o *MaintenanceResponseOption) HasStartingTime() bool {
	if o != nil && o.StartingTime.IsSet() {
		return true
	}

	return false
}

// SetStartingTime gets a reference to the given NullableString and assigns it to the StartingTime field.
func (o *MaintenanceResponseOption) SetStartingTime(v string) {
	o.StartingTime.Set(&v)
}

// SetStartingTimeNil sets the value for StartingTime to be an explicit nil
func (o *MaintenanceResponseOption) SetStartingTimeNil() {
	o.StartingTime.Set(nil)
}

// UnsetStartingTime ensures that no value is present for StartingTime, not even an explicit nil
func (o *MaintenanceResponseOption) UnsetStartingTime() {
	o.StartingTime.Unset()
}

// GetUseMaintenanceOption returns the UseMaintenanceOption field value if set, zero value otherwise.
func (o *MaintenanceResponseOption) GetUseMaintenanceOption() bool {
	if o == nil || IsNil(o.UseMaintenanceOption) {
		var ret bool
		return ret
	}
	return *o.UseMaintenanceOption
}

// GetUseMaintenanceOptionOk returns a tuple with the UseMaintenanceOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceResponseOption) GetUseMaintenanceOptionOk() (*bool, bool) {
	if o == nil || IsNil(o.UseMaintenanceOption) {
		return nil, false
	}
	return o.UseMaintenanceOption, true
}

// HasUseMaintenanceOption returns a boolean if a field has been set.
func (o *MaintenanceResponseOption) HasUseMaintenanceOption() bool {
	if o != nil && !IsNil(o.UseMaintenanceOption) {
		return true
	}

	return false
}

// SetUseMaintenanceOption gets a reference to the given bool and assigns it to the UseMaintenanceOption field.
func (o *MaintenanceResponseOption) SetUseMaintenanceOption(v bool) {
	o.UseMaintenanceOption = &v
}

func (o MaintenanceResponseOption) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MaintenanceResponseOption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.PeriodHour.IsSet() {
		toSerialize["period_hour"] = o.PeriodHour.Get()
	}
	if o.StartingDayOfWeek.IsSet() {
		toSerialize["starting_day_of_week"] = o.StartingDayOfWeek.Get()
	}
	if o.StartingTime.IsSet() {
		toSerialize["starting_time"] = o.StartingTime.Get()
	}
	if !IsNil(o.UseMaintenanceOption) {
		toSerialize["use_maintenance_option"] = o.UseMaintenanceOption
	}
	return toSerialize, nil
}

type NullableMaintenanceResponseOption struct {
	value *MaintenanceResponseOption
	isSet bool
}

func (v NullableMaintenanceResponseOption) Get() *MaintenanceResponseOption {
	return v.value
}

func (v *NullableMaintenanceResponseOption) Set(val *MaintenanceResponseOption) {
	v.value = val
	v.isSet = true
}

func (v NullableMaintenanceResponseOption) IsSet() bool {
	return v.isSet
}

func (v *NullableMaintenanceResponseOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaintenanceResponseOption(val *MaintenanceResponseOption) *NullableMaintenanceResponseOption {
	return &NullableMaintenanceResponseOption{value: val, isSet: true}
}

func (v NullableMaintenanceResponseOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaintenanceResponseOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
