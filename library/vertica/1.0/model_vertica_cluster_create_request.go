/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2181
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vertica

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the VerticaClusterCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerticaClusterCreateRequest{}

// VerticaClusterCreateRequest struct for VerticaClusterCreateRequest
type VerticaClusterCreateRequest struct {
	// Allowed IP addresses list
	AllowableIpAddresses []string `json:"allowable_ip_addresses,omitempty"`
	// DBaaS engine version ID
	DbaasEngineVersionId string `json:"dbaas_engine_version_id"`
	// DB initial configuration option
	InitConfigOption VerticaInitConfigOptionRequest `json:"init_config_option"`
	// Instance groups list
	InstanceGroups []InstanceGroupRequest `json:"instance_groups"`
	// Instance name prefix
	InstanceNamePrefix string `json:"instance_name_prefix" validate:"regexp=^[a-z][a-zA-Z0-9\\\\-]*$"`
	// license
	License           *string                   `json:"license,omitempty"`
	MaintenanceOption NullableMaintenanceOption `json:"maintenance_option,omitempty"`
	// Cluster name
	Name       string       `json:"name" validate:"regexp=^[a-zA-Z]*$"`
	NatEnabled NullableBool `json:"nat_enabled,omitempty"`
	// Subnet ID
	SubnetId string `json:"subnet_id"`
	Tags     []Tag  `json:"tags,omitempty"`
	// Timezone
	Timezone string `json:"timezone"`
}

type _VerticaClusterCreateRequest VerticaClusterCreateRequest

// NewVerticaClusterCreateRequest instantiates a new VerticaClusterCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerticaClusterCreateRequest(dbaasEngineVersionId string, initConfigOption VerticaInitConfigOptionRequest, instanceGroups []InstanceGroupRequest, instanceNamePrefix string, name string, subnetId string, timezone string) *VerticaClusterCreateRequest {
	this := VerticaClusterCreateRequest{}
	this.DbaasEngineVersionId = dbaasEngineVersionId
	this.InitConfigOption = initConfigOption
	this.InstanceGroups = instanceGroups
	this.InstanceNamePrefix = instanceNamePrefix
	this.Name = name
	this.SubnetId = subnetId
	this.Timezone = timezone
	return &this
}

// NewVerticaClusterCreateRequestWithDefaults instantiates a new VerticaClusterCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerticaClusterCreateRequestWithDefaults() *VerticaClusterCreateRequest {
	this := VerticaClusterCreateRequest{}
	return &this
}

// GetAllowableIpAddresses returns the AllowableIpAddresses field value if set, zero value otherwise.
func (o *VerticaClusterCreateRequest) GetAllowableIpAddresses() []string {
	if o == nil || IsNil(o.AllowableIpAddresses) {
		var ret []string
		return ret
	}
	return o.AllowableIpAddresses
}

// GetAllowableIpAddressesOk returns a tuple with the AllowableIpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerticaClusterCreateRequest) GetAllowableIpAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowableIpAddresses) {
		return nil, false
	}
	return o.AllowableIpAddresses, true
}

// HasAllowableIpAddresses returns a boolean if a field has been set.
func (o *VerticaClusterCreateRequest) HasAllowableIpAddresses() bool {
	if o != nil && !IsNil(o.AllowableIpAddresses) {
		return true
	}

	return false
}

// SetAllowableIpAddresses gets a reference to the given []string and assigns it to the AllowableIpAddresses field.
func (o *VerticaClusterCreateRequest) SetAllowableIpAddresses(v []string) {
	o.AllowableIpAddresses = v
}

// GetDbaasEngineVersionId returns the DbaasEngineVersionId field value
func (o *VerticaClusterCreateRequest) GetDbaasEngineVersionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DbaasEngineVersionId
}

// GetDbaasEngineVersionIdOk returns a tuple with the DbaasEngineVersionId field value
// and a boolean to check if the value has been set.
func (o *VerticaClusterCreateRequest) GetDbaasEngineVersionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DbaasEngineVersionId, true
}

// SetDbaasEngineVersionId sets field value
func (o *VerticaClusterCreateRequest) SetDbaasEngineVersionId(v string) {
	o.DbaasEngineVersionId = v
}

// GetInitConfigOption returns the InitConfigOption field value
func (o *VerticaClusterCreateRequest) GetInitConfigOption() VerticaInitConfigOptionRequest {
	if o == nil {
		var ret VerticaInitConfigOptionRequest
		return ret
	}

	return o.InitConfigOption
}

// GetInitConfigOptionOk returns a tuple with the InitConfigOption field value
// and a boolean to check if the value has been set.
func (o *VerticaClusterCreateRequest) GetInitConfigOptionOk() (*VerticaInitConfigOptionRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InitConfigOption, true
}

// SetInitConfigOption sets field value
func (o *VerticaClusterCreateRequest) SetInitConfigOption(v VerticaInitConfigOptionRequest) {
	o.InitConfigOption = v
}

// GetInstanceGroups returns the InstanceGroups field value
func (o *VerticaClusterCreateRequest) GetInstanceGroups() []InstanceGroupRequest {
	if o == nil {
		var ret []InstanceGroupRequest
		return ret
	}

	return o.InstanceGroups
}

// GetInstanceGroupsOk returns a tuple with the InstanceGroups field value
// and a boolean to check if the value has been set.
func (o *VerticaClusterCreateRequest) GetInstanceGroupsOk() ([]InstanceGroupRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstanceGroups, true
}

// SetInstanceGroups sets field value
func (o *VerticaClusterCreateRequest) SetInstanceGroups(v []InstanceGroupRequest) {
	o.InstanceGroups = v
}

// GetInstanceNamePrefix returns the InstanceNamePrefix field value
func (o *VerticaClusterCreateRequest) GetInstanceNamePrefix() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceNamePrefix
}

// GetInstanceNamePrefixOk returns a tuple with the InstanceNamePrefix field value
// and a boolean to check if the value has been set.
func (o *VerticaClusterCreateRequest) GetInstanceNamePrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceNamePrefix, true
}

// SetInstanceNamePrefix sets field value
func (o *VerticaClusterCreateRequest) SetInstanceNamePrefix(v string) {
	o.InstanceNamePrefix = v
}

// GetLicense returns the License field value if set, zero value otherwise.
func (o *VerticaClusterCreateRequest) GetLicense() string {
	if o == nil || IsNil(o.License) {
		var ret string
		return ret
	}
	return *o.License
}

// GetLicenseOk returns a tuple with the License field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerticaClusterCreateRequest) GetLicenseOk() (*string, bool) {
	if o == nil || IsNil(o.License) {
		return nil, false
	}
	return o.License, true
}

// HasLicense returns a boolean if a field has been set.
func (o *VerticaClusterCreateRequest) HasLicense() bool {
	if o != nil && !IsNil(o.License) {
		return true
	}

	return false
}

// SetLicense gets a reference to the given string and assigns it to the License field.
func (o *VerticaClusterCreateRequest) SetLicense(v string) {
	o.License = &v
}

// GetMaintenanceOption returns the MaintenanceOption field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VerticaClusterCreateRequest) GetMaintenanceOption() MaintenanceOption {
	if o == nil || IsNil(o.MaintenanceOption.Get()) {
		var ret MaintenanceOption
		return ret
	}
	return *o.MaintenanceOption.Get()
}

// GetMaintenanceOptionOk returns a tuple with the MaintenanceOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VerticaClusterCreateRequest) GetMaintenanceOptionOk() (*MaintenanceOption, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaintenanceOption.Get(), o.MaintenanceOption.IsSet()
}

// HasMaintenanceOption returns a boolean if a field has been set.
func (o *VerticaClusterCreateRequest) HasMaintenanceOption() bool {
	if o != nil && o.MaintenanceOption.IsSet() {
		return true
	}

	return false
}

// SetMaintenanceOption gets a reference to the given NullableMaintenanceOption and assigns it to the MaintenanceOption field.
func (o *VerticaClusterCreateRequest) SetMaintenanceOption(v MaintenanceOption) {
	o.MaintenanceOption.Set(&v)
}

// SetMaintenanceOptionNil sets the value for MaintenanceOption to be an explicit nil
func (o *VerticaClusterCreateRequest) SetMaintenanceOptionNil() {
	o.MaintenanceOption.Set(nil)
}

// UnsetMaintenanceOption ensures that no value is present for MaintenanceOption, not even an explicit nil
func (o *VerticaClusterCreateRequest) UnsetMaintenanceOption() {
	o.MaintenanceOption.Unset()
}

// GetName returns the Name field value
func (o *VerticaClusterCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VerticaClusterCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VerticaClusterCreateRequest) SetName(v string) {
	o.Name = v
}

// GetNatEnabled returns the NatEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VerticaClusterCreateRequest) GetNatEnabled() bool {
	if o == nil || IsNil(o.NatEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.NatEnabled.Get()
}

// GetNatEnabledOk returns a tuple with the NatEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VerticaClusterCreateRequest) GetNatEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.NatEnabled.Get(), o.NatEnabled.IsSet()
}

// HasNatEnabled returns a boolean if a field has been set.
func (o *VerticaClusterCreateRequest) HasNatEnabled() bool {
	if o != nil && o.NatEnabled.IsSet() {
		return true
	}

	return false
}

// SetNatEnabled gets a reference to the given NullableBool and assigns it to the NatEnabled field.
func (o *VerticaClusterCreateRequest) SetNatEnabled(v bool) {
	o.NatEnabled.Set(&v)
}

// SetNatEnabledNil sets the value for NatEnabled to be an explicit nil
func (o *VerticaClusterCreateRequest) SetNatEnabledNil() {
	o.NatEnabled.Set(nil)
}

// UnsetNatEnabled ensures that no value is present for NatEnabled, not even an explicit nil
func (o *VerticaClusterCreateRequest) UnsetNatEnabled() {
	o.NatEnabled.Unset()
}

// GetSubnetId returns the SubnetId field value
func (o *VerticaClusterCreateRequest) GetSubnetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value
// and a boolean to check if the value has been set.
func (o *VerticaClusterCreateRequest) GetSubnetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubnetId, true
}

// SetSubnetId sets field value
func (o *VerticaClusterCreateRequest) SetSubnetId(v string) {
	o.SubnetId = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VerticaClusterCreateRequest) GetTags() []Tag {
	if o == nil {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VerticaClusterCreateRequest) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *VerticaClusterCreateRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *VerticaClusterCreateRequest) SetTags(v []Tag) {
	o.Tags = v
}

// GetTimezone returns the Timezone field value
func (o *VerticaClusterCreateRequest) GetTimezone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value
// and a boolean to check if the value has been set.
func (o *VerticaClusterCreateRequest) GetTimezoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timezone, true
}

// SetTimezone sets field value
func (o *VerticaClusterCreateRequest) SetTimezone(v string) {
	o.Timezone = v
}

func (o VerticaClusterCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerticaClusterCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowableIpAddresses) {
		toSerialize["allowable_ip_addresses"] = o.AllowableIpAddresses
	}
	toSerialize["dbaas_engine_version_id"] = o.DbaasEngineVersionId
	toSerialize["init_config_option"] = o.InitConfigOption
	toSerialize["instance_groups"] = o.InstanceGroups
	toSerialize["instance_name_prefix"] = o.InstanceNamePrefix
	if !IsNil(o.License) {
		toSerialize["license"] = o.License
	}
	if o.MaintenanceOption.IsSet() {
		toSerialize["maintenance_option"] = o.MaintenanceOption.Get()
	}
	toSerialize["name"] = o.Name
	if o.NatEnabled.IsSet() {
		toSerialize["nat_enabled"] = o.NatEnabled.Get()
	}
	toSerialize["subnet_id"] = o.SubnetId
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["timezone"] = o.Timezone
	return toSerialize, nil
}

func (o *VerticaClusterCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dbaas_engine_version_id",
		"init_config_option",
		"instance_groups",
		"instance_name_prefix",
		"name",
		"subnet_id",
		"timezone",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVerticaClusterCreateRequest := _VerticaClusterCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVerticaClusterCreateRequest)

	if err != nil {
		return err
	}

	*o = VerticaClusterCreateRequest(varVerticaClusterCreateRequest)

	return err
}

type NullableVerticaClusterCreateRequest struct {
	value *VerticaClusterCreateRequest
	isSet bool
}

func (v NullableVerticaClusterCreateRequest) Get() *VerticaClusterCreateRequest {
	return v.value
}

func (v *NullableVerticaClusterCreateRequest) Set(val *VerticaClusterCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVerticaClusterCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVerticaClusterCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerticaClusterCreateRequest(val *VerticaClusterCreateRequest) *NullableVerticaClusterCreateRequest {
	return &NullableVerticaClusterCreateRequest{value: val, isSet: true}
}

func (v NullableVerticaClusterCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerticaClusterCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
