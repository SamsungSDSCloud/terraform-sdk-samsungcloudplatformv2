/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2181
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vertica

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the VerticaClusterRestoreRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerticaClusterRestoreRequest{}

// VerticaClusterRestoreRequest struct for VerticaClusterRestoreRequest
type VerticaClusterRestoreRequest struct {
	// Allowed IP addresses list
	AllowableIpAddresses []string `json:"allowable_ip_addresses,omitempty"`
	// Backup id
	BackupHistoryNumber string `json:"backup_history_number"`
	// Instance groups list
	InstanceGroups []VerticaRestoreInstanceGroup `json:"instance_groups"`
	// Instance name prefix
	InstanceNamePrefix string `json:"instance_name_prefix" validate:"regexp=^[a-z][a-zA-Z0-9\\\\-]*$"`
	// license
	License           *string                   `json:"license,omitempty"`
	MaintenanceOption NullableMaintenanceOption `json:"maintenance_option,omitempty"`
	// Cluster name
	Name string `json:"name" validate:"regexp=^[a-zA-Z]*$"`
	Tags []Tag  `json:"tags,omitempty"`
}

type _VerticaClusterRestoreRequest VerticaClusterRestoreRequest

// NewVerticaClusterRestoreRequest instantiates a new VerticaClusterRestoreRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerticaClusterRestoreRequest(backupHistoryNumber string, instanceGroups []VerticaRestoreInstanceGroup, instanceNamePrefix string, name string) *VerticaClusterRestoreRequest {
	this := VerticaClusterRestoreRequest{}
	this.BackupHistoryNumber = backupHistoryNumber
	this.InstanceGroups = instanceGroups
	this.InstanceNamePrefix = instanceNamePrefix
	this.Name = name
	return &this
}

// NewVerticaClusterRestoreRequestWithDefaults instantiates a new VerticaClusterRestoreRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerticaClusterRestoreRequestWithDefaults() *VerticaClusterRestoreRequest {
	this := VerticaClusterRestoreRequest{}
	return &this
}

// GetAllowableIpAddresses returns the AllowableIpAddresses field value if set, zero value otherwise.
func (o *VerticaClusterRestoreRequest) GetAllowableIpAddresses() []string {
	if o == nil || IsNil(o.AllowableIpAddresses) {
		var ret []string
		return ret
	}
	return o.AllowableIpAddresses
}

// GetAllowableIpAddressesOk returns a tuple with the AllowableIpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerticaClusterRestoreRequest) GetAllowableIpAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowableIpAddresses) {
		return nil, false
	}
	return o.AllowableIpAddresses, true
}

// HasAllowableIpAddresses returns a boolean if a field has been set.
func (o *VerticaClusterRestoreRequest) HasAllowableIpAddresses() bool {
	if o != nil && !IsNil(o.AllowableIpAddresses) {
		return true
	}

	return false
}

// SetAllowableIpAddresses gets a reference to the given []string and assigns it to the AllowableIpAddresses field.
func (o *VerticaClusterRestoreRequest) SetAllowableIpAddresses(v []string) {
	o.AllowableIpAddresses = v
}

// GetBackupHistoryNumber returns the BackupHistoryNumber field value
func (o *VerticaClusterRestoreRequest) GetBackupHistoryNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackupHistoryNumber
}

// GetBackupHistoryNumberOk returns a tuple with the BackupHistoryNumber field value
// and a boolean to check if the value has been set.
func (o *VerticaClusterRestoreRequest) GetBackupHistoryNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackupHistoryNumber, true
}

// SetBackupHistoryNumber sets field value
func (o *VerticaClusterRestoreRequest) SetBackupHistoryNumber(v string) {
	o.BackupHistoryNumber = v
}

// GetInstanceGroups returns the InstanceGroups field value
func (o *VerticaClusterRestoreRequest) GetInstanceGroups() []VerticaRestoreInstanceGroup {
	if o == nil {
		var ret []VerticaRestoreInstanceGroup
		return ret
	}

	return o.InstanceGroups
}

// GetInstanceGroupsOk returns a tuple with the InstanceGroups field value
// and a boolean to check if the value has been set.
func (o *VerticaClusterRestoreRequest) GetInstanceGroupsOk() ([]VerticaRestoreInstanceGroup, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstanceGroups, true
}

// SetInstanceGroups sets field value
func (o *VerticaClusterRestoreRequest) SetInstanceGroups(v []VerticaRestoreInstanceGroup) {
	o.InstanceGroups = v
}

// GetInstanceNamePrefix returns the InstanceNamePrefix field value
func (o *VerticaClusterRestoreRequest) GetInstanceNamePrefix() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceNamePrefix
}

// GetInstanceNamePrefixOk returns a tuple with the InstanceNamePrefix field value
// and a boolean to check if the value has been set.
func (o *VerticaClusterRestoreRequest) GetInstanceNamePrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceNamePrefix, true
}

// SetInstanceNamePrefix sets field value
func (o *VerticaClusterRestoreRequest) SetInstanceNamePrefix(v string) {
	o.InstanceNamePrefix = v
}

// GetLicense returns the License field value if set, zero value otherwise.
func (o *VerticaClusterRestoreRequest) GetLicense() string {
	if o == nil || IsNil(o.License) {
		var ret string
		return ret
	}
	return *o.License
}

// GetLicenseOk returns a tuple with the License field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerticaClusterRestoreRequest) GetLicenseOk() (*string, bool) {
	if o == nil || IsNil(o.License) {
		return nil, false
	}
	return o.License, true
}

// HasLicense returns a boolean if a field has been set.
func (o *VerticaClusterRestoreRequest) HasLicense() bool {
	if o != nil && !IsNil(o.License) {
		return true
	}

	return false
}

// SetLicense gets a reference to the given string and assigns it to the License field.
func (o *VerticaClusterRestoreRequest) SetLicense(v string) {
	o.License = &v
}

// GetMaintenanceOption returns the MaintenanceOption field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VerticaClusterRestoreRequest) GetMaintenanceOption() MaintenanceOption {
	if o == nil || IsNil(o.MaintenanceOption.Get()) {
		var ret MaintenanceOption
		return ret
	}
	return *o.MaintenanceOption.Get()
}

// GetMaintenanceOptionOk returns a tuple with the MaintenanceOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VerticaClusterRestoreRequest) GetMaintenanceOptionOk() (*MaintenanceOption, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaintenanceOption.Get(), o.MaintenanceOption.IsSet()
}

// HasMaintenanceOption returns a boolean if a field has been set.
func (o *VerticaClusterRestoreRequest) HasMaintenanceOption() bool {
	if o != nil && o.MaintenanceOption.IsSet() {
		return true
	}

	return false
}

// SetMaintenanceOption gets a reference to the given NullableMaintenanceOption and assigns it to the MaintenanceOption field.
func (o *VerticaClusterRestoreRequest) SetMaintenanceOption(v MaintenanceOption) {
	o.MaintenanceOption.Set(&v)
}

// SetMaintenanceOptionNil sets the value for MaintenanceOption to be an explicit nil
func (o *VerticaClusterRestoreRequest) SetMaintenanceOptionNil() {
	o.MaintenanceOption.Set(nil)
}

// UnsetMaintenanceOption ensures that no value is present for MaintenanceOption, not even an explicit nil
func (o *VerticaClusterRestoreRequest) UnsetMaintenanceOption() {
	o.MaintenanceOption.Unset()
}

// GetName returns the Name field value
func (o *VerticaClusterRestoreRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VerticaClusterRestoreRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VerticaClusterRestoreRequest) SetName(v string) {
	o.Name = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VerticaClusterRestoreRequest) GetTags() []Tag {
	if o == nil {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VerticaClusterRestoreRequest) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *VerticaClusterRestoreRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *VerticaClusterRestoreRequest) SetTags(v []Tag) {
	o.Tags = v
}

func (o VerticaClusterRestoreRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerticaClusterRestoreRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowableIpAddresses) {
		toSerialize["allowable_ip_addresses"] = o.AllowableIpAddresses
	}
	toSerialize["backup_history_number"] = o.BackupHistoryNumber
	toSerialize["instance_groups"] = o.InstanceGroups
	toSerialize["instance_name_prefix"] = o.InstanceNamePrefix
	if !IsNil(o.License) {
		toSerialize["license"] = o.License
	}
	if o.MaintenanceOption.IsSet() {
		toSerialize["maintenance_option"] = o.MaintenanceOption.Get()
	}
	toSerialize["name"] = o.Name
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

func (o *VerticaClusterRestoreRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"backup_history_number",
		"instance_groups",
		"instance_name_prefix",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVerticaClusterRestoreRequest := _VerticaClusterRestoreRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVerticaClusterRestoreRequest)

	if err != nil {
		return err
	}

	*o = VerticaClusterRestoreRequest(varVerticaClusterRestoreRequest)

	return err
}

type NullableVerticaClusterRestoreRequest struct {
	value *VerticaClusterRestoreRequest
	isSet bool
}

func (v NullableVerticaClusterRestoreRequest) Get() *VerticaClusterRestoreRequest {
	return v.value
}

func (v *NullableVerticaClusterRestoreRequest) Set(val *VerticaClusterRestoreRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVerticaClusterRestoreRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVerticaClusterRestoreRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerticaClusterRestoreRequest(val *VerticaClusterRestoreRequest) *NullableVerticaClusterRestoreRequest {
	return &NullableVerticaClusterRestoreRequest{value: val, isSet: true}
}

func (v NullableVerticaClusterRestoreRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerticaClusterRestoreRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
