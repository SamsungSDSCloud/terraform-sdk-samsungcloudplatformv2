/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ImageCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageCreateRequest{}

// ImageCreateRequest struct for ImageCreateRequest
type ImageCreateRequest struct {
	// Container format
	ContainerFormat *string `json:"container_format,omitempty" validate:"regexp=bare"`
	// Disk format
	DiskFormat *string `json:"disk_format,omitempty" validate:"regexp=qcow2"`
	// Minimum disk
	MinDisk *int32 `json:"min_disk,omitempty"`
	// Minimum RAM
	MinRam *int32 `json:"min_ram,omitempty"`
	// Name
	Name string `json:"name" validate:"regexp=^[a-zA-Z0-9-_ ]*$"`
	// OS distribution
	OsDistro ImageOsDistroEnum `json:"os_distro"`
	// Protected
	Protected *bool `json:"protected,omitempty"`
	Tags      []Tag `json:"tags,omitempty"`
	// Object Storage URL for Image file (only qcow2 format allowed)
	Url string `json:"url"`
	// Visibility
	Visibility *string `json:"visibility,omitempty" validate:"regexp=private|shared"`
}

type _ImageCreateRequest ImageCreateRequest

// NewImageCreateRequest instantiates a new ImageCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageCreateRequest(name string, osDistro ImageOsDistroEnum, url string) *ImageCreateRequest {
	this := ImageCreateRequest{}
	var containerFormat string = "bare"
	this.ContainerFormat = &containerFormat
	var diskFormat string = "qcow2"
	this.DiskFormat = &diskFormat
	var minDisk int32 = 0
	this.MinDisk = &minDisk
	var minRam int32 = 0
	this.MinRam = &minRam
	this.Name = name
	this.OsDistro = osDistro
	var protected bool = false
	this.Protected = &protected
	this.Url = url
	var visibility string = "private"
	this.Visibility = &visibility
	return &this
}

// NewImageCreateRequestWithDefaults instantiates a new ImageCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageCreateRequestWithDefaults() *ImageCreateRequest {
	this := ImageCreateRequest{}
	var containerFormat string = "bare"
	this.ContainerFormat = &containerFormat
	var diskFormat string = "qcow2"
	this.DiskFormat = &diskFormat
	var minDisk int32 = 0
	this.MinDisk = &minDisk
	var minRam int32 = 0
	this.MinRam = &minRam
	var protected bool = false
	this.Protected = &protected
	var visibility string = "private"
	this.Visibility = &visibility
	return &this
}

// GetContainerFormat returns the ContainerFormat field value if set, zero value otherwise.
func (o *ImageCreateRequest) GetContainerFormat() string {
	if o == nil || IsNil(o.ContainerFormat) {
		var ret string
		return ret
	}
	return *o.ContainerFormat
}

// GetContainerFormatOk returns a tuple with the ContainerFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageCreateRequest) GetContainerFormatOk() (*string, bool) {
	if o == nil || IsNil(o.ContainerFormat) {
		return nil, false
	}
	return o.ContainerFormat, true
}

// HasContainerFormat returns a boolean if a field has been set.
func (o *ImageCreateRequest) HasContainerFormat() bool {
	if o != nil && !IsNil(o.ContainerFormat) {
		return true
	}

	return false
}

// SetContainerFormat gets a reference to the given string and assigns it to the ContainerFormat field.
func (o *ImageCreateRequest) SetContainerFormat(v string) {
	o.ContainerFormat = &v
}

// GetDiskFormat returns the DiskFormat field value if set, zero value otherwise.
func (o *ImageCreateRequest) GetDiskFormat() string {
	if o == nil || IsNil(o.DiskFormat) {
		var ret string
		return ret
	}
	return *o.DiskFormat
}

// GetDiskFormatOk returns a tuple with the DiskFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageCreateRequest) GetDiskFormatOk() (*string, bool) {
	if o == nil || IsNil(o.DiskFormat) {
		return nil, false
	}
	return o.DiskFormat, true
}

// HasDiskFormat returns a boolean if a field has been set.
func (o *ImageCreateRequest) HasDiskFormat() bool {
	if o != nil && !IsNil(o.DiskFormat) {
		return true
	}

	return false
}

// SetDiskFormat gets a reference to the given string and assigns it to the DiskFormat field.
func (o *ImageCreateRequest) SetDiskFormat(v string) {
	o.DiskFormat = &v
}

// GetMinDisk returns the MinDisk field value if set, zero value otherwise.
func (o *ImageCreateRequest) GetMinDisk() int32 {
	if o == nil || IsNil(o.MinDisk) {
		var ret int32
		return ret
	}
	return *o.MinDisk
}

// GetMinDiskOk returns a tuple with the MinDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageCreateRequest) GetMinDiskOk() (*int32, bool) {
	if o == nil || IsNil(o.MinDisk) {
		return nil, false
	}
	return o.MinDisk, true
}

// HasMinDisk returns a boolean if a field has been set.
func (o *ImageCreateRequest) HasMinDisk() bool {
	if o != nil && !IsNil(o.MinDisk) {
		return true
	}

	return false
}

// SetMinDisk gets a reference to the given int32 and assigns it to the MinDisk field.
func (o *ImageCreateRequest) SetMinDisk(v int32) {
	o.MinDisk = &v
}

// GetMinRam returns the MinRam field value if set, zero value otherwise.
func (o *ImageCreateRequest) GetMinRam() int32 {
	if o == nil || IsNil(o.MinRam) {
		var ret int32
		return ret
	}
	return *o.MinRam
}

// GetMinRamOk returns a tuple with the MinRam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageCreateRequest) GetMinRamOk() (*int32, bool) {
	if o == nil || IsNil(o.MinRam) {
		return nil, false
	}
	return o.MinRam, true
}

// HasMinRam returns a boolean if a field has been set.
func (o *ImageCreateRequest) HasMinRam() bool {
	if o != nil && !IsNil(o.MinRam) {
		return true
	}

	return false
}

// SetMinRam gets a reference to the given int32 and assigns it to the MinRam field.
func (o *ImageCreateRequest) SetMinRam(v int32) {
	o.MinRam = &v
}

// GetName returns the Name field value
func (o *ImageCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ImageCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ImageCreateRequest) SetName(v string) {
	o.Name = v
}

// GetOsDistro returns the OsDistro field value
func (o *ImageCreateRequest) GetOsDistro() ImageOsDistroEnum {
	if o == nil {
		var ret ImageOsDistroEnum
		return ret
	}

	return o.OsDistro
}

// GetOsDistroOk returns a tuple with the OsDistro field value
// and a boolean to check if the value has been set.
func (o *ImageCreateRequest) GetOsDistroOk() (*ImageOsDistroEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsDistro, true
}

// SetOsDistro sets field value
func (o *ImageCreateRequest) SetOsDistro(v ImageOsDistroEnum) {
	o.OsDistro = v
}

// GetProtected returns the Protected field value if set, zero value otherwise.
func (o *ImageCreateRequest) GetProtected() bool {
	if o == nil || IsNil(o.Protected) {
		var ret bool
		return ret
	}
	return *o.Protected
}

// GetProtectedOk returns a tuple with the Protected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageCreateRequest) GetProtectedOk() (*bool, bool) {
	if o == nil || IsNil(o.Protected) {
		return nil, false
	}
	return o.Protected, true
}

// HasProtected returns a boolean if a field has been set.
func (o *ImageCreateRequest) HasProtected() bool {
	if o != nil && !IsNil(o.Protected) {
		return true
	}

	return false
}

// SetProtected gets a reference to the given bool and assigns it to the Protected field.
func (o *ImageCreateRequest) SetProtected(v bool) {
	o.Protected = &v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageCreateRequest) GetTags() []Tag {
	if o == nil {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageCreateRequest) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ImageCreateRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *ImageCreateRequest) SetTags(v []Tag) {
	o.Tags = v
}

// GetUrl returns the Url field value
func (o *ImageCreateRequest) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ImageCreateRequest) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ImageCreateRequest) SetUrl(v string) {
	o.Url = v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *ImageCreateRequest) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageCreateRequest) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *ImageCreateRequest) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *ImageCreateRequest) SetVisibility(v string) {
	o.Visibility = &v
}

func (o ImageCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContainerFormat) {
		toSerialize["container_format"] = o.ContainerFormat
	}
	if !IsNil(o.DiskFormat) {
		toSerialize["disk_format"] = o.DiskFormat
	}
	if !IsNil(o.MinDisk) {
		toSerialize["min_disk"] = o.MinDisk
	}
	if !IsNil(o.MinRam) {
		toSerialize["min_ram"] = o.MinRam
	}
	toSerialize["name"] = o.Name
	toSerialize["os_distro"] = o.OsDistro
	if !IsNil(o.Protected) {
		toSerialize["protected"] = o.Protected
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["url"] = o.Url
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	return toSerialize, nil
}

func (o *ImageCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"os_distro",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varImageCreateRequest := _ImageCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varImageCreateRequest)

	if err != nil {
		return err
	}

	*o = ImageCreateRequest(varImageCreateRequest)

	return err
}

type NullableImageCreateRequest struct {
	value *ImageCreateRequest
	isSet bool
}

func (v NullableImageCreateRequest) Get() *ImageCreateRequest {
	return v.value
}

func (v *NullableImageCreateRequest) Set(val *ImageCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableImageCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableImageCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageCreateRequest(val *ImageCreateRequest) *NullableImageCreateRequest {
	return &NullableImageCreateRequest{value: val, isSet: true}
}

func (v NullableImageCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
