/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AutoScalingGroupNotificationCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoScalingGroupNotificationCreateRequest{}

// AutoScalingGroupNotificationCreateRequest struct for AutoScalingGroupNotificationCreateRequest
type AutoScalingGroupNotificationCreateRequest struct {
	// Auto-Scaling Group notification events
	NotificationEvents []string `json:"notification_events"`
	// User ID list
	UserIds []string `json:"user_ids"`
}

type _AutoScalingGroupNotificationCreateRequest AutoScalingGroupNotificationCreateRequest

// NewAutoScalingGroupNotificationCreateRequest instantiates a new AutoScalingGroupNotificationCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoScalingGroupNotificationCreateRequest(notificationEvents []string, userIds []string) *AutoScalingGroupNotificationCreateRequest {
	this := AutoScalingGroupNotificationCreateRequest{}
	this.NotificationEvents = notificationEvents
	this.UserIds = userIds
	return &this
}

// NewAutoScalingGroupNotificationCreateRequestWithDefaults instantiates a new AutoScalingGroupNotificationCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoScalingGroupNotificationCreateRequestWithDefaults() *AutoScalingGroupNotificationCreateRequest {
	this := AutoScalingGroupNotificationCreateRequest{}
	return &this
}

// GetNotificationEvents returns the NotificationEvents field value
func (o *AutoScalingGroupNotificationCreateRequest) GetNotificationEvents() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.NotificationEvents
}

// GetNotificationEventsOk returns a tuple with the NotificationEvents field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroupNotificationCreateRequest) GetNotificationEventsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NotificationEvents, true
}

// SetNotificationEvents sets field value
func (o *AutoScalingGroupNotificationCreateRequest) SetNotificationEvents(v []string) {
	o.NotificationEvents = v
}

// GetUserIds returns the UserIds field value
func (o *AutoScalingGroupNotificationCreateRequest) GetUserIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroupNotificationCreateRequest) GetUserIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserIds, true
}

// SetUserIds sets field value
func (o *AutoScalingGroupNotificationCreateRequest) SetUserIds(v []string) {
	o.UserIds = v
}

func (o AutoScalingGroupNotificationCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoScalingGroupNotificationCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["notification_events"] = o.NotificationEvents
	toSerialize["user_ids"] = o.UserIds
	return toSerialize, nil
}

func (o *AutoScalingGroupNotificationCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"notification_events",
		"user_ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutoScalingGroupNotificationCreateRequest := _AutoScalingGroupNotificationCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAutoScalingGroupNotificationCreateRequest)

	if err != nil {
		return err
	}

	*o = AutoScalingGroupNotificationCreateRequest(varAutoScalingGroupNotificationCreateRequest)

	return err
}

type NullableAutoScalingGroupNotificationCreateRequest struct {
	value *AutoScalingGroupNotificationCreateRequest
	isSet bool
}

func (v NullableAutoScalingGroupNotificationCreateRequest) Get() *AutoScalingGroupNotificationCreateRequest {
	return v.value
}

func (v *NullableAutoScalingGroupNotificationCreateRequest) Set(val *AutoScalingGroupNotificationCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoScalingGroupNotificationCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoScalingGroupNotificationCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoScalingGroupNotificationCreateRequest(val *AutoScalingGroupNotificationCreateRequest) *NullableAutoScalingGroupNotificationCreateRequest {
	return &NullableAutoScalingGroupNotificationCreateRequest{value: val, isSet: true}
}

func (v NullableAutoScalingGroupNotificationCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoScalingGroupNotificationCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
