/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ImageMemberListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageMemberListResponse{}

// ImageMemberListResponse struct for ImageMemberListResponse
type ImageMemberListResponse struct {
	Members []ImageMemberShowResponse `json:"members"`
}

type _ImageMemberListResponse ImageMemberListResponse

// NewImageMemberListResponse instantiates a new ImageMemberListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageMemberListResponse(members []ImageMemberShowResponse) *ImageMemberListResponse {
	this := ImageMemberListResponse{}
	this.Members = members
	return &this
}

// NewImageMemberListResponseWithDefaults instantiates a new ImageMemberListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageMemberListResponseWithDefaults() *ImageMemberListResponse {
	this := ImageMemberListResponse{}
	return &this
}

// GetMembers returns the Members field value
func (o *ImageMemberListResponse) GetMembers() []ImageMemberShowResponse {
	if o == nil {
		var ret []ImageMemberShowResponse
		return ret
	}

	return o.Members
}

// GetMembersOk returns a tuple with the Members field value
// and a boolean to check if the value has been set.
func (o *ImageMemberListResponse) GetMembersOk() ([]ImageMemberShowResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Members, true
}

// SetMembers sets field value
func (o *ImageMemberListResponse) SetMembers(v []ImageMemberShowResponse) {
	o.Members = v
}

func (o ImageMemberListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageMemberListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["members"] = o.Members
	return toSerialize, nil
}

func (o *ImageMemberListResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"members",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varImageMemberListResponse := _ImageMemberListResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varImageMemberListResponse)

	if err != nil {
		return err
	}

	*o = ImageMemberListResponse(varImageMemberListResponse)

	return err
}

type NullableImageMemberListResponse struct {
	value *ImageMemberListResponse
	isSet bool
}

func (v NullableImageMemberListResponse) Get() *ImageMemberListResponse {
	return v.value
}

func (v *NullableImageMemberListResponse) Set(val *ImageMemberListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableImageMemberListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableImageMemberListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageMemberListResponse(val *ImageMemberListResponse) *NullableImageMemberListResponse {
	return &NullableImageMemberListResponse{value: val, isSet: true}
}

func (v NullableImageMemberListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageMemberListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
