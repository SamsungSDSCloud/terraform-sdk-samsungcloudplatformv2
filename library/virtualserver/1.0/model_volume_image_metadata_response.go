/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"encoding/json"
)

// checks if the VolumeImageMetadataResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeImageMetadataResponse{}

// VolumeImageMetadataResponse struct for VolumeImageMetadataResponse
type VolumeImageMetadataResponse struct {
	Checksum             NullableString `json:"checksum,omitempty"`
	ContainerFormat      NullableString `json:"container_format,omitempty"`
	DiskFormat           NullableString `json:"disk_format,omitempty"`
	ImageId              NullableString `json:"image_id,omitempty"`
	ImageName            NullableString `json:"image_name,omitempty"`
	MinDisk              NullableInt32  `json:"min_disk,omitempty"`
	MinRam               NullableInt32  `json:"min_ram,omitempty"`
	OsDistro             NullableString `json:"os_distro,omitempty"`
	ScpImageType         NullableString `json:"scp_image_type,omitempty"`
	ScpK8sVersion        NullableString `json:"scp_k8s_version,omitempty"`
	ScpOriginalImageType NullableString `json:"scp_original_image_type,omitempty"`
	SignatureVerified    NullableBool   `json:"signature_verified,omitempty"`
	Size                 NullableInt64  `json:"size,omitempty"`
}

// NewVolumeImageMetadataResponse instantiates a new VolumeImageMetadataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeImageMetadataResponse() *VolumeImageMetadataResponse {
	this := VolumeImageMetadataResponse{}
	return &this
}

// NewVolumeImageMetadataResponseWithDefaults instantiates a new VolumeImageMetadataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeImageMetadataResponseWithDefaults() *VolumeImageMetadataResponse {
	this := VolumeImageMetadataResponse{}
	return &this
}

// GetChecksum returns the Checksum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VolumeImageMetadataResponse) GetChecksum() string {
	if o == nil || IsNil(o.Checksum.Get()) {
		var ret string
		return ret
	}
	return *o.Checksum.Get()
}

// GetChecksumOk returns a tuple with the Checksum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VolumeImageMetadataResponse) GetChecksumOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Checksum.Get(), o.Checksum.IsSet()
}

// HasChecksum returns a boolean if a field has been set.
func (o *VolumeImageMetadataResponse) HasChecksum() bool {
	if o != nil && o.Checksum.IsSet() {
		return true
	}

	return false
}

// SetChecksum gets a reference to the given NullableString and assigns it to the Checksum field.
func (o *VolumeImageMetadataResponse) SetChecksum(v string) {
	o.Checksum.Set(&v)
}

// SetChecksumNil sets the value for Checksum to be an explicit nil
func (o *VolumeImageMetadataResponse) SetChecksumNil() {
	o.Checksum.Set(nil)
}

// UnsetChecksum ensures that no value is present for Checksum, not even an explicit nil
func (o *VolumeImageMetadataResponse) UnsetChecksum() {
	o.Checksum.Unset()
}

// GetContainerFormat returns the ContainerFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VolumeImageMetadataResponse) GetContainerFormat() string {
	if o == nil || IsNil(o.ContainerFormat.Get()) {
		var ret string
		return ret
	}
	return *o.ContainerFormat.Get()
}

// GetContainerFormatOk returns a tuple with the ContainerFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VolumeImageMetadataResponse) GetContainerFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContainerFormat.Get(), o.ContainerFormat.IsSet()
}

// HasContainerFormat returns a boolean if a field has been set.
func (o *VolumeImageMetadataResponse) HasContainerFormat() bool {
	if o != nil && o.ContainerFormat.IsSet() {
		return true
	}

	return false
}

// SetContainerFormat gets a reference to the given NullableString and assigns it to the ContainerFormat field.
func (o *VolumeImageMetadataResponse) SetContainerFormat(v string) {
	o.ContainerFormat.Set(&v)
}

// SetContainerFormatNil sets the value for ContainerFormat to be an explicit nil
func (o *VolumeImageMetadataResponse) SetContainerFormatNil() {
	o.ContainerFormat.Set(nil)
}

// UnsetContainerFormat ensures that no value is present for ContainerFormat, not even an explicit nil
func (o *VolumeImageMetadataResponse) UnsetContainerFormat() {
	o.ContainerFormat.Unset()
}

// GetDiskFormat returns the DiskFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VolumeImageMetadataResponse) GetDiskFormat() string {
	if o == nil || IsNil(o.DiskFormat.Get()) {
		var ret string
		return ret
	}
	return *o.DiskFormat.Get()
}

// GetDiskFormatOk returns a tuple with the DiskFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VolumeImageMetadataResponse) GetDiskFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiskFormat.Get(), o.DiskFormat.IsSet()
}

// HasDiskFormat returns a boolean if a field has been set.
func (o *VolumeImageMetadataResponse) HasDiskFormat() bool {
	if o != nil && o.DiskFormat.IsSet() {
		return true
	}

	return false
}

// SetDiskFormat gets a reference to the given NullableString and assigns it to the DiskFormat field.
func (o *VolumeImageMetadataResponse) SetDiskFormat(v string) {
	o.DiskFormat.Set(&v)
}

// SetDiskFormatNil sets the value for DiskFormat to be an explicit nil
func (o *VolumeImageMetadataResponse) SetDiskFormatNil() {
	o.DiskFormat.Set(nil)
}

// UnsetDiskFormat ensures that no value is present for DiskFormat, not even an explicit nil
func (o *VolumeImageMetadataResponse) UnsetDiskFormat() {
	o.DiskFormat.Unset()
}

// GetImageId returns the ImageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VolumeImageMetadataResponse) GetImageId() string {
	if o == nil || IsNil(o.ImageId.Get()) {
		var ret string
		return ret
	}
	return *o.ImageId.Get()
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VolumeImageMetadataResponse) GetImageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageId.Get(), o.ImageId.IsSet()
}

// HasImageId returns a boolean if a field has been set.
func (o *VolumeImageMetadataResponse) HasImageId() bool {
	if o != nil && o.ImageId.IsSet() {
		return true
	}

	return false
}

// SetImageId gets a reference to the given NullableString and assigns it to the ImageId field.
func (o *VolumeImageMetadataResponse) SetImageId(v string) {
	o.ImageId.Set(&v)
}

// SetImageIdNil sets the value for ImageId to be an explicit nil
func (o *VolumeImageMetadataResponse) SetImageIdNil() {
	o.ImageId.Set(nil)
}

// UnsetImageId ensures that no value is present for ImageId, not even an explicit nil
func (o *VolumeImageMetadataResponse) UnsetImageId() {
	o.ImageId.Unset()
}

// GetImageName returns the ImageName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VolumeImageMetadataResponse) GetImageName() string {
	if o == nil || IsNil(o.ImageName.Get()) {
		var ret string
		return ret
	}
	return *o.ImageName.Get()
}

// GetImageNameOk returns a tuple with the ImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VolumeImageMetadataResponse) GetImageNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageName.Get(), o.ImageName.IsSet()
}

// HasImageName returns a boolean if a field has been set.
func (o *VolumeImageMetadataResponse) HasImageName() bool {
	if o != nil && o.ImageName.IsSet() {
		return true
	}

	return false
}

// SetImageName gets a reference to the given NullableString and assigns it to the ImageName field.
func (o *VolumeImageMetadataResponse) SetImageName(v string) {
	o.ImageName.Set(&v)
}

// SetImageNameNil sets the value for ImageName to be an explicit nil
func (o *VolumeImageMetadataResponse) SetImageNameNil() {
	o.ImageName.Set(nil)
}

// UnsetImageName ensures that no value is present for ImageName, not even an explicit nil
func (o *VolumeImageMetadataResponse) UnsetImageName() {
	o.ImageName.Unset()
}

// GetMinDisk returns the MinDisk field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VolumeImageMetadataResponse) GetMinDisk() int32 {
	if o == nil || IsNil(o.MinDisk.Get()) {
		var ret int32
		return ret
	}
	return *o.MinDisk.Get()
}

// GetMinDiskOk returns a tuple with the MinDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VolumeImageMetadataResponse) GetMinDiskOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinDisk.Get(), o.MinDisk.IsSet()
}

// HasMinDisk returns a boolean if a field has been set.
func (o *VolumeImageMetadataResponse) HasMinDisk() bool {
	if o != nil && o.MinDisk.IsSet() {
		return true
	}

	return false
}

// SetMinDisk gets a reference to the given NullableInt32 and assigns it to the MinDisk field.
func (o *VolumeImageMetadataResponse) SetMinDisk(v int32) {
	o.MinDisk.Set(&v)
}

// SetMinDiskNil sets the value for MinDisk to be an explicit nil
func (o *VolumeImageMetadataResponse) SetMinDiskNil() {
	o.MinDisk.Set(nil)
}

// UnsetMinDisk ensures that no value is present for MinDisk, not even an explicit nil
func (o *VolumeImageMetadataResponse) UnsetMinDisk() {
	o.MinDisk.Unset()
}

// GetMinRam returns the MinRam field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VolumeImageMetadataResponse) GetMinRam() int32 {
	if o == nil || IsNil(o.MinRam.Get()) {
		var ret int32
		return ret
	}
	return *o.MinRam.Get()
}

// GetMinRamOk returns a tuple with the MinRam field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VolumeImageMetadataResponse) GetMinRamOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinRam.Get(), o.MinRam.IsSet()
}

// HasMinRam returns a boolean if a field has been set.
func (o *VolumeImageMetadataResponse) HasMinRam() bool {
	if o != nil && o.MinRam.IsSet() {
		return true
	}

	return false
}

// SetMinRam gets a reference to the given NullableInt32 and assigns it to the MinRam field.
func (o *VolumeImageMetadataResponse) SetMinRam(v int32) {
	o.MinRam.Set(&v)
}

// SetMinRamNil sets the value for MinRam to be an explicit nil
func (o *VolumeImageMetadataResponse) SetMinRamNil() {
	o.MinRam.Set(nil)
}

// UnsetMinRam ensures that no value is present for MinRam, not even an explicit nil
func (o *VolumeImageMetadataResponse) UnsetMinRam() {
	o.MinRam.Unset()
}

// GetOsDistro returns the OsDistro field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VolumeImageMetadataResponse) GetOsDistro() string {
	if o == nil || IsNil(o.OsDistro.Get()) {
		var ret string
		return ret
	}
	return *o.OsDistro.Get()
}

// GetOsDistroOk returns a tuple with the OsDistro field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VolumeImageMetadataResponse) GetOsDistroOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OsDistro.Get(), o.OsDistro.IsSet()
}

// HasOsDistro returns a boolean if a field has been set.
func (o *VolumeImageMetadataResponse) HasOsDistro() bool {
	if o != nil && o.OsDistro.IsSet() {
		return true
	}

	return false
}

// SetOsDistro gets a reference to the given NullableString and assigns it to the OsDistro field.
func (o *VolumeImageMetadataResponse) SetOsDistro(v string) {
	o.OsDistro.Set(&v)
}

// SetOsDistroNil sets the value for OsDistro to be an explicit nil
func (o *VolumeImageMetadataResponse) SetOsDistroNil() {
	o.OsDistro.Set(nil)
}

// UnsetOsDistro ensures that no value is present for OsDistro, not even an explicit nil
func (o *VolumeImageMetadataResponse) UnsetOsDistro() {
	o.OsDistro.Unset()
}

// GetScpImageType returns the ScpImageType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VolumeImageMetadataResponse) GetScpImageType() string {
	if o == nil || IsNil(o.ScpImageType.Get()) {
		var ret string
		return ret
	}
	return *o.ScpImageType.Get()
}

// GetScpImageTypeOk returns a tuple with the ScpImageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VolumeImageMetadataResponse) GetScpImageTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScpImageType.Get(), o.ScpImageType.IsSet()
}

// HasScpImageType returns a boolean if a field has been set.
func (o *VolumeImageMetadataResponse) HasScpImageType() bool {
	if o != nil && o.ScpImageType.IsSet() {
		return true
	}

	return false
}

// SetScpImageType gets a reference to the given NullableString and assigns it to the ScpImageType field.
func (o *VolumeImageMetadataResponse) SetScpImageType(v string) {
	o.ScpImageType.Set(&v)
}

// SetScpImageTypeNil sets the value for ScpImageType to be an explicit nil
func (o *VolumeImageMetadataResponse) SetScpImageTypeNil() {
	o.ScpImageType.Set(nil)
}

// UnsetScpImageType ensures that no value is present for ScpImageType, not even an explicit nil
func (o *VolumeImageMetadataResponse) UnsetScpImageType() {
	o.ScpImageType.Unset()
}

// GetScpK8sVersion returns the ScpK8sVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VolumeImageMetadataResponse) GetScpK8sVersion() string {
	if o == nil || IsNil(o.ScpK8sVersion.Get()) {
		var ret string
		return ret
	}
	return *o.ScpK8sVersion.Get()
}

// GetScpK8sVersionOk returns a tuple with the ScpK8sVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VolumeImageMetadataResponse) GetScpK8sVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScpK8sVersion.Get(), o.ScpK8sVersion.IsSet()
}

// HasScpK8sVersion returns a boolean if a field has been set.
func (o *VolumeImageMetadataResponse) HasScpK8sVersion() bool {
	if o != nil && o.ScpK8sVersion.IsSet() {
		return true
	}

	return false
}

// SetScpK8sVersion gets a reference to the given NullableString and assigns it to the ScpK8sVersion field.
func (o *VolumeImageMetadataResponse) SetScpK8sVersion(v string) {
	o.ScpK8sVersion.Set(&v)
}

// SetScpK8sVersionNil sets the value for ScpK8sVersion to be an explicit nil
func (o *VolumeImageMetadataResponse) SetScpK8sVersionNil() {
	o.ScpK8sVersion.Set(nil)
}

// UnsetScpK8sVersion ensures that no value is present for ScpK8sVersion, not even an explicit nil
func (o *VolumeImageMetadataResponse) UnsetScpK8sVersion() {
	o.ScpK8sVersion.Unset()
}

// GetScpOriginalImageType returns the ScpOriginalImageType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VolumeImageMetadataResponse) GetScpOriginalImageType() string {
	if o == nil || IsNil(o.ScpOriginalImageType.Get()) {
		var ret string
		return ret
	}
	return *o.ScpOriginalImageType.Get()
}

// GetScpOriginalImageTypeOk returns a tuple with the ScpOriginalImageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VolumeImageMetadataResponse) GetScpOriginalImageTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScpOriginalImageType.Get(), o.ScpOriginalImageType.IsSet()
}

// HasScpOriginalImageType returns a boolean if a field has been set.
func (o *VolumeImageMetadataResponse) HasScpOriginalImageType() bool {
	if o != nil && o.ScpOriginalImageType.IsSet() {
		return true
	}

	return false
}

// SetScpOriginalImageType gets a reference to the given NullableString and assigns it to the ScpOriginalImageType field.
func (o *VolumeImageMetadataResponse) SetScpOriginalImageType(v string) {
	o.ScpOriginalImageType.Set(&v)
}

// SetScpOriginalImageTypeNil sets the value for ScpOriginalImageType to be an explicit nil
func (o *VolumeImageMetadataResponse) SetScpOriginalImageTypeNil() {
	o.ScpOriginalImageType.Set(nil)
}

// UnsetScpOriginalImageType ensures that no value is present for ScpOriginalImageType, not even an explicit nil
func (o *VolumeImageMetadataResponse) UnsetScpOriginalImageType() {
	o.ScpOriginalImageType.Unset()
}

// GetSignatureVerified returns the SignatureVerified field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VolumeImageMetadataResponse) GetSignatureVerified() bool {
	if o == nil || IsNil(o.SignatureVerified.Get()) {
		var ret bool
		return ret
	}
	return *o.SignatureVerified.Get()
}

// GetSignatureVerifiedOk returns a tuple with the SignatureVerified field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VolumeImageMetadataResponse) GetSignatureVerifiedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SignatureVerified.Get(), o.SignatureVerified.IsSet()
}

// HasSignatureVerified returns a boolean if a field has been set.
func (o *VolumeImageMetadataResponse) HasSignatureVerified() bool {
	if o != nil && o.SignatureVerified.IsSet() {
		return true
	}

	return false
}

// SetSignatureVerified gets a reference to the given NullableBool and assigns it to the SignatureVerified field.
func (o *VolumeImageMetadataResponse) SetSignatureVerified(v bool) {
	o.SignatureVerified.Set(&v)
}

// SetSignatureVerifiedNil sets the value for SignatureVerified to be an explicit nil
func (o *VolumeImageMetadataResponse) SetSignatureVerifiedNil() {
	o.SignatureVerified.Set(nil)
}

// UnsetSignatureVerified ensures that no value is present for SignatureVerified, not even an explicit nil
func (o *VolumeImageMetadataResponse) UnsetSignatureVerified() {
	o.SignatureVerified.Unset()
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VolumeImageMetadataResponse) GetSize() int64 {
	if o == nil || IsNil(o.Size.Get()) {
		var ret int64
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VolumeImageMetadataResponse) GetSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *VolumeImageMetadataResponse) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableInt64 and assigns it to the Size field.
func (o *VolumeImageMetadataResponse) SetSize(v int64) {
	o.Size.Set(&v)
}

// SetSizeNil sets the value for Size to be an explicit nil
func (o *VolumeImageMetadataResponse) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *VolumeImageMetadataResponse) UnsetSize() {
	o.Size.Unset()
}

func (o VolumeImageMetadataResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeImageMetadataResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Checksum.IsSet() {
		toSerialize["checksum"] = o.Checksum.Get()
	}
	if o.ContainerFormat.IsSet() {
		toSerialize["container_format"] = o.ContainerFormat.Get()
	}
	if o.DiskFormat.IsSet() {
		toSerialize["disk_format"] = o.DiskFormat.Get()
	}
	if o.ImageId.IsSet() {
		toSerialize["image_id"] = o.ImageId.Get()
	}
	if o.ImageName.IsSet() {
		toSerialize["image_name"] = o.ImageName.Get()
	}
	if o.MinDisk.IsSet() {
		toSerialize["min_disk"] = o.MinDisk.Get()
	}
	if o.MinRam.IsSet() {
		toSerialize["min_ram"] = o.MinRam.Get()
	}
	if o.OsDistro.IsSet() {
		toSerialize["os_distro"] = o.OsDistro.Get()
	}
	if o.ScpImageType.IsSet() {
		toSerialize["scp_image_type"] = o.ScpImageType.Get()
	}
	if o.ScpK8sVersion.IsSet() {
		toSerialize["scp_k8s_version"] = o.ScpK8sVersion.Get()
	}
	if o.ScpOriginalImageType.IsSet() {
		toSerialize["scp_original_image_type"] = o.ScpOriginalImageType.Get()
	}
	if o.SignatureVerified.IsSet() {
		toSerialize["signature_verified"] = o.SignatureVerified.Get()
	}
	if o.Size.IsSet() {
		toSerialize["size"] = o.Size.Get()
	}
	return toSerialize, nil
}

type NullableVolumeImageMetadataResponse struct {
	value *VolumeImageMetadataResponse
	isSet bool
}

func (v NullableVolumeImageMetadataResponse) Get() *VolumeImageMetadataResponse {
	return v.value
}

func (v *NullableVolumeImageMetadataResponse) Set(val *VolumeImageMetadataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeImageMetadataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeImageMetadataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeImageMetadataResponse(val *VolumeImageMetadataResponse) *NullableVolumeImageMetadataResponse {
	return &NullableVolumeImageMetadataResponse{value: val, isSet: true}
}

func (v NullableVolumeImageMetadataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeImageMetadataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
