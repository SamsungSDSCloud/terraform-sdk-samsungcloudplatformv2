/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"encoding/json"
	"fmt"
)

// AutoScalingGroupPolicyScaleType the model 'AutoScalingGroupPolicyScaleType'
type AutoScalingGroupPolicyScaleType string

// List of AutoScalingGroupPolicyScaleType
const (
	AUTOSCALINGGROUPPOLICYSCALETYPE_OUT AutoScalingGroupPolicyScaleType = "SCALE_OUT"
	AUTOSCALINGGROUPPOLICYSCALETYPE_IN  AutoScalingGroupPolicyScaleType = "SCALE_IN"
)

// All allowed values of AutoScalingGroupPolicyScaleType enum
var AllowedAutoScalingGroupPolicyScaleTypeEnumValues = []AutoScalingGroupPolicyScaleType{
	"SCALE_OUT",
	"SCALE_IN",
}

func (v *AutoScalingGroupPolicyScaleType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AutoScalingGroupPolicyScaleType(value)
	for _, existing := range AllowedAutoScalingGroupPolicyScaleTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AutoScalingGroupPolicyScaleType", value)
}

// NewAutoScalingGroupPolicyScaleTypeFromValue returns a pointer to a valid AutoScalingGroupPolicyScaleType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAutoScalingGroupPolicyScaleTypeFromValue(v string) (*AutoScalingGroupPolicyScaleType, error) {
	ev := AutoScalingGroupPolicyScaleType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AutoScalingGroupPolicyScaleType: valid values are %v", v, AllowedAutoScalingGroupPolicyScaleTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AutoScalingGroupPolicyScaleType) IsValid() bool {
	for _, existing := range AllowedAutoScalingGroupPolicyScaleTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AutoScalingGroupPolicyScaleType value
func (v AutoScalingGroupPolicyScaleType) Ptr() *AutoScalingGroupPolicyScaleType {
	return &v
}

type NullableAutoScalingGroupPolicyScaleType struct {
	value *AutoScalingGroupPolicyScaleType
	isSet bool
}

func (v NullableAutoScalingGroupPolicyScaleType) Get() *AutoScalingGroupPolicyScaleType {
	return v.value
}

func (v *NullableAutoScalingGroupPolicyScaleType) Set(val *AutoScalingGroupPolicyScaleType) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoScalingGroupPolicyScaleType) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoScalingGroupPolicyScaleType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoScalingGroupPolicyScaleType(val *AutoScalingGroupPolicyScaleType) *NullableAutoScalingGroupPolicyScaleType {
	return &NullableAutoScalingGroupPolicyScaleType{value: val, isSet: true}
}

func (v NullableAutoScalingGroupPolicyScaleType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoScalingGroupPolicyScaleType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
