/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ImageMemberCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageMemberCreateRequest{}

// ImageMemberCreateRequest struct for ImageMemberCreateRequest
type ImageMemberCreateRequest struct {
	// Member ID
	MemberId string `json:"member_id" validate:"regexp=^[A-Za-z0-9-]*$"`
}

type _ImageMemberCreateRequest ImageMemberCreateRequest

// NewImageMemberCreateRequest instantiates a new ImageMemberCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageMemberCreateRequest(memberId string) *ImageMemberCreateRequest {
	this := ImageMemberCreateRequest{}
	this.MemberId = memberId
	return &this
}

// NewImageMemberCreateRequestWithDefaults instantiates a new ImageMemberCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageMemberCreateRequestWithDefaults() *ImageMemberCreateRequest {
	this := ImageMemberCreateRequest{}
	return &this
}

// GetMemberId returns the MemberId field value
func (o *ImageMemberCreateRequest) GetMemberId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MemberId
}

// GetMemberIdOk returns a tuple with the MemberId field value
// and a boolean to check if the value has been set.
func (o *ImageMemberCreateRequest) GetMemberIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemberId, true
}

// SetMemberId sets field value
func (o *ImageMemberCreateRequest) SetMemberId(v string) {
	o.MemberId = v
}

func (o ImageMemberCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageMemberCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["member_id"] = o.MemberId
	return toSerialize, nil
}

func (o *ImageMemberCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"member_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varImageMemberCreateRequest := _ImageMemberCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varImageMemberCreateRequest)

	if err != nil {
		return err
	}

	*o = ImageMemberCreateRequest(varImageMemberCreateRequest)

	return err
}

type NullableImageMemberCreateRequest struct {
	value *ImageMemberCreateRequest
	isSet bool
}

func (v NullableImageMemberCreateRequest) Get() *ImageMemberCreateRequest {
	return v.value
}

func (v *NullableImageMemberCreateRequest) Set(val *ImageMemberCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableImageMemberCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableImageMemberCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageMemberCreateRequest(val *ImageMemberCreateRequest) *NullableImageMemberCreateRequest {
	return &NullableImageMemberCreateRequest{value: val, isSet: true}
}

func (v NullableImageMemberCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageMemberCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
