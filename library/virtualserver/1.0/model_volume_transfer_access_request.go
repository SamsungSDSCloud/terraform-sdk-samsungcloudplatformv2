/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the VolumeTransferAccessRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeTransferAccessRequest{}

// VolumeTransferAccessRequest struct for VolumeTransferAccessRequest
type VolumeTransferAccessRequest struct {
	// Auth Key
	AuthKey string `json:"auth_key"`
}

type _VolumeTransferAccessRequest VolumeTransferAccessRequest

// NewVolumeTransferAccessRequest instantiates a new VolumeTransferAccessRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeTransferAccessRequest(authKey string) *VolumeTransferAccessRequest {
	this := VolumeTransferAccessRequest{}
	this.AuthKey = authKey
	return &this
}

// NewVolumeTransferAccessRequestWithDefaults instantiates a new VolumeTransferAccessRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeTransferAccessRequestWithDefaults() *VolumeTransferAccessRequest {
	this := VolumeTransferAccessRequest{}
	return &this
}

// GetAuthKey returns the AuthKey field value
func (o *VolumeTransferAccessRequest) GetAuthKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthKey
}

// GetAuthKeyOk returns a tuple with the AuthKey field value
// and a boolean to check if the value has been set.
func (o *VolumeTransferAccessRequest) GetAuthKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthKey, true
}

// SetAuthKey sets field value
func (o *VolumeTransferAccessRequest) SetAuthKey(v string) {
	o.AuthKey = v
}

func (o VolumeTransferAccessRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeTransferAccessRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["auth_key"] = o.AuthKey
	return toSerialize, nil
}

func (o *VolumeTransferAccessRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"auth_key",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVolumeTransferAccessRequest := _VolumeTransferAccessRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVolumeTransferAccessRequest)

	if err != nil {
		return err
	}

	*o = VolumeTransferAccessRequest(varVolumeTransferAccessRequest)

	return err
}

type NullableVolumeTransferAccessRequest struct {
	value *VolumeTransferAccessRequest
	isSet bool
}

func (v NullableVolumeTransferAccessRequest) Get() *VolumeTransferAccessRequest {
	return v.value
}

func (v *NullableVolumeTransferAccessRequest) Set(val *VolumeTransferAccessRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeTransferAccessRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeTransferAccessRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeTransferAccessRequest(val *VolumeTransferAccessRequest) *NullableVolumeTransferAccessRequest {
	return &NullableVolumeTransferAccessRequest{value: val, isSet: true}
}

func (v NullableVolumeTransferAccessRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeTransferAccessRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
