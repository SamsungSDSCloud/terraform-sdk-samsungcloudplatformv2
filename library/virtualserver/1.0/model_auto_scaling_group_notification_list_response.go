/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AutoScalingGroupNotificationListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoScalingGroupNotificationListResponse{}

// AutoScalingGroupNotificationListResponse struct for AutoScalingGroupNotificationListResponse
type AutoScalingGroupNotificationListResponse struct {
	// Count
	Count int32 `json:"count"`
	// Auto-Scaling Group notification list
	Notifications []AutoScalingGroupNotificationShowResponse `json:"notifications"`
}

type _AutoScalingGroupNotificationListResponse AutoScalingGroupNotificationListResponse

// NewAutoScalingGroupNotificationListResponse instantiates a new AutoScalingGroupNotificationListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoScalingGroupNotificationListResponse(count int32, notifications []AutoScalingGroupNotificationShowResponse) *AutoScalingGroupNotificationListResponse {
	this := AutoScalingGroupNotificationListResponse{}
	this.Count = count
	this.Notifications = notifications
	return &this
}

// NewAutoScalingGroupNotificationListResponseWithDefaults instantiates a new AutoScalingGroupNotificationListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoScalingGroupNotificationListResponseWithDefaults() *AutoScalingGroupNotificationListResponse {
	this := AutoScalingGroupNotificationListResponse{}
	return &this
}

// GetCount returns the Count field value
func (o *AutoScalingGroupNotificationListResponse) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroupNotificationListResponse) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *AutoScalingGroupNotificationListResponse) SetCount(v int32) {
	o.Count = v
}

// GetNotifications returns the Notifications field value
func (o *AutoScalingGroupNotificationListResponse) GetNotifications() []AutoScalingGroupNotificationShowResponse {
	if o == nil {
		var ret []AutoScalingGroupNotificationShowResponse
		return ret
	}

	return o.Notifications
}

// GetNotificationsOk returns a tuple with the Notifications field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroupNotificationListResponse) GetNotificationsOk() ([]AutoScalingGroupNotificationShowResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Notifications, true
}

// SetNotifications sets field value
func (o *AutoScalingGroupNotificationListResponse) SetNotifications(v []AutoScalingGroupNotificationShowResponse) {
	o.Notifications = v
}

func (o AutoScalingGroupNotificationListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoScalingGroupNotificationListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["count"] = o.Count
	toSerialize["notifications"] = o.Notifications
	return toSerialize, nil
}

func (o *AutoScalingGroupNotificationListResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"count",
		"notifications",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutoScalingGroupNotificationListResponse := _AutoScalingGroupNotificationListResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAutoScalingGroupNotificationListResponse)

	if err != nil {
		return err
	}

	*o = AutoScalingGroupNotificationListResponse(varAutoScalingGroupNotificationListResponse)

	return err
}

type NullableAutoScalingGroupNotificationListResponse struct {
	value *AutoScalingGroupNotificationListResponse
	isSet bool
}

func (v NullableAutoScalingGroupNotificationListResponse) Get() *AutoScalingGroupNotificationListResponse {
	return v.value
}

func (v *NullableAutoScalingGroupNotificationListResponse) Set(val *AutoScalingGroupNotificationListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoScalingGroupNotificationListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoScalingGroupNotificationListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoScalingGroupNotificationListResponse(val *AutoScalingGroupNotificationListResponse) *NullableAutoScalingGroupNotificationListResponse {
	return &NullableAutoScalingGroupNotificationListResponse{value: val, isSet: true}
}

func (v NullableAutoScalingGroupNotificationListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoScalingGroupNotificationListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
