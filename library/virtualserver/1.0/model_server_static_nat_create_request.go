/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ServerStaticNatCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerStaticNatCreateRequest{}

// ServerStaticNatCreateRequest struct for ServerStaticNatCreateRequest
type ServerStaticNatCreateRequest struct {
	// Public IP ID
	PublicipId string `json:"publicip_id"`
}

type _ServerStaticNatCreateRequest ServerStaticNatCreateRequest

// NewServerStaticNatCreateRequest instantiates a new ServerStaticNatCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerStaticNatCreateRequest(publicipId string) *ServerStaticNatCreateRequest {
	this := ServerStaticNatCreateRequest{}
	this.PublicipId = publicipId
	return &this
}

// NewServerStaticNatCreateRequestWithDefaults instantiates a new ServerStaticNatCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerStaticNatCreateRequestWithDefaults() *ServerStaticNatCreateRequest {
	this := ServerStaticNatCreateRequest{}
	return &this
}

// GetPublicipId returns the PublicipId field value
func (o *ServerStaticNatCreateRequest) GetPublicipId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicipId
}

// GetPublicipIdOk returns a tuple with the PublicipId field value
// and a boolean to check if the value has been set.
func (o *ServerStaticNatCreateRequest) GetPublicipIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicipId, true
}

// SetPublicipId sets field value
func (o *ServerStaticNatCreateRequest) SetPublicipId(v string) {
	o.PublicipId = v
}

func (o ServerStaticNatCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerStaticNatCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["publicip_id"] = o.PublicipId
	return toSerialize, nil
}

func (o *ServerStaticNatCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"publicip_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServerStaticNatCreateRequest := _ServerStaticNatCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServerStaticNatCreateRequest)

	if err != nil {
		return err
	}

	*o = ServerStaticNatCreateRequest(varServerStaticNatCreateRequest)

	return err
}

type NullableServerStaticNatCreateRequest struct {
	value *ServerStaticNatCreateRequest
	isSet bool
}

func (v NullableServerStaticNatCreateRequest) Get() *ServerStaticNatCreateRequest {
	return v.value
}

func (v *NullableServerStaticNatCreateRequest) Set(val *ServerStaticNatCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableServerStaticNatCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableServerStaticNatCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerStaticNatCreateRequest(val *ServerStaticNatCreateRequest) *NullableServerStaticNatCreateRequest {
	return &NullableServerStaticNatCreateRequest{value: val, isSet: true}
}

func (v NullableServerStaticNatCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerStaticNatCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
