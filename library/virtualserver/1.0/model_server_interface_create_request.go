/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"encoding/json"
)

// checks if the ServerInterfaceCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerInterfaceCreateRequest{}

// ServerInterfaceCreateRequest struct for ServerInterfaceCreateRequest
type ServerInterfaceCreateRequest struct {
	FixedIps []InterfaceAttachmentFixedIp `json:"fixed_ips,omitempty"`
	PortId   NullableString               `json:"port_id,omitempty"`
	SubnetId NullableString               `json:"subnet_id,omitempty"`
}

// NewServerInterfaceCreateRequest instantiates a new ServerInterfaceCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerInterfaceCreateRequest() *ServerInterfaceCreateRequest {
	this := ServerInterfaceCreateRequest{}
	return &this
}

// NewServerInterfaceCreateRequestWithDefaults instantiates a new ServerInterfaceCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerInterfaceCreateRequestWithDefaults() *ServerInterfaceCreateRequest {
	this := ServerInterfaceCreateRequest{}
	return &this
}

// GetFixedIps returns the FixedIps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerInterfaceCreateRequest) GetFixedIps() []InterfaceAttachmentFixedIp {
	if o == nil {
		var ret []InterfaceAttachmentFixedIp
		return ret
	}
	return o.FixedIps
}

// GetFixedIpsOk returns a tuple with the FixedIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerInterfaceCreateRequest) GetFixedIpsOk() ([]InterfaceAttachmentFixedIp, bool) {
	if o == nil || IsNil(o.FixedIps) {
		return nil, false
	}
	return o.FixedIps, true
}

// HasFixedIps returns a boolean if a field has been set.
func (o *ServerInterfaceCreateRequest) HasFixedIps() bool {
	if o != nil && !IsNil(o.FixedIps) {
		return true
	}

	return false
}

// SetFixedIps gets a reference to the given []InterfaceAttachmentFixedIp and assigns it to the FixedIps field.
func (o *ServerInterfaceCreateRequest) SetFixedIps(v []InterfaceAttachmentFixedIp) {
	o.FixedIps = v
}

// GetPortId returns the PortId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerInterfaceCreateRequest) GetPortId() string {
	if o == nil || IsNil(o.PortId.Get()) {
		var ret string
		return ret
	}
	return *o.PortId.Get()
}

// GetPortIdOk returns a tuple with the PortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerInterfaceCreateRequest) GetPortIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PortId.Get(), o.PortId.IsSet()
}

// HasPortId returns a boolean if a field has been set.
func (o *ServerInterfaceCreateRequest) HasPortId() bool {
	if o != nil && o.PortId.IsSet() {
		return true
	}

	return false
}

// SetPortId gets a reference to the given NullableString and assigns it to the PortId field.
func (o *ServerInterfaceCreateRequest) SetPortId(v string) {
	o.PortId.Set(&v)
}

// SetPortIdNil sets the value for PortId to be an explicit nil
func (o *ServerInterfaceCreateRequest) SetPortIdNil() {
	o.PortId.Set(nil)
}

// UnsetPortId ensures that no value is present for PortId, not even an explicit nil
func (o *ServerInterfaceCreateRequest) UnsetPortId() {
	o.PortId.Unset()
}

// GetSubnetId returns the SubnetId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerInterfaceCreateRequest) GetSubnetId() string {
	if o == nil || IsNil(o.SubnetId.Get()) {
		var ret string
		return ret
	}
	return *o.SubnetId.Get()
}

// GetSubnetIdOk returns a tuple with the SubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerInterfaceCreateRequest) GetSubnetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubnetId.Get(), o.SubnetId.IsSet()
}

// HasSubnetId returns a boolean if a field has been set.
func (o *ServerInterfaceCreateRequest) HasSubnetId() bool {
	if o != nil && o.SubnetId.IsSet() {
		return true
	}

	return false
}

// SetSubnetId gets a reference to the given NullableString and assigns it to the SubnetId field.
func (o *ServerInterfaceCreateRequest) SetSubnetId(v string) {
	o.SubnetId.Set(&v)
}

// SetSubnetIdNil sets the value for SubnetId to be an explicit nil
func (o *ServerInterfaceCreateRequest) SetSubnetIdNil() {
	o.SubnetId.Set(nil)
}

// UnsetSubnetId ensures that no value is present for SubnetId, not even an explicit nil
func (o *ServerInterfaceCreateRequest) UnsetSubnetId() {
	o.SubnetId.Unset()
}

func (o ServerInterfaceCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerInterfaceCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.FixedIps != nil {
		toSerialize["fixed_ips"] = o.FixedIps
	}
	if o.PortId.IsSet() {
		toSerialize["port_id"] = o.PortId.Get()
	}
	if o.SubnetId.IsSet() {
		toSerialize["subnet_id"] = o.SubnetId.Get()
	}
	return toSerialize, nil
}

type NullableServerInterfaceCreateRequest struct {
	value *ServerInterfaceCreateRequest
	isSet bool
}

func (v NullableServerInterfaceCreateRequest) Get() *ServerInterfaceCreateRequest {
	return v.value
}

func (v *NullableServerInterfaceCreateRequest) Set(val *ServerInterfaceCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableServerInterfaceCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableServerInterfaceCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerInterfaceCreateRequest(val *ServerInterfaceCreateRequest) *NullableServerInterfaceCreateRequest {
	return &NullableServerInterfaceCreateRequest{value: val, isSet: true}
}

func (v NullableServerInterfaceCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerInterfaceCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
