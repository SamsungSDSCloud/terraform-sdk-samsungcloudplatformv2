/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AutoScalingGroupLbServerGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoScalingGroupLbServerGroup{}

// AutoScalingGroupLbServerGroup struct for AutoScalingGroupLbServerGroup
type AutoScalingGroupLbServerGroup struct {
	// LB Server Group ID
	Id string `json:"id"`
	// LB Server Group port
	Port int32 `json:"port"`
}

type _AutoScalingGroupLbServerGroup AutoScalingGroupLbServerGroup

// NewAutoScalingGroupLbServerGroup instantiates a new AutoScalingGroupLbServerGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoScalingGroupLbServerGroup(id string, port int32) *AutoScalingGroupLbServerGroup {
	this := AutoScalingGroupLbServerGroup{}
	this.Id = id
	this.Port = port
	return &this
}

// NewAutoScalingGroupLbServerGroupWithDefaults instantiates a new AutoScalingGroupLbServerGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoScalingGroupLbServerGroupWithDefaults() *AutoScalingGroupLbServerGroup {
	this := AutoScalingGroupLbServerGroup{}
	return &this
}

// GetId returns the Id field value
func (o *AutoScalingGroupLbServerGroup) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroupLbServerGroup) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AutoScalingGroupLbServerGroup) SetId(v string) {
	o.Id = v
}

// GetPort returns the Port field value
func (o *AutoScalingGroupLbServerGroup) GetPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroupLbServerGroup) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *AutoScalingGroupLbServerGroup) SetPort(v int32) {
	o.Port = v
}

func (o AutoScalingGroupLbServerGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoScalingGroupLbServerGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["port"] = o.Port
	return toSerialize, nil
}

func (o *AutoScalingGroupLbServerGroup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"port",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutoScalingGroupLbServerGroup := _AutoScalingGroupLbServerGroup{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAutoScalingGroupLbServerGroup)

	if err != nil {
		return err
	}

	*o = AutoScalingGroupLbServerGroup(varAutoScalingGroupLbServerGroup)

	return err
}

type NullableAutoScalingGroupLbServerGroup struct {
	value *AutoScalingGroupLbServerGroup
	isSet bool
}

func (v NullableAutoScalingGroupLbServerGroup) Get() *AutoScalingGroupLbServerGroup {
	return v.value
}

func (v *NullableAutoScalingGroupLbServerGroup) Set(val *AutoScalingGroupLbServerGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoScalingGroupLbServerGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoScalingGroupLbServerGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoScalingGroupLbServerGroup(val *AutoScalingGroupLbServerGroup) *NullableAutoScalingGroupLbServerGroup {
	return &NullableAutoScalingGroupLbServerGroup{value: val, isSet: true}
}

func (v NullableAutoScalingGroupLbServerGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoScalingGroupLbServerGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
