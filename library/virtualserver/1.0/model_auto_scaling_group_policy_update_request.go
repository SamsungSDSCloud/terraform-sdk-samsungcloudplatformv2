/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"encoding/json"
)

// checks if the AutoScalingGroupPolicyUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoScalingGroupPolicyUpdateRequest{}

// AutoScalingGroupPolicyUpdateRequest struct for AutoScalingGroupPolicyUpdateRequest
type AutoScalingGroupPolicyUpdateRequest struct {
	ComparisonOperator NullableString `json:"comparison_operator,omitempty" validate:"regexp=^(ge|gt|le|lt)$"`
	CooldownSeconds    NullableInt32  `json:"cooldown_seconds,omitempty"`
	EvaluationMinutes  NullableInt32  `json:"evaluation_minutes,omitempty"`
	MetricMethod       NullableString `json:"metric_method,omitempty" validate:"regexp=^(AVG|MIN|MAX)$"`
	MetricType         NullableString `json:"metric_type,omitempty" validate:"regexp=^(CPU|MEMORY|NETWORK_IN_BYTES|NETWORK_OUT_BYTES|NETWORK_IN_PACKETS|NETWORK_OUT_PACKETS)$"`
	Name               NullableString `json:"name,omitempty" validate:"regexp=^[a-zA-Z0-9-_]*$"`
	ScaleMethod        NullableString `json:"scale_method,omitempty" validate:"regexp=^(AMOUNT|PERCENTAGE|FIXED)$"`
	ScaleType          NullableString `json:"scale_type,omitempty" validate:"regexp=^(SCALE_IN|SCALE_OUT)$"`
	ScaleValue         NullableInt32  `json:"scale_value,omitempty"`
	State              NullableString `json:"state,omitempty" validate:"regexp=^(ACTIVE|INACTIVE)$"`
	Threshold          NullableInt32  `json:"threshold,omitempty"`
}

// NewAutoScalingGroupPolicyUpdateRequest instantiates a new AutoScalingGroupPolicyUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoScalingGroupPolicyUpdateRequest() *AutoScalingGroupPolicyUpdateRequest {
	this := AutoScalingGroupPolicyUpdateRequest{}
	return &this
}

// NewAutoScalingGroupPolicyUpdateRequestWithDefaults instantiates a new AutoScalingGroupPolicyUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoScalingGroupPolicyUpdateRequestWithDefaults() *AutoScalingGroupPolicyUpdateRequest {
	this := AutoScalingGroupPolicyUpdateRequest{}
	return &this
}

// GetComparisonOperator returns the ComparisonOperator field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupPolicyUpdateRequest) GetComparisonOperator() string {
	if o == nil || IsNil(o.ComparisonOperator.Get()) {
		var ret string
		return ret
	}
	return *o.ComparisonOperator.Get()
}

// GetComparisonOperatorOk returns a tuple with the ComparisonOperator field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupPolicyUpdateRequest) GetComparisonOperatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ComparisonOperator.Get(), o.ComparisonOperator.IsSet()
}

// HasComparisonOperator returns a boolean if a field has been set.
func (o *AutoScalingGroupPolicyUpdateRequest) HasComparisonOperator() bool {
	if o != nil && o.ComparisonOperator.IsSet() {
		return true
	}

	return false
}

// SetComparisonOperator gets a reference to the given NullableString and assigns it to the ComparisonOperator field.
func (o *AutoScalingGroupPolicyUpdateRequest) SetComparisonOperator(v string) {
	o.ComparisonOperator.Set(&v)
}

// SetComparisonOperatorNil sets the value for ComparisonOperator to be an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) SetComparisonOperatorNil() {
	o.ComparisonOperator.Set(nil)
}

// UnsetComparisonOperator ensures that no value is present for ComparisonOperator, not even an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) UnsetComparisonOperator() {
	o.ComparisonOperator.Unset()
}

// GetCooldownSeconds returns the CooldownSeconds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupPolicyUpdateRequest) GetCooldownSeconds() int32 {
	if o == nil || IsNil(o.CooldownSeconds.Get()) {
		var ret int32
		return ret
	}
	return *o.CooldownSeconds.Get()
}

// GetCooldownSecondsOk returns a tuple with the CooldownSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupPolicyUpdateRequest) GetCooldownSecondsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CooldownSeconds.Get(), o.CooldownSeconds.IsSet()
}

// HasCooldownSeconds returns a boolean if a field has been set.
func (o *AutoScalingGroupPolicyUpdateRequest) HasCooldownSeconds() bool {
	if o != nil && o.CooldownSeconds.IsSet() {
		return true
	}

	return false
}

// SetCooldownSeconds gets a reference to the given NullableInt32 and assigns it to the CooldownSeconds field.
func (o *AutoScalingGroupPolicyUpdateRequest) SetCooldownSeconds(v int32) {
	o.CooldownSeconds.Set(&v)
}

// SetCooldownSecondsNil sets the value for CooldownSeconds to be an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) SetCooldownSecondsNil() {
	o.CooldownSeconds.Set(nil)
}

// UnsetCooldownSeconds ensures that no value is present for CooldownSeconds, not even an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) UnsetCooldownSeconds() {
	o.CooldownSeconds.Unset()
}

// GetEvaluationMinutes returns the EvaluationMinutes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupPolicyUpdateRequest) GetEvaluationMinutes() int32 {
	if o == nil || IsNil(o.EvaluationMinutes.Get()) {
		var ret int32
		return ret
	}
	return *o.EvaluationMinutes.Get()
}

// GetEvaluationMinutesOk returns a tuple with the EvaluationMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupPolicyUpdateRequest) GetEvaluationMinutesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EvaluationMinutes.Get(), o.EvaluationMinutes.IsSet()
}

// HasEvaluationMinutes returns a boolean if a field has been set.
func (o *AutoScalingGroupPolicyUpdateRequest) HasEvaluationMinutes() bool {
	if o != nil && o.EvaluationMinutes.IsSet() {
		return true
	}

	return false
}

// SetEvaluationMinutes gets a reference to the given NullableInt32 and assigns it to the EvaluationMinutes field.
func (o *AutoScalingGroupPolicyUpdateRequest) SetEvaluationMinutes(v int32) {
	o.EvaluationMinutes.Set(&v)
}

// SetEvaluationMinutesNil sets the value for EvaluationMinutes to be an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) SetEvaluationMinutesNil() {
	o.EvaluationMinutes.Set(nil)
}

// UnsetEvaluationMinutes ensures that no value is present for EvaluationMinutes, not even an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) UnsetEvaluationMinutes() {
	o.EvaluationMinutes.Unset()
}

// GetMetricMethod returns the MetricMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupPolicyUpdateRequest) GetMetricMethod() string {
	if o == nil || IsNil(o.MetricMethod.Get()) {
		var ret string
		return ret
	}
	return *o.MetricMethod.Get()
}

// GetMetricMethodOk returns a tuple with the MetricMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupPolicyUpdateRequest) GetMetricMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetricMethod.Get(), o.MetricMethod.IsSet()
}

// HasMetricMethod returns a boolean if a field has been set.
func (o *AutoScalingGroupPolicyUpdateRequest) HasMetricMethod() bool {
	if o != nil && o.MetricMethod.IsSet() {
		return true
	}

	return false
}

// SetMetricMethod gets a reference to the given NullableString and assigns it to the MetricMethod field.
func (o *AutoScalingGroupPolicyUpdateRequest) SetMetricMethod(v string) {
	o.MetricMethod.Set(&v)
}

// SetMetricMethodNil sets the value for MetricMethod to be an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) SetMetricMethodNil() {
	o.MetricMethod.Set(nil)
}

// UnsetMetricMethod ensures that no value is present for MetricMethod, not even an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) UnsetMetricMethod() {
	o.MetricMethod.Unset()
}

// GetMetricType returns the MetricType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupPolicyUpdateRequest) GetMetricType() string {
	if o == nil || IsNil(o.MetricType.Get()) {
		var ret string
		return ret
	}
	return *o.MetricType.Get()
}

// GetMetricTypeOk returns a tuple with the MetricType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupPolicyUpdateRequest) GetMetricTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetricType.Get(), o.MetricType.IsSet()
}

// HasMetricType returns a boolean if a field has been set.
func (o *AutoScalingGroupPolicyUpdateRequest) HasMetricType() bool {
	if o != nil && o.MetricType.IsSet() {
		return true
	}

	return false
}

// SetMetricType gets a reference to the given NullableString and assigns it to the MetricType field.
func (o *AutoScalingGroupPolicyUpdateRequest) SetMetricType(v string) {
	o.MetricType.Set(&v)
}

// SetMetricTypeNil sets the value for MetricType to be an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) SetMetricTypeNil() {
	o.MetricType.Set(nil)
}

// UnsetMetricType ensures that no value is present for MetricType, not even an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) UnsetMetricType() {
	o.MetricType.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupPolicyUpdateRequest) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupPolicyUpdateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *AutoScalingGroupPolicyUpdateRequest) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *AutoScalingGroupPolicyUpdateRequest) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) UnsetName() {
	o.Name.Unset()
}

// GetScaleMethod returns the ScaleMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupPolicyUpdateRequest) GetScaleMethod() string {
	if o == nil || IsNil(o.ScaleMethod.Get()) {
		var ret string
		return ret
	}
	return *o.ScaleMethod.Get()
}

// GetScaleMethodOk returns a tuple with the ScaleMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupPolicyUpdateRequest) GetScaleMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScaleMethod.Get(), o.ScaleMethod.IsSet()
}

// HasScaleMethod returns a boolean if a field has been set.
func (o *AutoScalingGroupPolicyUpdateRequest) HasScaleMethod() bool {
	if o != nil && o.ScaleMethod.IsSet() {
		return true
	}

	return false
}

// SetScaleMethod gets a reference to the given NullableString and assigns it to the ScaleMethod field.
func (o *AutoScalingGroupPolicyUpdateRequest) SetScaleMethod(v string) {
	o.ScaleMethod.Set(&v)
}

// SetScaleMethodNil sets the value for ScaleMethod to be an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) SetScaleMethodNil() {
	o.ScaleMethod.Set(nil)
}

// UnsetScaleMethod ensures that no value is present for ScaleMethod, not even an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) UnsetScaleMethod() {
	o.ScaleMethod.Unset()
}

// GetScaleType returns the ScaleType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupPolicyUpdateRequest) GetScaleType() string {
	if o == nil || IsNil(o.ScaleType.Get()) {
		var ret string
		return ret
	}
	return *o.ScaleType.Get()
}

// GetScaleTypeOk returns a tuple with the ScaleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupPolicyUpdateRequest) GetScaleTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScaleType.Get(), o.ScaleType.IsSet()
}

// HasScaleType returns a boolean if a field has been set.
func (o *AutoScalingGroupPolicyUpdateRequest) HasScaleType() bool {
	if o != nil && o.ScaleType.IsSet() {
		return true
	}

	return false
}

// SetScaleType gets a reference to the given NullableString and assigns it to the ScaleType field.
func (o *AutoScalingGroupPolicyUpdateRequest) SetScaleType(v string) {
	o.ScaleType.Set(&v)
}

// SetScaleTypeNil sets the value for ScaleType to be an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) SetScaleTypeNil() {
	o.ScaleType.Set(nil)
}

// UnsetScaleType ensures that no value is present for ScaleType, not even an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) UnsetScaleType() {
	o.ScaleType.Unset()
}

// GetScaleValue returns the ScaleValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupPolicyUpdateRequest) GetScaleValue() int32 {
	if o == nil || IsNil(o.ScaleValue.Get()) {
		var ret int32
		return ret
	}
	return *o.ScaleValue.Get()
}

// GetScaleValueOk returns a tuple with the ScaleValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupPolicyUpdateRequest) GetScaleValueOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScaleValue.Get(), o.ScaleValue.IsSet()
}

// HasScaleValue returns a boolean if a field has been set.
func (o *AutoScalingGroupPolicyUpdateRequest) HasScaleValue() bool {
	if o != nil && o.ScaleValue.IsSet() {
		return true
	}

	return false
}

// SetScaleValue gets a reference to the given NullableInt32 and assigns it to the ScaleValue field.
func (o *AutoScalingGroupPolicyUpdateRequest) SetScaleValue(v int32) {
	o.ScaleValue.Set(&v)
}

// SetScaleValueNil sets the value for ScaleValue to be an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) SetScaleValueNil() {
	o.ScaleValue.Set(nil)
}

// UnsetScaleValue ensures that no value is present for ScaleValue, not even an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) UnsetScaleValue() {
	o.ScaleValue.Unset()
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupPolicyUpdateRequest) GetState() string {
	if o == nil || IsNil(o.State.Get()) {
		var ret string
		return ret
	}
	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupPolicyUpdateRequest) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// HasState returns a boolean if a field has been set.
func (o *AutoScalingGroupPolicyUpdateRequest) HasState() bool {
	if o != nil && o.State.IsSet() {
		return true
	}

	return false
}

// SetState gets a reference to the given NullableString and assigns it to the State field.
func (o *AutoScalingGroupPolicyUpdateRequest) SetState(v string) {
	o.State.Set(&v)
}

// SetStateNil sets the value for State to be an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) SetStateNil() {
	o.State.Set(nil)
}

// UnsetState ensures that no value is present for State, not even an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) UnsetState() {
	o.State.Unset()
}

// GetThreshold returns the Threshold field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupPolicyUpdateRequest) GetThreshold() int32 {
	if o == nil || IsNil(o.Threshold.Get()) {
		var ret int32
		return ret
	}
	return *o.Threshold.Get()
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupPolicyUpdateRequest) GetThresholdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Threshold.Get(), o.Threshold.IsSet()
}

// HasThreshold returns a boolean if a field has been set.
func (o *AutoScalingGroupPolicyUpdateRequest) HasThreshold() bool {
	if o != nil && o.Threshold.IsSet() {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given NullableInt32 and assigns it to the Threshold field.
func (o *AutoScalingGroupPolicyUpdateRequest) SetThreshold(v int32) {
	o.Threshold.Set(&v)
}

// SetThresholdNil sets the value for Threshold to be an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) SetThresholdNil() {
	o.Threshold.Set(nil)
}

// UnsetThreshold ensures that no value is present for Threshold, not even an explicit nil
func (o *AutoScalingGroupPolicyUpdateRequest) UnsetThreshold() {
	o.Threshold.Unset()
}

func (o AutoScalingGroupPolicyUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoScalingGroupPolicyUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ComparisonOperator.IsSet() {
		toSerialize["comparison_operator"] = o.ComparisonOperator.Get()
	}
	if o.CooldownSeconds.IsSet() {
		toSerialize["cooldown_seconds"] = o.CooldownSeconds.Get()
	}
	if o.EvaluationMinutes.IsSet() {
		toSerialize["evaluation_minutes"] = o.EvaluationMinutes.Get()
	}
	if o.MetricMethod.IsSet() {
		toSerialize["metric_method"] = o.MetricMethod.Get()
	}
	if o.MetricType.IsSet() {
		toSerialize["metric_type"] = o.MetricType.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ScaleMethod.IsSet() {
		toSerialize["scale_method"] = o.ScaleMethod.Get()
	}
	if o.ScaleType.IsSet() {
		toSerialize["scale_type"] = o.ScaleType.Get()
	}
	if o.ScaleValue.IsSet() {
		toSerialize["scale_value"] = o.ScaleValue.Get()
	}
	if o.State.IsSet() {
		toSerialize["state"] = o.State.Get()
	}
	if o.Threshold.IsSet() {
		toSerialize["threshold"] = o.Threshold.Get()
	}
	return toSerialize, nil
}

type NullableAutoScalingGroupPolicyUpdateRequest struct {
	value *AutoScalingGroupPolicyUpdateRequest
	isSet bool
}

func (v NullableAutoScalingGroupPolicyUpdateRequest) Get() *AutoScalingGroupPolicyUpdateRequest {
	return v.value
}

func (v *NullableAutoScalingGroupPolicyUpdateRequest) Set(val *AutoScalingGroupPolicyUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoScalingGroupPolicyUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoScalingGroupPolicyUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoScalingGroupPolicyUpdateRequest(val *AutoScalingGroupPolicyUpdateRequest) *NullableAutoScalingGroupPolicyUpdateRequest {
	return &NullableAutoScalingGroupPolicyUpdateRequest{value: val, isSet: true}
}

func (v NullableAutoScalingGroupPolicyUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoScalingGroupPolicyUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
