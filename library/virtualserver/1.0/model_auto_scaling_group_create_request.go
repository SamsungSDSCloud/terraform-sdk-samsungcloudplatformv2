/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AutoScalingGroupCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoScalingGroupCreateRequest{}

// AutoScalingGroupCreateRequest struct for AutoScalingGroupCreateRequest
type AutoScalingGroupCreateRequest struct {
	// Desired server count
	DesiredServerCount int32 `json:"desired_server_count"`
	// Desired server count editable
	DesiredServerCountEditable bool          `json:"desired_server_count_editable"`
	DrainEnabled               NullableBool  `json:"drain_enabled,omitempty"`
	DrainTimeout               NullableInt32 `json:"drain_timeout,omitempty"`
	// Launch Configuration ID
	LaunchConfigurationId string                          `json:"launch_configuration_id"`
	LbServerGroups        []AutoScalingGroupLbServerGroup `json:"lb_server_groups,omitempty"`
	// Max server count
	MaxServerCount int32 `json:"max_server_count"`
	// Min server count
	MinServerCount int32 `json:"min_server_count"`
	// Auto-Scaling Group name
	Name             string                                      `json:"name" validate:"regexp=^[a-zA-Z0-9-_]*$"`
	Notifications    []AutoScalingGroupNotificationCreateRequest `json:"notifications,omitempty"`
	ScalingPolicies  []AutoScalingGroupPolicyCreateRequest       `json:"scaling_policies,omitempty"`
	SecurityGroupIds []string                                    `json:"security_group_ids,omitempty"`
	// Server name prefix
	ServerNamePrefix string `json:"server_name_prefix" validate:"regexp=^[a-zA-Z0-9-_]*$"`
	// Subnet ID list
	SubnetIds []string `json:"subnet_ids"`
	Tags      []Tag    `json:"tags,omitempty"`
}

type _AutoScalingGroupCreateRequest AutoScalingGroupCreateRequest

// NewAutoScalingGroupCreateRequest instantiates a new AutoScalingGroupCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoScalingGroupCreateRequest(desiredServerCount int32, desiredServerCountEditable bool, launchConfigurationId string, maxServerCount int32, minServerCount int32, name string, serverNamePrefix string, subnetIds []string) *AutoScalingGroupCreateRequest {
	this := AutoScalingGroupCreateRequest{}
	this.DesiredServerCount = desiredServerCount
	this.DesiredServerCountEditable = desiredServerCountEditable
	this.LaunchConfigurationId = launchConfigurationId
	this.MaxServerCount = maxServerCount
	this.MinServerCount = minServerCount
	this.Name = name
	this.ServerNamePrefix = serverNamePrefix
	this.SubnetIds = subnetIds
	return &this
}

// NewAutoScalingGroupCreateRequestWithDefaults instantiates a new AutoScalingGroupCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoScalingGroupCreateRequestWithDefaults() *AutoScalingGroupCreateRequest {
	this := AutoScalingGroupCreateRequest{}
	return &this
}

// GetDesiredServerCount returns the DesiredServerCount field value
func (o *AutoScalingGroupCreateRequest) GetDesiredServerCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DesiredServerCount
}

// GetDesiredServerCountOk returns a tuple with the DesiredServerCount field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroupCreateRequest) GetDesiredServerCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DesiredServerCount, true
}

// SetDesiredServerCount sets field value
func (o *AutoScalingGroupCreateRequest) SetDesiredServerCount(v int32) {
	o.DesiredServerCount = v
}

// GetDesiredServerCountEditable returns the DesiredServerCountEditable field value
func (o *AutoScalingGroupCreateRequest) GetDesiredServerCountEditable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DesiredServerCountEditable
}

// GetDesiredServerCountEditableOk returns a tuple with the DesiredServerCountEditable field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroupCreateRequest) GetDesiredServerCountEditableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DesiredServerCountEditable, true
}

// SetDesiredServerCountEditable sets field value
func (o *AutoScalingGroupCreateRequest) SetDesiredServerCountEditable(v bool) {
	o.DesiredServerCountEditable = v
}

// GetDrainEnabled returns the DrainEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupCreateRequest) GetDrainEnabled() bool {
	if o == nil || IsNil(o.DrainEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.DrainEnabled.Get()
}

// GetDrainEnabledOk returns a tuple with the DrainEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupCreateRequest) GetDrainEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DrainEnabled.Get(), o.DrainEnabled.IsSet()
}

// HasDrainEnabled returns a boolean if a field has been set.
func (o *AutoScalingGroupCreateRequest) HasDrainEnabled() bool {
	if o != nil && o.DrainEnabled.IsSet() {
		return true
	}

	return false
}

// SetDrainEnabled gets a reference to the given NullableBool and assigns it to the DrainEnabled field.
func (o *AutoScalingGroupCreateRequest) SetDrainEnabled(v bool) {
	o.DrainEnabled.Set(&v)
}

// SetDrainEnabledNil sets the value for DrainEnabled to be an explicit nil
func (o *AutoScalingGroupCreateRequest) SetDrainEnabledNil() {
	o.DrainEnabled.Set(nil)
}

// UnsetDrainEnabled ensures that no value is present for DrainEnabled, not even an explicit nil
func (o *AutoScalingGroupCreateRequest) UnsetDrainEnabled() {
	o.DrainEnabled.Unset()
}

// GetDrainTimeout returns the DrainTimeout field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupCreateRequest) GetDrainTimeout() int32 {
	if o == nil || IsNil(o.DrainTimeout.Get()) {
		var ret int32
		return ret
	}
	return *o.DrainTimeout.Get()
}

// GetDrainTimeoutOk returns a tuple with the DrainTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupCreateRequest) GetDrainTimeoutOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DrainTimeout.Get(), o.DrainTimeout.IsSet()
}

// HasDrainTimeout returns a boolean if a field has been set.
func (o *AutoScalingGroupCreateRequest) HasDrainTimeout() bool {
	if o != nil && o.DrainTimeout.IsSet() {
		return true
	}

	return false
}

// SetDrainTimeout gets a reference to the given NullableInt32 and assigns it to the DrainTimeout field.
func (o *AutoScalingGroupCreateRequest) SetDrainTimeout(v int32) {
	o.DrainTimeout.Set(&v)
}

// SetDrainTimeoutNil sets the value for DrainTimeout to be an explicit nil
func (o *AutoScalingGroupCreateRequest) SetDrainTimeoutNil() {
	o.DrainTimeout.Set(nil)
}

// UnsetDrainTimeout ensures that no value is present for DrainTimeout, not even an explicit nil
func (o *AutoScalingGroupCreateRequest) UnsetDrainTimeout() {
	o.DrainTimeout.Unset()
}

// GetLaunchConfigurationId returns the LaunchConfigurationId field value
func (o *AutoScalingGroupCreateRequest) GetLaunchConfigurationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LaunchConfigurationId
}

// GetLaunchConfigurationIdOk returns a tuple with the LaunchConfigurationId field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroupCreateRequest) GetLaunchConfigurationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LaunchConfigurationId, true
}

// SetLaunchConfigurationId sets field value
func (o *AutoScalingGroupCreateRequest) SetLaunchConfigurationId(v string) {
	o.LaunchConfigurationId = v
}

// GetLbServerGroups returns the LbServerGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupCreateRequest) GetLbServerGroups() []AutoScalingGroupLbServerGroup {
	if o == nil {
		var ret []AutoScalingGroupLbServerGroup
		return ret
	}
	return o.LbServerGroups
}

// GetLbServerGroupsOk returns a tuple with the LbServerGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupCreateRequest) GetLbServerGroupsOk() ([]AutoScalingGroupLbServerGroup, bool) {
	if o == nil || IsNil(o.LbServerGroups) {
		return nil, false
	}
	return o.LbServerGroups, true
}

// HasLbServerGroups returns a boolean if a field has been set.
func (o *AutoScalingGroupCreateRequest) HasLbServerGroups() bool {
	if o != nil && !IsNil(o.LbServerGroups) {
		return true
	}

	return false
}

// SetLbServerGroups gets a reference to the given []AutoScalingGroupLbServerGroup and assigns it to the LbServerGroups field.
func (o *AutoScalingGroupCreateRequest) SetLbServerGroups(v []AutoScalingGroupLbServerGroup) {
	o.LbServerGroups = v
}

// GetMaxServerCount returns the MaxServerCount field value
func (o *AutoScalingGroupCreateRequest) GetMaxServerCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxServerCount
}

// GetMaxServerCountOk returns a tuple with the MaxServerCount field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroupCreateRequest) GetMaxServerCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxServerCount, true
}

// SetMaxServerCount sets field value
func (o *AutoScalingGroupCreateRequest) SetMaxServerCount(v int32) {
	o.MaxServerCount = v
}

// GetMinServerCount returns the MinServerCount field value
func (o *AutoScalingGroupCreateRequest) GetMinServerCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinServerCount
}

// GetMinServerCountOk returns a tuple with the MinServerCount field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroupCreateRequest) GetMinServerCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinServerCount, true
}

// SetMinServerCount sets field value
func (o *AutoScalingGroupCreateRequest) SetMinServerCount(v int32) {
	o.MinServerCount = v
}

// GetName returns the Name field value
func (o *AutoScalingGroupCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroupCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AutoScalingGroupCreateRequest) SetName(v string) {
	o.Name = v
}

// GetNotifications returns the Notifications field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupCreateRequest) GetNotifications() []AutoScalingGroupNotificationCreateRequest {
	if o == nil {
		var ret []AutoScalingGroupNotificationCreateRequest
		return ret
	}
	return o.Notifications
}

// GetNotificationsOk returns a tuple with the Notifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupCreateRequest) GetNotificationsOk() ([]AutoScalingGroupNotificationCreateRequest, bool) {
	if o == nil || IsNil(o.Notifications) {
		return nil, false
	}
	return o.Notifications, true
}

// HasNotifications returns a boolean if a field has been set.
func (o *AutoScalingGroupCreateRequest) HasNotifications() bool {
	if o != nil && !IsNil(o.Notifications) {
		return true
	}

	return false
}

// SetNotifications gets a reference to the given []AutoScalingGroupNotificationCreateRequest and assigns it to the Notifications field.
func (o *AutoScalingGroupCreateRequest) SetNotifications(v []AutoScalingGroupNotificationCreateRequest) {
	o.Notifications = v
}

// GetScalingPolicies returns the ScalingPolicies field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupCreateRequest) GetScalingPolicies() []AutoScalingGroupPolicyCreateRequest {
	if o == nil {
		var ret []AutoScalingGroupPolicyCreateRequest
		return ret
	}
	return o.ScalingPolicies
}

// GetScalingPoliciesOk returns a tuple with the ScalingPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupCreateRequest) GetScalingPoliciesOk() ([]AutoScalingGroupPolicyCreateRequest, bool) {
	if o == nil || IsNil(o.ScalingPolicies) {
		return nil, false
	}
	return o.ScalingPolicies, true
}

// HasScalingPolicies returns a boolean if a field has been set.
func (o *AutoScalingGroupCreateRequest) HasScalingPolicies() bool {
	if o != nil && !IsNil(o.ScalingPolicies) {
		return true
	}

	return false
}

// SetScalingPolicies gets a reference to the given []AutoScalingGroupPolicyCreateRequest and assigns it to the ScalingPolicies field.
func (o *AutoScalingGroupCreateRequest) SetScalingPolicies(v []AutoScalingGroupPolicyCreateRequest) {
	o.ScalingPolicies = v
}

// GetSecurityGroupIds returns the SecurityGroupIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupCreateRequest) GetSecurityGroupIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.SecurityGroupIds
}

// GetSecurityGroupIdsOk returns a tuple with the SecurityGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupCreateRequest) GetSecurityGroupIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SecurityGroupIds) {
		return nil, false
	}
	return o.SecurityGroupIds, true
}

// HasSecurityGroupIds returns a boolean if a field has been set.
func (o *AutoScalingGroupCreateRequest) HasSecurityGroupIds() bool {
	if o != nil && !IsNil(o.SecurityGroupIds) {
		return true
	}

	return false
}

// SetSecurityGroupIds gets a reference to the given []string and assigns it to the SecurityGroupIds field.
func (o *AutoScalingGroupCreateRequest) SetSecurityGroupIds(v []string) {
	o.SecurityGroupIds = v
}

// GetServerNamePrefix returns the ServerNamePrefix field value
func (o *AutoScalingGroupCreateRequest) GetServerNamePrefix() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerNamePrefix
}

// GetServerNamePrefixOk returns a tuple with the ServerNamePrefix field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroupCreateRequest) GetServerNamePrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerNamePrefix, true
}

// SetServerNamePrefix sets field value
func (o *AutoScalingGroupCreateRequest) SetServerNamePrefix(v string) {
	o.ServerNamePrefix = v
}

// GetSubnetIds returns the SubnetIds field value
func (o *AutoScalingGroupCreateRequest) GetSubnetIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SubnetIds
}

// GetSubnetIdsOk returns a tuple with the SubnetIds field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroupCreateRequest) GetSubnetIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubnetIds, true
}

// SetSubnetIds sets field value
func (o *AutoScalingGroupCreateRequest) SetSubnetIds(v []string) {
	o.SubnetIds = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupCreateRequest) GetTags() []Tag {
	if o == nil {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupCreateRequest) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AutoScalingGroupCreateRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *AutoScalingGroupCreateRequest) SetTags(v []Tag) {
	o.Tags = v
}

func (o AutoScalingGroupCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoScalingGroupCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["desired_server_count"] = o.DesiredServerCount
	toSerialize["desired_server_count_editable"] = o.DesiredServerCountEditable
	if o.DrainEnabled.IsSet() {
		toSerialize["drain_enabled"] = o.DrainEnabled.Get()
	}
	if o.DrainTimeout.IsSet() {
		toSerialize["drain_timeout"] = o.DrainTimeout.Get()
	}
	toSerialize["launch_configuration_id"] = o.LaunchConfigurationId
	if o.LbServerGroups != nil {
		toSerialize["lb_server_groups"] = o.LbServerGroups
	}
	toSerialize["max_server_count"] = o.MaxServerCount
	toSerialize["min_server_count"] = o.MinServerCount
	toSerialize["name"] = o.Name
	if o.Notifications != nil {
		toSerialize["notifications"] = o.Notifications
	}
	if o.ScalingPolicies != nil {
		toSerialize["scaling_policies"] = o.ScalingPolicies
	}
	if o.SecurityGroupIds != nil {
		toSerialize["security_group_ids"] = o.SecurityGroupIds
	}
	toSerialize["server_name_prefix"] = o.ServerNamePrefix
	toSerialize["subnet_ids"] = o.SubnetIds
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

func (o *AutoScalingGroupCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"desired_server_count",
		"desired_server_count_editable",
		"launch_configuration_id",
		"max_server_count",
		"min_server_count",
		"name",
		"server_name_prefix",
		"subnet_ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutoScalingGroupCreateRequest := _AutoScalingGroupCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAutoScalingGroupCreateRequest)

	if err != nil {
		return err
	}

	*o = AutoScalingGroupCreateRequest(varAutoScalingGroupCreateRequest)

	return err
}

type NullableAutoScalingGroupCreateRequest struct {
	value *AutoScalingGroupCreateRequest
	isSet bool
}

func (v NullableAutoScalingGroupCreateRequest) Get() *AutoScalingGroupCreateRequest {
	return v.value
}

func (v *NullableAutoScalingGroupCreateRequest) Set(val *AutoScalingGroupCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoScalingGroupCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoScalingGroupCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoScalingGroupCreateRequest(val *AutoScalingGroupCreateRequest) *NullableAutoScalingGroupCreateRequest {
	return &NullableAutoScalingGroupCreateRequest{value: val, isSet: true}
}

func (v NullableAutoScalingGroupCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoScalingGroupCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
