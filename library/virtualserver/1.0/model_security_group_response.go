/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SecurityGroupResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroupResponse{}

// SecurityGroupResponse struct for SecurityGroupResponse
type SecurityGroupResponse struct {
	// Server Group owner's account ID
	AccountId string `json:"account_id"`
	// Security group description
	Description string `json:"description"`
	// Security Group ID
	Id string `json:"id"`
	// Security Group name
	Name string `json:"name"`
	// Security group rules
	Rules []SecurityGroupResponseRule `json:"rules"`
}

type _SecurityGroupResponse SecurityGroupResponse

// NewSecurityGroupResponse instantiates a new SecurityGroupResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupResponse(accountId string, description string, id string, name string, rules []SecurityGroupResponseRule) *SecurityGroupResponse {
	this := SecurityGroupResponse{}
	this.AccountId = accountId
	this.Description = description
	this.Id = id
	this.Name = name
	this.Rules = rules
	return &this
}

// NewSecurityGroupResponseWithDefaults instantiates a new SecurityGroupResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupResponseWithDefaults() *SecurityGroupResponse {
	this := SecurityGroupResponse{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *SecurityGroupResponse) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupResponse) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *SecurityGroupResponse) SetAccountId(v string) {
	o.AccountId = v
}

// GetDescription returns the Description field value
func (o *SecurityGroupResponse) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *SecurityGroupResponse) SetDescription(v string) {
	o.Description = v
}

// GetId returns the Id field value
func (o *SecurityGroupResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SecurityGroupResponse) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *SecurityGroupResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SecurityGroupResponse) SetName(v string) {
	o.Name = v
}

// GetRules returns the Rules field value
func (o *SecurityGroupResponse) GetRules() []SecurityGroupResponseRule {
	if o == nil {
		var ret []SecurityGroupResponseRule
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupResponse) GetRulesOk() ([]SecurityGroupResponseRule, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rules, true
}

// SetRules sets field value
func (o *SecurityGroupResponse) SetRules(v []SecurityGroupResponseRule) {
	o.Rules = v
}

func (o SecurityGroupResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityGroupResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	toSerialize["description"] = o.Description
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["rules"] = o.Rules
	return toSerialize, nil
}

func (o *SecurityGroupResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"description",
		"id",
		"name",
		"rules",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSecurityGroupResponse := _SecurityGroupResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSecurityGroupResponse)

	if err != nil {
		return err
	}

	*o = SecurityGroupResponse(varSecurityGroupResponse)

	return err
}

type NullableSecurityGroupResponse struct {
	value *SecurityGroupResponse
	isSet bool
}

func (v NullableSecurityGroupResponse) Get() *SecurityGroupResponse {
	return v.value
}

func (v *NullableSecurityGroupResponse) Set(val *SecurityGroupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupResponse(val *SecurityGroupResponse) *NullableSecurityGroupResponse {
	return &NullableSecurityGroupResponse{value: val, isSet: true}
}

func (v NullableSecurityGroupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
