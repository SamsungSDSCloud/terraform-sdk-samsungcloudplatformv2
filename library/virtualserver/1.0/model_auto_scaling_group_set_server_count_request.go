/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"encoding/json"
)

// checks if the AutoScalingGroupSetServerCountRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoScalingGroupSetServerCountRequest{}

// AutoScalingGroupSetServerCountRequest struct for AutoScalingGroupSetServerCountRequest
type AutoScalingGroupSetServerCountRequest struct {
	DesiredServerCount NullableInt32 `json:"desired_server_count,omitempty"`
	MaxServerCount     NullableInt32 `json:"max_server_count,omitempty"`
	MinServerCount     NullableInt32 `json:"min_server_count,omitempty"`
}

// NewAutoScalingGroupSetServerCountRequest instantiates a new AutoScalingGroupSetServerCountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoScalingGroupSetServerCountRequest() *AutoScalingGroupSetServerCountRequest {
	this := AutoScalingGroupSetServerCountRequest{}
	return &this
}

// NewAutoScalingGroupSetServerCountRequestWithDefaults instantiates a new AutoScalingGroupSetServerCountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoScalingGroupSetServerCountRequestWithDefaults() *AutoScalingGroupSetServerCountRequest {
	this := AutoScalingGroupSetServerCountRequest{}
	return &this
}

// GetDesiredServerCount returns the DesiredServerCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupSetServerCountRequest) GetDesiredServerCount() int32 {
	if o == nil || IsNil(o.DesiredServerCount.Get()) {
		var ret int32
		return ret
	}
	return *o.DesiredServerCount.Get()
}

// GetDesiredServerCountOk returns a tuple with the DesiredServerCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupSetServerCountRequest) GetDesiredServerCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DesiredServerCount.Get(), o.DesiredServerCount.IsSet()
}

// HasDesiredServerCount returns a boolean if a field has been set.
func (o *AutoScalingGroupSetServerCountRequest) HasDesiredServerCount() bool {
	if o != nil && o.DesiredServerCount.IsSet() {
		return true
	}

	return false
}

// SetDesiredServerCount gets a reference to the given NullableInt32 and assigns it to the DesiredServerCount field.
func (o *AutoScalingGroupSetServerCountRequest) SetDesiredServerCount(v int32) {
	o.DesiredServerCount.Set(&v)
}

// SetDesiredServerCountNil sets the value for DesiredServerCount to be an explicit nil
func (o *AutoScalingGroupSetServerCountRequest) SetDesiredServerCountNil() {
	o.DesiredServerCount.Set(nil)
}

// UnsetDesiredServerCount ensures that no value is present for DesiredServerCount, not even an explicit nil
func (o *AutoScalingGroupSetServerCountRequest) UnsetDesiredServerCount() {
	o.DesiredServerCount.Unset()
}

// GetMaxServerCount returns the MaxServerCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupSetServerCountRequest) GetMaxServerCount() int32 {
	if o == nil || IsNil(o.MaxServerCount.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxServerCount.Get()
}

// GetMaxServerCountOk returns a tuple with the MaxServerCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupSetServerCountRequest) GetMaxServerCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxServerCount.Get(), o.MaxServerCount.IsSet()
}

// HasMaxServerCount returns a boolean if a field has been set.
func (o *AutoScalingGroupSetServerCountRequest) HasMaxServerCount() bool {
	if o != nil && o.MaxServerCount.IsSet() {
		return true
	}

	return false
}

// SetMaxServerCount gets a reference to the given NullableInt32 and assigns it to the MaxServerCount field.
func (o *AutoScalingGroupSetServerCountRequest) SetMaxServerCount(v int32) {
	o.MaxServerCount.Set(&v)
}

// SetMaxServerCountNil sets the value for MaxServerCount to be an explicit nil
func (o *AutoScalingGroupSetServerCountRequest) SetMaxServerCountNil() {
	o.MaxServerCount.Set(nil)
}

// UnsetMaxServerCount ensures that no value is present for MaxServerCount, not even an explicit nil
func (o *AutoScalingGroupSetServerCountRequest) UnsetMaxServerCount() {
	o.MaxServerCount.Unset()
}

// GetMinServerCount returns the MinServerCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroupSetServerCountRequest) GetMinServerCount() int32 {
	if o == nil || IsNil(o.MinServerCount.Get()) {
		var ret int32
		return ret
	}
	return *o.MinServerCount.Get()
}

// GetMinServerCountOk returns a tuple with the MinServerCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroupSetServerCountRequest) GetMinServerCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinServerCount.Get(), o.MinServerCount.IsSet()
}

// HasMinServerCount returns a boolean if a field has been set.
func (o *AutoScalingGroupSetServerCountRequest) HasMinServerCount() bool {
	if o != nil && o.MinServerCount.IsSet() {
		return true
	}

	return false
}

// SetMinServerCount gets a reference to the given NullableInt32 and assigns it to the MinServerCount field.
func (o *AutoScalingGroupSetServerCountRequest) SetMinServerCount(v int32) {
	o.MinServerCount.Set(&v)
}

// SetMinServerCountNil sets the value for MinServerCount to be an explicit nil
func (o *AutoScalingGroupSetServerCountRequest) SetMinServerCountNil() {
	o.MinServerCount.Set(nil)
}

// UnsetMinServerCount ensures that no value is present for MinServerCount, not even an explicit nil
func (o *AutoScalingGroupSetServerCountRequest) UnsetMinServerCount() {
	o.MinServerCount.Unset()
}

func (o AutoScalingGroupSetServerCountRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoScalingGroupSetServerCountRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DesiredServerCount.IsSet() {
		toSerialize["desired_server_count"] = o.DesiredServerCount.Get()
	}
	if o.MaxServerCount.IsSet() {
		toSerialize["max_server_count"] = o.MaxServerCount.Get()
	}
	if o.MinServerCount.IsSet() {
		toSerialize["min_server_count"] = o.MinServerCount.Get()
	}
	return toSerialize, nil
}

type NullableAutoScalingGroupSetServerCountRequest struct {
	value *AutoScalingGroupSetServerCountRequest
	isSet bool
}

func (v NullableAutoScalingGroupSetServerCountRequest) Get() *AutoScalingGroupSetServerCountRequest {
	return v.value
}

func (v *NullableAutoScalingGroupSetServerCountRequest) Set(val *AutoScalingGroupSetServerCountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoScalingGroupSetServerCountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoScalingGroupSetServerCountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoScalingGroupSetServerCountRequest(val *AutoScalingGroupSetServerCountRequest) *NullableAutoScalingGroupSetServerCountRequest {
	return &NullableAutoScalingGroupSetServerCountRequest{value: val, isSet: true}
}

func (v NullableAutoScalingGroupSetServerCountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoScalingGroupSetServerCountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
