/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SnapshotCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnapshotCreateRequest{}

// SnapshotCreateRequest struct for SnapshotCreateRequest
type SnapshotCreateRequest struct {
	Description NullableString         `json:"description,omitempty"`
	Force       NullableBool           `json:"force,omitempty"`
	Metadata    map[string]interface{} `json:"metadata,omitempty"`
	// Snapshot Name
	Name string `json:"name" validate:"regexp=^[a-zA-Z0-9-_ ]+$"`
	// Volume Id
	VolumeId string `json:"volume_id"`
}

type _SnapshotCreateRequest SnapshotCreateRequest

// NewSnapshotCreateRequest instantiates a new SnapshotCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotCreateRequest(name string, volumeId string) *SnapshotCreateRequest {
	this := SnapshotCreateRequest{}
	this.Name = name
	this.VolumeId = volumeId
	return &this
}

// NewSnapshotCreateRequestWithDefaults instantiates a new SnapshotCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotCreateRequestWithDefaults() *SnapshotCreateRequest {
	this := SnapshotCreateRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotCreateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *SnapshotCreateRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *SnapshotCreateRequest) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *SnapshotCreateRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *SnapshotCreateRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetForce returns the Force field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotCreateRequest) GetForce() bool {
	if o == nil || IsNil(o.Force.Get()) {
		var ret bool
		return ret
	}
	return *o.Force.Get()
}

// GetForceOk returns a tuple with the Force field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotCreateRequest) GetForceOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Force.Get(), o.Force.IsSet()
}

// HasForce returns a boolean if a field has been set.
func (o *SnapshotCreateRequest) HasForce() bool {
	if o != nil && o.Force.IsSet() {
		return true
	}

	return false
}

// SetForce gets a reference to the given NullableBool and assigns it to the Force field.
func (o *SnapshotCreateRequest) SetForce(v bool) {
	o.Force.Set(&v)
}

// SetForceNil sets the value for Force to be an explicit nil
func (o *SnapshotCreateRequest) SetForceNil() {
	o.Force.Set(nil)
}

// UnsetForce ensures that no value is present for Force, not even an explicit nil
func (o *SnapshotCreateRequest) UnsetForce() {
	o.Force.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotCreateRequest) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotCreateRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *SnapshotCreateRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *SnapshotCreateRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetName returns the Name field value
func (o *SnapshotCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SnapshotCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SnapshotCreateRequest) SetName(v string) {
	o.Name = v
}

// GetVolumeId returns the VolumeId field value
func (o *SnapshotCreateRequest) GetVolumeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value
// and a boolean to check if the value has been set.
func (o *SnapshotCreateRequest) GetVolumeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolumeId, true
}

// SetVolumeId sets field value
func (o *SnapshotCreateRequest) SetVolumeId(v string) {
	o.VolumeId = v
}

func (o SnapshotCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnapshotCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Force.IsSet() {
		toSerialize["force"] = o.Force.Get()
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["name"] = o.Name
	toSerialize["volume_id"] = o.VolumeId
	return toSerialize, nil
}

func (o *SnapshotCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"volume_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSnapshotCreateRequest := _SnapshotCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSnapshotCreateRequest)

	if err != nil {
		return err
	}

	*o = SnapshotCreateRequest(varSnapshotCreateRequest)

	return err
}

type NullableSnapshotCreateRequest struct {
	value *SnapshotCreateRequest
	isSet bool
}

func (v NullableSnapshotCreateRequest) Get() *SnapshotCreateRequest {
	return v.value
}

func (v *NullableSnapshotCreateRequest) Set(val *SnapshotCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotCreateRequest(val *SnapshotCreateRequest) *NullableSnapshotCreateRequest {
	return &NullableSnapshotCreateRequest{value: val, isSet: true}
}

func (v NullableSnapshotCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
