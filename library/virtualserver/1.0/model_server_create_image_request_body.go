/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ServerCreateImageRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerCreateImageRequestBody{}

// ServerCreateImageRequestBody struct for ServerCreateImageRequestBody
type ServerCreateImageRequestBody struct {
	// Image name
	ImageName string `json:"image_name"`
}

type _ServerCreateImageRequestBody ServerCreateImageRequestBody

// NewServerCreateImageRequestBody instantiates a new ServerCreateImageRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerCreateImageRequestBody(imageName string) *ServerCreateImageRequestBody {
	this := ServerCreateImageRequestBody{}
	this.ImageName = imageName
	return &this
}

// NewServerCreateImageRequestBodyWithDefaults instantiates a new ServerCreateImageRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerCreateImageRequestBodyWithDefaults() *ServerCreateImageRequestBody {
	this := ServerCreateImageRequestBody{}
	return &this
}

// GetImageName returns the ImageName field value
func (o *ServerCreateImageRequestBody) GetImageName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value
// and a boolean to check if the value has been set.
func (o *ServerCreateImageRequestBody) GetImageNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageName, true
}

// SetImageName sets field value
func (o *ServerCreateImageRequestBody) SetImageName(v string) {
	o.ImageName = v
}

func (o ServerCreateImageRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerCreateImageRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["image_name"] = o.ImageName
	return toSerialize, nil
}

func (o *ServerCreateImageRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"image_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServerCreateImageRequestBody := _ServerCreateImageRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServerCreateImageRequestBody)

	if err != nil {
		return err
	}

	*o = ServerCreateImageRequestBody(varServerCreateImageRequestBody)

	return err
}

type NullableServerCreateImageRequestBody struct {
	value *ServerCreateImageRequestBody
	isSet bool
}

func (v NullableServerCreateImageRequestBody) Get() *ServerCreateImageRequestBody {
	return v.value
}

func (v *NullableServerCreateImageRequestBody) Set(val *ServerCreateImageRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableServerCreateImageRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableServerCreateImageRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerCreateImageRequestBody(val *ServerCreateImageRequestBody) *NullableServerCreateImageRequestBody {
	return &NullableServerCreateImageRequestBody{value: val, isSet: true}
}

func (v NullableServerCreateImageRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerCreateImageRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
