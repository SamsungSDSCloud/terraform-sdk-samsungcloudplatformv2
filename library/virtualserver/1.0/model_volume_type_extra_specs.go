/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"encoding/json"
)

// checks if the VolumeTypeExtraSpecs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeTypeExtraSpecs{}

// VolumeTypeExtraSpecs struct for VolumeTypeExtraSpecs
type VolumeTypeExtraSpecs struct {
	Multiattach NullableString `json:"multiattach,omitempty"`
}

// NewVolumeTypeExtraSpecs instantiates a new VolumeTypeExtraSpecs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeTypeExtraSpecs() *VolumeTypeExtraSpecs {
	this := VolumeTypeExtraSpecs{}
	return &this
}

// NewVolumeTypeExtraSpecsWithDefaults instantiates a new VolumeTypeExtraSpecs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeTypeExtraSpecsWithDefaults() *VolumeTypeExtraSpecs {
	this := VolumeTypeExtraSpecs{}
	return &this
}

// GetMultiattach returns the Multiattach field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VolumeTypeExtraSpecs) GetMultiattach() string {
	if o == nil || IsNil(o.Multiattach.Get()) {
		var ret string
		return ret
	}
	return *o.Multiattach.Get()
}

// GetMultiattachOk returns a tuple with the Multiattach field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VolumeTypeExtraSpecs) GetMultiattachOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Multiattach.Get(), o.Multiattach.IsSet()
}

// HasMultiattach returns a boolean if a field has been set.
func (o *VolumeTypeExtraSpecs) HasMultiattach() bool {
	if o != nil && o.Multiattach.IsSet() {
		return true
	}

	return false
}

// SetMultiattach gets a reference to the given NullableString and assigns it to the Multiattach field.
func (o *VolumeTypeExtraSpecs) SetMultiattach(v string) {
	o.Multiattach.Set(&v)
}

// SetMultiattachNil sets the value for Multiattach to be an explicit nil
func (o *VolumeTypeExtraSpecs) SetMultiattachNil() {
	o.Multiattach.Set(nil)
}

// UnsetMultiattach ensures that no value is present for Multiattach, not even an explicit nil
func (o *VolumeTypeExtraSpecs) UnsetMultiattach() {
	o.Multiattach.Unset()
}

func (o VolumeTypeExtraSpecs) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeTypeExtraSpecs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Multiattach.IsSet() {
		toSerialize["multiattach"] = o.Multiattach.Get()
	}
	return toSerialize, nil
}

type NullableVolumeTypeExtraSpecs struct {
	value *VolumeTypeExtraSpecs
	isSet bool
}

func (v NullableVolumeTypeExtraSpecs) Get() *VolumeTypeExtraSpecs {
	return v.value
}

func (v *NullableVolumeTypeExtraSpecs) Set(val *VolumeTypeExtraSpecs) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeTypeExtraSpecs) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeTypeExtraSpecs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeTypeExtraSpecs(val *VolumeTypeExtraSpecs) *NullableVolumeTypeExtraSpecs {
	return &NullableVolumeTypeExtraSpecs{value: val, isSet: true}
}

func (v NullableVolumeTypeExtraSpecs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeTypeExtraSpecs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
