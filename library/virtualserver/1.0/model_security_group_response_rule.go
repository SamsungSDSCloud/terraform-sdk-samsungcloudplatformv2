/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SecurityGroupResponseRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroupResponseRule{}

// SecurityGroupResponseRule struct for SecurityGroupResponseRule
type SecurityGroupResponseRule struct {
	// From port rule
	FromPort int32 `json:"from_port"`
	// Security group rule ID
	Id string `json:"id"`
	// Ip protocol
	IpProtocol string `json:"ip_protocol"`
	// Ip range
	IpRange SecurityGroupResponseRuleIpRange `json:"ip_range"`
	// To port rule
	ToPort int32 `json:"to_port"`
}

type _SecurityGroupResponseRule SecurityGroupResponseRule

// NewSecurityGroupResponseRule instantiates a new SecurityGroupResponseRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupResponseRule(fromPort int32, id string, ipProtocol string, ipRange SecurityGroupResponseRuleIpRange, toPort int32) *SecurityGroupResponseRule {
	this := SecurityGroupResponseRule{}
	this.FromPort = fromPort
	this.Id = id
	this.IpProtocol = ipProtocol
	this.IpRange = ipRange
	this.ToPort = toPort
	return &this
}

// NewSecurityGroupResponseRuleWithDefaults instantiates a new SecurityGroupResponseRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupResponseRuleWithDefaults() *SecurityGroupResponseRule {
	this := SecurityGroupResponseRule{}
	return &this
}

// GetFromPort returns the FromPort field value
func (o *SecurityGroupResponseRule) GetFromPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FromPort
}

// GetFromPortOk returns a tuple with the FromPort field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupResponseRule) GetFromPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromPort, true
}

// SetFromPort sets field value
func (o *SecurityGroupResponseRule) SetFromPort(v int32) {
	o.FromPort = v
}

// GetId returns the Id field value
func (o *SecurityGroupResponseRule) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupResponseRule) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SecurityGroupResponseRule) SetId(v string) {
	o.Id = v
}

// GetIpProtocol returns the IpProtocol field value
func (o *SecurityGroupResponseRule) GetIpProtocol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpProtocol
}

// GetIpProtocolOk returns a tuple with the IpProtocol field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupResponseRule) GetIpProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpProtocol, true
}

// SetIpProtocol sets field value
func (o *SecurityGroupResponseRule) SetIpProtocol(v string) {
	o.IpProtocol = v
}

// GetIpRange returns the IpRange field value
func (o *SecurityGroupResponseRule) GetIpRange() SecurityGroupResponseRuleIpRange {
	if o == nil {
		var ret SecurityGroupResponseRuleIpRange
		return ret
	}

	return o.IpRange
}

// GetIpRangeOk returns a tuple with the IpRange field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupResponseRule) GetIpRangeOk() (*SecurityGroupResponseRuleIpRange, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpRange, true
}

// SetIpRange sets field value
func (o *SecurityGroupResponseRule) SetIpRange(v SecurityGroupResponseRuleIpRange) {
	o.IpRange = v
}

// GetToPort returns the ToPort field value
func (o *SecurityGroupResponseRule) GetToPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ToPort
}

// GetToPortOk returns a tuple with the ToPort field value
// and a boolean to check if the value has been set.
func (o *SecurityGroupResponseRule) GetToPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToPort, true
}

// SetToPort sets field value
func (o *SecurityGroupResponseRule) SetToPort(v int32) {
	o.ToPort = v
}

func (o SecurityGroupResponseRule) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityGroupResponseRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["from_port"] = o.FromPort
	toSerialize["id"] = o.Id
	toSerialize["ip_protocol"] = o.IpProtocol
	toSerialize["ip_range"] = o.IpRange
	toSerialize["to_port"] = o.ToPort
	return toSerialize, nil
}

func (o *SecurityGroupResponseRule) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"from_port",
		"id",
		"ip_protocol",
		"ip_range",
		"to_port",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSecurityGroupResponseRule := _SecurityGroupResponseRule{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSecurityGroupResponseRule)

	if err != nil {
		return err
	}

	*o = SecurityGroupResponseRule(varSecurityGroupResponseRule)

	return err
}

type NullableSecurityGroupResponseRule struct {
	value *SecurityGroupResponseRule
	isSet bool
}

func (v NullableSecurityGroupResponseRule) Get() *SecurityGroupResponseRule {
	return v.value
}

func (v *NullableSecurityGroupResponseRule) Set(val *SecurityGroupResponseRule) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupResponseRule) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupResponseRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupResponseRule(val *SecurityGroupResponseRule) *NullableSecurityGroupResponseRule {
	return &NullableSecurityGroupResponseRule{value: val, isSet: true}
}

func (v NullableSecurityGroupResponseRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupResponseRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
