/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ImageShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageShowResponse{}

// ImageShowResponse struct for ImageShowResponse
type ImageShowResponse struct {
	Checksum NullableString `json:"checksum,omitempty"`
	// Container format
	ContainerFormat string `json:"container_format"`
	// Created at
	CreatedAt string `json:"created_at"`
	// Disk format
	DiskFormat string `json:"disk_format"`
	// File
	File string `json:"file"`
	// Image ID
	Id string `json:"id"`
	// Minimum disk
	MinDisk int32 `json:"min_disk"`
	// Minimum RAM
	MinRam int32 `json:"min_ram"`
	// Name
	Name        string         `json:"name"`
	OsDistro    NullableString `json:"os_distro,omitempty"`
	OsHashAlgo  NullableString `json:"os_hash_algo,omitempty"`
	OsHashValue NullableString `json:"os_hash_value,omitempty"`
	// OS hidden
	OsHidden bool `json:"os_hidden"`
	// Owner project ID
	Owner            string         `json:"owner"`
	OwnerAccountName NullableString `json:"owner_account_name,omitempty"`
	OwnerUserName    NullableString `json:"owner_user_name,omitempty"`
	// Protected
	Protected            bool           `json:"protected"`
	RootDeviceName       NullableString `json:"root_device_name,omitempty"`
	ScpImageType         NullableString `json:"scp_image_type,omitempty"`
	ScpK8sVersion        NullableString `json:"scp_k8s_version,omitempty"`
	ScpOriginalImageType NullableString `json:"scp_original_image_type,omitempty"`
	ScpOsBuildVersion    NullableString `json:"scp_os_build_version,omitempty"`
	ScpOsVersion         NullableString `json:"scp_os_version,omitempty"`
	Size                 NullableInt64  `json:"size,omitempty"`
	// Status
	Status string `json:"status"`
	// Updated at
	UpdatedAt   string         `json:"updated_at"`
	Url         NullableString `json:"url,omitempty"`
	VirtualSize NullableInt64  `json:"virtual_size,omitempty"`
	// Visibility
	Visibility string         `json:"visibility"`
	Volumes    NullableString `json:"volumes,omitempty"`
}

type _ImageShowResponse ImageShowResponse

// NewImageShowResponse instantiates a new ImageShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageShowResponse(containerFormat string, createdAt string, diskFormat string, file string, id string, minDisk int32, minRam int32, name string, osHidden bool, owner string, protected bool, status string, updatedAt string, visibility string) *ImageShowResponse {
	this := ImageShowResponse{}
	this.ContainerFormat = containerFormat
	this.CreatedAt = createdAt
	this.DiskFormat = diskFormat
	this.File = file
	this.Id = id
	this.MinDisk = minDisk
	this.MinRam = minRam
	this.Name = name
	this.OsHidden = osHidden
	this.Owner = owner
	this.Protected = protected
	this.Status = status
	this.UpdatedAt = updatedAt
	this.Visibility = visibility
	return &this
}

// NewImageShowResponseWithDefaults instantiates a new ImageShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageShowResponseWithDefaults() *ImageShowResponse {
	this := ImageShowResponse{}
	return &this
}

// GetChecksum returns the Checksum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageShowResponse) GetChecksum() string {
	if o == nil || IsNil(o.Checksum.Get()) {
		var ret string
		return ret
	}
	return *o.Checksum.Get()
}

// GetChecksumOk returns a tuple with the Checksum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageShowResponse) GetChecksumOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Checksum.Get(), o.Checksum.IsSet()
}

// HasChecksum returns a boolean if a field has been set.
func (o *ImageShowResponse) HasChecksum() bool {
	if o != nil && o.Checksum.IsSet() {
		return true
	}

	return false
}

// SetChecksum gets a reference to the given NullableString and assigns it to the Checksum field.
func (o *ImageShowResponse) SetChecksum(v string) {
	o.Checksum.Set(&v)
}

// SetChecksumNil sets the value for Checksum to be an explicit nil
func (o *ImageShowResponse) SetChecksumNil() {
	o.Checksum.Set(nil)
}

// UnsetChecksum ensures that no value is present for Checksum, not even an explicit nil
func (o *ImageShowResponse) UnsetChecksum() {
	o.Checksum.Unset()
}

// GetContainerFormat returns the ContainerFormat field value
func (o *ImageShowResponse) GetContainerFormat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContainerFormat
}

// GetContainerFormatOk returns a tuple with the ContainerFormat field value
// and a boolean to check if the value has been set.
func (o *ImageShowResponse) GetContainerFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContainerFormat, true
}

// SetContainerFormat sets field value
func (o *ImageShowResponse) SetContainerFormat(v string) {
	o.ContainerFormat = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ImageShowResponse) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ImageShowResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ImageShowResponse) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetDiskFormat returns the DiskFormat field value
func (o *ImageShowResponse) GetDiskFormat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DiskFormat
}

// GetDiskFormatOk returns a tuple with the DiskFormat field value
// and a boolean to check if the value has been set.
func (o *ImageShowResponse) GetDiskFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiskFormat, true
}

// SetDiskFormat sets field value
func (o *ImageShowResponse) SetDiskFormat(v string) {
	o.DiskFormat = v
}

// GetFile returns the File field value
func (o *ImageShowResponse) GetFile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.File
}

// GetFileOk returns a tuple with the File field value
// and a boolean to check if the value has been set.
func (o *ImageShowResponse) GetFileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.File, true
}

// SetFile sets field value
func (o *ImageShowResponse) SetFile(v string) {
	o.File = v
}

// GetId returns the Id field value
func (o *ImageShowResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ImageShowResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ImageShowResponse) SetId(v string) {
	o.Id = v
}

// GetMinDisk returns the MinDisk field value
func (o *ImageShowResponse) GetMinDisk() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinDisk
}

// GetMinDiskOk returns a tuple with the MinDisk field value
// and a boolean to check if the value has been set.
func (o *ImageShowResponse) GetMinDiskOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinDisk, true
}

// SetMinDisk sets field value
func (o *ImageShowResponse) SetMinDisk(v int32) {
	o.MinDisk = v
}

// GetMinRam returns the MinRam field value
func (o *ImageShowResponse) GetMinRam() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinRam
}

// GetMinRamOk returns a tuple with the MinRam field value
// and a boolean to check if the value has been set.
func (o *ImageShowResponse) GetMinRamOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinRam, true
}

// SetMinRam sets field value
func (o *ImageShowResponse) SetMinRam(v int32) {
	o.MinRam = v
}

// GetName returns the Name field value
func (o *ImageShowResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ImageShowResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ImageShowResponse) SetName(v string) {
	o.Name = v
}

// GetOsDistro returns the OsDistro field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageShowResponse) GetOsDistro() string {
	if o == nil || IsNil(o.OsDistro.Get()) {
		var ret string
		return ret
	}
	return *o.OsDistro.Get()
}

// GetOsDistroOk returns a tuple with the OsDistro field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageShowResponse) GetOsDistroOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OsDistro.Get(), o.OsDistro.IsSet()
}

// HasOsDistro returns a boolean if a field has been set.
func (o *ImageShowResponse) HasOsDistro() bool {
	if o != nil && o.OsDistro.IsSet() {
		return true
	}

	return false
}

// SetOsDistro gets a reference to the given NullableString and assigns it to the OsDistro field.
func (o *ImageShowResponse) SetOsDistro(v string) {
	o.OsDistro.Set(&v)
}

// SetOsDistroNil sets the value for OsDistro to be an explicit nil
func (o *ImageShowResponse) SetOsDistroNil() {
	o.OsDistro.Set(nil)
}

// UnsetOsDistro ensures that no value is present for OsDistro, not even an explicit nil
func (o *ImageShowResponse) UnsetOsDistro() {
	o.OsDistro.Unset()
}

// GetOsHashAlgo returns the OsHashAlgo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageShowResponse) GetOsHashAlgo() string {
	if o == nil || IsNil(o.OsHashAlgo.Get()) {
		var ret string
		return ret
	}
	return *o.OsHashAlgo.Get()
}

// GetOsHashAlgoOk returns a tuple with the OsHashAlgo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageShowResponse) GetOsHashAlgoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OsHashAlgo.Get(), o.OsHashAlgo.IsSet()
}

// HasOsHashAlgo returns a boolean if a field has been set.
func (o *ImageShowResponse) HasOsHashAlgo() bool {
	if o != nil && o.OsHashAlgo.IsSet() {
		return true
	}

	return false
}

// SetOsHashAlgo gets a reference to the given NullableString and assigns it to the OsHashAlgo field.
func (o *ImageShowResponse) SetOsHashAlgo(v string) {
	o.OsHashAlgo.Set(&v)
}

// SetOsHashAlgoNil sets the value for OsHashAlgo to be an explicit nil
func (o *ImageShowResponse) SetOsHashAlgoNil() {
	o.OsHashAlgo.Set(nil)
}

// UnsetOsHashAlgo ensures that no value is present for OsHashAlgo, not even an explicit nil
func (o *ImageShowResponse) UnsetOsHashAlgo() {
	o.OsHashAlgo.Unset()
}

// GetOsHashValue returns the OsHashValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageShowResponse) GetOsHashValue() string {
	if o == nil || IsNil(o.OsHashValue.Get()) {
		var ret string
		return ret
	}
	return *o.OsHashValue.Get()
}

// GetOsHashValueOk returns a tuple with the OsHashValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageShowResponse) GetOsHashValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OsHashValue.Get(), o.OsHashValue.IsSet()
}

// HasOsHashValue returns a boolean if a field has been set.
func (o *ImageShowResponse) HasOsHashValue() bool {
	if o != nil && o.OsHashValue.IsSet() {
		return true
	}

	return false
}

// SetOsHashValue gets a reference to the given NullableString and assigns it to the OsHashValue field.
func (o *ImageShowResponse) SetOsHashValue(v string) {
	o.OsHashValue.Set(&v)
}

// SetOsHashValueNil sets the value for OsHashValue to be an explicit nil
func (o *ImageShowResponse) SetOsHashValueNil() {
	o.OsHashValue.Set(nil)
}

// UnsetOsHashValue ensures that no value is present for OsHashValue, not even an explicit nil
func (o *ImageShowResponse) UnsetOsHashValue() {
	o.OsHashValue.Unset()
}

// GetOsHidden returns the OsHidden field value
func (o *ImageShowResponse) GetOsHidden() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.OsHidden
}

// GetOsHiddenOk returns a tuple with the OsHidden field value
// and a boolean to check if the value has been set.
func (o *ImageShowResponse) GetOsHiddenOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsHidden, true
}

// SetOsHidden sets field value
func (o *ImageShowResponse) SetOsHidden(v bool) {
	o.OsHidden = v
}

// GetOwner returns the Owner field value
func (o *ImageShowResponse) GetOwner() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *ImageShowResponse) GetOwnerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *ImageShowResponse) SetOwner(v string) {
	o.Owner = v
}

// GetOwnerAccountName returns the OwnerAccountName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageShowResponse) GetOwnerAccountName() string {
	if o == nil || IsNil(o.OwnerAccountName.Get()) {
		var ret string
		return ret
	}
	return *o.OwnerAccountName.Get()
}

// GetOwnerAccountNameOk returns a tuple with the OwnerAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageShowResponse) GetOwnerAccountNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OwnerAccountName.Get(), o.OwnerAccountName.IsSet()
}

// HasOwnerAccountName returns a boolean if a field has been set.
func (o *ImageShowResponse) HasOwnerAccountName() bool {
	if o != nil && o.OwnerAccountName.IsSet() {
		return true
	}

	return false
}

// SetOwnerAccountName gets a reference to the given NullableString and assigns it to the OwnerAccountName field.
func (o *ImageShowResponse) SetOwnerAccountName(v string) {
	o.OwnerAccountName.Set(&v)
}

// SetOwnerAccountNameNil sets the value for OwnerAccountName to be an explicit nil
func (o *ImageShowResponse) SetOwnerAccountNameNil() {
	o.OwnerAccountName.Set(nil)
}

// UnsetOwnerAccountName ensures that no value is present for OwnerAccountName, not even an explicit nil
func (o *ImageShowResponse) UnsetOwnerAccountName() {
	o.OwnerAccountName.Unset()
}

// GetOwnerUserName returns the OwnerUserName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageShowResponse) GetOwnerUserName() string {
	if o == nil || IsNil(o.OwnerUserName.Get()) {
		var ret string
		return ret
	}
	return *o.OwnerUserName.Get()
}

// GetOwnerUserNameOk returns a tuple with the OwnerUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageShowResponse) GetOwnerUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OwnerUserName.Get(), o.OwnerUserName.IsSet()
}

// HasOwnerUserName returns a boolean if a field has been set.
func (o *ImageShowResponse) HasOwnerUserName() bool {
	if o != nil && o.OwnerUserName.IsSet() {
		return true
	}

	return false
}

// SetOwnerUserName gets a reference to the given NullableString and assigns it to the OwnerUserName field.
func (o *ImageShowResponse) SetOwnerUserName(v string) {
	o.OwnerUserName.Set(&v)
}

// SetOwnerUserNameNil sets the value for OwnerUserName to be an explicit nil
func (o *ImageShowResponse) SetOwnerUserNameNil() {
	o.OwnerUserName.Set(nil)
}

// UnsetOwnerUserName ensures that no value is present for OwnerUserName, not even an explicit nil
func (o *ImageShowResponse) UnsetOwnerUserName() {
	o.OwnerUserName.Unset()
}

// GetProtected returns the Protected field value
func (o *ImageShowResponse) GetProtected() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Protected
}

// GetProtectedOk returns a tuple with the Protected field value
// and a boolean to check if the value has been set.
func (o *ImageShowResponse) GetProtectedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protected, true
}

// SetProtected sets field value
func (o *ImageShowResponse) SetProtected(v bool) {
	o.Protected = v
}

// GetRootDeviceName returns the RootDeviceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageShowResponse) GetRootDeviceName() string {
	if o == nil || IsNil(o.RootDeviceName.Get()) {
		var ret string
		return ret
	}
	return *o.RootDeviceName.Get()
}

// GetRootDeviceNameOk returns a tuple with the RootDeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageShowResponse) GetRootDeviceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RootDeviceName.Get(), o.RootDeviceName.IsSet()
}

// HasRootDeviceName returns a boolean if a field has been set.
func (o *ImageShowResponse) HasRootDeviceName() bool {
	if o != nil && o.RootDeviceName.IsSet() {
		return true
	}

	return false
}

// SetRootDeviceName gets a reference to the given NullableString and assigns it to the RootDeviceName field.
func (o *ImageShowResponse) SetRootDeviceName(v string) {
	o.RootDeviceName.Set(&v)
}

// SetRootDeviceNameNil sets the value for RootDeviceName to be an explicit nil
func (o *ImageShowResponse) SetRootDeviceNameNil() {
	o.RootDeviceName.Set(nil)
}

// UnsetRootDeviceName ensures that no value is present for RootDeviceName, not even an explicit nil
func (o *ImageShowResponse) UnsetRootDeviceName() {
	o.RootDeviceName.Unset()
}

// GetScpImageType returns the ScpImageType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageShowResponse) GetScpImageType() string {
	if o == nil || IsNil(o.ScpImageType.Get()) {
		var ret string
		return ret
	}
	return *o.ScpImageType.Get()
}

// GetScpImageTypeOk returns a tuple with the ScpImageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageShowResponse) GetScpImageTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScpImageType.Get(), o.ScpImageType.IsSet()
}

// HasScpImageType returns a boolean if a field has been set.
func (o *ImageShowResponse) HasScpImageType() bool {
	if o != nil && o.ScpImageType.IsSet() {
		return true
	}

	return false
}

// SetScpImageType gets a reference to the given NullableString and assigns it to the ScpImageType field.
func (o *ImageShowResponse) SetScpImageType(v string) {
	o.ScpImageType.Set(&v)
}

// SetScpImageTypeNil sets the value for ScpImageType to be an explicit nil
func (o *ImageShowResponse) SetScpImageTypeNil() {
	o.ScpImageType.Set(nil)
}

// UnsetScpImageType ensures that no value is present for ScpImageType, not even an explicit nil
func (o *ImageShowResponse) UnsetScpImageType() {
	o.ScpImageType.Unset()
}

// GetScpK8sVersion returns the ScpK8sVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageShowResponse) GetScpK8sVersion() string {
	if o == nil || IsNil(o.ScpK8sVersion.Get()) {
		var ret string
		return ret
	}
	return *o.ScpK8sVersion.Get()
}

// GetScpK8sVersionOk returns a tuple with the ScpK8sVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageShowResponse) GetScpK8sVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScpK8sVersion.Get(), o.ScpK8sVersion.IsSet()
}

// HasScpK8sVersion returns a boolean if a field has been set.
func (o *ImageShowResponse) HasScpK8sVersion() bool {
	if o != nil && o.ScpK8sVersion.IsSet() {
		return true
	}

	return false
}

// SetScpK8sVersion gets a reference to the given NullableString and assigns it to the ScpK8sVersion field.
func (o *ImageShowResponse) SetScpK8sVersion(v string) {
	o.ScpK8sVersion.Set(&v)
}

// SetScpK8sVersionNil sets the value for ScpK8sVersion to be an explicit nil
func (o *ImageShowResponse) SetScpK8sVersionNil() {
	o.ScpK8sVersion.Set(nil)
}

// UnsetScpK8sVersion ensures that no value is present for ScpK8sVersion, not even an explicit nil
func (o *ImageShowResponse) UnsetScpK8sVersion() {
	o.ScpK8sVersion.Unset()
}

// GetScpOriginalImageType returns the ScpOriginalImageType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageShowResponse) GetScpOriginalImageType() string {
	if o == nil || IsNil(o.ScpOriginalImageType.Get()) {
		var ret string
		return ret
	}
	return *o.ScpOriginalImageType.Get()
}

// GetScpOriginalImageTypeOk returns a tuple with the ScpOriginalImageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageShowResponse) GetScpOriginalImageTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScpOriginalImageType.Get(), o.ScpOriginalImageType.IsSet()
}

// HasScpOriginalImageType returns a boolean if a field has been set.
func (o *ImageShowResponse) HasScpOriginalImageType() bool {
	if o != nil && o.ScpOriginalImageType.IsSet() {
		return true
	}

	return false
}

// SetScpOriginalImageType gets a reference to the given NullableString and assigns it to the ScpOriginalImageType field.
func (o *ImageShowResponse) SetScpOriginalImageType(v string) {
	o.ScpOriginalImageType.Set(&v)
}

// SetScpOriginalImageTypeNil sets the value for ScpOriginalImageType to be an explicit nil
func (o *ImageShowResponse) SetScpOriginalImageTypeNil() {
	o.ScpOriginalImageType.Set(nil)
}

// UnsetScpOriginalImageType ensures that no value is present for ScpOriginalImageType, not even an explicit nil
func (o *ImageShowResponse) UnsetScpOriginalImageType() {
	o.ScpOriginalImageType.Unset()
}

// GetScpOsBuildVersion returns the ScpOsBuildVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageShowResponse) GetScpOsBuildVersion() string {
	if o == nil || IsNil(o.ScpOsBuildVersion.Get()) {
		var ret string
		return ret
	}
	return *o.ScpOsBuildVersion.Get()
}

// GetScpOsBuildVersionOk returns a tuple with the ScpOsBuildVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageShowResponse) GetScpOsBuildVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScpOsBuildVersion.Get(), o.ScpOsBuildVersion.IsSet()
}

// HasScpOsBuildVersion returns a boolean if a field has been set.
func (o *ImageShowResponse) HasScpOsBuildVersion() bool {
	if o != nil && o.ScpOsBuildVersion.IsSet() {
		return true
	}

	return false
}

// SetScpOsBuildVersion gets a reference to the given NullableString and assigns it to the ScpOsBuildVersion field.
func (o *ImageShowResponse) SetScpOsBuildVersion(v string) {
	o.ScpOsBuildVersion.Set(&v)
}

// SetScpOsBuildVersionNil sets the value for ScpOsBuildVersion to be an explicit nil
func (o *ImageShowResponse) SetScpOsBuildVersionNil() {
	o.ScpOsBuildVersion.Set(nil)
}

// UnsetScpOsBuildVersion ensures that no value is present for ScpOsBuildVersion, not even an explicit nil
func (o *ImageShowResponse) UnsetScpOsBuildVersion() {
	o.ScpOsBuildVersion.Unset()
}

// GetScpOsVersion returns the ScpOsVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageShowResponse) GetScpOsVersion() string {
	if o == nil || IsNil(o.ScpOsVersion.Get()) {
		var ret string
		return ret
	}
	return *o.ScpOsVersion.Get()
}

// GetScpOsVersionOk returns a tuple with the ScpOsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageShowResponse) GetScpOsVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScpOsVersion.Get(), o.ScpOsVersion.IsSet()
}

// HasScpOsVersion returns a boolean if a field has been set.
func (o *ImageShowResponse) HasScpOsVersion() bool {
	if o != nil && o.ScpOsVersion.IsSet() {
		return true
	}

	return false
}

// SetScpOsVersion gets a reference to the given NullableString and assigns it to the ScpOsVersion field.
func (o *ImageShowResponse) SetScpOsVersion(v string) {
	o.ScpOsVersion.Set(&v)
}

// SetScpOsVersionNil sets the value for ScpOsVersion to be an explicit nil
func (o *ImageShowResponse) SetScpOsVersionNil() {
	o.ScpOsVersion.Set(nil)
}

// UnsetScpOsVersion ensures that no value is present for ScpOsVersion, not even an explicit nil
func (o *ImageShowResponse) UnsetScpOsVersion() {
	o.ScpOsVersion.Unset()
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageShowResponse) GetSize() int64 {
	if o == nil || IsNil(o.Size.Get()) {
		var ret int64
		return ret
	}
	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageShowResponse) GetSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// HasSize returns a boolean if a field has been set.
func (o *ImageShowResponse) HasSize() bool {
	if o != nil && o.Size.IsSet() {
		return true
	}

	return false
}

// SetSize gets a reference to the given NullableInt64 and assigns it to the Size field.
func (o *ImageShowResponse) SetSize(v int64) {
	o.Size.Set(&v)
}

// SetSizeNil sets the value for Size to be an explicit nil
func (o *ImageShowResponse) SetSizeNil() {
	o.Size.Set(nil)
}

// UnsetSize ensures that no value is present for Size, not even an explicit nil
func (o *ImageShowResponse) UnsetSize() {
	o.Size.Unset()
}

// GetStatus returns the Status field value
func (o *ImageShowResponse) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ImageShowResponse) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ImageShowResponse) SetStatus(v string) {
	o.Status = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ImageShowResponse) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ImageShowResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ImageShowResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageShowResponse) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageShowResponse) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *ImageShowResponse) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *ImageShowResponse) SetUrl(v string) {
	o.Url.Set(&v)
}

// SetUrlNil sets the value for Url to be an explicit nil
func (o *ImageShowResponse) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *ImageShowResponse) UnsetUrl() {
	o.Url.Unset()
}

// GetVirtualSize returns the VirtualSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageShowResponse) GetVirtualSize() int64 {
	if o == nil || IsNil(o.VirtualSize.Get()) {
		var ret int64
		return ret
	}
	return *o.VirtualSize.Get()
}

// GetVirtualSizeOk returns a tuple with the VirtualSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageShowResponse) GetVirtualSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.VirtualSize.Get(), o.VirtualSize.IsSet()
}

// HasVirtualSize returns a boolean if a field has been set.
func (o *ImageShowResponse) HasVirtualSize() bool {
	if o != nil && o.VirtualSize.IsSet() {
		return true
	}

	return false
}

// SetVirtualSize gets a reference to the given NullableInt64 and assigns it to the VirtualSize field.
func (o *ImageShowResponse) SetVirtualSize(v int64) {
	o.VirtualSize.Set(&v)
}

// SetVirtualSizeNil sets the value for VirtualSize to be an explicit nil
func (o *ImageShowResponse) SetVirtualSizeNil() {
	o.VirtualSize.Set(nil)
}

// UnsetVirtualSize ensures that no value is present for VirtualSize, not even an explicit nil
func (o *ImageShowResponse) UnsetVirtualSize() {
	o.VirtualSize.Unset()
}

// GetVisibility returns the Visibility field value
func (o *ImageShowResponse) GetVisibility() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value
// and a boolean to check if the value has been set.
func (o *ImageShowResponse) GetVisibilityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Visibility, true
}

// SetVisibility sets field value
func (o *ImageShowResponse) SetVisibility(v string) {
	o.Visibility = v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageShowResponse) GetVolumes() string {
	if o == nil || IsNil(o.Volumes.Get()) {
		var ret string
		return ret
	}
	return *o.Volumes.Get()
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageShowResponse) GetVolumesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Volumes.Get(), o.Volumes.IsSet()
}

// HasVolumes returns a boolean if a field has been set.
func (o *ImageShowResponse) HasVolumes() bool {
	if o != nil && o.Volumes.IsSet() {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given NullableString and assigns it to the Volumes field.
func (o *ImageShowResponse) SetVolumes(v string) {
	o.Volumes.Set(&v)
}

// SetVolumesNil sets the value for Volumes to be an explicit nil
func (o *ImageShowResponse) SetVolumesNil() {
	o.Volumes.Set(nil)
}

// UnsetVolumes ensures that no value is present for Volumes, not even an explicit nil
func (o *ImageShowResponse) UnsetVolumes() {
	o.Volumes.Unset()
}

func (o ImageShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Checksum.IsSet() {
		toSerialize["checksum"] = o.Checksum.Get()
	}
	toSerialize["container_format"] = o.ContainerFormat
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["disk_format"] = o.DiskFormat
	toSerialize["file"] = o.File
	toSerialize["id"] = o.Id
	toSerialize["min_disk"] = o.MinDisk
	toSerialize["min_ram"] = o.MinRam
	toSerialize["name"] = o.Name
	if o.OsDistro.IsSet() {
		toSerialize["os_distro"] = o.OsDistro.Get()
	}
	if o.OsHashAlgo.IsSet() {
		toSerialize["os_hash_algo"] = o.OsHashAlgo.Get()
	}
	if o.OsHashValue.IsSet() {
		toSerialize["os_hash_value"] = o.OsHashValue.Get()
	}
	toSerialize["os_hidden"] = o.OsHidden
	toSerialize["owner"] = o.Owner
	if o.OwnerAccountName.IsSet() {
		toSerialize["owner_account_name"] = o.OwnerAccountName.Get()
	}
	if o.OwnerUserName.IsSet() {
		toSerialize["owner_user_name"] = o.OwnerUserName.Get()
	}
	toSerialize["protected"] = o.Protected
	if o.RootDeviceName.IsSet() {
		toSerialize["root_device_name"] = o.RootDeviceName.Get()
	}
	if o.ScpImageType.IsSet() {
		toSerialize["scp_image_type"] = o.ScpImageType.Get()
	}
	if o.ScpK8sVersion.IsSet() {
		toSerialize["scp_k8s_version"] = o.ScpK8sVersion.Get()
	}
	if o.ScpOriginalImageType.IsSet() {
		toSerialize["scp_original_image_type"] = o.ScpOriginalImageType.Get()
	}
	if o.ScpOsBuildVersion.IsSet() {
		toSerialize["scp_os_build_version"] = o.ScpOsBuildVersion.Get()
	}
	if o.ScpOsVersion.IsSet() {
		toSerialize["scp_os_version"] = o.ScpOsVersion.Get()
	}
	if o.Size.IsSet() {
		toSerialize["size"] = o.Size.Get()
	}
	toSerialize["status"] = o.Status
	toSerialize["updated_at"] = o.UpdatedAt
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if o.VirtualSize.IsSet() {
		toSerialize["virtual_size"] = o.VirtualSize.Get()
	}
	toSerialize["visibility"] = o.Visibility
	if o.Volumes.IsSet() {
		toSerialize["volumes"] = o.Volumes.Get()
	}
	return toSerialize, nil
}

func (o *ImageShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"container_format",
		"created_at",
		"disk_format",
		"file",
		"id",
		"min_disk",
		"min_ram",
		"name",
		"os_hidden",
		"owner",
		"protected",
		"status",
		"updated_at",
		"visibility",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varImageShowResponse := _ImageShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varImageShowResponse)

	if err != nil {
		return err
	}

	*o = ImageShowResponse(varImageShowResponse)

	return err
}

type NullableImageShowResponse struct {
	value *ImageShowResponse
	isSet bool
}

func (v NullableImageShowResponse) Get() *ImageShowResponse {
	return v.value
}

func (v *NullableImageShowResponse) Set(val *ImageShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableImageShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableImageShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageShowResponse(val *ImageShowResponse) *NullableImageShowResponse {
	return &NullableImageShowResponse{value: val, isSet: true}
}

func (v NullableImageShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
