/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"encoding/json"
)

// checks if the ServerPasswordRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerPasswordRequest{}

// ServerPasswordRequest struct for ServerPasswordRequest
type ServerPasswordRequest struct {
	PrivateKey NullableString `json:"private_key,omitempty"`
}

// NewServerPasswordRequest instantiates a new ServerPasswordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerPasswordRequest() *ServerPasswordRequest {
	this := ServerPasswordRequest{}
	return &this
}

// NewServerPasswordRequestWithDefaults instantiates a new ServerPasswordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerPasswordRequestWithDefaults() *ServerPasswordRequest {
	this := ServerPasswordRequest{}
	return &this
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerPasswordRequest) GetPrivateKey() string {
	if o == nil || IsNil(o.PrivateKey.Get()) {
		var ret string
		return ret
	}
	return *o.PrivateKey.Get()
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerPasswordRequest) GetPrivateKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrivateKey.Get(), o.PrivateKey.IsSet()
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *ServerPasswordRequest) HasPrivateKey() bool {
	if o != nil && o.PrivateKey.IsSet() {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given NullableString and assigns it to the PrivateKey field.
func (o *ServerPasswordRequest) SetPrivateKey(v string) {
	o.PrivateKey.Set(&v)
}

// SetPrivateKeyNil sets the value for PrivateKey to be an explicit nil
func (o *ServerPasswordRequest) SetPrivateKeyNil() {
	o.PrivateKey.Set(nil)
}

// UnsetPrivateKey ensures that no value is present for PrivateKey, not even an explicit nil
func (o *ServerPasswordRequest) UnsetPrivateKey() {
	o.PrivateKey.Unset()
}

func (o ServerPasswordRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerPasswordRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.PrivateKey.IsSet() {
		toSerialize["private_key"] = o.PrivateKey.Get()
	}
	return toSerialize, nil
}

type NullableServerPasswordRequest struct {
	value *ServerPasswordRequest
	isSet bool
}

func (v NullableServerPasswordRequest) Get() *ServerPasswordRequest {
	return v.value
}

func (v *NullableServerPasswordRequest) Set(val *ServerPasswordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableServerPasswordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableServerPasswordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerPasswordRequest(val *ServerPasswordRequest) *NullableServerPasswordRequest {
	return &NullableServerPasswordRequest{value: val, isSet: true}
}

func (v NullableServerPasswordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerPasswordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
