/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ServerShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerShowResponse{}

// ServerShowResponse struct for ServerShowResponse
type ServerShowResponse struct {
	// Account ID
	AccountId          string                      `json:"account_id"`
	Addresses          []ServerShowResponseAddress `json:"addresses,omitempty"`
	AutoScalingGroupId NullableString              `json:"auto_scaling_group_id,omitempty"`
	// Created at
	CreatedAt time.Time `json:"created_at"`
	// Created by
	CreatedBy string `json:"created_by"`
	// Disk config
	DiskConfig string `json:"disk_config"`
	// Server ID
	Id                    string         `json:"id"`
	ImageId               NullableString `json:"image_id,omitempty"`
	IsMarketplace         NullableBool   `json:"is_marketplace,omitempty"`
	KeypairName           NullableString `json:"keypair_name,omitempty"`
	LaunchConfigurationId NullableString `json:"launch_configuration_id,omitempty"`
	// Locked
	Locked bool `json:"locked"`
	// Metadata
	Metadata map[string]interface{} `json:"metadata"`
	// Modified at
	ModifiedAt time.Time `json:"modified_at"`
	// Server name
	Name                 string                            `json:"name"`
	PlannedComputeOsType NullablePlannedComputeOsType      `json:"planned_compute_os_type,omitempty"`
	ProductCategory      NullableServerProductCategory     `json:"product_category,omitempty"`
	ProductOffering      NullableServerProductOffering     `json:"product_offering,omitempty"`
	SecurityGroups       []ServerShowResponseSecurityGroup `json:"security_groups,omitempty"`
	ServerGroupId        NullableString                    `json:"server_group_id,omitempty"`
	// Server type
	ServerType ServerShowResponseServerType `json:"server_type"`
	// Server state
	State string `json:"state"`
	// Volumes
	Volumes []ServerShowResponseVolume `json:"volumes"`
	VpcId   NullableString             `json:"vpc_id,omitempty"`
}

type _ServerShowResponse ServerShowResponse

// NewServerShowResponse instantiates a new ServerShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerShowResponse(accountId string, createdAt time.Time, createdBy string, diskConfig string, id string, locked bool, metadata map[string]interface{}, modifiedAt time.Time, name string, serverType ServerShowResponseServerType, state string, volumes []ServerShowResponseVolume) *ServerShowResponse {
	this := ServerShowResponse{}
	this.AccountId = accountId
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.DiskConfig = diskConfig
	this.Id = id
	this.Locked = locked
	this.Metadata = metadata
	this.ModifiedAt = modifiedAt
	this.Name = name
	this.ServerType = serverType
	this.State = state
	this.Volumes = volumes
	return &this
}

// NewServerShowResponseWithDefaults instantiates a new ServerShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerShowResponseWithDefaults() *ServerShowResponse {
	this := ServerShowResponse{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *ServerShowResponse) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *ServerShowResponse) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *ServerShowResponse) SetAccountId(v string) {
	o.AccountId = v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerShowResponse) GetAddresses() []ServerShowResponseAddress {
	if o == nil {
		var ret []ServerShowResponseAddress
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerShowResponse) GetAddressesOk() ([]ServerShowResponseAddress, bool) {
	if o == nil || IsNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *ServerShowResponse) HasAddresses() bool {
	if o != nil && !IsNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []ServerShowResponseAddress and assigns it to the Addresses field.
func (o *ServerShowResponse) SetAddresses(v []ServerShowResponseAddress) {
	o.Addresses = v
}

// GetAutoScalingGroupId returns the AutoScalingGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerShowResponse) GetAutoScalingGroupId() string {
	if o == nil || IsNil(o.AutoScalingGroupId.Get()) {
		var ret string
		return ret
	}
	return *o.AutoScalingGroupId.Get()
}

// GetAutoScalingGroupIdOk returns a tuple with the AutoScalingGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerShowResponse) GetAutoScalingGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutoScalingGroupId.Get(), o.AutoScalingGroupId.IsSet()
}

// HasAutoScalingGroupId returns a boolean if a field has been set.
func (o *ServerShowResponse) HasAutoScalingGroupId() bool {
	if o != nil && o.AutoScalingGroupId.IsSet() {
		return true
	}

	return false
}

// SetAutoScalingGroupId gets a reference to the given NullableString and assigns it to the AutoScalingGroupId field.
func (o *ServerShowResponse) SetAutoScalingGroupId(v string) {
	o.AutoScalingGroupId.Set(&v)
}

// SetAutoScalingGroupIdNil sets the value for AutoScalingGroupId to be an explicit nil
func (o *ServerShowResponse) SetAutoScalingGroupIdNil() {
	o.AutoScalingGroupId.Set(nil)
}

// UnsetAutoScalingGroupId ensures that no value is present for AutoScalingGroupId, not even an explicit nil
func (o *ServerShowResponse) UnsetAutoScalingGroupId() {
	o.AutoScalingGroupId.Unset()
}

// GetCreatedAt returns the CreatedAt field value
func (o *ServerShowResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ServerShowResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ServerShowResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *ServerShowResponse) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *ServerShowResponse) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *ServerShowResponse) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetDiskConfig returns the DiskConfig field value
func (o *ServerShowResponse) GetDiskConfig() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DiskConfig
}

// GetDiskConfigOk returns a tuple with the DiskConfig field value
// and a boolean to check if the value has been set.
func (o *ServerShowResponse) GetDiskConfigOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiskConfig, true
}

// SetDiskConfig sets field value
func (o *ServerShowResponse) SetDiskConfig(v string) {
	o.DiskConfig = v
}

// GetId returns the Id field value
func (o *ServerShowResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ServerShowResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ServerShowResponse) SetId(v string) {
	o.Id = v
}

// GetImageId returns the ImageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerShowResponse) GetImageId() string {
	if o == nil || IsNil(o.ImageId.Get()) {
		var ret string
		return ret
	}
	return *o.ImageId.Get()
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerShowResponse) GetImageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageId.Get(), o.ImageId.IsSet()
}

// HasImageId returns a boolean if a field has been set.
func (o *ServerShowResponse) HasImageId() bool {
	if o != nil && o.ImageId.IsSet() {
		return true
	}

	return false
}

// SetImageId gets a reference to the given NullableString and assigns it to the ImageId field.
func (o *ServerShowResponse) SetImageId(v string) {
	o.ImageId.Set(&v)
}

// SetImageIdNil sets the value for ImageId to be an explicit nil
func (o *ServerShowResponse) SetImageIdNil() {
	o.ImageId.Set(nil)
}

// UnsetImageId ensures that no value is present for ImageId, not even an explicit nil
func (o *ServerShowResponse) UnsetImageId() {
	o.ImageId.Unset()
}

// GetIsMarketplace returns the IsMarketplace field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerShowResponse) GetIsMarketplace() bool {
	if o == nil || IsNil(o.IsMarketplace.Get()) {
		var ret bool
		return ret
	}
	return *o.IsMarketplace.Get()
}

// GetIsMarketplaceOk returns a tuple with the IsMarketplace field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerShowResponse) GetIsMarketplaceOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsMarketplace.Get(), o.IsMarketplace.IsSet()
}

// HasIsMarketplace returns a boolean if a field has been set.
func (o *ServerShowResponse) HasIsMarketplace() bool {
	if o != nil && o.IsMarketplace.IsSet() {
		return true
	}

	return false
}

// SetIsMarketplace gets a reference to the given NullableBool and assigns it to the IsMarketplace field.
func (o *ServerShowResponse) SetIsMarketplace(v bool) {
	o.IsMarketplace.Set(&v)
}

// SetIsMarketplaceNil sets the value for IsMarketplace to be an explicit nil
func (o *ServerShowResponse) SetIsMarketplaceNil() {
	o.IsMarketplace.Set(nil)
}

// UnsetIsMarketplace ensures that no value is present for IsMarketplace, not even an explicit nil
func (o *ServerShowResponse) UnsetIsMarketplace() {
	o.IsMarketplace.Unset()
}

// GetKeypairName returns the KeypairName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerShowResponse) GetKeypairName() string {
	if o == nil || IsNil(o.KeypairName.Get()) {
		var ret string
		return ret
	}
	return *o.KeypairName.Get()
}

// GetKeypairNameOk returns a tuple with the KeypairName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerShowResponse) GetKeypairNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KeypairName.Get(), o.KeypairName.IsSet()
}

// HasKeypairName returns a boolean if a field has been set.
func (o *ServerShowResponse) HasKeypairName() bool {
	if o != nil && o.KeypairName.IsSet() {
		return true
	}

	return false
}

// SetKeypairName gets a reference to the given NullableString and assigns it to the KeypairName field.
func (o *ServerShowResponse) SetKeypairName(v string) {
	o.KeypairName.Set(&v)
}

// SetKeypairNameNil sets the value for KeypairName to be an explicit nil
func (o *ServerShowResponse) SetKeypairNameNil() {
	o.KeypairName.Set(nil)
}

// UnsetKeypairName ensures that no value is present for KeypairName, not even an explicit nil
func (o *ServerShowResponse) UnsetKeypairName() {
	o.KeypairName.Unset()
}

// GetLaunchConfigurationId returns the LaunchConfigurationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerShowResponse) GetLaunchConfigurationId() string {
	if o == nil || IsNil(o.LaunchConfigurationId.Get()) {
		var ret string
		return ret
	}
	return *o.LaunchConfigurationId.Get()
}

// GetLaunchConfigurationIdOk returns a tuple with the LaunchConfigurationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerShowResponse) GetLaunchConfigurationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LaunchConfigurationId.Get(), o.LaunchConfigurationId.IsSet()
}

// HasLaunchConfigurationId returns a boolean if a field has been set.
func (o *ServerShowResponse) HasLaunchConfigurationId() bool {
	if o != nil && o.LaunchConfigurationId.IsSet() {
		return true
	}

	return false
}

// SetLaunchConfigurationId gets a reference to the given NullableString and assigns it to the LaunchConfigurationId field.
func (o *ServerShowResponse) SetLaunchConfigurationId(v string) {
	o.LaunchConfigurationId.Set(&v)
}

// SetLaunchConfigurationIdNil sets the value for LaunchConfigurationId to be an explicit nil
func (o *ServerShowResponse) SetLaunchConfigurationIdNil() {
	o.LaunchConfigurationId.Set(nil)
}

// UnsetLaunchConfigurationId ensures that no value is present for LaunchConfigurationId, not even an explicit nil
func (o *ServerShowResponse) UnsetLaunchConfigurationId() {
	o.LaunchConfigurationId.Unset()
}

// GetLocked returns the Locked field value
func (o *ServerShowResponse) GetLocked() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Locked
}

// GetLockedOk returns a tuple with the Locked field value
// and a boolean to check if the value has been set.
func (o *ServerShowResponse) GetLockedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locked, true
}

// SetLocked sets field value
func (o *ServerShowResponse) SetLocked(v bool) {
	o.Locked = v
}

// GetMetadata returns the Metadata field value
func (o *ServerShowResponse) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *ServerShowResponse) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// SetMetadata sets field value
func (o *ServerShowResponse) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *ServerShowResponse) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *ServerShowResponse) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *ServerShowResponse) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetName returns the Name field value
func (o *ServerShowResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServerShowResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServerShowResponse) SetName(v string) {
	o.Name = v
}

// GetPlannedComputeOsType returns the PlannedComputeOsType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerShowResponse) GetPlannedComputeOsType() PlannedComputeOsType {
	if o == nil || IsNil(o.PlannedComputeOsType.Get()) {
		var ret PlannedComputeOsType
		return ret
	}
	return *o.PlannedComputeOsType.Get()
}

// GetPlannedComputeOsTypeOk returns a tuple with the PlannedComputeOsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerShowResponse) GetPlannedComputeOsTypeOk() (*PlannedComputeOsType, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlannedComputeOsType.Get(), o.PlannedComputeOsType.IsSet()
}

// HasPlannedComputeOsType returns a boolean if a field has been set.
func (o *ServerShowResponse) HasPlannedComputeOsType() bool {
	if o != nil && o.PlannedComputeOsType.IsSet() {
		return true
	}

	return false
}

// SetPlannedComputeOsType gets a reference to the given NullablePlannedComputeOsType and assigns it to the PlannedComputeOsType field.
func (o *ServerShowResponse) SetPlannedComputeOsType(v PlannedComputeOsType) {
	o.PlannedComputeOsType.Set(&v)
}

// SetPlannedComputeOsTypeNil sets the value for PlannedComputeOsType to be an explicit nil
func (o *ServerShowResponse) SetPlannedComputeOsTypeNil() {
	o.PlannedComputeOsType.Set(nil)
}

// UnsetPlannedComputeOsType ensures that no value is present for PlannedComputeOsType, not even an explicit nil
func (o *ServerShowResponse) UnsetPlannedComputeOsType() {
	o.PlannedComputeOsType.Unset()
}

// GetProductCategory returns the ProductCategory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerShowResponse) GetProductCategory() ServerProductCategory {
	if o == nil || IsNil(o.ProductCategory.Get()) {
		var ret ServerProductCategory
		return ret
	}
	return *o.ProductCategory.Get()
}

// GetProductCategoryOk returns a tuple with the ProductCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerShowResponse) GetProductCategoryOk() (*ServerProductCategory, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductCategory.Get(), o.ProductCategory.IsSet()
}

// HasProductCategory returns a boolean if a field has been set.
func (o *ServerShowResponse) HasProductCategory() bool {
	if o != nil && o.ProductCategory.IsSet() {
		return true
	}

	return false
}

// SetProductCategory gets a reference to the given NullableServerProductCategory and assigns it to the ProductCategory field.
func (o *ServerShowResponse) SetProductCategory(v ServerProductCategory) {
	o.ProductCategory.Set(&v)
}

// SetProductCategoryNil sets the value for ProductCategory to be an explicit nil
func (o *ServerShowResponse) SetProductCategoryNil() {
	o.ProductCategory.Set(nil)
}

// UnsetProductCategory ensures that no value is present for ProductCategory, not even an explicit nil
func (o *ServerShowResponse) UnsetProductCategory() {
	o.ProductCategory.Unset()
}

// GetProductOffering returns the ProductOffering field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerShowResponse) GetProductOffering() ServerProductOffering {
	if o == nil || IsNil(o.ProductOffering.Get()) {
		var ret ServerProductOffering
		return ret
	}
	return *o.ProductOffering.Get()
}

// GetProductOfferingOk returns a tuple with the ProductOffering field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerShowResponse) GetProductOfferingOk() (*ServerProductOffering, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductOffering.Get(), o.ProductOffering.IsSet()
}

// HasProductOffering returns a boolean if a field has been set.
func (o *ServerShowResponse) HasProductOffering() bool {
	if o != nil && o.ProductOffering.IsSet() {
		return true
	}

	return false
}

// SetProductOffering gets a reference to the given NullableServerProductOffering and assigns it to the ProductOffering field.
func (o *ServerShowResponse) SetProductOffering(v ServerProductOffering) {
	o.ProductOffering.Set(&v)
}

// SetProductOfferingNil sets the value for ProductOffering to be an explicit nil
func (o *ServerShowResponse) SetProductOfferingNil() {
	o.ProductOffering.Set(nil)
}

// UnsetProductOffering ensures that no value is present for ProductOffering, not even an explicit nil
func (o *ServerShowResponse) UnsetProductOffering() {
	o.ProductOffering.Unset()
}

// GetSecurityGroups returns the SecurityGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerShowResponse) GetSecurityGroups() []ServerShowResponseSecurityGroup {
	if o == nil {
		var ret []ServerShowResponseSecurityGroup
		return ret
	}
	return o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerShowResponse) GetSecurityGroupsOk() ([]ServerShowResponseSecurityGroup, bool) {
	if o == nil || IsNil(o.SecurityGroups) {
		return nil, false
	}
	return o.SecurityGroups, true
}

// HasSecurityGroups returns a boolean if a field has been set.
func (o *ServerShowResponse) HasSecurityGroups() bool {
	if o != nil && !IsNil(o.SecurityGroups) {
		return true
	}

	return false
}

// SetSecurityGroups gets a reference to the given []ServerShowResponseSecurityGroup and assigns it to the SecurityGroups field.
func (o *ServerShowResponse) SetSecurityGroups(v []ServerShowResponseSecurityGroup) {
	o.SecurityGroups = v
}

// GetServerGroupId returns the ServerGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerShowResponse) GetServerGroupId() string {
	if o == nil || IsNil(o.ServerGroupId.Get()) {
		var ret string
		return ret
	}
	return *o.ServerGroupId.Get()
}

// GetServerGroupIdOk returns a tuple with the ServerGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerShowResponse) GetServerGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerGroupId.Get(), o.ServerGroupId.IsSet()
}

// HasServerGroupId returns a boolean if a field has been set.
func (o *ServerShowResponse) HasServerGroupId() bool {
	if o != nil && o.ServerGroupId.IsSet() {
		return true
	}

	return false
}

// SetServerGroupId gets a reference to the given NullableString and assigns it to the ServerGroupId field.
func (o *ServerShowResponse) SetServerGroupId(v string) {
	o.ServerGroupId.Set(&v)
}

// SetServerGroupIdNil sets the value for ServerGroupId to be an explicit nil
func (o *ServerShowResponse) SetServerGroupIdNil() {
	o.ServerGroupId.Set(nil)
}

// UnsetServerGroupId ensures that no value is present for ServerGroupId, not even an explicit nil
func (o *ServerShowResponse) UnsetServerGroupId() {
	o.ServerGroupId.Unset()
}

// GetServerType returns the ServerType field value
func (o *ServerShowResponse) GetServerType() ServerShowResponseServerType {
	if o == nil {
		var ret ServerShowResponseServerType
		return ret
	}

	return o.ServerType
}

// GetServerTypeOk returns a tuple with the ServerType field value
// and a boolean to check if the value has been set.
func (o *ServerShowResponse) GetServerTypeOk() (*ServerShowResponseServerType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerType, true
}

// SetServerType sets field value
func (o *ServerShowResponse) SetServerType(v ServerShowResponseServerType) {
	o.ServerType = v
}

// GetState returns the State field value
func (o *ServerShowResponse) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *ServerShowResponse) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *ServerShowResponse) SetState(v string) {
	o.State = v
}

// GetVolumes returns the Volumes field value
func (o *ServerShowResponse) GetVolumes() []ServerShowResponseVolume {
	if o == nil {
		var ret []ServerShowResponseVolume
		return ret
	}

	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value
// and a boolean to check if the value has been set.
func (o *ServerShowResponse) GetVolumesOk() ([]ServerShowResponseVolume, bool) {
	if o == nil {
		return nil, false
	}
	return o.Volumes, true
}

// SetVolumes sets field value
func (o *ServerShowResponse) SetVolumes(v []ServerShowResponseVolume) {
	o.Volumes = v
}

// GetVpcId returns the VpcId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerShowResponse) GetVpcId() string {
	if o == nil || IsNil(o.VpcId.Get()) {
		var ret string
		return ret
	}
	return *o.VpcId.Get()
}

// GetVpcIdOk returns a tuple with the VpcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerShowResponse) GetVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VpcId.Get(), o.VpcId.IsSet()
}

// HasVpcId returns a boolean if a field has been set.
func (o *ServerShowResponse) HasVpcId() bool {
	if o != nil && o.VpcId.IsSet() {
		return true
	}

	return false
}

// SetVpcId gets a reference to the given NullableString and assigns it to the VpcId field.
func (o *ServerShowResponse) SetVpcId(v string) {
	o.VpcId.Set(&v)
}

// SetVpcIdNil sets the value for VpcId to be an explicit nil
func (o *ServerShowResponse) SetVpcIdNil() {
	o.VpcId.Set(nil)
}

// UnsetVpcId ensures that no value is present for VpcId, not even an explicit nil
func (o *ServerShowResponse) UnsetVpcId() {
	o.VpcId.Unset()
}

func (o ServerShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	if o.Addresses != nil {
		toSerialize["addresses"] = o.Addresses
	}
	if o.AutoScalingGroupId.IsSet() {
		toSerialize["auto_scaling_group_id"] = o.AutoScalingGroupId.Get()
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	toSerialize["disk_config"] = o.DiskConfig
	toSerialize["id"] = o.Id
	if o.ImageId.IsSet() {
		toSerialize["image_id"] = o.ImageId.Get()
	}
	if o.IsMarketplace.IsSet() {
		toSerialize["is_marketplace"] = o.IsMarketplace.Get()
	}
	if o.KeypairName.IsSet() {
		toSerialize["keypair_name"] = o.KeypairName.Get()
	}
	if o.LaunchConfigurationId.IsSet() {
		toSerialize["launch_configuration_id"] = o.LaunchConfigurationId.Get()
	}
	toSerialize["locked"] = o.Locked
	toSerialize["metadata"] = o.Metadata
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["name"] = o.Name
	if o.PlannedComputeOsType.IsSet() {
		toSerialize["planned_compute_os_type"] = o.PlannedComputeOsType.Get()
	}
	if o.ProductCategory.IsSet() {
		toSerialize["product_category"] = o.ProductCategory.Get()
	}
	if o.ProductOffering.IsSet() {
		toSerialize["product_offering"] = o.ProductOffering.Get()
	}
	if o.SecurityGroups != nil {
		toSerialize["security_groups"] = o.SecurityGroups
	}
	if o.ServerGroupId.IsSet() {
		toSerialize["server_group_id"] = o.ServerGroupId.Get()
	}
	toSerialize["server_type"] = o.ServerType
	toSerialize["state"] = o.State
	toSerialize["volumes"] = o.Volumes
	if o.VpcId.IsSet() {
		toSerialize["vpc_id"] = o.VpcId.Get()
	}
	return toSerialize, nil
}

func (o *ServerShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"created_at",
		"created_by",
		"disk_config",
		"id",
		"locked",
		"metadata",
		"modified_at",
		"name",
		"server_type",
		"state",
		"volumes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServerShowResponse := _ServerShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServerShowResponse)

	if err != nil {
		return err
	}

	*o = ServerShowResponse(varServerShowResponse)

	return err
}

type NullableServerShowResponse struct {
	value *ServerShowResponse
	isSet bool
}

func (v NullableServerShowResponse) Get() *ServerShowResponse {
	return v.value
}

func (v *NullableServerShowResponse) Set(val *ServerShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableServerShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableServerShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerShowResponse(val *ServerShowResponse) *NullableServerShowResponse {
	return &NullableServerShowResponse{value: val, isSet: true}
}

func (v NullableServerShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
