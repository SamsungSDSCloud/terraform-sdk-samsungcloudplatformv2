/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AutoScalingGroupPolicyListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoScalingGroupPolicyListResponse{}

// AutoScalingGroupPolicyListResponse struct for AutoScalingGroupPolicyListResponse
type AutoScalingGroupPolicyListResponse struct {
	// Count
	Count    int32                                `json:"count"`
	Policies []AutoScalingGroupPolicyShowResponse `json:"policies"`
}

type _AutoScalingGroupPolicyListResponse AutoScalingGroupPolicyListResponse

// NewAutoScalingGroupPolicyListResponse instantiates a new AutoScalingGroupPolicyListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoScalingGroupPolicyListResponse(count int32, policies []AutoScalingGroupPolicyShowResponse) *AutoScalingGroupPolicyListResponse {
	this := AutoScalingGroupPolicyListResponse{}
	this.Count = count
	this.Policies = policies
	return &this
}

// NewAutoScalingGroupPolicyListResponseWithDefaults instantiates a new AutoScalingGroupPolicyListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoScalingGroupPolicyListResponseWithDefaults() *AutoScalingGroupPolicyListResponse {
	this := AutoScalingGroupPolicyListResponse{}
	return &this
}

// GetCount returns the Count field value
func (o *AutoScalingGroupPolicyListResponse) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroupPolicyListResponse) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *AutoScalingGroupPolicyListResponse) SetCount(v int32) {
	o.Count = v
}

// GetPolicies returns the Policies field value
func (o *AutoScalingGroupPolicyListResponse) GetPolicies() []AutoScalingGroupPolicyShowResponse {
	if o == nil {
		var ret []AutoScalingGroupPolicyShowResponse
		return ret
	}

	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroupPolicyListResponse) GetPoliciesOk() ([]AutoScalingGroupPolicyShowResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Policies, true
}

// SetPolicies sets field value
func (o *AutoScalingGroupPolicyListResponse) SetPolicies(v []AutoScalingGroupPolicyShowResponse) {
	o.Policies = v
}

func (o AutoScalingGroupPolicyListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoScalingGroupPolicyListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["count"] = o.Count
	toSerialize["policies"] = o.Policies
	return toSerialize, nil
}

func (o *AutoScalingGroupPolicyListResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"count",
		"policies",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutoScalingGroupPolicyListResponse := _AutoScalingGroupPolicyListResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAutoScalingGroupPolicyListResponse)

	if err != nil {
		return err
	}

	*o = AutoScalingGroupPolicyListResponse(varAutoScalingGroupPolicyListResponse)

	return err
}

type NullableAutoScalingGroupPolicyListResponse struct {
	value *AutoScalingGroupPolicyListResponse
	isSet bool
}

func (v NullableAutoScalingGroupPolicyListResponse) Get() *AutoScalingGroupPolicyListResponse {
	return v.value
}

func (v *NullableAutoScalingGroupPolicyListResponse) Set(val *AutoScalingGroupPolicyListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoScalingGroupPolicyListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoScalingGroupPolicyListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoScalingGroupPolicyListResponse(val *AutoScalingGroupPolicyListResponse) *NullableAutoScalingGroupPolicyListResponse {
	return &NullableAutoScalingGroupPolicyListResponse{value: val, isSet: true}
}

func (v NullableAutoScalingGroupPolicyListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoScalingGroupPolicyListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
