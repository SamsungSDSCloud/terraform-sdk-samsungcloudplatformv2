/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ServerPrivateStaticNatCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerPrivateStaticNatCreateRequest{}

// ServerPrivateStaticNatCreateRequest struct for ServerPrivateStaticNatCreateRequest
type ServerPrivateStaticNatCreateRequest struct {
	// Private NAT ID
	PrivateNatId string `json:"private_nat_id"`
	// Private NAT IP ID
	PrivateNatIpId string `json:"private_nat_ip_id"`
}

type _ServerPrivateStaticNatCreateRequest ServerPrivateStaticNatCreateRequest

// NewServerPrivateStaticNatCreateRequest instantiates a new ServerPrivateStaticNatCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerPrivateStaticNatCreateRequest(privateNatId string, privateNatIpId string) *ServerPrivateStaticNatCreateRequest {
	this := ServerPrivateStaticNatCreateRequest{}
	this.PrivateNatId = privateNatId
	this.PrivateNatIpId = privateNatIpId
	return &this
}

// NewServerPrivateStaticNatCreateRequestWithDefaults instantiates a new ServerPrivateStaticNatCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerPrivateStaticNatCreateRequestWithDefaults() *ServerPrivateStaticNatCreateRequest {
	this := ServerPrivateStaticNatCreateRequest{}
	return &this
}

// GetPrivateNatId returns the PrivateNatId field value
func (o *ServerPrivateStaticNatCreateRequest) GetPrivateNatId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivateNatId
}

// GetPrivateNatIdOk returns a tuple with the PrivateNatId field value
// and a boolean to check if the value has been set.
func (o *ServerPrivateStaticNatCreateRequest) GetPrivateNatIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateNatId, true
}

// SetPrivateNatId sets field value
func (o *ServerPrivateStaticNatCreateRequest) SetPrivateNatId(v string) {
	o.PrivateNatId = v
}

// GetPrivateNatIpId returns the PrivateNatIpId field value
func (o *ServerPrivateStaticNatCreateRequest) GetPrivateNatIpId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivateNatIpId
}

// GetPrivateNatIpIdOk returns a tuple with the PrivateNatIpId field value
// and a boolean to check if the value has been set.
func (o *ServerPrivateStaticNatCreateRequest) GetPrivateNatIpIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateNatIpId, true
}

// SetPrivateNatIpId sets field value
func (o *ServerPrivateStaticNatCreateRequest) SetPrivateNatIpId(v string) {
	o.PrivateNatIpId = v
}

func (o ServerPrivateStaticNatCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerPrivateStaticNatCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["private_nat_id"] = o.PrivateNatId
	toSerialize["private_nat_ip_id"] = o.PrivateNatIpId
	return toSerialize, nil
}

func (o *ServerPrivateStaticNatCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"private_nat_id",
		"private_nat_ip_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServerPrivateStaticNatCreateRequest := _ServerPrivateStaticNatCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServerPrivateStaticNatCreateRequest)

	if err != nil {
		return err
	}

	*o = ServerPrivateStaticNatCreateRequest(varServerPrivateStaticNatCreateRequest)

	return err
}

type NullableServerPrivateStaticNatCreateRequest struct {
	value *ServerPrivateStaticNatCreateRequest
	isSet bool
}

func (v NullableServerPrivateStaticNatCreateRequest) Get() *ServerPrivateStaticNatCreateRequest {
	return v.value
}

func (v *NullableServerPrivateStaticNatCreateRequest) Set(val *ServerPrivateStaticNatCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableServerPrivateStaticNatCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableServerPrivateStaticNatCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerPrivateStaticNatCreateRequest(val *ServerPrivateStaticNatCreateRequest) *NullableServerPrivateStaticNatCreateRequest {
	return &NullableServerPrivateStaticNatCreateRequest{value: val, isSet: true}
}

func (v NullableServerPrivateStaticNatCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerPrivateStaticNatCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
