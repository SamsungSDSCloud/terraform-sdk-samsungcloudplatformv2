/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the AutoScalingGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoScalingGroup{}

// AutoScalingGroup struct for AutoScalingGroup
type AutoScalingGroup struct {
	// Account ID
	AccountId string `json:"account_id"`
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy string `json:"created_by"`
	// Desired server count
	DesiredServerCount int32 `json:"desired_server_count"`
	// Desired server count editable
	DesiredServerCountEditable bool `json:"desired_server_count_editable"`
	// Drain enabled
	DrainEnabled bool          `json:"drain_enabled"`
	DrainTimeout NullableInt32 `json:"drain_timeout,omitempty"`
	// ID
	Id string `json:"id"`
	// Launch Configuration ID
	LaunchConfigurationId string `json:"launch_configuration_id"`
	// Launch Configuration name
	LaunchConfigurationName string                          `json:"launch_configuration_name"`
	LbServerGroups          []AutoScalingGroupLbServerGroup `json:"lb_server_groups,omitempty"`
	// Max server count
	MaxServerCount int32 `json:"max_server_count"`
	// Min server count
	MinServerCount int32 `json:"min_server_count"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy string `json:"modified_by"`
	// Auto-Scaling Group name
	Name             string   `json:"name"`
	SecurityGroupIds []string `json:"security_group_ids,omitempty"`
	// Server name prefix
	ServerNamePrefix string `json:"server_name_prefix"`
	// Auto-Scaling Group state
	State string `json:"state"`
	// Subnet ID list
	SubnetIds []string `json:"subnet_ids,omitempty"`
	// VPC ID
	VpcId string `json:"vpc_id"`
}

type _AutoScalingGroup AutoScalingGroup

// NewAutoScalingGroup instantiates a new AutoScalingGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoScalingGroup(accountId string, createdAt time.Time, createdBy string, desiredServerCount int32, desiredServerCountEditable bool, drainEnabled bool, id string, launchConfigurationId string, launchConfigurationName string, maxServerCount int32, minServerCount int32, modifiedAt time.Time, modifiedBy string, name string, serverNamePrefix string, state string, vpcId string) *AutoScalingGroup {
	this := AutoScalingGroup{}
	this.AccountId = accountId
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.DesiredServerCount = desiredServerCount
	this.DesiredServerCountEditable = desiredServerCountEditable
	this.DrainEnabled = drainEnabled
	this.Id = id
	this.LaunchConfigurationId = launchConfigurationId
	this.LaunchConfigurationName = launchConfigurationName
	this.MaxServerCount = maxServerCount
	this.MinServerCount = minServerCount
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.Name = name
	this.ServerNamePrefix = serverNamePrefix
	this.State = state
	this.VpcId = vpcId
	return &this
}

// NewAutoScalingGroupWithDefaults instantiates a new AutoScalingGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoScalingGroupWithDefaults() *AutoScalingGroup {
	this := AutoScalingGroup{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *AutoScalingGroup) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroup) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *AutoScalingGroup) SetAccountId(v string) {
	o.AccountId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *AutoScalingGroup) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroup) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AutoScalingGroup) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *AutoScalingGroup) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroup) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *AutoScalingGroup) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetDesiredServerCount returns the DesiredServerCount field value
func (o *AutoScalingGroup) GetDesiredServerCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DesiredServerCount
}

// GetDesiredServerCountOk returns a tuple with the DesiredServerCount field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroup) GetDesiredServerCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DesiredServerCount, true
}

// SetDesiredServerCount sets field value
func (o *AutoScalingGroup) SetDesiredServerCount(v int32) {
	o.DesiredServerCount = v
}

// GetDesiredServerCountEditable returns the DesiredServerCountEditable field value
func (o *AutoScalingGroup) GetDesiredServerCountEditable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DesiredServerCountEditable
}

// GetDesiredServerCountEditableOk returns a tuple with the DesiredServerCountEditable field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroup) GetDesiredServerCountEditableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DesiredServerCountEditable, true
}

// SetDesiredServerCountEditable sets field value
func (o *AutoScalingGroup) SetDesiredServerCountEditable(v bool) {
	o.DesiredServerCountEditable = v
}

// GetDrainEnabled returns the DrainEnabled field value
func (o *AutoScalingGroup) GetDrainEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DrainEnabled
}

// GetDrainEnabledOk returns a tuple with the DrainEnabled field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroup) GetDrainEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DrainEnabled, true
}

// SetDrainEnabled sets field value
func (o *AutoScalingGroup) SetDrainEnabled(v bool) {
	o.DrainEnabled = v
}

// GetDrainTimeout returns the DrainTimeout field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroup) GetDrainTimeout() int32 {
	if o == nil || IsNil(o.DrainTimeout.Get()) {
		var ret int32
		return ret
	}
	return *o.DrainTimeout.Get()
}

// GetDrainTimeoutOk returns a tuple with the DrainTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroup) GetDrainTimeoutOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DrainTimeout.Get(), o.DrainTimeout.IsSet()
}

// HasDrainTimeout returns a boolean if a field has been set.
func (o *AutoScalingGroup) HasDrainTimeout() bool {
	if o != nil && o.DrainTimeout.IsSet() {
		return true
	}

	return false
}

// SetDrainTimeout gets a reference to the given NullableInt32 and assigns it to the DrainTimeout field.
func (o *AutoScalingGroup) SetDrainTimeout(v int32) {
	o.DrainTimeout.Set(&v)
}

// SetDrainTimeoutNil sets the value for DrainTimeout to be an explicit nil
func (o *AutoScalingGroup) SetDrainTimeoutNil() {
	o.DrainTimeout.Set(nil)
}

// UnsetDrainTimeout ensures that no value is present for DrainTimeout, not even an explicit nil
func (o *AutoScalingGroup) UnsetDrainTimeout() {
	o.DrainTimeout.Unset()
}

// GetId returns the Id field value
func (o *AutoScalingGroup) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroup) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AutoScalingGroup) SetId(v string) {
	o.Id = v
}

// GetLaunchConfigurationId returns the LaunchConfigurationId field value
func (o *AutoScalingGroup) GetLaunchConfigurationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LaunchConfigurationId
}

// GetLaunchConfigurationIdOk returns a tuple with the LaunchConfigurationId field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroup) GetLaunchConfigurationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LaunchConfigurationId, true
}

// SetLaunchConfigurationId sets field value
func (o *AutoScalingGroup) SetLaunchConfigurationId(v string) {
	o.LaunchConfigurationId = v
}

// GetLaunchConfigurationName returns the LaunchConfigurationName field value
func (o *AutoScalingGroup) GetLaunchConfigurationName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LaunchConfigurationName
}

// GetLaunchConfigurationNameOk returns a tuple with the LaunchConfigurationName field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroup) GetLaunchConfigurationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LaunchConfigurationName, true
}

// SetLaunchConfigurationName sets field value
func (o *AutoScalingGroup) SetLaunchConfigurationName(v string) {
	o.LaunchConfigurationName = v
}

// GetLbServerGroups returns the LbServerGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroup) GetLbServerGroups() []AutoScalingGroupLbServerGroup {
	if o == nil {
		var ret []AutoScalingGroupLbServerGroup
		return ret
	}
	return o.LbServerGroups
}

// GetLbServerGroupsOk returns a tuple with the LbServerGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroup) GetLbServerGroupsOk() ([]AutoScalingGroupLbServerGroup, bool) {
	if o == nil || IsNil(o.LbServerGroups) {
		return nil, false
	}
	return o.LbServerGroups, true
}

// HasLbServerGroups returns a boolean if a field has been set.
func (o *AutoScalingGroup) HasLbServerGroups() bool {
	if o != nil && !IsNil(o.LbServerGroups) {
		return true
	}

	return false
}

// SetLbServerGroups gets a reference to the given []AutoScalingGroupLbServerGroup and assigns it to the LbServerGroups field.
func (o *AutoScalingGroup) SetLbServerGroups(v []AutoScalingGroupLbServerGroup) {
	o.LbServerGroups = v
}

// GetMaxServerCount returns the MaxServerCount field value
func (o *AutoScalingGroup) GetMaxServerCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxServerCount
}

// GetMaxServerCountOk returns a tuple with the MaxServerCount field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroup) GetMaxServerCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxServerCount, true
}

// SetMaxServerCount sets field value
func (o *AutoScalingGroup) SetMaxServerCount(v int32) {
	o.MaxServerCount = v
}

// GetMinServerCount returns the MinServerCount field value
func (o *AutoScalingGroup) GetMinServerCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinServerCount
}

// GetMinServerCountOk returns a tuple with the MinServerCount field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroup) GetMinServerCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinServerCount, true
}

// SetMinServerCount sets field value
func (o *AutoScalingGroup) SetMinServerCount(v int32) {
	o.MinServerCount = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *AutoScalingGroup) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroup) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *AutoScalingGroup) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *AutoScalingGroup) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroup) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *AutoScalingGroup) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetName returns the Name field value
func (o *AutoScalingGroup) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroup) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AutoScalingGroup) SetName(v string) {
	o.Name = v
}

// GetSecurityGroupIds returns the SecurityGroupIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoScalingGroup) GetSecurityGroupIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.SecurityGroupIds
}

// GetSecurityGroupIdsOk returns a tuple with the SecurityGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoScalingGroup) GetSecurityGroupIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SecurityGroupIds) {
		return nil, false
	}
	return o.SecurityGroupIds, true
}

// HasSecurityGroupIds returns a boolean if a field has been set.
func (o *AutoScalingGroup) HasSecurityGroupIds() bool {
	if o != nil && !IsNil(o.SecurityGroupIds) {
		return true
	}

	return false
}

// SetSecurityGroupIds gets a reference to the given []string and assigns it to the SecurityGroupIds field.
func (o *AutoScalingGroup) SetSecurityGroupIds(v []string) {
	o.SecurityGroupIds = v
}

// GetServerNamePrefix returns the ServerNamePrefix field value
func (o *AutoScalingGroup) GetServerNamePrefix() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerNamePrefix
}

// GetServerNamePrefixOk returns a tuple with the ServerNamePrefix field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroup) GetServerNamePrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerNamePrefix, true
}

// SetServerNamePrefix sets field value
func (o *AutoScalingGroup) SetServerNamePrefix(v string) {
	o.ServerNamePrefix = v
}

// GetState returns the State field value
func (o *AutoScalingGroup) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroup) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *AutoScalingGroup) SetState(v string) {
	o.State = v
}

// GetSubnetIds returns the SubnetIds field value if set, zero value otherwise.
func (o *AutoScalingGroup) GetSubnetIds() []string {
	if o == nil || IsNil(o.SubnetIds) {
		var ret []string
		return ret
	}
	return o.SubnetIds
}

// GetSubnetIdsOk returns a tuple with the SubnetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoScalingGroup) GetSubnetIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SubnetIds) {
		return nil, false
	}
	return o.SubnetIds, true
}

// HasSubnetIds returns a boolean if a field has been set.
func (o *AutoScalingGroup) HasSubnetIds() bool {
	if o != nil && !IsNil(o.SubnetIds) {
		return true
	}

	return false
}

// SetSubnetIds gets a reference to the given []string and assigns it to the SubnetIds field.
func (o *AutoScalingGroup) SetSubnetIds(v []string) {
	o.SubnetIds = v
}

// GetVpcId returns the VpcId field value
func (o *AutoScalingGroup) GetVpcId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VpcId
}

// GetVpcIdOk returns a tuple with the VpcId field value
// and a boolean to check if the value has been set.
func (o *AutoScalingGroup) GetVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VpcId, true
}

// SetVpcId sets field value
func (o *AutoScalingGroup) SetVpcId(v string) {
	o.VpcId = v
}

func (o AutoScalingGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoScalingGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	toSerialize["desired_server_count"] = o.DesiredServerCount
	toSerialize["desired_server_count_editable"] = o.DesiredServerCountEditable
	toSerialize["drain_enabled"] = o.DrainEnabled
	if o.DrainTimeout.IsSet() {
		toSerialize["drain_timeout"] = o.DrainTimeout.Get()
	}
	toSerialize["id"] = o.Id
	toSerialize["launch_configuration_id"] = o.LaunchConfigurationId
	toSerialize["launch_configuration_name"] = o.LaunchConfigurationName
	if o.LbServerGroups != nil {
		toSerialize["lb_server_groups"] = o.LbServerGroups
	}
	toSerialize["max_server_count"] = o.MaxServerCount
	toSerialize["min_server_count"] = o.MinServerCount
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	toSerialize["name"] = o.Name
	if o.SecurityGroupIds != nil {
		toSerialize["security_group_ids"] = o.SecurityGroupIds
	}
	toSerialize["server_name_prefix"] = o.ServerNamePrefix
	toSerialize["state"] = o.State
	if !IsNil(o.SubnetIds) {
		toSerialize["subnet_ids"] = o.SubnetIds
	}
	toSerialize["vpc_id"] = o.VpcId
	return toSerialize, nil
}

func (o *AutoScalingGroup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"created_at",
		"created_by",
		"desired_server_count",
		"desired_server_count_editable",
		"drain_enabled",
		"id",
		"launch_configuration_id",
		"launch_configuration_name",
		"max_server_count",
		"min_server_count",
		"modified_at",
		"modified_by",
		"name",
		"server_name_prefix",
		"state",
		"vpc_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutoScalingGroup := _AutoScalingGroup{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAutoScalingGroup)

	if err != nil {
		return err
	}

	*o = AutoScalingGroup(varAutoScalingGroup)

	return err
}

type NullableAutoScalingGroup struct {
	value *AutoScalingGroup
	isSet bool
}

func (v NullableAutoScalingGroup) Get() *AutoScalingGroup {
	return v.value
}

func (v *NullableAutoScalingGroup) Set(val *AutoScalingGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoScalingGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoScalingGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoScalingGroup(val *AutoScalingGroup) *NullableAutoScalingGroup {
	return &NullableAutoScalingGroup{value: val, isSet: true}
}

func (v NullableAutoScalingGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoScalingGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
