/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ImageMemberShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageMemberShowResponse{}

// ImageMemberShowResponse struct for ImageMemberShowResponse
type ImageMemberShowResponse struct {
	// Created at
	CreatedAt string `json:"created_at"`
	// Image ID
	ImageId string `json:"image_id"`
	// Member ID
	MemberId string `json:"member_id"`
	// Member status
	Status string `json:"status"`
	// Updated at
	UpdatedAt string `json:"updated_at"`
}

type _ImageMemberShowResponse ImageMemberShowResponse

// NewImageMemberShowResponse instantiates a new ImageMemberShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageMemberShowResponse(createdAt string, imageId string, memberId string, status string, updatedAt string) *ImageMemberShowResponse {
	this := ImageMemberShowResponse{}
	this.CreatedAt = createdAt
	this.ImageId = imageId
	this.MemberId = memberId
	this.Status = status
	this.UpdatedAt = updatedAt
	return &this
}

// NewImageMemberShowResponseWithDefaults instantiates a new ImageMemberShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageMemberShowResponseWithDefaults() *ImageMemberShowResponse {
	this := ImageMemberShowResponse{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *ImageMemberShowResponse) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ImageMemberShowResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ImageMemberShowResponse) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetImageId returns the ImageId field value
func (o *ImageMemberShowResponse) GetImageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value
// and a boolean to check if the value has been set.
func (o *ImageMemberShowResponse) GetImageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageId, true
}

// SetImageId sets field value
func (o *ImageMemberShowResponse) SetImageId(v string) {
	o.ImageId = v
}

// GetMemberId returns the MemberId field value
func (o *ImageMemberShowResponse) GetMemberId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MemberId
}

// GetMemberIdOk returns a tuple with the MemberId field value
// and a boolean to check if the value has been set.
func (o *ImageMemberShowResponse) GetMemberIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemberId, true
}

// SetMemberId sets field value
func (o *ImageMemberShowResponse) SetMemberId(v string) {
	o.MemberId = v
}

// GetStatus returns the Status field value
func (o *ImageMemberShowResponse) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ImageMemberShowResponse) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ImageMemberShowResponse) SetStatus(v string) {
	o.Status = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ImageMemberShowResponse) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ImageMemberShowResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ImageMemberShowResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o ImageMemberShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageMemberShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["image_id"] = o.ImageId
	toSerialize["member_id"] = o.MemberId
	toSerialize["status"] = o.Status
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *ImageMemberShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"image_id",
		"member_id",
		"status",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varImageMemberShowResponse := _ImageMemberShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varImageMemberShowResponse)

	if err != nil {
		return err
	}

	*o = ImageMemberShowResponse(varImageMemberShowResponse)

	return err
}

type NullableImageMemberShowResponse struct {
	value *ImageMemberShowResponse
	isSet bool
}

func (v NullableImageMemberShowResponse) Get() *ImageMemberShowResponse {
	return v.value
}

func (v *NullableImageMemberShowResponse) Set(val *ImageMemberShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableImageMemberShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableImageMemberShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageMemberShowResponse(val *ImageMemberShowResponse) *NullableImageMemberShowResponse {
	return &NullableImageMemberShowResponse{value: val, isSet: true}
}

func (v NullableImageMemberShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageMemberShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
