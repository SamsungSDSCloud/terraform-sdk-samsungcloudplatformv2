/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the VolumeTransferCreateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeTransferCreateResponse{}

// VolumeTransferCreateResponse struct for VolumeTransferCreateResponse
type VolumeTransferCreateResponse struct {
	// Auth Key
	AuthKey string `json:"auth_key"`
	// 생성일시
	CreatedAt string `json:"created_at"`
	// Transfer ID
	Id   string         `json:"id"`
	Name NullableString `json:"name,omitempty"`
	// Volume ID
	VolumeId string `json:"volume_id"`
}

type _VolumeTransferCreateResponse VolumeTransferCreateResponse

// NewVolumeTransferCreateResponse instantiates a new VolumeTransferCreateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeTransferCreateResponse(authKey string, createdAt string, id string, volumeId string) *VolumeTransferCreateResponse {
	this := VolumeTransferCreateResponse{}
	this.AuthKey = authKey
	this.CreatedAt = createdAt
	this.Id = id
	this.VolumeId = volumeId
	return &this
}

// NewVolumeTransferCreateResponseWithDefaults instantiates a new VolumeTransferCreateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeTransferCreateResponseWithDefaults() *VolumeTransferCreateResponse {
	this := VolumeTransferCreateResponse{}
	return &this
}

// GetAuthKey returns the AuthKey field value
func (o *VolumeTransferCreateResponse) GetAuthKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthKey
}

// GetAuthKeyOk returns a tuple with the AuthKey field value
// and a boolean to check if the value has been set.
func (o *VolumeTransferCreateResponse) GetAuthKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthKey, true
}

// SetAuthKey sets field value
func (o *VolumeTransferCreateResponse) SetAuthKey(v string) {
	o.AuthKey = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *VolumeTransferCreateResponse) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *VolumeTransferCreateResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *VolumeTransferCreateResponse) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetId returns the Id field value
func (o *VolumeTransferCreateResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VolumeTransferCreateResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VolumeTransferCreateResponse) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VolumeTransferCreateResponse) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VolumeTransferCreateResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *VolumeTransferCreateResponse) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *VolumeTransferCreateResponse) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *VolumeTransferCreateResponse) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *VolumeTransferCreateResponse) UnsetName() {
	o.Name.Unset()
}

// GetVolumeId returns the VolumeId field value
func (o *VolumeTransferCreateResponse) GetVolumeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value
// and a boolean to check if the value has been set.
func (o *VolumeTransferCreateResponse) GetVolumeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolumeId, true
}

// SetVolumeId sets field value
func (o *VolumeTransferCreateResponse) SetVolumeId(v string) {
	o.VolumeId = v
}

func (o VolumeTransferCreateResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeTransferCreateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["auth_key"] = o.AuthKey
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["id"] = o.Id
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	toSerialize["volume_id"] = o.VolumeId
	return toSerialize, nil
}

func (o *VolumeTransferCreateResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"auth_key",
		"created_at",
		"id",
		"volume_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVolumeTransferCreateResponse := _VolumeTransferCreateResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVolumeTransferCreateResponse)

	if err != nil {
		return err
	}

	*o = VolumeTransferCreateResponse(varVolumeTransferCreateResponse)

	return err
}

type NullableVolumeTransferCreateResponse struct {
	value *VolumeTransferCreateResponse
	isSet bool
}

func (v NullableVolumeTransferCreateResponse) Get() *VolumeTransferCreateResponse {
	return v.value
}

func (v *NullableVolumeTransferCreateResponse) Set(val *VolumeTransferCreateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeTransferCreateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeTransferCreateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeTransferCreateResponse(val *VolumeTransferCreateResponse) *NullableVolumeTransferCreateResponse {
	return &NullableVolumeTransferCreateResponse{value: val, isSet: true}
}

func (v NullableVolumeTransferCreateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeTransferCreateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
