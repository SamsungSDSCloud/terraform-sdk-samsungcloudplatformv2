/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ServerCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerCreateRequest{}

// ServerCreateRequest struct for ServerCreateRequest
type ServerCreateRequest struct {
	// Image ID
	ImageId string `json:"image_id"`
	// Keypair name
	KeypairName string                 `json:"keypair_name"`
	Lock        NullableBool           `json:"lock,omitempty"`
	MaxCount    NullableInt32          `json:"max_count,omitempty"`
	Metadata    map[string]interface{} `json:"metadata,omitempty"`
	// Server name
	Name string `json:"name" validate:"regexp=^[a-zA-Z0-9-_ ]*$"`
	// List of Network
	Networks        []Network                     `json:"networks"`
	ProductCategory NullableServerProductCategory `json:"product_category,omitempty"`
	ProductOffering NullableServerProductOffering `json:"product_offering,omitempty"`
	SecurityGroups  []string                      `json:"security_groups,omitempty"`
	ServerGroupId   NullableString                `json:"server_group_id,omitempty"`
	// Server type ID
	ServerTypeId string         `json:"server_type_id"`
	Tags         []Tag          `json:"tags,omitempty"`
	UserData     NullableString `json:"user_data,omitempty"`
	Volumes      []Volume       `json:"volumes,omitempty"`
}

type _ServerCreateRequest ServerCreateRequest

// NewServerCreateRequest instantiates a new ServerCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerCreateRequest(imageId string, keypairName string, name string, networks []Network, serverTypeId string) *ServerCreateRequest {
	this := ServerCreateRequest{}
	this.ImageId = imageId
	this.KeypairName = keypairName
	this.Name = name
	this.Networks = networks
	this.ServerTypeId = serverTypeId
	return &this
}

// NewServerCreateRequestWithDefaults instantiates a new ServerCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerCreateRequestWithDefaults() *ServerCreateRequest {
	this := ServerCreateRequest{}
	return &this
}

// GetImageId returns the ImageId field value
func (o *ServerCreateRequest) GetImageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value
// and a boolean to check if the value has been set.
func (o *ServerCreateRequest) GetImageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageId, true
}

// SetImageId sets field value
func (o *ServerCreateRequest) SetImageId(v string) {
	o.ImageId = v
}

// GetKeypairName returns the KeypairName field value
func (o *ServerCreateRequest) GetKeypairName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeypairName
}

// GetKeypairNameOk returns a tuple with the KeypairName field value
// and a boolean to check if the value has been set.
func (o *ServerCreateRequest) GetKeypairNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeypairName, true
}

// SetKeypairName sets field value
func (o *ServerCreateRequest) SetKeypairName(v string) {
	o.KeypairName = v
}

// GetLock returns the Lock field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerCreateRequest) GetLock() bool {
	if o == nil || IsNil(o.Lock.Get()) {
		var ret bool
		return ret
	}
	return *o.Lock.Get()
}

// GetLockOk returns a tuple with the Lock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerCreateRequest) GetLockOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Lock.Get(), o.Lock.IsSet()
}

// HasLock returns a boolean if a field has been set.
func (o *ServerCreateRequest) HasLock() bool {
	if o != nil && o.Lock.IsSet() {
		return true
	}

	return false
}

// SetLock gets a reference to the given NullableBool and assigns it to the Lock field.
func (o *ServerCreateRequest) SetLock(v bool) {
	o.Lock.Set(&v)
}

// SetLockNil sets the value for Lock to be an explicit nil
func (o *ServerCreateRequest) SetLockNil() {
	o.Lock.Set(nil)
}

// UnsetLock ensures that no value is present for Lock, not even an explicit nil
func (o *ServerCreateRequest) UnsetLock() {
	o.Lock.Unset()
}

// GetMaxCount returns the MaxCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerCreateRequest) GetMaxCount() int32 {
	if o == nil || IsNil(o.MaxCount.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxCount.Get()
}

// GetMaxCountOk returns a tuple with the MaxCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerCreateRequest) GetMaxCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxCount.Get(), o.MaxCount.IsSet()
}

// HasMaxCount returns a boolean if a field has been set.
func (o *ServerCreateRequest) HasMaxCount() bool {
	if o != nil && o.MaxCount.IsSet() {
		return true
	}

	return false
}

// SetMaxCount gets a reference to the given NullableInt32 and assigns it to the MaxCount field.
func (o *ServerCreateRequest) SetMaxCount(v int32) {
	o.MaxCount.Set(&v)
}

// SetMaxCountNil sets the value for MaxCount to be an explicit nil
func (o *ServerCreateRequest) SetMaxCountNil() {
	o.MaxCount.Set(nil)
}

// UnsetMaxCount ensures that no value is present for MaxCount, not even an explicit nil
func (o *ServerCreateRequest) UnsetMaxCount() {
	o.MaxCount.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerCreateRequest) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerCreateRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ServerCreateRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *ServerCreateRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetName returns the Name field value
func (o *ServerCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServerCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServerCreateRequest) SetName(v string) {
	o.Name = v
}

// GetNetworks returns the Networks field value
func (o *ServerCreateRequest) GetNetworks() []Network {
	if o == nil {
		var ret []Network
		return ret
	}

	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value
// and a boolean to check if the value has been set.
func (o *ServerCreateRequest) GetNetworksOk() ([]Network, bool) {
	if o == nil {
		return nil, false
	}
	return o.Networks, true
}

// SetNetworks sets field value
func (o *ServerCreateRequest) SetNetworks(v []Network) {
	o.Networks = v
}

// GetProductCategory returns the ProductCategory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerCreateRequest) GetProductCategory() ServerProductCategory {
	if o == nil || IsNil(o.ProductCategory.Get()) {
		var ret ServerProductCategory
		return ret
	}
	return *o.ProductCategory.Get()
}

// GetProductCategoryOk returns a tuple with the ProductCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerCreateRequest) GetProductCategoryOk() (*ServerProductCategory, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductCategory.Get(), o.ProductCategory.IsSet()
}

// HasProductCategory returns a boolean if a field has been set.
func (o *ServerCreateRequest) HasProductCategory() bool {
	if o != nil && o.ProductCategory.IsSet() {
		return true
	}

	return false
}

// SetProductCategory gets a reference to the given NullableServerProductCategory and assigns it to the ProductCategory field.
func (o *ServerCreateRequest) SetProductCategory(v ServerProductCategory) {
	o.ProductCategory.Set(&v)
}

// SetProductCategoryNil sets the value for ProductCategory to be an explicit nil
func (o *ServerCreateRequest) SetProductCategoryNil() {
	o.ProductCategory.Set(nil)
}

// UnsetProductCategory ensures that no value is present for ProductCategory, not even an explicit nil
func (o *ServerCreateRequest) UnsetProductCategory() {
	o.ProductCategory.Unset()
}

// GetProductOffering returns the ProductOffering field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerCreateRequest) GetProductOffering() ServerProductOffering {
	if o == nil || IsNil(o.ProductOffering.Get()) {
		var ret ServerProductOffering
		return ret
	}
	return *o.ProductOffering.Get()
}

// GetProductOfferingOk returns a tuple with the ProductOffering field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerCreateRequest) GetProductOfferingOk() (*ServerProductOffering, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductOffering.Get(), o.ProductOffering.IsSet()
}

// HasProductOffering returns a boolean if a field has been set.
func (o *ServerCreateRequest) HasProductOffering() bool {
	if o != nil && o.ProductOffering.IsSet() {
		return true
	}

	return false
}

// SetProductOffering gets a reference to the given NullableServerProductOffering and assigns it to the ProductOffering field.
func (o *ServerCreateRequest) SetProductOffering(v ServerProductOffering) {
	o.ProductOffering.Set(&v)
}

// SetProductOfferingNil sets the value for ProductOffering to be an explicit nil
func (o *ServerCreateRequest) SetProductOfferingNil() {
	o.ProductOffering.Set(nil)
}

// UnsetProductOffering ensures that no value is present for ProductOffering, not even an explicit nil
func (o *ServerCreateRequest) UnsetProductOffering() {
	o.ProductOffering.Unset()
}

// GetSecurityGroups returns the SecurityGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerCreateRequest) GetSecurityGroups() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerCreateRequest) GetSecurityGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.SecurityGroups) {
		return nil, false
	}
	return o.SecurityGroups, true
}

// HasSecurityGroups returns a boolean if a field has been set.
func (o *ServerCreateRequest) HasSecurityGroups() bool {
	if o != nil && !IsNil(o.SecurityGroups) {
		return true
	}

	return false
}

// SetSecurityGroups gets a reference to the given []string and assigns it to the SecurityGroups field.
func (o *ServerCreateRequest) SetSecurityGroups(v []string) {
	o.SecurityGroups = v
}

// GetServerGroupId returns the ServerGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerCreateRequest) GetServerGroupId() string {
	if o == nil || IsNil(o.ServerGroupId.Get()) {
		var ret string
		return ret
	}
	return *o.ServerGroupId.Get()
}

// GetServerGroupIdOk returns a tuple with the ServerGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerCreateRequest) GetServerGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerGroupId.Get(), o.ServerGroupId.IsSet()
}

// HasServerGroupId returns a boolean if a field has been set.
func (o *ServerCreateRequest) HasServerGroupId() bool {
	if o != nil && o.ServerGroupId.IsSet() {
		return true
	}

	return false
}

// SetServerGroupId gets a reference to the given NullableString and assigns it to the ServerGroupId field.
func (o *ServerCreateRequest) SetServerGroupId(v string) {
	o.ServerGroupId.Set(&v)
}

// SetServerGroupIdNil sets the value for ServerGroupId to be an explicit nil
func (o *ServerCreateRequest) SetServerGroupIdNil() {
	o.ServerGroupId.Set(nil)
}

// UnsetServerGroupId ensures that no value is present for ServerGroupId, not even an explicit nil
func (o *ServerCreateRequest) UnsetServerGroupId() {
	o.ServerGroupId.Unset()
}

// GetServerTypeId returns the ServerTypeId field value
func (o *ServerCreateRequest) GetServerTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerTypeId
}

// GetServerTypeIdOk returns a tuple with the ServerTypeId field value
// and a boolean to check if the value has been set.
func (o *ServerCreateRequest) GetServerTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerTypeId, true
}

// SetServerTypeId sets field value
func (o *ServerCreateRequest) SetServerTypeId(v string) {
	o.ServerTypeId = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerCreateRequest) GetTags() []Tag {
	if o == nil {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerCreateRequest) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ServerCreateRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *ServerCreateRequest) SetTags(v []Tag) {
	o.Tags = v
}

// GetUserData returns the UserData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerCreateRequest) GetUserData() string {
	if o == nil || IsNil(o.UserData.Get()) {
		var ret string
		return ret
	}
	return *o.UserData.Get()
}

// GetUserDataOk returns a tuple with the UserData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerCreateRequest) GetUserDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserData.Get(), o.UserData.IsSet()
}

// HasUserData returns a boolean if a field has been set.
func (o *ServerCreateRequest) HasUserData() bool {
	if o != nil && o.UserData.IsSet() {
		return true
	}

	return false
}

// SetUserData gets a reference to the given NullableString and assigns it to the UserData field.
func (o *ServerCreateRequest) SetUserData(v string) {
	o.UserData.Set(&v)
}

// SetUserDataNil sets the value for UserData to be an explicit nil
func (o *ServerCreateRequest) SetUserDataNil() {
	o.UserData.Set(nil)
}

// UnsetUserData ensures that no value is present for UserData, not even an explicit nil
func (o *ServerCreateRequest) UnsetUserData() {
	o.UserData.Unset()
}

// GetVolumes returns the Volumes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerCreateRequest) GetVolumes() []Volume {
	if o == nil {
		var ret []Volume
		return ret
	}
	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerCreateRequest) GetVolumesOk() ([]Volume, bool) {
	if o == nil || IsNil(o.Volumes) {
		return nil, false
	}
	return o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *ServerCreateRequest) HasVolumes() bool {
	if o != nil && !IsNil(o.Volumes) {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []Volume and assigns it to the Volumes field.
func (o *ServerCreateRequest) SetVolumes(v []Volume) {
	o.Volumes = v
}

func (o ServerCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["image_id"] = o.ImageId
	toSerialize["keypair_name"] = o.KeypairName
	if o.Lock.IsSet() {
		toSerialize["lock"] = o.Lock.Get()
	}
	if o.MaxCount.IsSet() {
		toSerialize["max_count"] = o.MaxCount.Get()
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["name"] = o.Name
	toSerialize["networks"] = o.Networks
	if o.ProductCategory.IsSet() {
		toSerialize["product_category"] = o.ProductCategory.Get()
	}
	if o.ProductOffering.IsSet() {
		toSerialize["product_offering"] = o.ProductOffering.Get()
	}
	if o.SecurityGroups != nil {
		toSerialize["security_groups"] = o.SecurityGroups
	}
	if o.ServerGroupId.IsSet() {
		toSerialize["server_group_id"] = o.ServerGroupId.Get()
	}
	toSerialize["server_type_id"] = o.ServerTypeId
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.UserData.IsSet() {
		toSerialize["user_data"] = o.UserData.Get()
	}
	if o.Volumes != nil {
		toSerialize["volumes"] = o.Volumes
	}
	return toSerialize, nil
}

func (o *ServerCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"image_id",
		"keypair_name",
		"name",
		"networks",
		"server_type_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServerCreateRequest := _ServerCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServerCreateRequest)

	if err != nil {
		return err
	}

	*o = ServerCreateRequest(varServerCreateRequest)

	return err
}

type NullableServerCreateRequest struct {
	value *ServerCreateRequest
	isSet bool
}

func (v NullableServerCreateRequest) Get() *ServerCreateRequest {
	return v.value
}

func (v *NullableServerCreateRequest) Set(val *ServerCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableServerCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableServerCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerCreateRequest(val *ServerCreateRequest) *NullableServerCreateRequest {
	return &NullableServerCreateRequest{value: val, isSet: true}
}

func (v NullableServerCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
