/*
SCP Compute Service

SCP Compute Service

API version: 1.2.0.0rc1.dev587
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package virtualserver

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ServerVolumesCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerVolumesCreateRequest{}

// ServerVolumesCreateRequest struct for ServerVolumesCreateRequest
type ServerVolumesCreateRequest struct {
	DeleteOnTermination NullableBool   `json:"delete_on_termination,omitempty"`
	Device              NullableString `json:"device,omitempty"`
	// Volume ID
	VolumeId string `json:"volume_id"`
}

type _ServerVolumesCreateRequest ServerVolumesCreateRequest

// NewServerVolumesCreateRequest instantiates a new ServerVolumesCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerVolumesCreateRequest(volumeId string) *ServerVolumesCreateRequest {
	this := ServerVolumesCreateRequest{}
	this.VolumeId = volumeId
	return &this
}

// NewServerVolumesCreateRequestWithDefaults instantiates a new ServerVolumesCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerVolumesCreateRequestWithDefaults() *ServerVolumesCreateRequest {
	this := ServerVolumesCreateRequest{}
	return &this
}

// GetDeleteOnTermination returns the DeleteOnTermination field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerVolumesCreateRequest) GetDeleteOnTermination() bool {
	if o == nil || IsNil(o.DeleteOnTermination.Get()) {
		var ret bool
		return ret
	}
	return *o.DeleteOnTermination.Get()
}

// GetDeleteOnTerminationOk returns a tuple with the DeleteOnTermination field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerVolumesCreateRequest) GetDeleteOnTerminationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeleteOnTermination.Get(), o.DeleteOnTermination.IsSet()
}

// HasDeleteOnTermination returns a boolean if a field has been set.
func (o *ServerVolumesCreateRequest) HasDeleteOnTermination() bool {
	if o != nil && o.DeleteOnTermination.IsSet() {
		return true
	}

	return false
}

// SetDeleteOnTermination gets a reference to the given NullableBool and assigns it to the DeleteOnTermination field.
func (o *ServerVolumesCreateRequest) SetDeleteOnTermination(v bool) {
	o.DeleteOnTermination.Set(&v)
}

// SetDeleteOnTerminationNil sets the value for DeleteOnTermination to be an explicit nil
func (o *ServerVolumesCreateRequest) SetDeleteOnTerminationNil() {
	o.DeleteOnTermination.Set(nil)
}

// UnsetDeleteOnTermination ensures that no value is present for DeleteOnTermination, not even an explicit nil
func (o *ServerVolumesCreateRequest) UnsetDeleteOnTermination() {
	o.DeleteOnTermination.Unset()
}

// GetDevice returns the Device field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerVolumesCreateRequest) GetDevice() string {
	if o == nil || IsNil(o.Device.Get()) {
		var ret string
		return ret
	}
	return *o.Device.Get()
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerVolumesCreateRequest) GetDeviceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Device.Get(), o.Device.IsSet()
}

// HasDevice returns a boolean if a field has been set.
func (o *ServerVolumesCreateRequest) HasDevice() bool {
	if o != nil && o.Device.IsSet() {
		return true
	}

	return false
}

// SetDevice gets a reference to the given NullableString and assigns it to the Device field.
func (o *ServerVolumesCreateRequest) SetDevice(v string) {
	o.Device.Set(&v)
}

// SetDeviceNil sets the value for Device to be an explicit nil
func (o *ServerVolumesCreateRequest) SetDeviceNil() {
	o.Device.Set(nil)
}

// UnsetDevice ensures that no value is present for Device, not even an explicit nil
func (o *ServerVolumesCreateRequest) UnsetDevice() {
	o.Device.Unset()
}

// GetVolumeId returns the VolumeId field value
func (o *ServerVolumesCreateRequest) GetVolumeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value
// and a boolean to check if the value has been set.
func (o *ServerVolumesCreateRequest) GetVolumeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolumeId, true
}

// SetVolumeId sets field value
func (o *ServerVolumesCreateRequest) SetVolumeId(v string) {
	o.VolumeId = v
}

func (o ServerVolumesCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerVolumesCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DeleteOnTermination.IsSet() {
		toSerialize["delete_on_termination"] = o.DeleteOnTermination.Get()
	}
	if o.Device.IsSet() {
		toSerialize["device"] = o.Device.Get()
	}
	toSerialize["volume_id"] = o.VolumeId
	return toSerialize, nil
}

func (o *ServerVolumesCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"volume_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServerVolumesCreateRequest := _ServerVolumesCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServerVolumesCreateRequest)

	if err != nil {
		return err
	}

	*o = ServerVolumesCreateRequest(varServerVolumesCreateRequest)

	return err
}

type NullableServerVolumesCreateRequest struct {
	value *ServerVolumesCreateRequest
	isSet bool
}

func (v NullableServerVolumesCreateRequest) Get() *ServerVolumesCreateRequest {
	return v.value
}

func (v *NullableServerVolumesCreateRequest) Set(val *ServerVolumesCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableServerVolumesCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableServerVolumesCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerVolumesCreateRequest(val *ServerVolumesCreateRequest) *NullableServerVolumesCreateRequest {
	return &NullableServerVolumesCreateRequest{value: val, isSet: true}
}

func (v NullableServerVolumesCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerVolumesCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
