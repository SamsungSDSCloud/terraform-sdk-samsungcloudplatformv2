/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6775
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package directconnect

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DirectConnectCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DirectConnectCreateRequest{}

// DirectConnectCreateRequest struct for DirectConnectCreateRequest
type DirectConnectCreateRequest struct {
	// Port Bandwidth
	Bandwidth int32 `json:"bandwidth"`
	// Direct Connect Description
	Description *string `json:"description,omitempty"`
	// Firewall Use
	FirewallEnabled *bool `json:"firewall_enabled,omitempty"`
	// Firewall Loggable
	FirewallLoggable *bool `json:"firewall_loggable,omitempty"`
	// Direct Connect Name
	Name string `json:"name" validate:"regexp=^[a-zA-Z0-9]*$"`
	// Tag List
	Tags []Tag `json:"tags,omitempty"`
	// VPC Id
	VpcId string `json:"vpc_id"`
}

type _DirectConnectCreateRequest DirectConnectCreateRequest

// NewDirectConnectCreateRequest instantiates a new DirectConnectCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDirectConnectCreateRequest(bandwidth int32, name string, vpcId string) *DirectConnectCreateRequest {
	this := DirectConnectCreateRequest{}
	this.Bandwidth = bandwidth
	var description string = ""
	this.Description = &description
	var firewallEnabled bool = false
	this.FirewallEnabled = &firewallEnabled
	var firewallLoggable bool = false
	this.FirewallLoggable = &firewallLoggable
	this.Name = name
	this.VpcId = vpcId
	return &this
}

// NewDirectConnectCreateRequestWithDefaults instantiates a new DirectConnectCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDirectConnectCreateRequestWithDefaults() *DirectConnectCreateRequest {
	this := DirectConnectCreateRequest{}
	var description string = ""
	this.Description = &description
	var firewallEnabled bool = false
	this.FirewallEnabled = &firewallEnabled
	var firewallLoggable bool = false
	this.FirewallLoggable = &firewallLoggable
	return &this
}

// GetBandwidth returns the Bandwidth field value
func (o *DirectConnectCreateRequest) GetBandwidth() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Bandwidth
}

// GetBandwidthOk returns a tuple with the Bandwidth field value
// and a boolean to check if the value has been set.
func (o *DirectConnectCreateRequest) GetBandwidthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bandwidth, true
}

// SetBandwidth sets field value
func (o *DirectConnectCreateRequest) SetBandwidth(v int32) {
	o.Bandwidth = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DirectConnectCreateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectConnectCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DirectConnectCreateRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DirectConnectCreateRequest) SetDescription(v string) {
	o.Description = &v
}

// GetFirewallEnabled returns the FirewallEnabled field value if set, zero value otherwise.
func (o *DirectConnectCreateRequest) GetFirewallEnabled() bool {
	if o == nil || IsNil(o.FirewallEnabled) {
		var ret bool
		return ret
	}
	return *o.FirewallEnabled
}

// GetFirewallEnabledOk returns a tuple with the FirewallEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectConnectCreateRequest) GetFirewallEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.FirewallEnabled) {
		return nil, false
	}
	return o.FirewallEnabled, true
}

// HasFirewallEnabled returns a boolean if a field has been set.
func (o *DirectConnectCreateRequest) HasFirewallEnabled() bool {
	if o != nil && !IsNil(o.FirewallEnabled) {
		return true
	}

	return false
}

// SetFirewallEnabled gets a reference to the given bool and assigns it to the FirewallEnabled field.
func (o *DirectConnectCreateRequest) SetFirewallEnabled(v bool) {
	o.FirewallEnabled = &v
}

// GetFirewallLoggable returns the FirewallLoggable field value if set, zero value otherwise.
func (o *DirectConnectCreateRequest) GetFirewallLoggable() bool {
	if o == nil || IsNil(o.FirewallLoggable) {
		var ret bool
		return ret
	}
	return *o.FirewallLoggable
}

// GetFirewallLoggableOk returns a tuple with the FirewallLoggable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectConnectCreateRequest) GetFirewallLoggableOk() (*bool, bool) {
	if o == nil || IsNil(o.FirewallLoggable) {
		return nil, false
	}
	return o.FirewallLoggable, true
}

// HasFirewallLoggable returns a boolean if a field has been set.
func (o *DirectConnectCreateRequest) HasFirewallLoggable() bool {
	if o != nil && !IsNil(o.FirewallLoggable) {
		return true
	}

	return false
}

// SetFirewallLoggable gets a reference to the given bool and assigns it to the FirewallLoggable field.
func (o *DirectConnectCreateRequest) SetFirewallLoggable(v bool) {
	o.FirewallLoggable = &v
}

// GetName returns the Name field value
func (o *DirectConnectCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DirectConnectCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DirectConnectCreateRequest) SetName(v string) {
	o.Name = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *DirectConnectCreateRequest) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectConnectCreateRequest) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *DirectConnectCreateRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *DirectConnectCreateRequest) SetTags(v []Tag) {
	o.Tags = v
}

// GetVpcId returns the VpcId field value
func (o *DirectConnectCreateRequest) GetVpcId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VpcId
}

// GetVpcIdOk returns a tuple with the VpcId field value
// and a boolean to check if the value has been set.
func (o *DirectConnectCreateRequest) GetVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VpcId, true
}

// SetVpcId sets field value
func (o *DirectConnectCreateRequest) SetVpcId(v string) {
	o.VpcId = v
}

func (o DirectConnectCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DirectConnectCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bandwidth"] = o.Bandwidth
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.FirewallEnabled) {
		toSerialize["firewall_enabled"] = o.FirewallEnabled
	}
	if !IsNil(o.FirewallLoggable) {
		toSerialize["firewall_loggable"] = o.FirewallLoggable
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["vpc_id"] = o.VpcId
	return toSerialize, nil
}

func (o *DirectConnectCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bandwidth",
		"name",
		"vpc_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDirectConnectCreateRequest := _DirectConnectCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDirectConnectCreateRequest)

	if err != nil {
		return err
	}

	*o = DirectConnectCreateRequest(varDirectConnectCreateRequest)

	return err
}

type NullableDirectConnectCreateRequest struct {
	value *DirectConnectCreateRequest
	isSet bool
}

func (v NullableDirectConnectCreateRequest) Get() *DirectConnectCreateRequest {
	return v.value
}

func (v *NullableDirectConnectCreateRequest) Set(val *DirectConnectCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDirectConnectCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDirectConnectCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirectConnectCreateRequest(val *DirectConnectCreateRequest) *NullableDirectConnectCreateRequest {
	return &NullableDirectConnectCreateRequest{value: val, isSet: true}
}

func (v NullableDirectConnectCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirectConnectCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
