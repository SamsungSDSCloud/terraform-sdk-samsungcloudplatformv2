/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6775
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package directconnect

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DirectConnectShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DirectConnectShowResponse{}

// DirectConnectShowResponse struct for DirectConnectShowResponse
type DirectConnectShowResponse struct {
	DirectConnect DirectConnect `json:"direct_connect"`
}

type _DirectConnectShowResponse DirectConnectShowResponse

// NewDirectConnectShowResponse instantiates a new DirectConnectShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDirectConnectShowResponse(directConnect DirectConnect) *DirectConnectShowResponse {
	this := DirectConnectShowResponse{}
	this.DirectConnect = directConnect
	return &this
}

// NewDirectConnectShowResponseWithDefaults instantiates a new DirectConnectShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDirectConnectShowResponseWithDefaults() *DirectConnectShowResponse {
	this := DirectConnectShowResponse{}
	return &this
}

// GetDirectConnect returns the DirectConnect field value
func (o *DirectConnectShowResponse) GetDirectConnect() DirectConnect {
	if o == nil {
		var ret DirectConnect
		return ret
	}

	return o.DirectConnect
}

// GetDirectConnectOk returns a tuple with the DirectConnect field value
// and a boolean to check if the value has been set.
func (o *DirectConnectShowResponse) GetDirectConnectOk() (*DirectConnect, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DirectConnect, true
}

// SetDirectConnect sets field value
func (o *DirectConnectShowResponse) SetDirectConnect(v DirectConnect) {
	o.DirectConnect = v
}

func (o DirectConnectShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DirectConnectShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["direct_connect"] = o.DirectConnect
	return toSerialize, nil
}

func (o *DirectConnectShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"direct_connect",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDirectConnectShowResponse := _DirectConnectShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDirectConnectShowResponse)

	if err != nil {
		return err
	}

	*o = DirectConnectShowResponse(varDirectConnectShowResponse)

	return err
}

type NullableDirectConnectShowResponse struct {
	value *DirectConnectShowResponse
	isSet bool
}

func (v NullableDirectConnectShowResponse) Get() *DirectConnectShowResponse {
	return v.value
}

func (v *NullableDirectConnectShowResponse) Set(val *DirectConnectShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDirectConnectShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDirectConnectShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirectConnectShowResponse(val *DirectConnectShowResponse) *NullableDirectConnectShowResponse {
	return &NullableDirectConnectShowResponse{value: val, isSet: true}
}

func (v NullableDirectConnectShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirectConnectShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
