/*
SCP LoadBalancer Service

SCP LoadBalancer Service

API version: 0.0.1.dev1712
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the LbHealthCheckShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LbHealthCheckShowResponse{}

// LbHealthCheckShowResponse struct for LbHealthCheckShowResponse
type LbHealthCheckShowResponse struct {
	LbHealthCheck LbHealthCheckShow `json:"lb_health_check"`
}

type _LbHealthCheckShowResponse LbHealthCheckShowResponse

// NewLbHealthCheckShowResponse instantiates a new LbHealthCheckShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLbHealthCheckShowResponse(lbHealthCheck LbHealthCheckShow) *LbHealthCheckShowResponse {
	this := LbHealthCheckShowResponse{}
	this.LbHealthCheck = lbHealthCheck
	return &this
}

// NewLbHealthCheckShowResponseWithDefaults instantiates a new LbHealthCheckShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLbHealthCheckShowResponseWithDefaults() *LbHealthCheckShowResponse {
	this := LbHealthCheckShowResponse{}
	return &this
}

// GetLbHealthCheck returns the LbHealthCheck field value
func (o *LbHealthCheckShowResponse) GetLbHealthCheck() LbHealthCheckShow {
	if o == nil {
		var ret LbHealthCheckShow
		return ret
	}

	return o.LbHealthCheck
}

// GetLbHealthCheckOk returns a tuple with the LbHealthCheck field value
// and a boolean to check if the value has been set.
func (o *LbHealthCheckShowResponse) GetLbHealthCheckOk() (*LbHealthCheckShow, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LbHealthCheck, true
}

// SetLbHealthCheck sets field value
func (o *LbHealthCheckShowResponse) SetLbHealthCheck(v LbHealthCheckShow) {
	o.LbHealthCheck = v
}

func (o LbHealthCheckShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LbHealthCheckShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["lb_health_check"] = o.LbHealthCheck
	return toSerialize, nil
}

func (o *LbHealthCheckShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"lb_health_check",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLbHealthCheckShowResponse := _LbHealthCheckShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLbHealthCheckShowResponse)

	if err != nil {
		return err
	}

	*o = LbHealthCheckShowResponse(varLbHealthCheckShowResponse)

	return err
}

type NullableLbHealthCheckShowResponse struct {
	value *LbHealthCheckShowResponse
	isSet bool
}

func (v NullableLbHealthCheckShowResponse) Get() *LbHealthCheckShowResponse {
	return v.value
}

func (v *NullableLbHealthCheckShowResponse) Set(val *LbHealthCheckShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLbHealthCheckShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLbHealthCheckShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLbHealthCheckShowResponse(val *LbHealthCheckShowResponse) *NullableLbHealthCheckShowResponse {
	return &NullableLbHealthCheckShowResponse{value: val, isSet: true}
}

func (v NullableLbHealthCheckShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLbHealthCheckShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
