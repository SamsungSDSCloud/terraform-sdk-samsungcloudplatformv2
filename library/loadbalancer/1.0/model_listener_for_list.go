/*
SCP LoadBalancer Service

SCP LoadBalancer Service

API version: 0.0.1.dev1712
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ListenerForList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListenerForList{}

// ListenerForList struct for ListenerForList
type ListenerForList struct {
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy string `json:"created_by"`
	// ID
	Id string `json:"id"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy string `json:"modified_by"`
	// The name of the listener.
	Name string `json:"name" validate:"regexp=^[a-zA-Z0-9-_]*$"`
	// The protocol of the listener.
	Protocol     string        `json:"protocol"`
	ServerGroups []interface{} `json:"server_groups,omitempty"`
	// The port of the listener.
	ServicePort int32          `json:"service_port"`
	State       NullableString `json:"state,omitempty"`
}

type _ListenerForList ListenerForList

// NewListenerForList instantiates a new ListenerForList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListenerForList(createdAt time.Time, createdBy string, id string, modifiedAt time.Time, modifiedBy string, name string, protocol string, servicePort int32) *ListenerForList {
	this := ListenerForList{}
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.Id = id
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.Name = name
	this.Protocol = protocol
	this.ServicePort = servicePort
	return &this
}

// NewListenerForListWithDefaults instantiates a new ListenerForList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListenerForListWithDefaults() *ListenerForList {
	this := ListenerForList{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *ListenerForList) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ListenerForList) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ListenerForList) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *ListenerForList) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *ListenerForList) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *ListenerForList) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetId returns the Id field value
func (o *ListenerForList) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ListenerForList) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ListenerForList) SetId(v string) {
	o.Id = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *ListenerForList) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *ListenerForList) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *ListenerForList) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *ListenerForList) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *ListenerForList) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *ListenerForList) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetName returns the Name field value
func (o *ListenerForList) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ListenerForList) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ListenerForList) SetName(v string) {
	o.Name = v
}

// GetProtocol returns the Protocol field value
func (o *ListenerForList) GetProtocol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *ListenerForList) GetProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *ListenerForList) SetProtocol(v string) {
	o.Protocol = v
}

// GetServerGroups returns the ServerGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListenerForList) GetServerGroups() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}
	return o.ServerGroups
}

// GetServerGroupsOk returns a tuple with the ServerGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListenerForList) GetServerGroupsOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.ServerGroups) {
		return nil, false
	}
	return o.ServerGroups, true
}

// HasServerGroups returns a boolean if a field has been set.
func (o *ListenerForList) HasServerGroups() bool {
	if o != nil && !IsNil(o.ServerGroups) {
		return true
	}

	return false
}

// SetServerGroups gets a reference to the given []interface{} and assigns it to the ServerGroups field.
func (o *ListenerForList) SetServerGroups(v []interface{}) {
	o.ServerGroups = v
}

// GetServicePort returns the ServicePort field value
func (o *ListenerForList) GetServicePort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ServicePort
}

// GetServicePortOk returns a tuple with the ServicePort field value
// and a boolean to check if the value has been set.
func (o *ListenerForList) GetServicePortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServicePort, true
}

// SetServicePort sets field value
func (o *ListenerForList) SetServicePort(v int32) {
	o.ServicePort = v
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListenerForList) GetState() string {
	if o == nil || IsNil(o.State.Get()) {
		var ret string
		return ret
	}
	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListenerForList) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// HasState returns a boolean if a field has been set.
func (o *ListenerForList) HasState() bool {
	if o != nil && o.State.IsSet() {
		return true
	}

	return false
}

// SetState gets a reference to the given NullableString and assigns it to the State field.
func (o *ListenerForList) SetState(v string) {
	o.State.Set(&v)
}

// SetStateNil sets the value for State to be an explicit nil
func (o *ListenerForList) SetStateNil() {
	o.State.Set(nil)
}

// UnsetState ensures that no value is present for State, not even an explicit nil
func (o *ListenerForList) UnsetState() {
	o.State.Unset()
}

func (o ListenerForList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListenerForList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	toSerialize["id"] = o.Id
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	toSerialize["name"] = o.Name
	toSerialize["protocol"] = o.Protocol
	if o.ServerGroups != nil {
		toSerialize["server_groups"] = o.ServerGroups
	}
	toSerialize["service_port"] = o.ServicePort
	if o.State.IsSet() {
		toSerialize["state"] = o.State.Get()
	}
	return toSerialize, nil
}

func (o *ListenerForList) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"created_by",
		"id",
		"modified_at",
		"modified_by",
		"name",
		"protocol",
		"service_port",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListenerForList := _ListenerForList{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListenerForList)

	if err != nil {
		return err
	}

	*o = ListenerForList(varListenerForList)

	return err
}

type NullableListenerForList struct {
	value *ListenerForList
	isSet bool
}

func (v NullableListenerForList) Get() *ListenerForList {
	return v.value
}

func (v *NullableListenerForList) Set(val *ListenerForList) {
	v.value = val
	v.isSet = true
}

func (v NullableListenerForList) IsSet() bool {
	return v.isSet
}

func (v *NullableListenerForList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListenerForList(val *ListenerForList) *NullableListenerForList {
	return &NullableListenerForList{value: val, isSet: true}
}

func (v NullableListenerForList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListenerForList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
