/*
SCP LoadBalancer Service

SCP LoadBalancer Service

API version: 0.0.1.dev1712
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the LbHealthCheckList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LbHealthCheckList{}

// LbHealthCheckList struct for LbHealthCheckList
type LbHealthCheckList struct {
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy string `json:"created_by"`
	// LB Health Check type
	HealthCheckType LbMonitorType `json:"health_check_type"`
	// LB Health Check ID
	Id string `json:"id"`
	// LB Server Group count
	LbServerGroupCount int32 `json:"lb_server_group_count"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy string `json:"modified_by"`
	// LB Health Check name
	Name string `json:"name"`
	// LB Health Check Protocol
	Protocol LbMonitorProtocol `json:"protocol"`
	// LB Health Check state
	State string `json:"state"`
	// Service Subnet ID
	SubnetId string `json:"subnet_id"`
}

type _LbHealthCheckList LbHealthCheckList

// NewLbHealthCheckList instantiates a new LbHealthCheckList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLbHealthCheckList(createdAt time.Time, createdBy string, healthCheckType LbMonitorType, id string, lbServerGroupCount int32, modifiedAt time.Time, modifiedBy string, name string, protocol LbMonitorProtocol, state string, subnetId string) *LbHealthCheckList {
	this := LbHealthCheckList{}
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.HealthCheckType = healthCheckType
	this.Id = id
	this.LbServerGroupCount = lbServerGroupCount
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.Name = name
	this.Protocol = protocol
	this.State = state
	this.SubnetId = subnetId
	return &this
}

// NewLbHealthCheckListWithDefaults instantiates a new LbHealthCheckList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLbHealthCheckListWithDefaults() *LbHealthCheckList {
	this := LbHealthCheckList{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *LbHealthCheckList) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *LbHealthCheckList) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *LbHealthCheckList) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *LbHealthCheckList) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *LbHealthCheckList) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *LbHealthCheckList) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetHealthCheckType returns the HealthCheckType field value
func (o *LbHealthCheckList) GetHealthCheckType() LbMonitorType {
	if o == nil {
		var ret LbMonitorType
		return ret
	}

	return o.HealthCheckType
}

// GetHealthCheckTypeOk returns a tuple with the HealthCheckType field value
// and a boolean to check if the value has been set.
func (o *LbHealthCheckList) GetHealthCheckTypeOk() (*LbMonitorType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HealthCheckType, true
}

// SetHealthCheckType sets field value
func (o *LbHealthCheckList) SetHealthCheckType(v LbMonitorType) {
	o.HealthCheckType = v
}

// GetId returns the Id field value
func (o *LbHealthCheckList) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *LbHealthCheckList) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *LbHealthCheckList) SetId(v string) {
	o.Id = v
}

// GetLbServerGroupCount returns the LbServerGroupCount field value
func (o *LbHealthCheckList) GetLbServerGroupCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LbServerGroupCount
}

// GetLbServerGroupCountOk returns a tuple with the LbServerGroupCount field value
// and a boolean to check if the value has been set.
func (o *LbHealthCheckList) GetLbServerGroupCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LbServerGroupCount, true
}

// SetLbServerGroupCount sets field value
func (o *LbHealthCheckList) SetLbServerGroupCount(v int32) {
	o.LbServerGroupCount = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *LbHealthCheckList) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *LbHealthCheckList) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *LbHealthCheckList) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *LbHealthCheckList) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *LbHealthCheckList) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *LbHealthCheckList) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetName returns the Name field value
func (o *LbHealthCheckList) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LbHealthCheckList) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LbHealthCheckList) SetName(v string) {
	o.Name = v
}

// GetProtocol returns the Protocol field value
func (o *LbHealthCheckList) GetProtocol() LbMonitorProtocol {
	if o == nil {
		var ret LbMonitorProtocol
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *LbHealthCheckList) GetProtocolOk() (*LbMonitorProtocol, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *LbHealthCheckList) SetProtocol(v LbMonitorProtocol) {
	o.Protocol = v
}

// GetState returns the State field value
func (o *LbHealthCheckList) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *LbHealthCheckList) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *LbHealthCheckList) SetState(v string) {
	o.State = v
}

// GetSubnetId returns the SubnetId field value
func (o *LbHealthCheckList) GetSubnetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value
// and a boolean to check if the value has been set.
func (o *LbHealthCheckList) GetSubnetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubnetId, true
}

// SetSubnetId sets field value
func (o *LbHealthCheckList) SetSubnetId(v string) {
	o.SubnetId = v
}

func (o LbHealthCheckList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LbHealthCheckList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	toSerialize["health_check_type"] = o.HealthCheckType
	toSerialize["id"] = o.Id
	toSerialize["lb_server_group_count"] = o.LbServerGroupCount
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	toSerialize["name"] = o.Name
	toSerialize["protocol"] = o.Protocol
	toSerialize["state"] = o.State
	toSerialize["subnet_id"] = o.SubnetId
	return toSerialize, nil
}

func (o *LbHealthCheckList) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"created_by",
		"health_check_type",
		"id",
		"lb_server_group_count",
		"modified_at",
		"modified_by",
		"name",
		"protocol",
		"state",
		"subnet_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLbHealthCheckList := _LbHealthCheckList{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLbHealthCheckList)

	if err != nil {
		return err
	}

	*o = LbHealthCheckList(varLbHealthCheckList)

	return err
}

type NullableLbHealthCheckList struct {
	value *LbHealthCheckList
	isSet bool
}

func (v NullableLbHealthCheckList) Get() *LbHealthCheckList {
	return v.value
}

func (v *NullableLbHealthCheckList) Set(val *LbHealthCheckList) {
	v.value = val
	v.isSet = true
}

func (v NullableLbHealthCheckList) IsSet() bool {
	return v.isSet
}

func (v *NullableLbHealthCheckList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLbHealthCheckList(val *LbHealthCheckList) *NullableLbHealthCheckList {
	return &NullableLbHealthCheckList{value: val, isSet: true}
}

func (v NullableLbHealthCheckList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLbHealthCheckList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
