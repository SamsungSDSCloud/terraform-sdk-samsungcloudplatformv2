/*
SCP LoadBalancer Service

SCP LoadBalancer Service

API version: 0.0.1.dev1712
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
)

// checks if the LbHealthCheckSet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LbHealthCheckSet{}

// LbHealthCheckSet struct for LbHealthCheckSet
type LbHealthCheckSet struct {
	Description         NullableString              `json:"description,omitempty"`
	HealthCheckCount    NullableInt32               `json:"health_check_count,omitempty"`
	HealthCheckInterval NullableInt32               `json:"health_check_interval,omitempty"`
	HealthCheckPort     NullableInt32               `json:"health_check_port,omitempty"`
	HealthCheckTimeout  NullableInt32               `json:"health_check_timeout,omitempty"`
	HealthCheckUrl      NullableString              `json:"health_check_url,omitempty" validate:"regexp=^\\/[A-Za-z0-9\\/._?&=-]*$"`
	HttpMethod          NullableLbMonitorHttpMethod `json:"http_method,omitempty"`
	Protocol            NullableLbMonitorProtocol   `json:"protocol,omitempty"`
	RequestData         NullableString              `json:"request_data,omitempty" validate:"regexp=^[A-Za-z0-9\\/._?&=-]*$"`
	ResponseCode        NullableString              `json:"response_code,omitempty"`
}

// NewLbHealthCheckSet instantiates a new LbHealthCheckSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLbHealthCheckSet() *LbHealthCheckSet {
	this := LbHealthCheckSet{}
	return &this
}

// NewLbHealthCheckSetWithDefaults instantiates a new LbHealthCheckSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLbHealthCheckSetWithDefaults() *LbHealthCheckSet {
	this := LbHealthCheckSet{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LbHealthCheckSet) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LbHealthCheckSet) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *LbHealthCheckSet) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *LbHealthCheckSet) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *LbHealthCheckSet) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *LbHealthCheckSet) UnsetDescription() {
	o.Description.Unset()
}

// GetHealthCheckCount returns the HealthCheckCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LbHealthCheckSet) GetHealthCheckCount() int32 {
	if o == nil || IsNil(o.HealthCheckCount.Get()) {
		var ret int32
		return ret
	}
	return *o.HealthCheckCount.Get()
}

// GetHealthCheckCountOk returns a tuple with the HealthCheckCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LbHealthCheckSet) GetHealthCheckCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.HealthCheckCount.Get(), o.HealthCheckCount.IsSet()
}

// HasHealthCheckCount returns a boolean if a field has been set.
func (o *LbHealthCheckSet) HasHealthCheckCount() bool {
	if o != nil && o.HealthCheckCount.IsSet() {
		return true
	}

	return false
}

// SetHealthCheckCount gets a reference to the given NullableInt32 and assigns it to the HealthCheckCount field.
func (o *LbHealthCheckSet) SetHealthCheckCount(v int32) {
	o.HealthCheckCount.Set(&v)
}

// SetHealthCheckCountNil sets the value for HealthCheckCount to be an explicit nil
func (o *LbHealthCheckSet) SetHealthCheckCountNil() {
	o.HealthCheckCount.Set(nil)
}

// UnsetHealthCheckCount ensures that no value is present for HealthCheckCount, not even an explicit nil
func (o *LbHealthCheckSet) UnsetHealthCheckCount() {
	o.HealthCheckCount.Unset()
}

// GetHealthCheckInterval returns the HealthCheckInterval field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LbHealthCheckSet) GetHealthCheckInterval() int32 {
	if o == nil || IsNil(o.HealthCheckInterval.Get()) {
		var ret int32
		return ret
	}
	return *o.HealthCheckInterval.Get()
}

// GetHealthCheckIntervalOk returns a tuple with the HealthCheckInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LbHealthCheckSet) GetHealthCheckIntervalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.HealthCheckInterval.Get(), o.HealthCheckInterval.IsSet()
}

// HasHealthCheckInterval returns a boolean if a field has been set.
func (o *LbHealthCheckSet) HasHealthCheckInterval() bool {
	if o != nil && o.HealthCheckInterval.IsSet() {
		return true
	}

	return false
}

// SetHealthCheckInterval gets a reference to the given NullableInt32 and assigns it to the HealthCheckInterval field.
func (o *LbHealthCheckSet) SetHealthCheckInterval(v int32) {
	o.HealthCheckInterval.Set(&v)
}

// SetHealthCheckIntervalNil sets the value for HealthCheckInterval to be an explicit nil
func (o *LbHealthCheckSet) SetHealthCheckIntervalNil() {
	o.HealthCheckInterval.Set(nil)
}

// UnsetHealthCheckInterval ensures that no value is present for HealthCheckInterval, not even an explicit nil
func (o *LbHealthCheckSet) UnsetHealthCheckInterval() {
	o.HealthCheckInterval.Unset()
}

// GetHealthCheckPort returns the HealthCheckPort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LbHealthCheckSet) GetHealthCheckPort() int32 {
	if o == nil || IsNil(o.HealthCheckPort.Get()) {
		var ret int32
		return ret
	}
	return *o.HealthCheckPort.Get()
}

// GetHealthCheckPortOk returns a tuple with the HealthCheckPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LbHealthCheckSet) GetHealthCheckPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.HealthCheckPort.Get(), o.HealthCheckPort.IsSet()
}

// HasHealthCheckPort returns a boolean if a field has been set.
func (o *LbHealthCheckSet) HasHealthCheckPort() bool {
	if o != nil && o.HealthCheckPort.IsSet() {
		return true
	}

	return false
}

// SetHealthCheckPort gets a reference to the given NullableInt32 and assigns it to the HealthCheckPort field.
func (o *LbHealthCheckSet) SetHealthCheckPort(v int32) {
	o.HealthCheckPort.Set(&v)
}

// SetHealthCheckPortNil sets the value for HealthCheckPort to be an explicit nil
func (o *LbHealthCheckSet) SetHealthCheckPortNil() {
	o.HealthCheckPort.Set(nil)
}

// UnsetHealthCheckPort ensures that no value is present for HealthCheckPort, not even an explicit nil
func (o *LbHealthCheckSet) UnsetHealthCheckPort() {
	o.HealthCheckPort.Unset()
}

// GetHealthCheckTimeout returns the HealthCheckTimeout field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LbHealthCheckSet) GetHealthCheckTimeout() int32 {
	if o == nil || IsNil(o.HealthCheckTimeout.Get()) {
		var ret int32
		return ret
	}
	return *o.HealthCheckTimeout.Get()
}

// GetHealthCheckTimeoutOk returns a tuple with the HealthCheckTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LbHealthCheckSet) GetHealthCheckTimeoutOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.HealthCheckTimeout.Get(), o.HealthCheckTimeout.IsSet()
}

// HasHealthCheckTimeout returns a boolean if a field has been set.
func (o *LbHealthCheckSet) HasHealthCheckTimeout() bool {
	if o != nil && o.HealthCheckTimeout.IsSet() {
		return true
	}

	return false
}

// SetHealthCheckTimeout gets a reference to the given NullableInt32 and assigns it to the HealthCheckTimeout field.
func (o *LbHealthCheckSet) SetHealthCheckTimeout(v int32) {
	o.HealthCheckTimeout.Set(&v)
}

// SetHealthCheckTimeoutNil sets the value for HealthCheckTimeout to be an explicit nil
func (o *LbHealthCheckSet) SetHealthCheckTimeoutNil() {
	o.HealthCheckTimeout.Set(nil)
}

// UnsetHealthCheckTimeout ensures that no value is present for HealthCheckTimeout, not even an explicit nil
func (o *LbHealthCheckSet) UnsetHealthCheckTimeout() {
	o.HealthCheckTimeout.Unset()
}

// GetHealthCheckUrl returns the HealthCheckUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LbHealthCheckSet) GetHealthCheckUrl() string {
	if o == nil || IsNil(o.HealthCheckUrl.Get()) {
		var ret string
		return ret
	}
	return *o.HealthCheckUrl.Get()
}

// GetHealthCheckUrlOk returns a tuple with the HealthCheckUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LbHealthCheckSet) GetHealthCheckUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HealthCheckUrl.Get(), o.HealthCheckUrl.IsSet()
}

// HasHealthCheckUrl returns a boolean if a field has been set.
func (o *LbHealthCheckSet) HasHealthCheckUrl() bool {
	if o != nil && o.HealthCheckUrl.IsSet() {
		return true
	}

	return false
}

// SetHealthCheckUrl gets a reference to the given NullableString and assigns it to the HealthCheckUrl field.
func (o *LbHealthCheckSet) SetHealthCheckUrl(v string) {
	o.HealthCheckUrl.Set(&v)
}

// SetHealthCheckUrlNil sets the value for HealthCheckUrl to be an explicit nil
func (o *LbHealthCheckSet) SetHealthCheckUrlNil() {
	o.HealthCheckUrl.Set(nil)
}

// UnsetHealthCheckUrl ensures that no value is present for HealthCheckUrl, not even an explicit nil
func (o *LbHealthCheckSet) UnsetHealthCheckUrl() {
	o.HealthCheckUrl.Unset()
}

// GetHttpMethod returns the HttpMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LbHealthCheckSet) GetHttpMethod() LbMonitorHttpMethod {
	if o == nil || IsNil(o.HttpMethod.Get()) {
		var ret LbMonitorHttpMethod
		return ret
	}
	return *o.HttpMethod.Get()
}

// GetHttpMethodOk returns a tuple with the HttpMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LbHealthCheckSet) GetHttpMethodOk() (*LbMonitorHttpMethod, bool) {
	if o == nil {
		return nil, false
	}
	return o.HttpMethod.Get(), o.HttpMethod.IsSet()
}

// HasHttpMethod returns a boolean if a field has been set.
func (o *LbHealthCheckSet) HasHttpMethod() bool {
	if o != nil && o.HttpMethod.IsSet() {
		return true
	}

	return false
}

// SetHttpMethod gets a reference to the given NullableLbMonitorHttpMethod and assigns it to the HttpMethod field.
func (o *LbHealthCheckSet) SetHttpMethod(v LbMonitorHttpMethod) {
	o.HttpMethod.Set(&v)
}

// SetHttpMethodNil sets the value for HttpMethod to be an explicit nil
func (o *LbHealthCheckSet) SetHttpMethodNil() {
	o.HttpMethod.Set(nil)
}

// UnsetHttpMethod ensures that no value is present for HttpMethod, not even an explicit nil
func (o *LbHealthCheckSet) UnsetHttpMethod() {
	o.HttpMethod.Unset()
}

// GetProtocol returns the Protocol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LbHealthCheckSet) GetProtocol() LbMonitorProtocol {
	if o == nil || IsNil(o.Protocol.Get()) {
		var ret LbMonitorProtocol
		return ret
	}
	return *o.Protocol.Get()
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LbHealthCheckSet) GetProtocolOk() (*LbMonitorProtocol, bool) {
	if o == nil {
		return nil, false
	}
	return o.Protocol.Get(), o.Protocol.IsSet()
}

// HasProtocol returns a boolean if a field has been set.
func (o *LbHealthCheckSet) HasProtocol() bool {
	if o != nil && o.Protocol.IsSet() {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given NullableLbMonitorProtocol and assigns it to the Protocol field.
func (o *LbHealthCheckSet) SetProtocol(v LbMonitorProtocol) {
	o.Protocol.Set(&v)
}

// SetProtocolNil sets the value for Protocol to be an explicit nil
func (o *LbHealthCheckSet) SetProtocolNil() {
	o.Protocol.Set(nil)
}

// UnsetProtocol ensures that no value is present for Protocol, not even an explicit nil
func (o *LbHealthCheckSet) UnsetProtocol() {
	o.Protocol.Unset()
}

// GetRequestData returns the RequestData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LbHealthCheckSet) GetRequestData() string {
	if o == nil || IsNil(o.RequestData.Get()) {
		var ret string
		return ret
	}
	return *o.RequestData.Get()
}

// GetRequestDataOk returns a tuple with the RequestData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LbHealthCheckSet) GetRequestDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestData.Get(), o.RequestData.IsSet()
}

// HasRequestData returns a boolean if a field has been set.
func (o *LbHealthCheckSet) HasRequestData() bool {
	if o != nil && o.RequestData.IsSet() {
		return true
	}

	return false
}

// SetRequestData gets a reference to the given NullableString and assigns it to the RequestData field.
func (o *LbHealthCheckSet) SetRequestData(v string) {
	o.RequestData.Set(&v)
}

// SetRequestDataNil sets the value for RequestData to be an explicit nil
func (o *LbHealthCheckSet) SetRequestDataNil() {
	o.RequestData.Set(nil)
}

// UnsetRequestData ensures that no value is present for RequestData, not even an explicit nil
func (o *LbHealthCheckSet) UnsetRequestData() {
	o.RequestData.Unset()
}

// GetResponseCode returns the ResponseCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LbHealthCheckSet) GetResponseCode() string {
	if o == nil || IsNil(o.ResponseCode.Get()) {
		var ret string
		return ret
	}
	return *o.ResponseCode.Get()
}

// GetResponseCodeOk returns a tuple with the ResponseCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LbHealthCheckSet) GetResponseCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResponseCode.Get(), o.ResponseCode.IsSet()
}

// HasResponseCode returns a boolean if a field has been set.
func (o *LbHealthCheckSet) HasResponseCode() bool {
	if o != nil && o.ResponseCode.IsSet() {
		return true
	}

	return false
}

// SetResponseCode gets a reference to the given NullableString and assigns it to the ResponseCode field.
func (o *LbHealthCheckSet) SetResponseCode(v string) {
	o.ResponseCode.Set(&v)
}

// SetResponseCodeNil sets the value for ResponseCode to be an explicit nil
func (o *LbHealthCheckSet) SetResponseCodeNil() {
	o.ResponseCode.Set(nil)
}

// UnsetResponseCode ensures that no value is present for ResponseCode, not even an explicit nil
func (o *LbHealthCheckSet) UnsetResponseCode() {
	o.ResponseCode.Unset()
}

func (o LbHealthCheckSet) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LbHealthCheckSet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.HealthCheckCount.IsSet() {
		toSerialize["health_check_count"] = o.HealthCheckCount.Get()
	}
	if o.HealthCheckInterval.IsSet() {
		toSerialize["health_check_interval"] = o.HealthCheckInterval.Get()
	}
	if o.HealthCheckPort.IsSet() {
		toSerialize["health_check_port"] = o.HealthCheckPort.Get()
	}
	if o.HealthCheckTimeout.IsSet() {
		toSerialize["health_check_timeout"] = o.HealthCheckTimeout.Get()
	}
	if o.HealthCheckUrl.IsSet() {
		toSerialize["health_check_url"] = o.HealthCheckUrl.Get()
	}
	if o.HttpMethod.IsSet() {
		toSerialize["http_method"] = o.HttpMethod.Get()
	}
	if o.Protocol.IsSet() {
		toSerialize["protocol"] = o.Protocol.Get()
	}
	if o.RequestData.IsSet() {
		toSerialize["request_data"] = o.RequestData.Get()
	}
	if o.ResponseCode.IsSet() {
		toSerialize["response_code"] = o.ResponseCode.Get()
	}
	return toSerialize, nil
}

type NullableLbHealthCheckSet struct {
	value *LbHealthCheckSet
	isSet bool
}

func (v NullableLbHealthCheckSet) Get() *LbHealthCheckSet {
	return v.value
}

func (v *NullableLbHealthCheckSet) Set(val *LbHealthCheckSet) {
	v.value = val
	v.isSet = true
}

func (v NullableLbHealthCheckSet) IsSet() bool {
	return v.isSet
}

func (v *NullableLbHealthCheckSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLbHealthCheckSet(val *LbHealthCheckSet) *NullableLbHealthCheckSet {
	return &NullableLbHealthCheckSet{value: val, isSet: true}
}

func (v NullableLbHealthCheckSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLbHealthCheckSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
