/*
SCP LoadBalancer Service

SCP LoadBalancer Service

API version: 0.0.1.dev1712
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the LbServerGroupCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LbServerGroupCreate{}

// LbServerGroupCreate struct for LbServerGroupCreate
type LbServerGroupCreate struct {
	Description     NullableString `json:"description,omitempty"`
	LbHealthCheckId NullableString `json:"lb_health_check_id,omitempty"`
	// LB Method
	LbMethod LbServerGroupLbMethod `json:"lb_method"`
	// LB Health Check name
	Name string `json:"name" validate:"regexp=^[a-zA-Z0-9][-a-zA-Z0-9_]*[a-zA-Z0-9]$"`
	// Protocol
	Protocol LbServerGroupProtocol `json:"protocol"`
	// Service Subnet ID
	SubnetId string `json:"subnet_id"`
	// Tag List
	Tags []Tag `json:"tags,omitempty"`
	// VPC ID
	VpcId string `json:"vpc_id"`
}

type _LbServerGroupCreate LbServerGroupCreate

// NewLbServerGroupCreate instantiates a new LbServerGroupCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLbServerGroupCreate(lbMethod LbServerGroupLbMethod, name string, protocol LbServerGroupProtocol, subnetId string, vpcId string) *LbServerGroupCreate {
	this := LbServerGroupCreate{}
	this.LbMethod = lbMethod
	this.Name = name
	this.Protocol = protocol
	this.SubnetId = subnetId
	this.VpcId = vpcId
	return &this
}

// NewLbServerGroupCreateWithDefaults instantiates a new LbServerGroupCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLbServerGroupCreateWithDefaults() *LbServerGroupCreate {
	this := LbServerGroupCreate{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LbServerGroupCreate) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LbServerGroupCreate) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *LbServerGroupCreate) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *LbServerGroupCreate) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *LbServerGroupCreate) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *LbServerGroupCreate) UnsetDescription() {
	o.Description.Unset()
}

// GetLbHealthCheckId returns the LbHealthCheckId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LbServerGroupCreate) GetLbHealthCheckId() string {
	if o == nil || IsNil(o.LbHealthCheckId.Get()) {
		var ret string
		return ret
	}
	return *o.LbHealthCheckId.Get()
}

// GetLbHealthCheckIdOk returns a tuple with the LbHealthCheckId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LbServerGroupCreate) GetLbHealthCheckIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LbHealthCheckId.Get(), o.LbHealthCheckId.IsSet()
}

// HasLbHealthCheckId returns a boolean if a field has been set.
func (o *LbServerGroupCreate) HasLbHealthCheckId() bool {
	if o != nil && o.LbHealthCheckId.IsSet() {
		return true
	}

	return false
}

// SetLbHealthCheckId gets a reference to the given NullableString and assigns it to the LbHealthCheckId field.
func (o *LbServerGroupCreate) SetLbHealthCheckId(v string) {
	o.LbHealthCheckId.Set(&v)
}

// SetLbHealthCheckIdNil sets the value for LbHealthCheckId to be an explicit nil
func (o *LbServerGroupCreate) SetLbHealthCheckIdNil() {
	o.LbHealthCheckId.Set(nil)
}

// UnsetLbHealthCheckId ensures that no value is present for LbHealthCheckId, not even an explicit nil
func (o *LbServerGroupCreate) UnsetLbHealthCheckId() {
	o.LbHealthCheckId.Unset()
}

// GetLbMethod returns the LbMethod field value
func (o *LbServerGroupCreate) GetLbMethod() LbServerGroupLbMethod {
	if o == nil {
		var ret LbServerGroupLbMethod
		return ret
	}

	return o.LbMethod
}

// GetLbMethodOk returns a tuple with the LbMethod field value
// and a boolean to check if the value has been set.
func (o *LbServerGroupCreate) GetLbMethodOk() (*LbServerGroupLbMethod, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LbMethod, true
}

// SetLbMethod sets field value
func (o *LbServerGroupCreate) SetLbMethod(v LbServerGroupLbMethod) {
	o.LbMethod = v
}

// GetName returns the Name field value
func (o *LbServerGroupCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LbServerGroupCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LbServerGroupCreate) SetName(v string) {
	o.Name = v
}

// GetProtocol returns the Protocol field value
func (o *LbServerGroupCreate) GetProtocol() LbServerGroupProtocol {
	if o == nil {
		var ret LbServerGroupProtocol
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *LbServerGroupCreate) GetProtocolOk() (*LbServerGroupProtocol, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *LbServerGroupCreate) SetProtocol(v LbServerGroupProtocol) {
	o.Protocol = v
}

// GetSubnetId returns the SubnetId field value
func (o *LbServerGroupCreate) GetSubnetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value
// and a boolean to check if the value has been set.
func (o *LbServerGroupCreate) GetSubnetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubnetId, true
}

// SetSubnetId sets field value
func (o *LbServerGroupCreate) SetSubnetId(v string) {
	o.SubnetId = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *LbServerGroupCreate) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LbServerGroupCreate) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *LbServerGroupCreate) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *LbServerGroupCreate) SetTags(v []Tag) {
	o.Tags = v
}

// GetVpcId returns the VpcId field value
func (o *LbServerGroupCreate) GetVpcId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VpcId
}

// GetVpcIdOk returns a tuple with the VpcId field value
// and a boolean to check if the value has been set.
func (o *LbServerGroupCreate) GetVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VpcId, true
}

// SetVpcId sets field value
func (o *LbServerGroupCreate) SetVpcId(v string) {
	o.VpcId = v
}

func (o LbServerGroupCreate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LbServerGroupCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.LbHealthCheckId.IsSet() {
		toSerialize["lb_health_check_id"] = o.LbHealthCheckId.Get()
	}
	toSerialize["lb_method"] = o.LbMethod
	toSerialize["name"] = o.Name
	toSerialize["protocol"] = o.Protocol
	toSerialize["subnet_id"] = o.SubnetId
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["vpc_id"] = o.VpcId
	return toSerialize, nil
}

func (o *LbServerGroupCreate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"lb_method",
		"name",
		"protocol",
		"subnet_id",
		"vpc_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLbServerGroupCreate := _LbServerGroupCreate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLbServerGroupCreate)

	if err != nil {
		return err
	}

	*o = LbServerGroupCreate(varLbServerGroupCreate)

	return err
}

type NullableLbServerGroupCreate struct {
	value *LbServerGroupCreate
	isSet bool
}

func (v NullableLbServerGroupCreate) Get() *LbServerGroupCreate {
	return v.value
}

func (v *NullableLbServerGroupCreate) Set(val *LbServerGroupCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableLbServerGroupCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableLbServerGroupCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLbServerGroupCreate(val *LbServerGroupCreate) *NullableLbServerGroupCreate {
	return &NullableLbServerGroupCreate{value: val, isSet: true}
}

func (v NullableLbServerGroupCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLbServerGroupCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
