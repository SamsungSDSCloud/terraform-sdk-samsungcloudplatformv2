/*
SCP LoadBalancer Service

SCP LoadBalancer Service

API version: 0.0.1.dev1712
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
)

// checks if the LbServerGroupSet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LbServerGroupSet{}

// LbServerGroupSet struct for LbServerGroupSet
type LbServerGroupSet struct {
	Description     NullableString                `json:"description,omitempty"`
	LbHealthCheckId NullableString                `json:"lb_health_check_id,omitempty"`
	LbMethod        NullableLbServerGroupLbMethod `json:"lb_method,omitempty"`
}

// NewLbServerGroupSet instantiates a new LbServerGroupSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLbServerGroupSet() *LbServerGroupSet {
	this := LbServerGroupSet{}
	return &this
}

// NewLbServerGroupSetWithDefaults instantiates a new LbServerGroupSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLbServerGroupSetWithDefaults() *LbServerGroupSet {
	this := LbServerGroupSet{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LbServerGroupSet) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LbServerGroupSet) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *LbServerGroupSet) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *LbServerGroupSet) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *LbServerGroupSet) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *LbServerGroupSet) UnsetDescription() {
	o.Description.Unset()
}

// GetLbHealthCheckId returns the LbHealthCheckId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LbServerGroupSet) GetLbHealthCheckId() string {
	if o == nil || IsNil(o.LbHealthCheckId.Get()) {
		var ret string
		return ret
	}
	return *o.LbHealthCheckId.Get()
}

// GetLbHealthCheckIdOk returns a tuple with the LbHealthCheckId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LbServerGroupSet) GetLbHealthCheckIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LbHealthCheckId.Get(), o.LbHealthCheckId.IsSet()
}

// HasLbHealthCheckId returns a boolean if a field has been set.
func (o *LbServerGroupSet) HasLbHealthCheckId() bool {
	if o != nil && o.LbHealthCheckId.IsSet() {
		return true
	}

	return false
}

// SetLbHealthCheckId gets a reference to the given NullableString and assigns it to the LbHealthCheckId field.
func (o *LbServerGroupSet) SetLbHealthCheckId(v string) {
	o.LbHealthCheckId.Set(&v)
}

// SetLbHealthCheckIdNil sets the value for LbHealthCheckId to be an explicit nil
func (o *LbServerGroupSet) SetLbHealthCheckIdNil() {
	o.LbHealthCheckId.Set(nil)
}

// UnsetLbHealthCheckId ensures that no value is present for LbHealthCheckId, not even an explicit nil
func (o *LbServerGroupSet) UnsetLbHealthCheckId() {
	o.LbHealthCheckId.Unset()
}

// GetLbMethod returns the LbMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LbServerGroupSet) GetLbMethod() LbServerGroupLbMethod {
	if o == nil || IsNil(o.LbMethod.Get()) {
		var ret LbServerGroupLbMethod
		return ret
	}
	return *o.LbMethod.Get()
}

// GetLbMethodOk returns a tuple with the LbMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LbServerGroupSet) GetLbMethodOk() (*LbServerGroupLbMethod, bool) {
	if o == nil {
		return nil, false
	}
	return o.LbMethod.Get(), o.LbMethod.IsSet()
}

// HasLbMethod returns a boolean if a field has been set.
func (o *LbServerGroupSet) HasLbMethod() bool {
	if o != nil && o.LbMethod.IsSet() {
		return true
	}

	return false
}

// SetLbMethod gets a reference to the given NullableLbServerGroupLbMethod and assigns it to the LbMethod field.
func (o *LbServerGroupSet) SetLbMethod(v LbServerGroupLbMethod) {
	o.LbMethod.Set(&v)
}

// SetLbMethodNil sets the value for LbMethod to be an explicit nil
func (o *LbServerGroupSet) SetLbMethodNil() {
	o.LbMethod.Set(nil)
}

// UnsetLbMethod ensures that no value is present for LbMethod, not even an explicit nil
func (o *LbServerGroupSet) UnsetLbMethod() {
	o.LbMethod.Unset()
}

func (o LbServerGroupSet) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LbServerGroupSet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.LbHealthCheckId.IsSet() {
		toSerialize["lb_health_check_id"] = o.LbHealthCheckId.Get()
	}
	if o.LbMethod.IsSet() {
		toSerialize["lb_method"] = o.LbMethod.Get()
	}
	return toSerialize, nil
}

type NullableLbServerGroupSet struct {
	value *LbServerGroupSet
	isSet bool
}

func (v NullableLbServerGroupSet) Get() *LbServerGroupSet {
	return v.value
}

func (v *NullableLbServerGroupSet) Set(val *LbServerGroupSet) {
	v.value = val
	v.isSet = true
}

func (v NullableLbServerGroupSet) IsSet() bool {
	return v.isSet
}

func (v *NullableLbServerGroupSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLbServerGroupSet(val *LbServerGroupSet) *NullableLbServerGroupSet {
	return &NullableLbServerGroupSet{value: val, isSet: true}
}

func (v NullableLbServerGroupSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLbServerGroupSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
