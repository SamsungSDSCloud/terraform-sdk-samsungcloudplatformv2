/*
SCP LoadBalancer Service

SCP LoadBalancer Service

API version: 0.0.1.dev1712
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the LbHealthCheckCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LbHealthCheckCreate{}

// LbHealthCheckCreate struct for LbHealthCheckCreate
type LbHealthCheckCreate struct {
	Description NullableString `json:"description,omitempty"`
	// LB Health Check count
	HealthCheckCount *int32 `json:"health_check_count,omitempty"`
	// LB Health Check interval
	HealthCheckInterval *int32 `json:"health_check_interval,omitempty"`
	// LB Health Check port
	HealthCheckPort *int32 `json:"health_check_port,omitempty"`
	// LB Health Check timeout
	HealthCheckTimeout *int32                      `json:"health_check_timeout,omitempty"`
	HealthCheckUrl     NullableString              `json:"health_check_url,omitempty" validate:"regexp=^\\/[A-Za-z0-9\\/._?&=-]*$"`
	HttpMethod         NullableLbMonitorHttpMethod `json:"http_method,omitempty"`
	// LB Health Check name
	Name string `json:"name" validate:"regexp=^[a-zA-Z0-9][-a-zA-Z0-9_]*[a-zA-Z0-9]$"`
	// LB Health Check Protocol
	Protocol     LbMonitorProtocol `json:"protocol"`
	RequestData  NullableString    `json:"request_data,omitempty" validate:"regexp=^[A-Za-z0-9\\/._?&=-]*$"`
	ResponseCode NullableString    `json:"response_code,omitempty"`
	// Service Subnet ID
	SubnetId string `json:"subnet_id"`
	// Tag List
	Tags []Tag `json:"tags,omitempty"`
	// VPC ID
	VpcId string `json:"vpc_id"`
}

type _LbHealthCheckCreate LbHealthCheckCreate

// NewLbHealthCheckCreate instantiates a new LbHealthCheckCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLbHealthCheckCreate(name string, protocol LbMonitorProtocol, subnetId string, vpcId string) *LbHealthCheckCreate {
	this := LbHealthCheckCreate{}
	var healthCheckCount int32 = 3
	this.HealthCheckCount = &healthCheckCount
	var healthCheckInterval int32 = 5
	this.HealthCheckInterval = &healthCheckInterval
	var healthCheckTimeout int32 = 5
	this.HealthCheckTimeout = &healthCheckTimeout
	this.Name = name
	this.Protocol = protocol
	this.SubnetId = subnetId
	this.VpcId = vpcId
	return &this
}

// NewLbHealthCheckCreateWithDefaults instantiates a new LbHealthCheckCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLbHealthCheckCreateWithDefaults() *LbHealthCheckCreate {
	this := LbHealthCheckCreate{}
	var healthCheckCount int32 = 3
	this.HealthCheckCount = &healthCheckCount
	var healthCheckInterval int32 = 5
	this.HealthCheckInterval = &healthCheckInterval
	var healthCheckTimeout int32 = 5
	this.HealthCheckTimeout = &healthCheckTimeout
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LbHealthCheckCreate) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LbHealthCheckCreate) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *LbHealthCheckCreate) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *LbHealthCheckCreate) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *LbHealthCheckCreate) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *LbHealthCheckCreate) UnsetDescription() {
	o.Description.Unset()
}

// GetHealthCheckCount returns the HealthCheckCount field value if set, zero value otherwise.
func (o *LbHealthCheckCreate) GetHealthCheckCount() int32 {
	if o == nil || IsNil(o.HealthCheckCount) {
		var ret int32
		return ret
	}
	return *o.HealthCheckCount
}

// GetHealthCheckCountOk returns a tuple with the HealthCheckCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LbHealthCheckCreate) GetHealthCheckCountOk() (*int32, bool) {
	if o == nil || IsNil(o.HealthCheckCount) {
		return nil, false
	}
	return o.HealthCheckCount, true
}

// HasHealthCheckCount returns a boolean if a field has been set.
func (o *LbHealthCheckCreate) HasHealthCheckCount() bool {
	if o != nil && !IsNil(o.HealthCheckCount) {
		return true
	}

	return false
}

// SetHealthCheckCount gets a reference to the given int32 and assigns it to the HealthCheckCount field.
func (o *LbHealthCheckCreate) SetHealthCheckCount(v int32) {
	o.HealthCheckCount = &v
}

// GetHealthCheckInterval returns the HealthCheckInterval field value if set, zero value otherwise.
func (o *LbHealthCheckCreate) GetHealthCheckInterval() int32 {
	if o == nil || IsNil(o.HealthCheckInterval) {
		var ret int32
		return ret
	}
	return *o.HealthCheckInterval
}

// GetHealthCheckIntervalOk returns a tuple with the HealthCheckInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LbHealthCheckCreate) GetHealthCheckIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.HealthCheckInterval) {
		return nil, false
	}
	return o.HealthCheckInterval, true
}

// HasHealthCheckInterval returns a boolean if a field has been set.
func (o *LbHealthCheckCreate) HasHealthCheckInterval() bool {
	if o != nil && !IsNil(o.HealthCheckInterval) {
		return true
	}

	return false
}

// SetHealthCheckInterval gets a reference to the given int32 and assigns it to the HealthCheckInterval field.
func (o *LbHealthCheckCreate) SetHealthCheckInterval(v int32) {
	o.HealthCheckInterval = &v
}

// GetHealthCheckPort returns the HealthCheckPort field value if set, zero value otherwise.
func (o *LbHealthCheckCreate) GetHealthCheckPort() int32 {
	if o == nil || IsNil(o.HealthCheckPort) {
		var ret int32
		return ret
	}
	return *o.HealthCheckPort
}

// GetHealthCheckPortOk returns a tuple with the HealthCheckPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LbHealthCheckCreate) GetHealthCheckPortOk() (*int32, bool) {
	if o == nil || IsNil(o.HealthCheckPort) {
		return nil, false
	}
	return o.HealthCheckPort, true
}

// HasHealthCheckPort returns a boolean if a field has been set.
func (o *LbHealthCheckCreate) HasHealthCheckPort() bool {
	if o != nil && !IsNil(o.HealthCheckPort) {
		return true
	}

	return false
}

// SetHealthCheckPort gets a reference to the given int32 and assigns it to the HealthCheckPort field.
func (o *LbHealthCheckCreate) SetHealthCheckPort(v int32) {
	o.HealthCheckPort = &v
}

// GetHealthCheckTimeout returns the HealthCheckTimeout field value if set, zero value otherwise.
func (o *LbHealthCheckCreate) GetHealthCheckTimeout() int32 {
	if o == nil || IsNil(o.HealthCheckTimeout) {
		var ret int32
		return ret
	}
	return *o.HealthCheckTimeout
}

// GetHealthCheckTimeoutOk returns a tuple with the HealthCheckTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LbHealthCheckCreate) GetHealthCheckTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.HealthCheckTimeout) {
		return nil, false
	}
	return o.HealthCheckTimeout, true
}

// HasHealthCheckTimeout returns a boolean if a field has been set.
func (o *LbHealthCheckCreate) HasHealthCheckTimeout() bool {
	if o != nil && !IsNil(o.HealthCheckTimeout) {
		return true
	}

	return false
}

// SetHealthCheckTimeout gets a reference to the given int32 and assigns it to the HealthCheckTimeout field.
func (o *LbHealthCheckCreate) SetHealthCheckTimeout(v int32) {
	o.HealthCheckTimeout = &v
}

// GetHealthCheckUrl returns the HealthCheckUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LbHealthCheckCreate) GetHealthCheckUrl() string {
	if o == nil || IsNil(o.HealthCheckUrl.Get()) {
		var ret string
		return ret
	}
	return *o.HealthCheckUrl.Get()
}

// GetHealthCheckUrlOk returns a tuple with the HealthCheckUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LbHealthCheckCreate) GetHealthCheckUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HealthCheckUrl.Get(), o.HealthCheckUrl.IsSet()
}

// HasHealthCheckUrl returns a boolean if a field has been set.
func (o *LbHealthCheckCreate) HasHealthCheckUrl() bool {
	if o != nil && o.HealthCheckUrl.IsSet() {
		return true
	}

	return false
}

// SetHealthCheckUrl gets a reference to the given NullableString and assigns it to the HealthCheckUrl field.
func (o *LbHealthCheckCreate) SetHealthCheckUrl(v string) {
	o.HealthCheckUrl.Set(&v)
}

// SetHealthCheckUrlNil sets the value for HealthCheckUrl to be an explicit nil
func (o *LbHealthCheckCreate) SetHealthCheckUrlNil() {
	o.HealthCheckUrl.Set(nil)
}

// UnsetHealthCheckUrl ensures that no value is present for HealthCheckUrl, not even an explicit nil
func (o *LbHealthCheckCreate) UnsetHealthCheckUrl() {
	o.HealthCheckUrl.Unset()
}

// GetHttpMethod returns the HttpMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LbHealthCheckCreate) GetHttpMethod() LbMonitorHttpMethod {
	if o == nil || IsNil(o.HttpMethod.Get()) {
		var ret LbMonitorHttpMethod
		return ret
	}
	return *o.HttpMethod.Get()
}

// GetHttpMethodOk returns a tuple with the HttpMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LbHealthCheckCreate) GetHttpMethodOk() (*LbMonitorHttpMethod, bool) {
	if o == nil {
		return nil, false
	}
	return o.HttpMethod.Get(), o.HttpMethod.IsSet()
}

// HasHttpMethod returns a boolean if a field has been set.
func (o *LbHealthCheckCreate) HasHttpMethod() bool {
	if o != nil && o.HttpMethod.IsSet() {
		return true
	}

	return false
}

// SetHttpMethod gets a reference to the given NullableLbMonitorHttpMethod and assigns it to the HttpMethod field.
func (o *LbHealthCheckCreate) SetHttpMethod(v LbMonitorHttpMethod) {
	o.HttpMethod.Set(&v)
}

// SetHttpMethodNil sets the value for HttpMethod to be an explicit nil
func (o *LbHealthCheckCreate) SetHttpMethodNil() {
	o.HttpMethod.Set(nil)
}

// UnsetHttpMethod ensures that no value is present for HttpMethod, not even an explicit nil
func (o *LbHealthCheckCreate) UnsetHttpMethod() {
	o.HttpMethod.Unset()
}

// GetName returns the Name field value
func (o *LbHealthCheckCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LbHealthCheckCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LbHealthCheckCreate) SetName(v string) {
	o.Name = v
}

// GetProtocol returns the Protocol field value
func (o *LbHealthCheckCreate) GetProtocol() LbMonitorProtocol {
	if o == nil {
		var ret LbMonitorProtocol
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *LbHealthCheckCreate) GetProtocolOk() (*LbMonitorProtocol, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *LbHealthCheckCreate) SetProtocol(v LbMonitorProtocol) {
	o.Protocol = v
}

// GetRequestData returns the RequestData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LbHealthCheckCreate) GetRequestData() string {
	if o == nil || IsNil(o.RequestData.Get()) {
		var ret string
		return ret
	}
	return *o.RequestData.Get()
}

// GetRequestDataOk returns a tuple with the RequestData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LbHealthCheckCreate) GetRequestDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestData.Get(), o.RequestData.IsSet()
}

// HasRequestData returns a boolean if a field has been set.
func (o *LbHealthCheckCreate) HasRequestData() bool {
	if o != nil && o.RequestData.IsSet() {
		return true
	}

	return false
}

// SetRequestData gets a reference to the given NullableString and assigns it to the RequestData field.
func (o *LbHealthCheckCreate) SetRequestData(v string) {
	o.RequestData.Set(&v)
}

// SetRequestDataNil sets the value for RequestData to be an explicit nil
func (o *LbHealthCheckCreate) SetRequestDataNil() {
	o.RequestData.Set(nil)
}

// UnsetRequestData ensures that no value is present for RequestData, not even an explicit nil
func (o *LbHealthCheckCreate) UnsetRequestData() {
	o.RequestData.Unset()
}

// GetResponseCode returns the ResponseCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LbHealthCheckCreate) GetResponseCode() string {
	if o == nil || IsNil(o.ResponseCode.Get()) {
		var ret string
		return ret
	}
	return *o.ResponseCode.Get()
}

// GetResponseCodeOk returns a tuple with the ResponseCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LbHealthCheckCreate) GetResponseCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResponseCode.Get(), o.ResponseCode.IsSet()
}

// HasResponseCode returns a boolean if a field has been set.
func (o *LbHealthCheckCreate) HasResponseCode() bool {
	if o != nil && o.ResponseCode.IsSet() {
		return true
	}

	return false
}

// SetResponseCode gets a reference to the given NullableString and assigns it to the ResponseCode field.
func (o *LbHealthCheckCreate) SetResponseCode(v string) {
	o.ResponseCode.Set(&v)
}

// SetResponseCodeNil sets the value for ResponseCode to be an explicit nil
func (o *LbHealthCheckCreate) SetResponseCodeNil() {
	o.ResponseCode.Set(nil)
}

// UnsetResponseCode ensures that no value is present for ResponseCode, not even an explicit nil
func (o *LbHealthCheckCreate) UnsetResponseCode() {
	o.ResponseCode.Unset()
}

// GetSubnetId returns the SubnetId field value
func (o *LbHealthCheckCreate) GetSubnetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value
// and a boolean to check if the value has been set.
func (o *LbHealthCheckCreate) GetSubnetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubnetId, true
}

// SetSubnetId sets field value
func (o *LbHealthCheckCreate) SetSubnetId(v string) {
	o.SubnetId = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *LbHealthCheckCreate) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LbHealthCheckCreate) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *LbHealthCheckCreate) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *LbHealthCheckCreate) SetTags(v []Tag) {
	o.Tags = v
}

// GetVpcId returns the VpcId field value
func (o *LbHealthCheckCreate) GetVpcId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VpcId
}

// GetVpcIdOk returns a tuple with the VpcId field value
// and a boolean to check if the value has been set.
func (o *LbHealthCheckCreate) GetVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VpcId, true
}

// SetVpcId sets field value
func (o *LbHealthCheckCreate) SetVpcId(v string) {
	o.VpcId = v
}

func (o LbHealthCheckCreate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LbHealthCheckCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.HealthCheckCount) {
		toSerialize["health_check_count"] = o.HealthCheckCount
	}
	if !IsNil(o.HealthCheckInterval) {
		toSerialize["health_check_interval"] = o.HealthCheckInterval
	}
	if !IsNil(o.HealthCheckPort) {
		toSerialize["health_check_port"] = o.HealthCheckPort
	}
	if !IsNil(o.HealthCheckTimeout) {
		toSerialize["health_check_timeout"] = o.HealthCheckTimeout
	}
	if o.HealthCheckUrl.IsSet() {
		toSerialize["health_check_url"] = o.HealthCheckUrl.Get()
	}
	if o.HttpMethod.IsSet() {
		toSerialize["http_method"] = o.HttpMethod.Get()
	}
	toSerialize["name"] = o.Name
	toSerialize["protocol"] = o.Protocol
	if o.RequestData.IsSet() {
		toSerialize["request_data"] = o.RequestData.Get()
	}
	if o.ResponseCode.IsSet() {
		toSerialize["response_code"] = o.ResponseCode.Get()
	}
	toSerialize["subnet_id"] = o.SubnetId
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["vpc_id"] = o.VpcId
	return toSerialize, nil
}

func (o *LbHealthCheckCreate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"protocol",
		"subnet_id",
		"vpc_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLbHealthCheckCreate := _LbHealthCheckCreate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLbHealthCheckCreate)

	if err != nil {
		return err
	}

	*o = LbHealthCheckCreate(varLbHealthCheckCreate)

	return err
}

type NullableLbHealthCheckCreate struct {
	value *LbHealthCheckCreate
	isSet bool
}

func (v NullableLbHealthCheckCreate) Get() *LbHealthCheckCreate {
	return v.value
}

func (v *NullableLbHealthCheckCreate) Set(val *LbHealthCheckCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableLbHealthCheckCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableLbHealthCheckCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLbHealthCheckCreate(val *LbHealthCheckCreate) *NullableLbHealthCheckCreate {
	return &NullableLbHealthCheckCreate{value: val, isSet: true}
}

func (v NullableLbHealthCheckCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLbHealthCheckCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
