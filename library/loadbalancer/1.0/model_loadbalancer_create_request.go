/*
SCP LoadBalancer Service

SCP LoadBalancer Service

API version: 0.0.1.dev1712
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the LoadbalancerCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoadbalancerCreateRequest{}

// LoadbalancerCreateRequest struct for LoadbalancerCreateRequest
type LoadbalancerCreateRequest struct {
	Loadbalancer LoadbalancerCreateRequestDetail `json:"loadbalancer"`
}

type _LoadbalancerCreateRequest LoadbalancerCreateRequest

// NewLoadbalancerCreateRequest instantiates a new LoadbalancerCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadbalancerCreateRequest(loadbalancer LoadbalancerCreateRequestDetail) *LoadbalancerCreateRequest {
	this := LoadbalancerCreateRequest{}
	this.Loadbalancer = loadbalancer
	return &this
}

// NewLoadbalancerCreateRequestWithDefaults instantiates a new LoadbalancerCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadbalancerCreateRequestWithDefaults() *LoadbalancerCreateRequest {
	this := LoadbalancerCreateRequest{}
	return &this
}

// GetLoadbalancer returns the Loadbalancer field value
func (o *LoadbalancerCreateRequest) GetLoadbalancer() LoadbalancerCreateRequestDetail {
	if o == nil {
		var ret LoadbalancerCreateRequestDetail
		return ret
	}

	return o.Loadbalancer
}

// GetLoadbalancerOk returns a tuple with the Loadbalancer field value
// and a boolean to check if the value has been set.
func (o *LoadbalancerCreateRequest) GetLoadbalancerOk() (*LoadbalancerCreateRequestDetail, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Loadbalancer, true
}

// SetLoadbalancer sets field value
func (o *LoadbalancerCreateRequest) SetLoadbalancer(v LoadbalancerCreateRequestDetail) {
	o.Loadbalancer = v
}

func (o LoadbalancerCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoadbalancerCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["loadbalancer"] = o.Loadbalancer
	return toSerialize, nil
}

func (o *LoadbalancerCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"loadbalancer",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLoadbalancerCreateRequest := _LoadbalancerCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLoadbalancerCreateRequest)

	if err != nil {
		return err
	}

	*o = LoadbalancerCreateRequest(varLoadbalancerCreateRequest)

	return err
}

type NullableLoadbalancerCreateRequest struct {
	value *LoadbalancerCreateRequest
	isSet bool
}

func (v NullableLoadbalancerCreateRequest) Get() *LoadbalancerCreateRequest {
	return v.value
}

func (v *NullableLoadbalancerCreateRequest) Set(val *LoadbalancerCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadbalancerCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadbalancerCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadbalancerCreateRequest(val *LoadbalancerCreateRequest) *NullableLoadbalancerCreateRequest {
	return &NullableLoadbalancerCreateRequest{value: val, isSet: true}
}

func (v NullableLoadbalancerCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadbalancerCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
