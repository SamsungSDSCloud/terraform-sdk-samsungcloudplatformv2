/*
SCP LoadBalancer Service

SCP LoadBalancer Service

API version: 0.0.1.dev1712
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the LbListenerCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LbListenerCreateRequest{}

// LbListenerCreateRequest struct for LbListenerCreateRequest
type LbListenerCreateRequest struct {
	Listener ListenerForCreate `json:"listener"`
}

type _LbListenerCreateRequest LbListenerCreateRequest

// NewLbListenerCreateRequest instantiates a new LbListenerCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLbListenerCreateRequest(listener ListenerForCreate) *LbListenerCreateRequest {
	this := LbListenerCreateRequest{}
	this.Listener = listener
	return &this
}

// NewLbListenerCreateRequestWithDefaults instantiates a new LbListenerCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLbListenerCreateRequestWithDefaults() *LbListenerCreateRequest {
	this := LbListenerCreateRequest{}
	return &this
}

// GetListener returns the Listener field value
func (o *LbListenerCreateRequest) GetListener() ListenerForCreate {
	if o == nil {
		var ret ListenerForCreate
		return ret
	}

	return o.Listener
}

// GetListenerOk returns a tuple with the Listener field value
// and a boolean to check if the value has been set.
func (o *LbListenerCreateRequest) GetListenerOk() (*ListenerForCreate, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Listener, true
}

// SetListener sets field value
func (o *LbListenerCreateRequest) SetListener(v ListenerForCreate) {
	o.Listener = v
}

func (o LbListenerCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LbListenerCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["listener"] = o.Listener
	return toSerialize, nil
}

func (o *LbListenerCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"listener",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLbListenerCreateRequest := _LbListenerCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLbListenerCreateRequest)

	if err != nil {
		return err
	}

	*o = LbListenerCreateRequest(varLbListenerCreateRequest)

	return err
}

type NullableLbListenerCreateRequest struct {
	value *LbListenerCreateRequest
	isSet bool
}

func (v NullableLbListenerCreateRequest) Get() *LbListenerCreateRequest {
	return v.value
}

func (v *NullableLbListenerCreateRequest) Set(val *LbListenerCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLbListenerCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLbListenerCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLbListenerCreateRequest(val *LbListenerCreateRequest) *NullableLbListenerCreateRequest {
	return &NullableLbListenerCreateRequest{value: val, isSet: true}
}

func (v NullableLbListenerCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLbListenerCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
