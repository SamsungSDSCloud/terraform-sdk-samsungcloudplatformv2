/*
SCP LoadBalancer Service

SCP LoadBalancer Service

API version: 0.0.1.dev1712
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"encoding/json"
)

// checks if the MemberSet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberSet{}

// MemberSet struct for MemberSet
type MemberSet struct {
	MemberPort   NullableInt32      `json:"member_port,omitempty"`
	MemberState  NullableStatusType `json:"member_state,omitempty"`
	MemberWeight NullableInt32      `json:"member_weight,omitempty"`
}

// NewMemberSet instantiates a new MemberSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberSet() *MemberSet {
	this := MemberSet{}
	return &this
}

// NewMemberSetWithDefaults instantiates a new MemberSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberSetWithDefaults() *MemberSet {
	this := MemberSet{}
	return &this
}

// GetMemberPort returns the MemberPort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberSet) GetMemberPort() int32 {
	if o == nil || IsNil(o.MemberPort.Get()) {
		var ret int32
		return ret
	}
	return *o.MemberPort.Get()
}

// GetMemberPortOk returns a tuple with the MemberPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberSet) GetMemberPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemberPort.Get(), o.MemberPort.IsSet()
}

// HasMemberPort returns a boolean if a field has been set.
func (o *MemberSet) HasMemberPort() bool {
	if o != nil && o.MemberPort.IsSet() {
		return true
	}

	return false
}

// SetMemberPort gets a reference to the given NullableInt32 and assigns it to the MemberPort field.
func (o *MemberSet) SetMemberPort(v int32) {
	o.MemberPort.Set(&v)
}

// SetMemberPortNil sets the value for MemberPort to be an explicit nil
func (o *MemberSet) SetMemberPortNil() {
	o.MemberPort.Set(nil)
}

// UnsetMemberPort ensures that no value is present for MemberPort, not even an explicit nil
func (o *MemberSet) UnsetMemberPort() {
	o.MemberPort.Unset()
}

// GetMemberState returns the MemberState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberSet) GetMemberState() StatusType {
	if o == nil || IsNil(o.MemberState.Get()) {
		var ret StatusType
		return ret
	}
	return *o.MemberState.Get()
}

// GetMemberStateOk returns a tuple with the MemberState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberSet) GetMemberStateOk() (*StatusType, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemberState.Get(), o.MemberState.IsSet()
}

// HasMemberState returns a boolean if a field has been set.
func (o *MemberSet) HasMemberState() bool {
	if o != nil && o.MemberState.IsSet() {
		return true
	}

	return false
}

// SetMemberState gets a reference to the given NullableStatusType and assigns it to the MemberState field.
func (o *MemberSet) SetMemberState(v StatusType) {
	o.MemberState.Set(&v)
}

// SetMemberStateNil sets the value for MemberState to be an explicit nil
func (o *MemberSet) SetMemberStateNil() {
	o.MemberState.Set(nil)
}

// UnsetMemberState ensures that no value is present for MemberState, not even an explicit nil
func (o *MemberSet) UnsetMemberState() {
	o.MemberState.Unset()
}

// GetMemberWeight returns the MemberWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberSet) GetMemberWeight() int32 {
	if o == nil || IsNil(o.MemberWeight.Get()) {
		var ret int32
		return ret
	}
	return *o.MemberWeight.Get()
}

// GetMemberWeightOk returns a tuple with the MemberWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberSet) GetMemberWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemberWeight.Get(), o.MemberWeight.IsSet()
}

// HasMemberWeight returns a boolean if a field has been set.
func (o *MemberSet) HasMemberWeight() bool {
	if o != nil && o.MemberWeight.IsSet() {
		return true
	}

	return false
}

// SetMemberWeight gets a reference to the given NullableInt32 and assigns it to the MemberWeight field.
func (o *MemberSet) SetMemberWeight(v int32) {
	o.MemberWeight.Set(&v)
}

// SetMemberWeightNil sets the value for MemberWeight to be an explicit nil
func (o *MemberSet) SetMemberWeightNil() {
	o.MemberWeight.Set(nil)
}

// UnsetMemberWeight ensures that no value is present for MemberWeight, not even an explicit nil
func (o *MemberSet) UnsetMemberWeight() {
	o.MemberWeight.Unset()
}

func (o MemberSet) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberSet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MemberPort.IsSet() {
		toSerialize["member_port"] = o.MemberPort.Get()
	}
	if o.MemberState.IsSet() {
		toSerialize["member_state"] = o.MemberState.Get()
	}
	if o.MemberWeight.IsSet() {
		toSerialize["member_weight"] = o.MemberWeight.Get()
	}
	return toSerialize, nil
}

type NullableMemberSet struct {
	value *MemberSet
	isSet bool
}

func (v NullableMemberSet) Get() *MemberSet {
	return v.value
}

func (v *NullableMemberSet) Set(val *MemberSet) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberSet) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberSet(val *MemberSet) *NullableMemberSet {
	return &NullableMemberSet{value: val, isSet: true}
}

func (v NullableMemberSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
