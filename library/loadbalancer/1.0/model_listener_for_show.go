/*
SCP LoadBalancer Service

SCP LoadBalancer Service

API version: 0.0.1.dev1712
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ListenerForShow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListenerForShow{}

// ListenerForShow struct for ListenerForShow
type ListenerForShow struct {
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy        string         `json:"created_by"`
	Description      NullableString `json:"description,omitempty"`
	HttpsRedirection NullableBool   `json:"https_redirection,omitempty"`
	// ID
	Id             string       `json:"id"`
	InsertClientIp NullableBool `json:"insert_client_ip,omitempty"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy string `json:"modified_by"`
	// The name of the listener.
	Name        string         `json:"name" validate:"regexp=^[a-zA-Z0-9-_]*$"`
	Persistence NullableString `json:"persistence,omitempty"`
	// The protocol of the listener.
	Protocol        string         `json:"protocol"`
	ResponseTimeout NullableInt32  `json:"response_timeout,omitempty"`
	ServerGroupId   NullableString `json:"server_group_id,omitempty"`
	ServerGroupName NullableString `json:"server_group_name,omitempty"`
	// The port of the listener.
	ServicePort         int32                  `json:"service_port"`
	SessionDurationTime NullableInt32          `json:"session_duration_time,omitempty"`
	SslCertificate      NullableSslCertificate `json:"ssl_certificate,omitempty"`
	// The state of the listener.
	State           string        `json:"state"`
	SupportHttp2    NullableBool  `json:"support_http2,omitempty"`
	UrlHandler      []interface{} `json:"url_handler,omitempty"`
	UrlRedirection  []interface{} `json:"url_redirection,omitempty"`
	XForwardedFor   NullableBool  `json:"x_forwarded_for,omitempty"`
	XForwardedPort  NullableBool  `json:"x_forwarded_port,omitempty"`
	XForwardedProto NullableBool  `json:"x_forwarded_proto,omitempty"`
}

type _ListenerForShow ListenerForShow

// NewListenerForShow instantiates a new ListenerForShow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListenerForShow(createdAt time.Time, createdBy string, id string, modifiedAt time.Time, modifiedBy string, name string, protocol string, servicePort int32, state string) *ListenerForShow {
	this := ListenerForShow{}
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.Id = id
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.Name = name
	this.Protocol = protocol
	this.ServicePort = servicePort
	this.State = state
	return &this
}

// NewListenerForShowWithDefaults instantiates a new ListenerForShow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListenerForShowWithDefaults() *ListenerForShow {
	this := ListenerForShow{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *ListenerForShow) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ListenerForShow) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ListenerForShow) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *ListenerForShow) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *ListenerForShow) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *ListenerForShow) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListenerForShow) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListenerForShow) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ListenerForShow) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ListenerForShow) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ListenerForShow) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ListenerForShow) UnsetDescription() {
	o.Description.Unset()
}

// GetHttpsRedirection returns the HttpsRedirection field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListenerForShow) GetHttpsRedirection() bool {
	if o == nil || IsNil(o.HttpsRedirection.Get()) {
		var ret bool
		return ret
	}
	return *o.HttpsRedirection.Get()
}

// GetHttpsRedirectionOk returns a tuple with the HttpsRedirection field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListenerForShow) GetHttpsRedirectionOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HttpsRedirection.Get(), o.HttpsRedirection.IsSet()
}

// HasHttpsRedirection returns a boolean if a field has been set.
func (o *ListenerForShow) HasHttpsRedirection() bool {
	if o != nil && o.HttpsRedirection.IsSet() {
		return true
	}

	return false
}

// SetHttpsRedirection gets a reference to the given NullableBool and assigns it to the HttpsRedirection field.
func (o *ListenerForShow) SetHttpsRedirection(v bool) {
	o.HttpsRedirection.Set(&v)
}

// SetHttpsRedirectionNil sets the value for HttpsRedirection to be an explicit nil
func (o *ListenerForShow) SetHttpsRedirectionNil() {
	o.HttpsRedirection.Set(nil)
}

// UnsetHttpsRedirection ensures that no value is present for HttpsRedirection, not even an explicit nil
func (o *ListenerForShow) UnsetHttpsRedirection() {
	o.HttpsRedirection.Unset()
}

// GetId returns the Id field value
func (o *ListenerForShow) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ListenerForShow) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ListenerForShow) SetId(v string) {
	o.Id = v
}

// GetInsertClientIp returns the InsertClientIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListenerForShow) GetInsertClientIp() bool {
	if o == nil || IsNil(o.InsertClientIp.Get()) {
		var ret bool
		return ret
	}
	return *o.InsertClientIp.Get()
}

// GetInsertClientIpOk returns a tuple with the InsertClientIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListenerForShow) GetInsertClientIpOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.InsertClientIp.Get(), o.InsertClientIp.IsSet()
}

// HasInsertClientIp returns a boolean if a field has been set.
func (o *ListenerForShow) HasInsertClientIp() bool {
	if o != nil && o.InsertClientIp.IsSet() {
		return true
	}

	return false
}

// SetInsertClientIp gets a reference to the given NullableBool and assigns it to the InsertClientIp field.
func (o *ListenerForShow) SetInsertClientIp(v bool) {
	o.InsertClientIp.Set(&v)
}

// SetInsertClientIpNil sets the value for InsertClientIp to be an explicit nil
func (o *ListenerForShow) SetInsertClientIpNil() {
	o.InsertClientIp.Set(nil)
}

// UnsetInsertClientIp ensures that no value is present for InsertClientIp, not even an explicit nil
func (o *ListenerForShow) UnsetInsertClientIp() {
	o.InsertClientIp.Unset()
}

// GetModifiedAt returns the ModifiedAt field value
func (o *ListenerForShow) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *ListenerForShow) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *ListenerForShow) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *ListenerForShow) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *ListenerForShow) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *ListenerForShow) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetName returns the Name field value
func (o *ListenerForShow) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ListenerForShow) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ListenerForShow) SetName(v string) {
	o.Name = v
}

// GetPersistence returns the Persistence field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListenerForShow) GetPersistence() string {
	if o == nil || IsNil(o.Persistence.Get()) {
		var ret string
		return ret
	}
	return *o.Persistence.Get()
}

// GetPersistenceOk returns a tuple with the Persistence field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListenerForShow) GetPersistenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Persistence.Get(), o.Persistence.IsSet()
}

// HasPersistence returns a boolean if a field has been set.
func (o *ListenerForShow) HasPersistence() bool {
	if o != nil && o.Persistence.IsSet() {
		return true
	}

	return false
}

// SetPersistence gets a reference to the given NullableString and assigns it to the Persistence field.
func (o *ListenerForShow) SetPersistence(v string) {
	o.Persistence.Set(&v)
}

// SetPersistenceNil sets the value for Persistence to be an explicit nil
func (o *ListenerForShow) SetPersistenceNil() {
	o.Persistence.Set(nil)
}

// UnsetPersistence ensures that no value is present for Persistence, not even an explicit nil
func (o *ListenerForShow) UnsetPersistence() {
	o.Persistence.Unset()
}

// GetProtocol returns the Protocol field value
func (o *ListenerForShow) GetProtocol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *ListenerForShow) GetProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *ListenerForShow) SetProtocol(v string) {
	o.Protocol = v
}

// GetResponseTimeout returns the ResponseTimeout field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListenerForShow) GetResponseTimeout() int32 {
	if o == nil || IsNil(o.ResponseTimeout.Get()) {
		var ret int32
		return ret
	}
	return *o.ResponseTimeout.Get()
}

// GetResponseTimeoutOk returns a tuple with the ResponseTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListenerForShow) GetResponseTimeoutOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResponseTimeout.Get(), o.ResponseTimeout.IsSet()
}

// HasResponseTimeout returns a boolean if a field has been set.
func (o *ListenerForShow) HasResponseTimeout() bool {
	if o != nil && o.ResponseTimeout.IsSet() {
		return true
	}

	return false
}

// SetResponseTimeout gets a reference to the given NullableInt32 and assigns it to the ResponseTimeout field.
func (o *ListenerForShow) SetResponseTimeout(v int32) {
	o.ResponseTimeout.Set(&v)
}

// SetResponseTimeoutNil sets the value for ResponseTimeout to be an explicit nil
func (o *ListenerForShow) SetResponseTimeoutNil() {
	o.ResponseTimeout.Set(nil)
}

// UnsetResponseTimeout ensures that no value is present for ResponseTimeout, not even an explicit nil
func (o *ListenerForShow) UnsetResponseTimeout() {
	o.ResponseTimeout.Unset()
}

// GetServerGroupId returns the ServerGroupId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListenerForShow) GetServerGroupId() string {
	if o == nil || IsNil(o.ServerGroupId.Get()) {
		var ret string
		return ret
	}
	return *o.ServerGroupId.Get()
}

// GetServerGroupIdOk returns a tuple with the ServerGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListenerForShow) GetServerGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerGroupId.Get(), o.ServerGroupId.IsSet()
}

// HasServerGroupId returns a boolean if a field has been set.
func (o *ListenerForShow) HasServerGroupId() bool {
	if o != nil && o.ServerGroupId.IsSet() {
		return true
	}

	return false
}

// SetServerGroupId gets a reference to the given NullableString and assigns it to the ServerGroupId field.
func (o *ListenerForShow) SetServerGroupId(v string) {
	o.ServerGroupId.Set(&v)
}

// SetServerGroupIdNil sets the value for ServerGroupId to be an explicit nil
func (o *ListenerForShow) SetServerGroupIdNil() {
	o.ServerGroupId.Set(nil)
}

// UnsetServerGroupId ensures that no value is present for ServerGroupId, not even an explicit nil
func (o *ListenerForShow) UnsetServerGroupId() {
	o.ServerGroupId.Unset()
}

// GetServerGroupName returns the ServerGroupName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListenerForShow) GetServerGroupName() string {
	if o == nil || IsNil(o.ServerGroupName.Get()) {
		var ret string
		return ret
	}
	return *o.ServerGroupName.Get()
}

// GetServerGroupNameOk returns a tuple with the ServerGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListenerForShow) GetServerGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerGroupName.Get(), o.ServerGroupName.IsSet()
}

// HasServerGroupName returns a boolean if a field has been set.
func (o *ListenerForShow) HasServerGroupName() bool {
	if o != nil && o.ServerGroupName.IsSet() {
		return true
	}

	return false
}

// SetServerGroupName gets a reference to the given NullableString and assigns it to the ServerGroupName field.
func (o *ListenerForShow) SetServerGroupName(v string) {
	o.ServerGroupName.Set(&v)
}

// SetServerGroupNameNil sets the value for ServerGroupName to be an explicit nil
func (o *ListenerForShow) SetServerGroupNameNil() {
	o.ServerGroupName.Set(nil)
}

// UnsetServerGroupName ensures that no value is present for ServerGroupName, not even an explicit nil
func (o *ListenerForShow) UnsetServerGroupName() {
	o.ServerGroupName.Unset()
}

// GetServicePort returns the ServicePort field value
func (o *ListenerForShow) GetServicePort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ServicePort
}

// GetServicePortOk returns a tuple with the ServicePort field value
// and a boolean to check if the value has been set.
func (o *ListenerForShow) GetServicePortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServicePort, true
}

// SetServicePort sets field value
func (o *ListenerForShow) SetServicePort(v int32) {
	o.ServicePort = v
}

// GetSessionDurationTime returns the SessionDurationTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListenerForShow) GetSessionDurationTime() int32 {
	if o == nil || IsNil(o.SessionDurationTime.Get()) {
		var ret int32
		return ret
	}
	return *o.SessionDurationTime.Get()
}

// GetSessionDurationTimeOk returns a tuple with the SessionDurationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListenerForShow) GetSessionDurationTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SessionDurationTime.Get(), o.SessionDurationTime.IsSet()
}

// HasSessionDurationTime returns a boolean if a field has been set.
func (o *ListenerForShow) HasSessionDurationTime() bool {
	if o != nil && o.SessionDurationTime.IsSet() {
		return true
	}

	return false
}

// SetSessionDurationTime gets a reference to the given NullableInt32 and assigns it to the SessionDurationTime field.
func (o *ListenerForShow) SetSessionDurationTime(v int32) {
	o.SessionDurationTime.Set(&v)
}

// SetSessionDurationTimeNil sets the value for SessionDurationTime to be an explicit nil
func (o *ListenerForShow) SetSessionDurationTimeNil() {
	o.SessionDurationTime.Set(nil)
}

// UnsetSessionDurationTime ensures that no value is present for SessionDurationTime, not even an explicit nil
func (o *ListenerForShow) UnsetSessionDurationTime() {
	o.SessionDurationTime.Unset()
}

// GetSslCertificate returns the SslCertificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListenerForShow) GetSslCertificate() SslCertificate {
	if o == nil || IsNil(o.SslCertificate.Get()) {
		var ret SslCertificate
		return ret
	}
	return *o.SslCertificate.Get()
}

// GetSslCertificateOk returns a tuple with the SslCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListenerForShow) GetSslCertificateOk() (*SslCertificate, bool) {
	if o == nil {
		return nil, false
	}
	return o.SslCertificate.Get(), o.SslCertificate.IsSet()
}

// HasSslCertificate returns a boolean if a field has been set.
func (o *ListenerForShow) HasSslCertificate() bool {
	if o != nil && o.SslCertificate.IsSet() {
		return true
	}

	return false
}

// SetSslCertificate gets a reference to the given NullableSslCertificate and assigns it to the SslCertificate field.
func (o *ListenerForShow) SetSslCertificate(v SslCertificate) {
	o.SslCertificate.Set(&v)
}

// SetSslCertificateNil sets the value for SslCertificate to be an explicit nil
func (o *ListenerForShow) SetSslCertificateNil() {
	o.SslCertificate.Set(nil)
}

// UnsetSslCertificate ensures that no value is present for SslCertificate, not even an explicit nil
func (o *ListenerForShow) UnsetSslCertificate() {
	o.SslCertificate.Unset()
}

// GetState returns the State field value
func (o *ListenerForShow) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *ListenerForShow) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *ListenerForShow) SetState(v string) {
	o.State = v
}

// GetSupportHttp2 returns the SupportHttp2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListenerForShow) GetSupportHttp2() bool {
	if o == nil || IsNil(o.SupportHttp2.Get()) {
		var ret bool
		return ret
	}
	return *o.SupportHttp2.Get()
}

// GetSupportHttp2Ok returns a tuple with the SupportHttp2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListenerForShow) GetSupportHttp2Ok() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SupportHttp2.Get(), o.SupportHttp2.IsSet()
}

// HasSupportHttp2 returns a boolean if a field has been set.
func (o *ListenerForShow) HasSupportHttp2() bool {
	if o != nil && o.SupportHttp2.IsSet() {
		return true
	}

	return false
}

// SetSupportHttp2 gets a reference to the given NullableBool and assigns it to the SupportHttp2 field.
func (o *ListenerForShow) SetSupportHttp2(v bool) {
	o.SupportHttp2.Set(&v)
}

// SetSupportHttp2Nil sets the value for SupportHttp2 to be an explicit nil
func (o *ListenerForShow) SetSupportHttp2Nil() {
	o.SupportHttp2.Set(nil)
}

// UnsetSupportHttp2 ensures that no value is present for SupportHttp2, not even an explicit nil
func (o *ListenerForShow) UnsetSupportHttp2() {
	o.SupportHttp2.Unset()
}

// GetUrlHandler returns the UrlHandler field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListenerForShow) GetUrlHandler() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}
	return o.UrlHandler
}

// GetUrlHandlerOk returns a tuple with the UrlHandler field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListenerForShow) GetUrlHandlerOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.UrlHandler) {
		return nil, false
	}
	return o.UrlHandler, true
}

// HasUrlHandler returns a boolean if a field has been set.
func (o *ListenerForShow) HasUrlHandler() bool {
	if o != nil && !IsNil(o.UrlHandler) {
		return true
	}

	return false
}

// SetUrlHandler gets a reference to the given []interface{} and assigns it to the UrlHandler field.
func (o *ListenerForShow) SetUrlHandler(v []interface{}) {
	o.UrlHandler = v
}

// GetUrlRedirection returns the UrlRedirection field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListenerForShow) GetUrlRedirection() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}
	return o.UrlRedirection
}

// GetUrlRedirectionOk returns a tuple with the UrlRedirection field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListenerForShow) GetUrlRedirectionOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.UrlRedirection) {
		return nil, false
	}
	return o.UrlRedirection, true
}

// HasUrlRedirection returns a boolean if a field has been set.
func (o *ListenerForShow) HasUrlRedirection() bool {
	if o != nil && !IsNil(o.UrlRedirection) {
		return true
	}

	return false
}

// SetUrlRedirection gets a reference to the given []interface{} and assigns it to the UrlRedirection field.
func (o *ListenerForShow) SetUrlRedirection(v []interface{}) {
	o.UrlRedirection = v
}

// GetXForwardedFor returns the XForwardedFor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListenerForShow) GetXForwardedFor() bool {
	if o == nil || IsNil(o.XForwardedFor.Get()) {
		var ret bool
		return ret
	}
	return *o.XForwardedFor.Get()
}

// GetXForwardedForOk returns a tuple with the XForwardedFor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListenerForShow) GetXForwardedForOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.XForwardedFor.Get(), o.XForwardedFor.IsSet()
}

// HasXForwardedFor returns a boolean if a field has been set.
func (o *ListenerForShow) HasXForwardedFor() bool {
	if o != nil && o.XForwardedFor.IsSet() {
		return true
	}

	return false
}

// SetXForwardedFor gets a reference to the given NullableBool and assigns it to the XForwardedFor field.
func (o *ListenerForShow) SetXForwardedFor(v bool) {
	o.XForwardedFor.Set(&v)
}

// SetXForwardedForNil sets the value for XForwardedFor to be an explicit nil
func (o *ListenerForShow) SetXForwardedForNil() {
	o.XForwardedFor.Set(nil)
}

// UnsetXForwardedFor ensures that no value is present for XForwardedFor, not even an explicit nil
func (o *ListenerForShow) UnsetXForwardedFor() {
	o.XForwardedFor.Unset()
}

// GetXForwardedPort returns the XForwardedPort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListenerForShow) GetXForwardedPort() bool {
	if o == nil || IsNil(o.XForwardedPort.Get()) {
		var ret bool
		return ret
	}
	return *o.XForwardedPort.Get()
}

// GetXForwardedPortOk returns a tuple with the XForwardedPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListenerForShow) GetXForwardedPortOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.XForwardedPort.Get(), o.XForwardedPort.IsSet()
}

// HasXForwardedPort returns a boolean if a field has been set.
func (o *ListenerForShow) HasXForwardedPort() bool {
	if o != nil && o.XForwardedPort.IsSet() {
		return true
	}

	return false
}

// SetXForwardedPort gets a reference to the given NullableBool and assigns it to the XForwardedPort field.
func (o *ListenerForShow) SetXForwardedPort(v bool) {
	o.XForwardedPort.Set(&v)
}

// SetXForwardedPortNil sets the value for XForwardedPort to be an explicit nil
func (o *ListenerForShow) SetXForwardedPortNil() {
	o.XForwardedPort.Set(nil)
}

// UnsetXForwardedPort ensures that no value is present for XForwardedPort, not even an explicit nil
func (o *ListenerForShow) UnsetXForwardedPort() {
	o.XForwardedPort.Unset()
}

// GetXForwardedProto returns the XForwardedProto field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListenerForShow) GetXForwardedProto() bool {
	if o == nil || IsNil(o.XForwardedProto.Get()) {
		var ret bool
		return ret
	}
	return *o.XForwardedProto.Get()
}

// GetXForwardedProtoOk returns a tuple with the XForwardedProto field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListenerForShow) GetXForwardedProtoOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.XForwardedProto.Get(), o.XForwardedProto.IsSet()
}

// HasXForwardedProto returns a boolean if a field has been set.
func (o *ListenerForShow) HasXForwardedProto() bool {
	if o != nil && o.XForwardedProto.IsSet() {
		return true
	}

	return false
}

// SetXForwardedProto gets a reference to the given NullableBool and assigns it to the XForwardedProto field.
func (o *ListenerForShow) SetXForwardedProto(v bool) {
	o.XForwardedProto.Set(&v)
}

// SetXForwardedProtoNil sets the value for XForwardedProto to be an explicit nil
func (o *ListenerForShow) SetXForwardedProtoNil() {
	o.XForwardedProto.Set(nil)
}

// UnsetXForwardedProto ensures that no value is present for XForwardedProto, not even an explicit nil
func (o *ListenerForShow) UnsetXForwardedProto() {
	o.XForwardedProto.Unset()
}

func (o ListenerForShow) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListenerForShow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.HttpsRedirection.IsSet() {
		toSerialize["https_redirection"] = o.HttpsRedirection.Get()
	}
	toSerialize["id"] = o.Id
	if o.InsertClientIp.IsSet() {
		toSerialize["insert_client_ip"] = o.InsertClientIp.Get()
	}
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	toSerialize["name"] = o.Name
	if o.Persistence.IsSet() {
		toSerialize["persistence"] = o.Persistence.Get()
	}
	toSerialize["protocol"] = o.Protocol
	if o.ResponseTimeout.IsSet() {
		toSerialize["response_timeout"] = o.ResponseTimeout.Get()
	}
	if o.ServerGroupId.IsSet() {
		toSerialize["server_group_id"] = o.ServerGroupId.Get()
	}
	if o.ServerGroupName.IsSet() {
		toSerialize["server_group_name"] = o.ServerGroupName.Get()
	}
	toSerialize["service_port"] = o.ServicePort
	if o.SessionDurationTime.IsSet() {
		toSerialize["session_duration_time"] = o.SessionDurationTime.Get()
	}
	if o.SslCertificate.IsSet() {
		toSerialize["ssl_certificate"] = o.SslCertificate.Get()
	}
	toSerialize["state"] = o.State
	if o.SupportHttp2.IsSet() {
		toSerialize["support_http2"] = o.SupportHttp2.Get()
	}
	if o.UrlHandler != nil {
		toSerialize["url_handler"] = o.UrlHandler
	}
	if o.UrlRedirection != nil {
		toSerialize["url_redirection"] = o.UrlRedirection
	}
	if o.XForwardedFor.IsSet() {
		toSerialize["x_forwarded_for"] = o.XForwardedFor.Get()
	}
	if o.XForwardedPort.IsSet() {
		toSerialize["x_forwarded_port"] = o.XForwardedPort.Get()
	}
	if o.XForwardedProto.IsSet() {
		toSerialize["x_forwarded_proto"] = o.XForwardedProto.Get()
	}
	return toSerialize, nil
}

func (o *ListenerForShow) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"created_by",
		"id",
		"modified_at",
		"modified_by",
		"name",
		"protocol",
		"service_port",
		"state",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListenerForShow := _ListenerForShow{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListenerForShow)

	if err != nil {
		return err
	}

	*o = ListenerForShow(varListenerForShow)

	return err
}

type NullableListenerForShow struct {
	value *ListenerForShow
	isSet bool
}

func (v NullableListenerForShow) Get() *ListenerForShow {
	return v.value
}

func (v *NullableListenerForShow) Set(val *ListenerForShow) {
	v.value = val
	v.isSet = true
}

func (v NullableListenerForShow) IsSet() bool {
	return v.isSet
}

func (v *NullableListenerForShow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListenerForShow(val *ListenerForShow) *NullableListenerForShow {
	return &NullableListenerForShow{value: val, isSet: true}
}

func (v NullableListenerForShow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListenerForShow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
