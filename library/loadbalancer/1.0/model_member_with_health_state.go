/*
SCP LoadBalancer Service

SCP LoadBalancer Service

API version: 0.0.1.dev1712
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the MemberWithHealthState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberWithHealthState{}

// MemberWithHealthState struct for MemberWithHealthState
type MemberWithHealthState struct {
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy string `json:"created_by"`
	// Health State of Member
	HealthState string `json:"health_state"`
	// ID
	Id string `json:"id"`
	// ID of Lb Server Group
	LbServerGroupId string `json:"lb_server_group_id"`
	// IP of Member
	MemberIp string `json:"member_ip"`
	// Protocol port of Member
	MemberPort int32 `json:"member_port"`
	// Member State of Member
	MemberState string `json:"member_state"`
	// Weight of Member
	MemberWeight int32 `json:"member_weight"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy string `json:"modified_by"`
	// Name of Member
	Name     string         `json:"name"`
	ObjectId NullableString `json:"object_id"`
	// Object Type of Member
	ObjectType MemberType `json:"object_type"`
	// State of Member
	State MemberState `json:"state"`
}

type _MemberWithHealthState MemberWithHealthState

// NewMemberWithHealthState instantiates a new MemberWithHealthState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberWithHealthState(createdAt time.Time, createdBy string, healthState string, id string, lbServerGroupId string, memberIp string, memberPort int32, memberState string, memberWeight int32, modifiedAt time.Time, modifiedBy string, name string, objectId NullableString, objectType MemberType, state MemberState) *MemberWithHealthState {
	this := MemberWithHealthState{}
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.HealthState = healthState
	this.Id = id
	this.LbServerGroupId = lbServerGroupId
	this.MemberIp = memberIp
	this.MemberPort = memberPort
	this.MemberState = memberState
	this.MemberWeight = memberWeight
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.Name = name
	this.ObjectId = objectId
	this.ObjectType = objectType
	this.State = state
	return &this
}

// NewMemberWithHealthStateWithDefaults instantiates a new MemberWithHealthState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberWithHealthStateWithDefaults() *MemberWithHealthState {
	this := MemberWithHealthState{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *MemberWithHealthState) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *MemberWithHealthState) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *MemberWithHealthState) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *MemberWithHealthState) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *MemberWithHealthState) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *MemberWithHealthState) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetHealthState returns the HealthState field value
func (o *MemberWithHealthState) GetHealthState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HealthState
}

// GetHealthStateOk returns a tuple with the HealthState field value
// and a boolean to check if the value has been set.
func (o *MemberWithHealthState) GetHealthStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HealthState, true
}

// SetHealthState sets field value
func (o *MemberWithHealthState) SetHealthState(v string) {
	o.HealthState = v
}

// GetId returns the Id field value
func (o *MemberWithHealthState) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MemberWithHealthState) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MemberWithHealthState) SetId(v string) {
	o.Id = v
}

// GetLbServerGroupId returns the LbServerGroupId field value
func (o *MemberWithHealthState) GetLbServerGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LbServerGroupId
}

// GetLbServerGroupIdOk returns a tuple with the LbServerGroupId field value
// and a boolean to check if the value has been set.
func (o *MemberWithHealthState) GetLbServerGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LbServerGroupId, true
}

// SetLbServerGroupId sets field value
func (o *MemberWithHealthState) SetLbServerGroupId(v string) {
	o.LbServerGroupId = v
}

// GetMemberIp returns the MemberIp field value
func (o *MemberWithHealthState) GetMemberIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MemberIp
}

// GetMemberIpOk returns a tuple with the MemberIp field value
// and a boolean to check if the value has been set.
func (o *MemberWithHealthState) GetMemberIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemberIp, true
}

// SetMemberIp sets field value
func (o *MemberWithHealthState) SetMemberIp(v string) {
	o.MemberIp = v
}

// GetMemberPort returns the MemberPort field value
func (o *MemberWithHealthState) GetMemberPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MemberPort
}

// GetMemberPortOk returns a tuple with the MemberPort field value
// and a boolean to check if the value has been set.
func (o *MemberWithHealthState) GetMemberPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemberPort, true
}

// SetMemberPort sets field value
func (o *MemberWithHealthState) SetMemberPort(v int32) {
	o.MemberPort = v
}

// GetMemberState returns the MemberState field value
func (o *MemberWithHealthState) GetMemberState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MemberState
}

// GetMemberStateOk returns a tuple with the MemberState field value
// and a boolean to check if the value has been set.
func (o *MemberWithHealthState) GetMemberStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemberState, true
}

// SetMemberState sets field value
func (o *MemberWithHealthState) SetMemberState(v string) {
	o.MemberState = v
}

// GetMemberWeight returns the MemberWeight field value
func (o *MemberWithHealthState) GetMemberWeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MemberWeight
}

// GetMemberWeightOk returns a tuple with the MemberWeight field value
// and a boolean to check if the value has been set.
func (o *MemberWithHealthState) GetMemberWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemberWeight, true
}

// SetMemberWeight sets field value
func (o *MemberWithHealthState) SetMemberWeight(v int32) {
	o.MemberWeight = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *MemberWithHealthState) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *MemberWithHealthState) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *MemberWithHealthState) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *MemberWithHealthState) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *MemberWithHealthState) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *MemberWithHealthState) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetName returns the Name field value
func (o *MemberWithHealthState) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MemberWithHealthState) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MemberWithHealthState) SetName(v string) {
	o.Name = v
}

// GetObjectId returns the ObjectId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MemberWithHealthState) GetObjectId() string {
	if o == nil || o.ObjectId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ObjectId.Get()
}

// GetObjectIdOk returns a tuple with the ObjectId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberWithHealthState) GetObjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObjectId.Get(), o.ObjectId.IsSet()
}

// SetObjectId sets field value
func (o *MemberWithHealthState) SetObjectId(v string) {
	o.ObjectId.Set(&v)
}

// GetObjectType returns the ObjectType field value
func (o *MemberWithHealthState) GetObjectType() MemberType {
	if o == nil {
		var ret MemberType
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *MemberWithHealthState) GetObjectTypeOk() (*MemberType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *MemberWithHealthState) SetObjectType(v MemberType) {
	o.ObjectType = v
}

// GetState returns the State field value
func (o *MemberWithHealthState) GetState() MemberState {
	if o == nil {
		var ret MemberState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *MemberWithHealthState) GetStateOk() (*MemberState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *MemberWithHealthState) SetState(v MemberState) {
	o.State = v
}

func (o MemberWithHealthState) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberWithHealthState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	toSerialize["health_state"] = o.HealthState
	toSerialize["id"] = o.Id
	toSerialize["lb_server_group_id"] = o.LbServerGroupId
	toSerialize["member_ip"] = o.MemberIp
	toSerialize["member_port"] = o.MemberPort
	toSerialize["member_state"] = o.MemberState
	toSerialize["member_weight"] = o.MemberWeight
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	toSerialize["name"] = o.Name
	toSerialize["object_id"] = o.ObjectId.Get()
	toSerialize["object_type"] = o.ObjectType
	toSerialize["state"] = o.State
	return toSerialize, nil
}

func (o *MemberWithHealthState) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"created_by",
		"health_state",
		"id",
		"lb_server_group_id",
		"member_ip",
		"member_port",
		"member_state",
		"member_weight",
		"modified_at",
		"modified_by",
		"name",
		"object_id",
		"object_type",
		"state",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMemberWithHealthState := _MemberWithHealthState{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMemberWithHealthState)

	if err != nil {
		return err
	}

	*o = MemberWithHealthState(varMemberWithHealthState)

	return err
}

type NullableMemberWithHealthState struct {
	value *MemberWithHealthState
	isSet bool
}

func (v NullableMemberWithHealthState) Get() *MemberWithHealthState {
	return v.value
}

func (v *NullableMemberWithHealthState) Set(val *MemberWithHealthState) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberWithHealthState) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberWithHealthState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberWithHealthState(val *MemberWithHealthState) *NullableMemberWithHealthState {
	return &NullableMemberWithHealthState{value: val, isSet: true}
}

func (v NullableMemberWithHealthState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberWithHealthState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
