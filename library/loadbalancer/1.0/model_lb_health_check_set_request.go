/*
SCP LoadBalancer Service

SCP LoadBalancer Service

API version: 0.0.1.dev1712
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loadbalancer

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the LbHealthCheckSetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LbHealthCheckSetRequest{}

// LbHealthCheckSetRequest struct for LbHealthCheckSetRequest
type LbHealthCheckSetRequest struct {
	LbHealthCheck LbHealthCheckSet `json:"lb_health_check"`
}

type _LbHealthCheckSetRequest LbHealthCheckSetRequest

// NewLbHealthCheckSetRequest instantiates a new LbHealthCheckSetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLbHealthCheckSetRequest(lbHealthCheck LbHealthCheckSet) *LbHealthCheckSetRequest {
	this := LbHealthCheckSetRequest{}
	this.LbHealthCheck = lbHealthCheck
	return &this
}

// NewLbHealthCheckSetRequestWithDefaults instantiates a new LbHealthCheckSetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLbHealthCheckSetRequestWithDefaults() *LbHealthCheckSetRequest {
	this := LbHealthCheckSetRequest{}
	return &this
}

// GetLbHealthCheck returns the LbHealthCheck field value
func (o *LbHealthCheckSetRequest) GetLbHealthCheck() LbHealthCheckSet {
	if o == nil {
		var ret LbHealthCheckSet
		return ret
	}

	return o.LbHealthCheck
}

// GetLbHealthCheckOk returns a tuple with the LbHealthCheck field value
// and a boolean to check if the value has been set.
func (o *LbHealthCheckSetRequest) GetLbHealthCheckOk() (*LbHealthCheckSet, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LbHealthCheck, true
}

// SetLbHealthCheck sets field value
func (o *LbHealthCheckSetRequest) SetLbHealthCheck(v LbHealthCheckSet) {
	o.LbHealthCheck = v
}

func (o LbHealthCheckSetRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LbHealthCheckSetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["lb_health_check"] = o.LbHealthCheck
	return toSerialize, nil
}

func (o *LbHealthCheckSetRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"lb_health_check",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLbHealthCheckSetRequest := _LbHealthCheckSetRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLbHealthCheckSetRequest)

	if err != nil {
		return err
	}

	*o = LbHealthCheckSetRequest(varLbHealthCheckSetRequest)

	return err
}

type NullableLbHealthCheckSetRequest struct {
	value *LbHealthCheckSetRequest
	isSet bool
}

func (v NullableLbHealthCheckSetRequest) Get() *LbHealthCheckSetRequest {
	return v.value
}

func (v *NullableLbHealthCheckSetRequest) Set(val *LbHealthCheckSetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLbHealthCheckSetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLbHealthCheckSetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLbHealthCheckSetRequest(val *LbHealthCheckSetRequest) *NullableLbHealthCheckSetRequest {
	return &NullableLbHealthCheckSetRequest{value: val, isSet: true}
}

func (v NullableLbHealthCheckSetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLbHealthCheckSetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
