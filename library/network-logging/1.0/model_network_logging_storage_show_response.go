/*
SCP Network Service

SCP Network Service

API version: 0.0.1.dev6882
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networklogging

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the NetworkLoggingStorageShowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkLoggingStorageShowResponse{}

// NetworkLoggingStorageShowResponse struct for NetworkLoggingStorageShowResponse
type NetworkLoggingStorageShowResponse struct {
	NetworkLoggingStorage NetworkLoggingStorage `json:"network_logging_storage"`
}

type _NetworkLoggingStorageShowResponse NetworkLoggingStorageShowResponse

// NewNetworkLoggingStorageShowResponse instantiates a new NetworkLoggingStorageShowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkLoggingStorageShowResponse(networkLoggingStorage NetworkLoggingStorage) *NetworkLoggingStorageShowResponse {
	this := NetworkLoggingStorageShowResponse{}
	this.NetworkLoggingStorage = networkLoggingStorage
	return &this
}

// NewNetworkLoggingStorageShowResponseWithDefaults instantiates a new NetworkLoggingStorageShowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkLoggingStorageShowResponseWithDefaults() *NetworkLoggingStorageShowResponse {
	this := NetworkLoggingStorageShowResponse{}
	return &this
}

// GetNetworkLoggingStorage returns the NetworkLoggingStorage field value
func (o *NetworkLoggingStorageShowResponse) GetNetworkLoggingStorage() NetworkLoggingStorage {
	if o == nil {
		var ret NetworkLoggingStorage
		return ret
	}

	return o.NetworkLoggingStorage
}

// GetNetworkLoggingStorageOk returns a tuple with the NetworkLoggingStorage field value
// and a boolean to check if the value has been set.
func (o *NetworkLoggingStorageShowResponse) GetNetworkLoggingStorageOk() (*NetworkLoggingStorage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkLoggingStorage, true
}

// SetNetworkLoggingStorage sets field value
func (o *NetworkLoggingStorageShowResponse) SetNetworkLoggingStorage(v NetworkLoggingStorage) {
	o.NetworkLoggingStorage = v
}

func (o NetworkLoggingStorageShowResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkLoggingStorageShowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["network_logging_storage"] = o.NetworkLoggingStorage
	return toSerialize, nil
}

func (o *NetworkLoggingStorageShowResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"network_logging_storage",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNetworkLoggingStorageShowResponse := _NetworkLoggingStorageShowResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNetworkLoggingStorageShowResponse)

	if err != nil {
		return err
	}

	*o = NetworkLoggingStorageShowResponse(varNetworkLoggingStorageShowResponse)

	return err
}

type NullableNetworkLoggingStorageShowResponse struct {
	value *NetworkLoggingStorageShowResponse
	isSet bool
}

func (v NullableNetworkLoggingStorageShowResponse) Get() *NetworkLoggingStorageShowResponse {
	return v.value
}

func (v *NullableNetworkLoggingStorageShowResponse) Set(val *NetworkLoggingStorageShowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkLoggingStorageShowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkLoggingStorageShowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkLoggingStorageShowResponse(val *NetworkLoggingStorageShowResponse) *NullableNetworkLoggingStorageShowResponse {
	return &NullableNetworkLoggingStorageShowResponse{value: val, isSet: true}
}

func (v NullableNetworkLoggingStorageShowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkLoggingStorageShowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
