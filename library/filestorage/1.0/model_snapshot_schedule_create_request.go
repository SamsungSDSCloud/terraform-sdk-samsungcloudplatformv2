/*
SCP File Storage Service

SCP File Storage Service

API version: 1.1.1.dev1098
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package filestorage

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SnapshotScheduleCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnapshotScheduleCreateRequest{}

// SnapshotScheduleCreateRequest struct for SnapshotScheduleCreateRequest
type SnapshotScheduleCreateRequest struct {
	SnapshotRetentionCount NullableInt32    `json:"snapshot_retention_count,omitempty"`
	SnapshotSchedule       SnapshotSchedule `json:"snapshot_schedule"`
	// Volume ID
	VolumeId string `json:"volume_id"`
}

type _SnapshotScheduleCreateRequest SnapshotScheduleCreateRequest

// NewSnapshotScheduleCreateRequest instantiates a new SnapshotScheduleCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotScheduleCreateRequest(snapshotSchedule SnapshotSchedule, volumeId string) *SnapshotScheduleCreateRequest {
	this := SnapshotScheduleCreateRequest{}
	this.SnapshotSchedule = snapshotSchedule
	this.VolumeId = volumeId
	return &this
}

// NewSnapshotScheduleCreateRequestWithDefaults instantiates a new SnapshotScheduleCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotScheduleCreateRequestWithDefaults() *SnapshotScheduleCreateRequest {
	this := SnapshotScheduleCreateRequest{}
	return &this
}

// GetSnapshotRetentionCount returns the SnapshotRetentionCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotScheduleCreateRequest) GetSnapshotRetentionCount() int32 {
	if o == nil || IsNil(o.SnapshotRetentionCount.Get()) {
		var ret int32
		return ret
	}
	return *o.SnapshotRetentionCount.Get()
}

// GetSnapshotRetentionCountOk returns a tuple with the SnapshotRetentionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotScheduleCreateRequest) GetSnapshotRetentionCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SnapshotRetentionCount.Get(), o.SnapshotRetentionCount.IsSet()
}

// HasSnapshotRetentionCount returns a boolean if a field has been set.
func (o *SnapshotScheduleCreateRequest) HasSnapshotRetentionCount() bool {
	if o != nil && o.SnapshotRetentionCount.IsSet() {
		return true
	}

	return false
}

// SetSnapshotRetentionCount gets a reference to the given NullableInt32 and assigns it to the SnapshotRetentionCount field.
func (o *SnapshotScheduleCreateRequest) SetSnapshotRetentionCount(v int32) {
	o.SnapshotRetentionCount.Set(&v)
}

// SetSnapshotRetentionCountNil sets the value for SnapshotRetentionCount to be an explicit nil
func (o *SnapshotScheduleCreateRequest) SetSnapshotRetentionCountNil() {
	o.SnapshotRetentionCount.Set(nil)
}

// UnsetSnapshotRetentionCount ensures that no value is present for SnapshotRetentionCount, not even an explicit nil
func (o *SnapshotScheduleCreateRequest) UnsetSnapshotRetentionCount() {
	o.SnapshotRetentionCount.Unset()
}

// GetSnapshotSchedule returns the SnapshotSchedule field value
func (o *SnapshotScheduleCreateRequest) GetSnapshotSchedule() SnapshotSchedule {
	if o == nil {
		var ret SnapshotSchedule
		return ret
	}

	return o.SnapshotSchedule
}

// GetSnapshotScheduleOk returns a tuple with the SnapshotSchedule field value
// and a boolean to check if the value has been set.
func (o *SnapshotScheduleCreateRequest) GetSnapshotScheduleOk() (*SnapshotSchedule, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SnapshotSchedule, true
}

// SetSnapshotSchedule sets field value
func (o *SnapshotScheduleCreateRequest) SetSnapshotSchedule(v SnapshotSchedule) {
	o.SnapshotSchedule = v
}

// GetVolumeId returns the VolumeId field value
func (o *SnapshotScheduleCreateRequest) GetVolumeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value
// and a boolean to check if the value has been set.
func (o *SnapshotScheduleCreateRequest) GetVolumeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolumeId, true
}

// SetVolumeId sets field value
func (o *SnapshotScheduleCreateRequest) SetVolumeId(v string) {
	o.VolumeId = v
}

func (o SnapshotScheduleCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnapshotScheduleCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SnapshotRetentionCount.IsSet() {
		toSerialize["snapshot_retention_count"] = o.SnapshotRetentionCount.Get()
	}
	toSerialize["snapshot_schedule"] = o.SnapshotSchedule
	toSerialize["volume_id"] = o.VolumeId
	return toSerialize, nil
}

func (o *SnapshotScheduleCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"snapshot_schedule",
		"volume_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSnapshotScheduleCreateRequest := _SnapshotScheduleCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSnapshotScheduleCreateRequest)

	if err != nil {
		return err
	}

	*o = SnapshotScheduleCreateRequest(varSnapshotScheduleCreateRequest)

	return err
}

type NullableSnapshotScheduleCreateRequest struct {
	value *SnapshotScheduleCreateRequest
	isSet bool
}

func (v NullableSnapshotScheduleCreateRequest) Get() *SnapshotScheduleCreateRequest {
	return v.value
}

func (v *NullableSnapshotScheduleCreateRequest) Set(val *SnapshotScheduleCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotScheduleCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotScheduleCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotScheduleCreateRequest(val *SnapshotScheduleCreateRequest) *NullableSnapshotScheduleCreateRequest {
	return &NullableSnapshotScheduleCreateRequest{value: val, isSet: true}
}

func (v NullableSnapshotScheduleCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotScheduleCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
