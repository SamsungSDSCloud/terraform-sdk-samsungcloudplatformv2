/*
SCP File Storage Service

SCP File Storage Service

API version: 1.1.1.dev1167
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package filestorage

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SnapshotScheduleSetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnapshotScheduleSetRequest{}

// SnapshotScheduleSetRequest struct for SnapshotScheduleSetRequest
type SnapshotScheduleSetRequest struct {
	SnapshotRetentionCount NullableString   `json:"snapshot_retention_count,omitempty"`
	SnapshotSchedule       SnapshotSchedule `json:"snapshot_schedule"`
}

type _SnapshotScheduleSetRequest SnapshotScheduleSetRequest

// NewSnapshotScheduleSetRequest instantiates a new SnapshotScheduleSetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotScheduleSetRequest(snapshotSchedule SnapshotSchedule) *SnapshotScheduleSetRequest {
	this := SnapshotScheduleSetRequest{}
	this.SnapshotSchedule = snapshotSchedule
	return &this
}

// NewSnapshotScheduleSetRequestWithDefaults instantiates a new SnapshotScheduleSetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotScheduleSetRequestWithDefaults() *SnapshotScheduleSetRequest {
	this := SnapshotScheduleSetRequest{}
	return &this
}

// GetSnapshotRetentionCount returns the SnapshotRetentionCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotScheduleSetRequest) GetSnapshotRetentionCount() string {
	if o == nil || IsNil(o.SnapshotRetentionCount.Get()) {
		var ret string
		return ret
	}
	return *o.SnapshotRetentionCount.Get()
}

// GetSnapshotRetentionCountOk returns a tuple with the SnapshotRetentionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotScheduleSetRequest) GetSnapshotRetentionCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SnapshotRetentionCount.Get(), o.SnapshotRetentionCount.IsSet()
}

// HasSnapshotRetentionCount returns a boolean if a field has been set.
func (o *SnapshotScheduleSetRequest) HasSnapshotRetentionCount() bool {
	if o != nil && o.SnapshotRetentionCount.IsSet() {
		return true
	}

	return false
}

// SetSnapshotRetentionCount gets a reference to the given NullableString and assigns it to the SnapshotRetentionCount field.
func (o *SnapshotScheduleSetRequest) SetSnapshotRetentionCount(v string) {
	o.SnapshotRetentionCount.Set(&v)
}

// SetSnapshotRetentionCountNil sets the value for SnapshotRetentionCount to be an explicit nil
func (o *SnapshotScheduleSetRequest) SetSnapshotRetentionCountNil() {
	o.SnapshotRetentionCount.Set(nil)
}

// UnsetSnapshotRetentionCount ensures that no value is present for SnapshotRetentionCount, not even an explicit nil
func (o *SnapshotScheduleSetRequest) UnsetSnapshotRetentionCount() {
	o.SnapshotRetentionCount.Unset()
}

// GetSnapshotSchedule returns the SnapshotSchedule field value
func (o *SnapshotScheduleSetRequest) GetSnapshotSchedule() SnapshotSchedule {
	if o == nil {
		var ret SnapshotSchedule
		return ret
	}

	return o.SnapshotSchedule
}

// GetSnapshotScheduleOk returns a tuple with the SnapshotSchedule field value
// and a boolean to check if the value has been set.
func (o *SnapshotScheduleSetRequest) GetSnapshotScheduleOk() (*SnapshotSchedule, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SnapshotSchedule, true
}

// SetSnapshotSchedule sets field value
func (o *SnapshotScheduleSetRequest) SetSnapshotSchedule(v SnapshotSchedule) {
	o.SnapshotSchedule = v
}

func (o SnapshotScheduleSetRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnapshotScheduleSetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SnapshotRetentionCount.IsSet() {
		toSerialize["snapshot_retention_count"] = o.SnapshotRetentionCount.Get()
	}
	toSerialize["snapshot_schedule"] = o.SnapshotSchedule
	return toSerialize, nil
}

func (o *SnapshotScheduleSetRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"snapshot_schedule",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSnapshotScheduleSetRequest := _SnapshotScheduleSetRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSnapshotScheduleSetRequest)

	if err != nil {
		return err
	}

	*o = SnapshotScheduleSetRequest(varSnapshotScheduleSetRequest)

	return err
}

type NullableSnapshotScheduleSetRequest struct {
	value *SnapshotScheduleSetRequest
	isSet bool
}

func (v NullableSnapshotScheduleSetRequest) Get() *SnapshotScheduleSetRequest {
	return v.value
}

func (v *NullableSnapshotScheduleSetRequest) Set(val *SnapshotScheduleSetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotScheduleSetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotScheduleSetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotScheduleSetRequest(val *SnapshotScheduleSetRequest) *NullableSnapshotScheduleSetRequest {
	return &NullableSnapshotScheduleSetRequest{value: val, isSet: true}
}

func (v NullableSnapshotScheduleSetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotScheduleSetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
