/*
SCP File Storage Service

SCP File Storage Service

API version: 1.1.1.dev1167
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package filestorage

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SnapshotScheduleListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnapshotScheduleListResponse{}

// SnapshotScheduleListResponse struct for SnapshotScheduleListResponse
type SnapshotScheduleListResponse struct {
	SnapshotPolicyEnabled  NullableBool           `json:"snapshot_policy_enabled,omitempty"`
	SnapshotRetentionCount NullableString         `json:"snapshot_retention_count,omitempty"`
	SnapshotSchedule       []SnapshotScheduleShow `json:"snapshot_schedule"`
	// Volume ID
	VolumeId string `json:"volume_id"`
}

type _SnapshotScheduleListResponse SnapshotScheduleListResponse

// NewSnapshotScheduleListResponse instantiates a new SnapshotScheduleListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotScheduleListResponse(snapshotSchedule []SnapshotScheduleShow, volumeId string) *SnapshotScheduleListResponse {
	this := SnapshotScheduleListResponse{}
	this.SnapshotSchedule = snapshotSchedule
	this.VolumeId = volumeId
	return &this
}

// NewSnapshotScheduleListResponseWithDefaults instantiates a new SnapshotScheduleListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotScheduleListResponseWithDefaults() *SnapshotScheduleListResponse {
	this := SnapshotScheduleListResponse{}
	return &this
}

// GetSnapshotPolicyEnabled returns the SnapshotPolicyEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotScheduleListResponse) GetSnapshotPolicyEnabled() bool {
	if o == nil || IsNil(o.SnapshotPolicyEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.SnapshotPolicyEnabled.Get()
}

// GetSnapshotPolicyEnabledOk returns a tuple with the SnapshotPolicyEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotScheduleListResponse) GetSnapshotPolicyEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SnapshotPolicyEnabled.Get(), o.SnapshotPolicyEnabled.IsSet()
}

// HasSnapshotPolicyEnabled returns a boolean if a field has been set.
func (o *SnapshotScheduleListResponse) HasSnapshotPolicyEnabled() bool {
	if o != nil && o.SnapshotPolicyEnabled.IsSet() {
		return true
	}

	return false
}

// SetSnapshotPolicyEnabled gets a reference to the given NullableBool and assigns it to the SnapshotPolicyEnabled field.
func (o *SnapshotScheduleListResponse) SetSnapshotPolicyEnabled(v bool) {
	o.SnapshotPolicyEnabled.Set(&v)
}

// SetSnapshotPolicyEnabledNil sets the value for SnapshotPolicyEnabled to be an explicit nil
func (o *SnapshotScheduleListResponse) SetSnapshotPolicyEnabledNil() {
	o.SnapshotPolicyEnabled.Set(nil)
}

// UnsetSnapshotPolicyEnabled ensures that no value is present for SnapshotPolicyEnabled, not even an explicit nil
func (o *SnapshotScheduleListResponse) UnsetSnapshotPolicyEnabled() {
	o.SnapshotPolicyEnabled.Unset()
}

// GetSnapshotRetentionCount returns the SnapshotRetentionCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotScheduleListResponse) GetSnapshotRetentionCount() string {
	if o == nil || IsNil(o.SnapshotRetentionCount.Get()) {
		var ret string
		return ret
	}
	return *o.SnapshotRetentionCount.Get()
}

// GetSnapshotRetentionCountOk returns a tuple with the SnapshotRetentionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotScheduleListResponse) GetSnapshotRetentionCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SnapshotRetentionCount.Get(), o.SnapshotRetentionCount.IsSet()
}

// HasSnapshotRetentionCount returns a boolean if a field has been set.
func (o *SnapshotScheduleListResponse) HasSnapshotRetentionCount() bool {
	if o != nil && o.SnapshotRetentionCount.IsSet() {
		return true
	}

	return false
}

// SetSnapshotRetentionCount gets a reference to the given NullableString and assigns it to the SnapshotRetentionCount field.
func (o *SnapshotScheduleListResponse) SetSnapshotRetentionCount(v string) {
	o.SnapshotRetentionCount.Set(&v)
}

// SetSnapshotRetentionCountNil sets the value for SnapshotRetentionCount to be an explicit nil
func (o *SnapshotScheduleListResponse) SetSnapshotRetentionCountNil() {
	o.SnapshotRetentionCount.Set(nil)
}

// UnsetSnapshotRetentionCount ensures that no value is present for SnapshotRetentionCount, not even an explicit nil
func (o *SnapshotScheduleListResponse) UnsetSnapshotRetentionCount() {
	o.SnapshotRetentionCount.Unset()
}

// GetSnapshotSchedule returns the SnapshotSchedule field value
// If the value is explicit nil, the zero value for []SnapshotScheduleShow will be returned
func (o *SnapshotScheduleListResponse) GetSnapshotSchedule() []SnapshotScheduleShow {
	if o == nil {
		var ret []SnapshotScheduleShow
		return ret
	}

	return o.SnapshotSchedule
}

// GetSnapshotScheduleOk returns a tuple with the SnapshotSchedule field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotScheduleListResponse) GetSnapshotScheduleOk() ([]SnapshotScheduleShow, bool) {
	if o == nil || IsNil(o.SnapshotSchedule) {
		return nil, false
	}
	return o.SnapshotSchedule, true
}

// SetSnapshotSchedule sets field value
func (o *SnapshotScheduleListResponse) SetSnapshotSchedule(v []SnapshotScheduleShow) {
	o.SnapshotSchedule = v
}

// GetVolumeId returns the VolumeId field value
func (o *SnapshotScheduleListResponse) GetVolumeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value
// and a boolean to check if the value has been set.
func (o *SnapshotScheduleListResponse) GetVolumeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolumeId, true
}

// SetVolumeId sets field value
func (o *SnapshotScheduleListResponse) SetVolumeId(v string) {
	o.VolumeId = v
}

func (o SnapshotScheduleListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnapshotScheduleListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SnapshotPolicyEnabled.IsSet() {
		toSerialize["snapshot_policy_enabled"] = o.SnapshotPolicyEnabled.Get()
	}
	if o.SnapshotRetentionCount.IsSet() {
		toSerialize["snapshot_retention_count"] = o.SnapshotRetentionCount.Get()
	}
	if o.SnapshotSchedule != nil {
		toSerialize["snapshot_schedule"] = o.SnapshotSchedule
	}
	toSerialize["volume_id"] = o.VolumeId
	return toSerialize, nil
}

func (o *SnapshotScheduleListResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"snapshot_schedule",
		"volume_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSnapshotScheduleListResponse := _SnapshotScheduleListResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSnapshotScheduleListResponse)

	if err != nil {
		return err
	}

	*o = SnapshotScheduleListResponse(varSnapshotScheduleListResponse)

	return err
}

type NullableSnapshotScheduleListResponse struct {
	value *SnapshotScheduleListResponse
	isSet bool
}

func (v NullableSnapshotScheduleListResponse) Get() *SnapshotScheduleListResponse {
	return v.value
}

func (v *NullableSnapshotScheduleListResponse) Set(val *SnapshotScheduleListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotScheduleListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotScheduleListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotScheduleListResponse(val *SnapshotScheduleListResponse) *NullableSnapshotScheduleListResponse {
	return &NullableSnapshotScheduleListResponse{value: val, isSet: true}
}

func (v NullableSnapshotScheduleListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotScheduleListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
