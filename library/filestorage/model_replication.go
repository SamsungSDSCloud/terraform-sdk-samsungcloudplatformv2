/*
SCP File Storage Service

SCP File Storage Service

API version: 1.1.1.dev1167
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package filestorage

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the Replication type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Replication{}

// Replication struct for Replication
type Replication struct {
	// Frequency
	ReplicationFrequency string `json:"replication_frequency"`
	// Replication ID
	ReplicationId string `json:"replication_id"`
	// Replication Type
	ReplicationType string `json:"replication_type"`
	// Target Access Level
	ReplicationVolumeAccessLevel string `json:"replication_volume_access_level"`
	// Target Volume ID
	ReplicationVolumeId string `json:"replication_volume_id"`
	// Target Region
	ReplicationVolumeRegion string `json:"replication_volume_region"`
	// Source Access Level
	SourceVolumeAccessLevel string `json:"source_volume_access_level"`
	// Source Volume ID
	SourceVolumeId string `json:"source_volume_id"`
	// Source Region
	SourceVolumeRegion string `json:"source_volume_region"`
}

type _Replication Replication

// NewReplication instantiates a new Replication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplication(replicationFrequency string, replicationId string, replicationType string, replicationVolumeAccessLevel string, replicationVolumeId string, replicationVolumeRegion string, sourceVolumeAccessLevel string, sourceVolumeId string, sourceVolumeRegion string) *Replication {
	this := Replication{}
	this.ReplicationFrequency = replicationFrequency
	this.ReplicationId = replicationId
	this.ReplicationType = replicationType
	this.ReplicationVolumeAccessLevel = replicationVolumeAccessLevel
	this.ReplicationVolumeId = replicationVolumeId
	this.ReplicationVolumeRegion = replicationVolumeRegion
	this.SourceVolumeAccessLevel = sourceVolumeAccessLevel
	this.SourceVolumeId = sourceVolumeId
	this.SourceVolumeRegion = sourceVolumeRegion
	return &this
}

// NewReplicationWithDefaults instantiates a new Replication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationWithDefaults() *Replication {
	this := Replication{}
	return &this
}

// GetReplicationFrequency returns the ReplicationFrequency field value
func (o *Replication) GetReplicationFrequency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReplicationFrequency
}

// GetReplicationFrequencyOk returns a tuple with the ReplicationFrequency field value
// and a boolean to check if the value has been set.
func (o *Replication) GetReplicationFrequencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReplicationFrequency, true
}

// SetReplicationFrequency sets field value
func (o *Replication) SetReplicationFrequency(v string) {
	o.ReplicationFrequency = v
}

// GetReplicationId returns the ReplicationId field value
func (o *Replication) GetReplicationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReplicationId
}

// GetReplicationIdOk returns a tuple with the ReplicationId field value
// and a boolean to check if the value has been set.
func (o *Replication) GetReplicationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReplicationId, true
}

// SetReplicationId sets field value
func (o *Replication) SetReplicationId(v string) {
	o.ReplicationId = v
}

// GetReplicationType returns the ReplicationType field value
func (o *Replication) GetReplicationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReplicationType
}

// GetReplicationTypeOk returns a tuple with the ReplicationType field value
// and a boolean to check if the value has been set.
func (o *Replication) GetReplicationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReplicationType, true
}

// SetReplicationType sets field value
func (o *Replication) SetReplicationType(v string) {
	o.ReplicationType = v
}

// GetReplicationVolumeAccessLevel returns the ReplicationVolumeAccessLevel field value
func (o *Replication) GetReplicationVolumeAccessLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReplicationVolumeAccessLevel
}

// GetReplicationVolumeAccessLevelOk returns a tuple with the ReplicationVolumeAccessLevel field value
// and a boolean to check if the value has been set.
func (o *Replication) GetReplicationVolumeAccessLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReplicationVolumeAccessLevel, true
}

// SetReplicationVolumeAccessLevel sets field value
func (o *Replication) SetReplicationVolumeAccessLevel(v string) {
	o.ReplicationVolumeAccessLevel = v
}

// GetReplicationVolumeId returns the ReplicationVolumeId field value
func (o *Replication) GetReplicationVolumeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReplicationVolumeId
}

// GetReplicationVolumeIdOk returns a tuple with the ReplicationVolumeId field value
// and a boolean to check if the value has been set.
func (o *Replication) GetReplicationVolumeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReplicationVolumeId, true
}

// SetReplicationVolumeId sets field value
func (o *Replication) SetReplicationVolumeId(v string) {
	o.ReplicationVolumeId = v
}

// GetReplicationVolumeRegion returns the ReplicationVolumeRegion field value
func (o *Replication) GetReplicationVolumeRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReplicationVolumeRegion
}

// GetReplicationVolumeRegionOk returns a tuple with the ReplicationVolumeRegion field value
// and a boolean to check if the value has been set.
func (o *Replication) GetReplicationVolumeRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReplicationVolumeRegion, true
}

// SetReplicationVolumeRegion sets field value
func (o *Replication) SetReplicationVolumeRegion(v string) {
	o.ReplicationVolumeRegion = v
}

// GetSourceVolumeAccessLevel returns the SourceVolumeAccessLevel field value
func (o *Replication) GetSourceVolumeAccessLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceVolumeAccessLevel
}

// GetSourceVolumeAccessLevelOk returns a tuple with the SourceVolumeAccessLevel field value
// and a boolean to check if the value has been set.
func (o *Replication) GetSourceVolumeAccessLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceVolumeAccessLevel, true
}

// SetSourceVolumeAccessLevel sets field value
func (o *Replication) SetSourceVolumeAccessLevel(v string) {
	o.SourceVolumeAccessLevel = v
}

// GetSourceVolumeId returns the SourceVolumeId field value
func (o *Replication) GetSourceVolumeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceVolumeId
}

// GetSourceVolumeIdOk returns a tuple with the SourceVolumeId field value
// and a boolean to check if the value has been set.
func (o *Replication) GetSourceVolumeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceVolumeId, true
}

// SetSourceVolumeId sets field value
func (o *Replication) SetSourceVolumeId(v string) {
	o.SourceVolumeId = v
}

// GetSourceVolumeRegion returns the SourceVolumeRegion field value
func (o *Replication) GetSourceVolumeRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceVolumeRegion
}

// GetSourceVolumeRegionOk returns a tuple with the SourceVolumeRegion field value
// and a boolean to check if the value has been set.
func (o *Replication) GetSourceVolumeRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceVolumeRegion, true
}

// SetSourceVolumeRegion sets field value
func (o *Replication) SetSourceVolumeRegion(v string) {
	o.SourceVolumeRegion = v
}

func (o Replication) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Replication) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["replication_frequency"] = o.ReplicationFrequency
	toSerialize["replication_id"] = o.ReplicationId
	toSerialize["replication_type"] = o.ReplicationType
	toSerialize["replication_volume_access_level"] = o.ReplicationVolumeAccessLevel
	toSerialize["replication_volume_id"] = o.ReplicationVolumeId
	toSerialize["replication_volume_region"] = o.ReplicationVolumeRegion
	toSerialize["source_volume_access_level"] = o.SourceVolumeAccessLevel
	toSerialize["source_volume_id"] = o.SourceVolumeId
	toSerialize["source_volume_region"] = o.SourceVolumeRegion
	return toSerialize, nil
}

func (o *Replication) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"replication_frequency",
		"replication_id",
		"replication_type",
		"replication_volume_access_level",
		"replication_volume_id",
		"replication_volume_region",
		"source_volume_access_level",
		"source_volume_id",
		"source_volume_region",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReplication := _Replication{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varReplication)

	if err != nil {
		return err
	}

	*o = Replication(varReplication)

	return err
}

type NullableReplication struct {
	value *Replication
	isSet bool
}

func (v NullableReplication) Get() *Replication {
	return v.value
}

func (v *NullableReplication) Set(val *Replication) {
	v.value = val
	v.isSet = true
}

func (v NullableReplication) IsSet() bool {
	return v.isSet
}

func (v *NullableReplication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplication(val *Replication) *NullableReplication {
	return &NullableReplication{value: val, isSet: true}
}

func (v NullableReplication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
