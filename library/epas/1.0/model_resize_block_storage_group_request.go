/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2150
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package epas

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ResizeBlockStorageGroupRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResizeBlockStorageGroupRequest{}

// ResizeBlockStorageGroupRequest struct for ResizeBlockStorageGroupRequest
type ResizeBlockStorageGroupRequest struct {
	// Size in GB
	SizeGb int32 `json:"size_gb"`
}

type _ResizeBlockStorageGroupRequest ResizeBlockStorageGroupRequest

// NewResizeBlockStorageGroupRequest instantiates a new ResizeBlockStorageGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResizeBlockStorageGroupRequest(sizeGb int32) *ResizeBlockStorageGroupRequest {
	this := ResizeBlockStorageGroupRequest{}
	this.SizeGb = sizeGb
	return &this
}

// NewResizeBlockStorageGroupRequestWithDefaults instantiates a new ResizeBlockStorageGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResizeBlockStorageGroupRequestWithDefaults() *ResizeBlockStorageGroupRequest {
	this := ResizeBlockStorageGroupRequest{}
	return &this
}

// GetSizeGb returns the SizeGb field value
func (o *ResizeBlockStorageGroupRequest) GetSizeGb() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SizeGb
}

// GetSizeGbOk returns a tuple with the SizeGb field value
// and a boolean to check if the value has been set.
func (o *ResizeBlockStorageGroupRequest) GetSizeGbOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SizeGb, true
}

// SetSizeGb sets field value
func (o *ResizeBlockStorageGroupRequest) SetSizeGb(v int32) {
	o.SizeGb = v
}

func (o ResizeBlockStorageGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResizeBlockStorageGroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["size_gb"] = o.SizeGb
	return toSerialize, nil
}

func (o *ResizeBlockStorageGroupRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"size_gb",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResizeBlockStorageGroupRequest := _ResizeBlockStorageGroupRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varResizeBlockStorageGroupRequest)

	if err != nil {
		return err
	}

	*o = ResizeBlockStorageGroupRequest(varResizeBlockStorageGroupRequest)

	return err
}

type NullableResizeBlockStorageGroupRequest struct {
	value *ResizeBlockStorageGroupRequest
	isSet bool
}

func (v NullableResizeBlockStorageGroupRequest) Get() *ResizeBlockStorageGroupRequest {
	return v.value
}

func (v *NullableResizeBlockStorageGroupRequest) Set(val *ResizeBlockStorageGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableResizeBlockStorageGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableResizeBlockStorageGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResizeBlockStorageGroupRequest(val *ResizeBlockStorageGroupRequest) *NullableResizeBlockStorageGroupRequest {
	return &NullableResizeBlockStorageGroupRequest{value: val, isSet: true}
}

func (v NullableResizeBlockStorageGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResizeBlockStorageGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


