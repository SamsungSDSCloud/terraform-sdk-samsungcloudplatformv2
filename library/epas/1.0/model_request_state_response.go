/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2150
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package epas

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RequestStateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestStateResponse{}

// RequestStateResponse struct for RequestStateResponse
type RequestStateResponse struct {
	// Request ID
	RequestId string `json:"request_id"`
	// Request state
	State string `json:"state"`
}

type _RequestStateResponse RequestStateResponse

// NewRequestStateResponse instantiates a new RequestStateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestStateResponse(requestId string, state string) *RequestStateResponse {
	this := RequestStateResponse{}
	this.RequestId = requestId
	this.State = state
	return &this
}

// NewRequestStateResponseWithDefaults instantiates a new RequestStateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestStateResponseWithDefaults() *RequestStateResponse {
	this := RequestStateResponse{}
	return &this
}

// GetRequestId returns the RequestId field value
func (o *RequestStateResponse) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *RequestStateResponse) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *RequestStateResponse) SetRequestId(v string) {
	o.RequestId = v
}

// GetState returns the State field value
func (o *RequestStateResponse) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *RequestStateResponse) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *RequestStateResponse) SetState(v string) {
	o.State = v
}

func (o RequestStateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestStateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["request_id"] = o.RequestId
	toSerialize["state"] = o.State
	return toSerialize, nil
}

func (o *RequestStateResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"request_id",
		"state",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRequestStateResponse := _RequestStateResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRequestStateResponse)

	if err != nil {
		return err
	}

	*o = RequestStateResponse(varRequestStateResponse)

	return err
}

type NullableRequestStateResponse struct {
	value *RequestStateResponse
	isSet bool
}

func (v NullableRequestStateResponse) Get() *RequestStateResponse {
	return v.value
}

func (v *NullableRequestStateResponse) Set(val *RequestStateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestStateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestStateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestStateResponse(val *RequestStateResponse) *NullableRequestStateResponse {
	return &NullableRequestStateResponse{value: val, isSet: true}
}

func (v NullableRequestStateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestStateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


