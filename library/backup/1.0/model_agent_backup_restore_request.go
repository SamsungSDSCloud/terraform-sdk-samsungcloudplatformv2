/*
OSSCP backup Project

OSSCP backup Project

API version: 0.0.1.dev566
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backup

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AgentBackupRestoreRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentBackupRestoreRequest{}

// AgentBackupRestoreRequest struct for AgentBackupRestoreRequest
type AgentBackupRestoreRequest struct {
	// List of filesystem backup path
	FilesystemPaths []RestoreFilesystemPath `json:"filesystem_paths"`
	Overwrite NullableBool `json:"overwrite,omitempty"`
	// Restored server ID
	RestoreServerUuid string `json:"restore_server_uuid"`
	// Restore target ID
	RestoreTargetId string `json:"restore_target_id"`
}

type _AgentBackupRestoreRequest AgentBackupRestoreRequest

// NewAgentBackupRestoreRequest instantiates a new AgentBackupRestoreRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentBackupRestoreRequest(filesystemPaths []RestoreFilesystemPath, restoreServerUuid string, restoreTargetId string) *AgentBackupRestoreRequest {
	this := AgentBackupRestoreRequest{}
	this.FilesystemPaths = filesystemPaths
	this.RestoreServerUuid = restoreServerUuid
	this.RestoreTargetId = restoreTargetId
	return &this
}

// NewAgentBackupRestoreRequestWithDefaults instantiates a new AgentBackupRestoreRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentBackupRestoreRequestWithDefaults() *AgentBackupRestoreRequest {
	this := AgentBackupRestoreRequest{}
	return &this
}

// GetFilesystemPaths returns the FilesystemPaths field value
func (o *AgentBackupRestoreRequest) GetFilesystemPaths() []RestoreFilesystemPath {
	if o == nil {
		var ret []RestoreFilesystemPath
		return ret
	}

	return o.FilesystemPaths
}

// GetFilesystemPathsOk returns a tuple with the FilesystemPaths field value
// and a boolean to check if the value has been set.
func (o *AgentBackupRestoreRequest) GetFilesystemPathsOk() ([]RestoreFilesystemPath, bool) {
	if o == nil {
		return nil, false
	}
	return o.FilesystemPaths, true
}

// SetFilesystemPaths sets field value
func (o *AgentBackupRestoreRequest) SetFilesystemPaths(v []RestoreFilesystemPath) {
	o.FilesystemPaths = v
}

// GetOverwrite returns the Overwrite field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentBackupRestoreRequest) GetOverwrite() bool {
	if o == nil || IsNil(o.Overwrite.Get()) {
		var ret bool
		return ret
	}
	return *o.Overwrite.Get()
}

// GetOverwriteOk returns a tuple with the Overwrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentBackupRestoreRequest) GetOverwriteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Overwrite.Get(), o.Overwrite.IsSet()
}

// HasOverwrite returns a boolean if a field has been set.
func (o *AgentBackupRestoreRequest) HasOverwrite() bool {
	if o != nil && o.Overwrite.IsSet() {
		return true
	}

	return false
}

// SetOverwrite gets a reference to the given NullableBool and assigns it to the Overwrite field.
func (o *AgentBackupRestoreRequest) SetOverwrite(v bool) {
	o.Overwrite.Set(&v)
}
// SetOverwriteNil sets the value for Overwrite to be an explicit nil
func (o *AgentBackupRestoreRequest) SetOverwriteNil() {
	o.Overwrite.Set(nil)
}

// UnsetOverwrite ensures that no value is present for Overwrite, not even an explicit nil
func (o *AgentBackupRestoreRequest) UnsetOverwrite() {
	o.Overwrite.Unset()
}

// GetRestoreServerUuid returns the RestoreServerUuid field value
func (o *AgentBackupRestoreRequest) GetRestoreServerUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RestoreServerUuid
}

// GetRestoreServerUuidOk returns a tuple with the RestoreServerUuid field value
// and a boolean to check if the value has been set.
func (o *AgentBackupRestoreRequest) GetRestoreServerUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RestoreServerUuid, true
}

// SetRestoreServerUuid sets field value
func (o *AgentBackupRestoreRequest) SetRestoreServerUuid(v string) {
	o.RestoreServerUuid = v
}

// GetRestoreTargetId returns the RestoreTargetId field value
func (o *AgentBackupRestoreRequest) GetRestoreTargetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RestoreTargetId
}

// GetRestoreTargetIdOk returns a tuple with the RestoreTargetId field value
// and a boolean to check if the value has been set.
func (o *AgentBackupRestoreRequest) GetRestoreTargetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RestoreTargetId, true
}

// SetRestoreTargetId sets field value
func (o *AgentBackupRestoreRequest) SetRestoreTargetId(v string) {
	o.RestoreTargetId = v
}

func (o AgentBackupRestoreRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentBackupRestoreRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["filesystem_paths"] = o.FilesystemPaths
	if o.Overwrite.IsSet() {
		toSerialize["overwrite"] = o.Overwrite.Get()
	}
	toSerialize["restore_server_uuid"] = o.RestoreServerUuid
	toSerialize["restore_target_id"] = o.RestoreTargetId
	return toSerialize, nil
}

func (o *AgentBackupRestoreRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"filesystem_paths",
		"restore_server_uuid",
		"restore_target_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAgentBackupRestoreRequest := _AgentBackupRestoreRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAgentBackupRestoreRequest)

	if err != nil {
		return err
	}

	*o = AgentBackupRestoreRequest(varAgentBackupRestoreRequest)

	return err
}

type NullableAgentBackupRestoreRequest struct {
	value *AgentBackupRestoreRequest
	isSet bool
}

func (v NullableAgentBackupRestoreRequest) Get() *AgentBackupRestoreRequest {
	return v.value
}

func (v *NullableAgentBackupRestoreRequest) Set(val *AgentBackupRestoreRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentBackupRestoreRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentBackupRestoreRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentBackupRestoreRequest(val *AgentBackupRestoreRequest) *NullableAgentBackupRestoreRequest {
	return &NullableAgentBackupRestoreRequest{value: val, isSet: true}
}

func (v NullableAgentBackupRestoreRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentBackupRestoreRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


