/*
OSSCP backup Project

OSSCP backup Project

API version: 0.0.1.dev566
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backup

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RetentionPeriodUpdateBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RetentionPeriodUpdateBody{}

// RetentionPeriodUpdateBody struct for RetentionPeriodUpdateBody
type RetentionPeriodUpdateBody struct {
	// Backup retention period
	RetentionPeriod BackupRetentionPeriod `json:"retention_period"`
}

type _RetentionPeriodUpdateBody RetentionPeriodUpdateBody

// NewRetentionPeriodUpdateBody instantiates a new RetentionPeriodUpdateBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetentionPeriodUpdateBody(retentionPeriod BackupRetentionPeriod) *RetentionPeriodUpdateBody {
	this := RetentionPeriodUpdateBody{}
	this.RetentionPeriod = retentionPeriod
	return &this
}

// NewRetentionPeriodUpdateBodyWithDefaults instantiates a new RetentionPeriodUpdateBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetentionPeriodUpdateBodyWithDefaults() *RetentionPeriodUpdateBody {
	this := RetentionPeriodUpdateBody{}
	return &this
}

// GetRetentionPeriod returns the RetentionPeriod field value
func (o *RetentionPeriodUpdateBody) GetRetentionPeriod() BackupRetentionPeriod {
	if o == nil {
		var ret BackupRetentionPeriod
		return ret
	}

	return o.RetentionPeriod
}

// GetRetentionPeriodOk returns a tuple with the RetentionPeriod field value
// and a boolean to check if the value has been set.
func (o *RetentionPeriodUpdateBody) GetRetentionPeriodOk() (*BackupRetentionPeriod, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RetentionPeriod, true
}

// SetRetentionPeriod sets field value
func (o *RetentionPeriodUpdateBody) SetRetentionPeriod(v BackupRetentionPeriod) {
	o.RetentionPeriod = v
}

func (o RetentionPeriodUpdateBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RetentionPeriodUpdateBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["retention_period"] = o.RetentionPeriod
	return toSerialize, nil
}

func (o *RetentionPeriodUpdateBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"retention_period",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRetentionPeriodUpdateBody := _RetentionPeriodUpdateBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRetentionPeriodUpdateBody)

	if err != nil {
		return err
	}

	*o = RetentionPeriodUpdateBody(varRetentionPeriodUpdateBody)

	return err
}

type NullableRetentionPeriodUpdateBody struct {
	value *RetentionPeriodUpdateBody
	isSet bool
}

func (v NullableRetentionPeriodUpdateBody) Get() *RetentionPeriodUpdateBody {
	return v.value
}

func (v *NullableRetentionPeriodUpdateBody) Set(val *RetentionPeriodUpdateBody) {
	v.value = val
	v.isSet = true
}

func (v NullableRetentionPeriodUpdateBody) IsSet() bool {
	return v.isSet
}

func (v *NullableRetentionPeriodUpdateBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetentionPeriodUpdateBody(val *RetentionPeriodUpdateBody) *NullableRetentionPeriodUpdateBody {
	return &NullableRetentionPeriodUpdateBody{value: val, isSet: true}
}

func (v NullableRetentionPeriodUpdateBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetentionPeriodUpdateBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


