/*
OSSCP backup Project

OSSCP backup Project

API version: 0.0.1.dev566
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backup

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BackupCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupCreateRequest{}

// BackupCreateRequest struct for BackupCreateRequest
type BackupCreateRequest struct {
	// Whether to use Encryption
	EncryptEnabled *bool `json:"encrypt_enabled,omitempty"`
	FilesystemPaths []string `json:"filesystem_paths,omitempty"`
	// Backup name
	Name string `json:"name"`
	// Backup policy category
	PolicyCategory BackupPolicyCategory `json:"policy_category"`
	// Backup policy type
	PolicyType BackupPolicyType `json:"policy_type"`
	Region NullableString `json:"region,omitempty"`
	// Backup retention period
	RetentionPeriod *BackupRetentionPeriod `json:"retention_period,omitempty"`
	// Schedules
	Schedules []BackupScheduleCreateRequest `json:"schedules"`
	// Backup server category
	ServerCategory ServerCategory `json:"server_category"`
	ServerGuid NullableString `json:"server_guid,omitempty"`
	// Backup server UUID
	ServerUuid string `json:"server_uuid"`
	Tags []Tag `json:"tags,omitempty"`
}

type _BackupCreateRequest BackupCreateRequest

// NewBackupCreateRequest instantiates a new BackupCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupCreateRequest(name string, policyCategory BackupPolicyCategory, policyType BackupPolicyType, schedules []BackupScheduleCreateRequest, serverCategory ServerCategory, serverUuid string) *BackupCreateRequest {
	this := BackupCreateRequest{}
	var encryptEnabled bool = false
	this.EncryptEnabled = &encryptEnabled
	this.Name = name
	this.PolicyCategory = policyCategory
	this.PolicyType = policyType
	var retentionPeriod BackupRetentionPeriod = BACKUPRETENTIONPERIOD_WEEK_2
	this.RetentionPeriod = &retentionPeriod
	this.Schedules = schedules
	this.ServerCategory = serverCategory
	this.ServerUuid = serverUuid
	return &this
}

// NewBackupCreateRequestWithDefaults instantiates a new BackupCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupCreateRequestWithDefaults() *BackupCreateRequest {
	this := BackupCreateRequest{}
	var encryptEnabled bool = false
	this.EncryptEnabled = &encryptEnabled
	var retentionPeriod BackupRetentionPeriod = BACKUPRETENTIONPERIOD_WEEK_2
	this.RetentionPeriod = &retentionPeriod
	return &this
}

// GetEncryptEnabled returns the EncryptEnabled field value if set, zero value otherwise.
func (o *BackupCreateRequest) GetEncryptEnabled() bool {
	if o == nil || IsNil(o.EncryptEnabled) {
		var ret bool
		return ret
	}
	return *o.EncryptEnabled
}

// GetEncryptEnabledOk returns a tuple with the EncryptEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupCreateRequest) GetEncryptEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.EncryptEnabled) {
		return nil, false
	}
	return o.EncryptEnabled, true
}

// HasEncryptEnabled returns a boolean if a field has been set.
func (o *BackupCreateRequest) HasEncryptEnabled() bool {
	if o != nil && !IsNil(o.EncryptEnabled) {
		return true
	}

	return false
}

// SetEncryptEnabled gets a reference to the given bool and assigns it to the EncryptEnabled field.
func (o *BackupCreateRequest) SetEncryptEnabled(v bool) {
	o.EncryptEnabled = &v
}

// GetFilesystemPaths returns the FilesystemPaths field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupCreateRequest) GetFilesystemPaths() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.FilesystemPaths
}

// GetFilesystemPathsOk returns a tuple with the FilesystemPaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupCreateRequest) GetFilesystemPathsOk() ([]string, bool) {
	if o == nil || IsNil(o.FilesystemPaths) {
		return nil, false
	}
	return o.FilesystemPaths, true
}

// HasFilesystemPaths returns a boolean if a field has been set.
func (o *BackupCreateRequest) HasFilesystemPaths() bool {
	if o != nil && !IsNil(o.FilesystemPaths) {
		return true
	}

	return false
}

// SetFilesystemPaths gets a reference to the given []string and assigns it to the FilesystemPaths field.
func (o *BackupCreateRequest) SetFilesystemPaths(v []string) {
	o.FilesystemPaths = v
}

// GetName returns the Name field value
func (o *BackupCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BackupCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BackupCreateRequest) SetName(v string) {
	o.Name = v
}

// GetPolicyCategory returns the PolicyCategory field value
func (o *BackupCreateRequest) GetPolicyCategory() BackupPolicyCategory {
	if o == nil {
		var ret BackupPolicyCategory
		return ret
	}

	return o.PolicyCategory
}

// GetPolicyCategoryOk returns a tuple with the PolicyCategory field value
// and a boolean to check if the value has been set.
func (o *BackupCreateRequest) GetPolicyCategoryOk() (*BackupPolicyCategory, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PolicyCategory, true
}

// SetPolicyCategory sets field value
func (o *BackupCreateRequest) SetPolicyCategory(v BackupPolicyCategory) {
	o.PolicyCategory = v
}

// GetPolicyType returns the PolicyType field value
func (o *BackupCreateRequest) GetPolicyType() BackupPolicyType {
	if o == nil {
		var ret BackupPolicyType
		return ret
	}

	return o.PolicyType
}

// GetPolicyTypeOk returns a tuple with the PolicyType field value
// and a boolean to check if the value has been set.
func (o *BackupCreateRequest) GetPolicyTypeOk() (*BackupPolicyType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PolicyType, true
}

// SetPolicyType sets field value
func (o *BackupCreateRequest) SetPolicyType(v BackupPolicyType) {
	o.PolicyType = v
}

// GetRegion returns the Region field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupCreateRequest) GetRegion() string {
	if o == nil || IsNil(o.Region.Get()) {
		var ret string
		return ret
	}
	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupCreateRequest) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// HasRegion returns a boolean if a field has been set.
func (o *BackupCreateRequest) HasRegion() bool {
	if o != nil && o.Region.IsSet() {
		return true
	}

	return false
}

// SetRegion gets a reference to the given NullableString and assigns it to the Region field.
func (o *BackupCreateRequest) SetRegion(v string) {
	o.Region.Set(&v)
}
// SetRegionNil sets the value for Region to be an explicit nil
func (o *BackupCreateRequest) SetRegionNil() {
	o.Region.Set(nil)
}

// UnsetRegion ensures that no value is present for Region, not even an explicit nil
func (o *BackupCreateRequest) UnsetRegion() {
	o.Region.Unset()
}

// GetRetentionPeriod returns the RetentionPeriod field value if set, zero value otherwise.
func (o *BackupCreateRequest) GetRetentionPeriod() BackupRetentionPeriod {
	if o == nil || IsNil(o.RetentionPeriod) {
		var ret BackupRetentionPeriod
		return ret
	}
	return *o.RetentionPeriod
}

// GetRetentionPeriodOk returns a tuple with the RetentionPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupCreateRequest) GetRetentionPeriodOk() (*BackupRetentionPeriod, bool) {
	if o == nil || IsNil(o.RetentionPeriod) {
		return nil, false
	}
	return o.RetentionPeriod, true
}

// HasRetentionPeriod returns a boolean if a field has been set.
func (o *BackupCreateRequest) HasRetentionPeriod() bool {
	if o != nil && !IsNil(o.RetentionPeriod) {
		return true
	}

	return false
}

// SetRetentionPeriod gets a reference to the given BackupRetentionPeriod and assigns it to the RetentionPeriod field.
func (o *BackupCreateRequest) SetRetentionPeriod(v BackupRetentionPeriod) {
	o.RetentionPeriod = &v
}

// GetSchedules returns the Schedules field value
func (o *BackupCreateRequest) GetSchedules() []BackupScheduleCreateRequest {
	if o == nil {
		var ret []BackupScheduleCreateRequest
		return ret
	}

	return o.Schedules
}

// GetSchedulesOk returns a tuple with the Schedules field value
// and a boolean to check if the value has been set.
func (o *BackupCreateRequest) GetSchedulesOk() ([]BackupScheduleCreateRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schedules, true
}

// SetSchedules sets field value
func (o *BackupCreateRequest) SetSchedules(v []BackupScheduleCreateRequest) {
	o.Schedules = v
}

// GetServerCategory returns the ServerCategory field value
func (o *BackupCreateRequest) GetServerCategory() ServerCategory {
	if o == nil {
		var ret ServerCategory
		return ret
	}

	return o.ServerCategory
}

// GetServerCategoryOk returns a tuple with the ServerCategory field value
// and a boolean to check if the value has been set.
func (o *BackupCreateRequest) GetServerCategoryOk() (*ServerCategory, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerCategory, true
}

// SetServerCategory sets field value
func (o *BackupCreateRequest) SetServerCategory(v ServerCategory) {
	o.ServerCategory = v
}

// GetServerGuid returns the ServerGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupCreateRequest) GetServerGuid() string {
	if o == nil || IsNil(o.ServerGuid.Get()) {
		var ret string
		return ret
	}
	return *o.ServerGuid.Get()
}

// GetServerGuidOk returns a tuple with the ServerGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupCreateRequest) GetServerGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerGuid.Get(), o.ServerGuid.IsSet()
}

// HasServerGuid returns a boolean if a field has been set.
func (o *BackupCreateRequest) HasServerGuid() bool {
	if o != nil && o.ServerGuid.IsSet() {
		return true
	}

	return false
}

// SetServerGuid gets a reference to the given NullableString and assigns it to the ServerGuid field.
func (o *BackupCreateRequest) SetServerGuid(v string) {
	o.ServerGuid.Set(&v)
}
// SetServerGuidNil sets the value for ServerGuid to be an explicit nil
func (o *BackupCreateRequest) SetServerGuidNil() {
	o.ServerGuid.Set(nil)
}

// UnsetServerGuid ensures that no value is present for ServerGuid, not even an explicit nil
func (o *BackupCreateRequest) UnsetServerGuid() {
	o.ServerGuid.Unset()
}

// GetServerUuid returns the ServerUuid field value
func (o *BackupCreateRequest) GetServerUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerUuid
}

// GetServerUuidOk returns a tuple with the ServerUuid field value
// and a boolean to check if the value has been set.
func (o *BackupCreateRequest) GetServerUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerUuid, true
}

// SetServerUuid sets field value
func (o *BackupCreateRequest) SetServerUuid(v string) {
	o.ServerUuid = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupCreateRequest) GetTags() []Tag {
	if o == nil {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupCreateRequest) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *BackupCreateRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *BackupCreateRequest) SetTags(v []Tag) {
	o.Tags = v
}

func (o BackupCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EncryptEnabled) {
		toSerialize["encrypt_enabled"] = o.EncryptEnabled
	}
	if o.FilesystemPaths != nil {
		toSerialize["filesystem_paths"] = o.FilesystemPaths
	}
	toSerialize["name"] = o.Name
	toSerialize["policy_category"] = o.PolicyCategory
	toSerialize["policy_type"] = o.PolicyType
	if o.Region.IsSet() {
		toSerialize["region"] = o.Region.Get()
	}
	if !IsNil(o.RetentionPeriod) {
		toSerialize["retention_period"] = o.RetentionPeriod
	}
	toSerialize["schedules"] = o.Schedules
	toSerialize["server_category"] = o.ServerCategory
	if o.ServerGuid.IsSet() {
		toSerialize["server_guid"] = o.ServerGuid.Get()
	}
	toSerialize["server_uuid"] = o.ServerUuid
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

func (o *BackupCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"policy_category",
		"policy_type",
		"schedules",
		"server_category",
		"server_uuid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBackupCreateRequest := _BackupCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBackupCreateRequest)

	if err != nil {
		return err
	}

	*o = BackupCreateRequest(varBackupCreateRequest)

	return err
}

type NullableBackupCreateRequest struct {
	value *BackupCreateRequest
	isSet bool
}

func (v NullableBackupCreateRequest) Get() *BackupCreateRequest {
	return v.value
}

func (v *NullableBackupCreateRequest) Set(val *BackupCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupCreateRequest(val *BackupCreateRequest) *NullableBackupCreateRequest {
	return &NullableBackupCreateRequest{value: val, isSet: true}
}

func (v NullableBackupCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


