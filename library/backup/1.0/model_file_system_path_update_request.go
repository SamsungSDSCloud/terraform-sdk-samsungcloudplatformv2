/*
OSSCP backup Project

OSSCP backup Project

API version: 0.0.1.dev566
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backup

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FileSystemPathUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileSystemPathUpdateRequest{}

// FileSystemPathUpdateRequest struct for FileSystemPathUpdateRequest
type FileSystemPathUpdateRequest struct {
	BackupFilesystemPaths BackupFilesystemPaths `json:"backup_filesystem_paths"`
}

type _FileSystemPathUpdateRequest FileSystemPathUpdateRequest

// NewFileSystemPathUpdateRequest instantiates a new FileSystemPathUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileSystemPathUpdateRequest(backupFilesystemPaths BackupFilesystemPaths) *FileSystemPathUpdateRequest {
	this := FileSystemPathUpdateRequest{}
	this.BackupFilesystemPaths = backupFilesystemPaths
	return &this
}

// NewFileSystemPathUpdateRequestWithDefaults instantiates a new FileSystemPathUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileSystemPathUpdateRequestWithDefaults() *FileSystemPathUpdateRequest {
	this := FileSystemPathUpdateRequest{}
	return &this
}

// GetBackupFilesystemPaths returns the BackupFilesystemPaths field value
func (o *FileSystemPathUpdateRequest) GetBackupFilesystemPaths() BackupFilesystemPaths {
	if o == nil {
		var ret BackupFilesystemPaths
		return ret
	}

	return o.BackupFilesystemPaths
}

// GetBackupFilesystemPathsOk returns a tuple with the BackupFilesystemPaths field value
// and a boolean to check if the value has been set.
func (o *FileSystemPathUpdateRequest) GetBackupFilesystemPathsOk() (*BackupFilesystemPaths, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackupFilesystemPaths, true
}

// SetBackupFilesystemPaths sets field value
func (o *FileSystemPathUpdateRequest) SetBackupFilesystemPaths(v BackupFilesystemPaths) {
	o.BackupFilesystemPaths = v
}

func (o FileSystemPathUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileSystemPathUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["backup_filesystem_paths"] = o.BackupFilesystemPaths
	return toSerialize, nil
}

func (o *FileSystemPathUpdateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"backup_filesystem_paths",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFileSystemPathUpdateRequest := _FileSystemPathUpdateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFileSystemPathUpdateRequest)

	if err != nil {
		return err
	}

	*o = FileSystemPathUpdateRequest(varFileSystemPathUpdateRequest)

	return err
}

type NullableFileSystemPathUpdateRequest struct {
	value *FileSystemPathUpdateRequest
	isSet bool
}

func (v NullableFileSystemPathUpdateRequest) Get() *FileSystemPathUpdateRequest {
	return v.value
}

func (v *NullableFileSystemPathUpdateRequest) Set(val *FileSystemPathUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFileSystemPathUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFileSystemPathUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileSystemPathUpdateRequest(val *FileSystemPathUpdateRequest) *NullableFileSystemPathUpdateRequest {
	return &NullableFileSystemPathUpdateRequest{value: val, isSet: true}
}

func (v NullableFileSystemPathUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileSystemPathUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


