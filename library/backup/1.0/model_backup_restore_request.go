/*
OSSCP backup Project

OSSCP backup Project

API version: 0.0.1.dev566
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backup

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BackupRestoreRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupRestoreRequest{}

// BackupRestoreRequest struct for BackupRestoreRequest
type BackupRestoreRequest struct {
	Networks []Network `json:"networks,omitempty"`
	RestoreRegion NullableString `json:"restore_region,omitempty"`
	// Restore server name
	RestoreServerName string `json:"restore_server_name" validate:"regexp=^[a-zA-Z0-9-_ ]*$"`
	// Restore target ID
	RestoreTargetId string `json:"restore_target_id"`
	SecurityGroups []string `json:"security_groups,omitempty"`
	ServerTypeId NullableString `json:"server_type_id,omitempty"`
}

type _BackupRestoreRequest BackupRestoreRequest

// NewBackupRestoreRequest instantiates a new BackupRestoreRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupRestoreRequest(restoreServerName string, restoreTargetId string) *BackupRestoreRequest {
	this := BackupRestoreRequest{}
	this.RestoreServerName = restoreServerName
	this.RestoreTargetId = restoreTargetId
	return &this
}

// NewBackupRestoreRequestWithDefaults instantiates a new BackupRestoreRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupRestoreRequestWithDefaults() *BackupRestoreRequest {
	this := BackupRestoreRequest{}
	return &this
}

// GetNetworks returns the Networks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupRestoreRequest) GetNetworks() []Network {
	if o == nil {
		var ret []Network
		return ret
	}
	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupRestoreRequest) GetNetworksOk() ([]Network, bool) {
	if o == nil || IsNil(o.Networks) {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *BackupRestoreRequest) HasNetworks() bool {
	if o != nil && !IsNil(o.Networks) {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []Network and assigns it to the Networks field.
func (o *BackupRestoreRequest) SetNetworks(v []Network) {
	o.Networks = v
}

// GetRestoreRegion returns the RestoreRegion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupRestoreRequest) GetRestoreRegion() string {
	if o == nil || IsNil(o.RestoreRegion.Get()) {
		var ret string
		return ret
	}
	return *o.RestoreRegion.Get()
}

// GetRestoreRegionOk returns a tuple with the RestoreRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupRestoreRequest) GetRestoreRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestoreRegion.Get(), o.RestoreRegion.IsSet()
}

// HasRestoreRegion returns a boolean if a field has been set.
func (o *BackupRestoreRequest) HasRestoreRegion() bool {
	if o != nil && o.RestoreRegion.IsSet() {
		return true
	}

	return false
}

// SetRestoreRegion gets a reference to the given NullableString and assigns it to the RestoreRegion field.
func (o *BackupRestoreRequest) SetRestoreRegion(v string) {
	o.RestoreRegion.Set(&v)
}
// SetRestoreRegionNil sets the value for RestoreRegion to be an explicit nil
func (o *BackupRestoreRequest) SetRestoreRegionNil() {
	o.RestoreRegion.Set(nil)
}

// UnsetRestoreRegion ensures that no value is present for RestoreRegion, not even an explicit nil
func (o *BackupRestoreRequest) UnsetRestoreRegion() {
	o.RestoreRegion.Unset()
}

// GetRestoreServerName returns the RestoreServerName field value
func (o *BackupRestoreRequest) GetRestoreServerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RestoreServerName
}

// GetRestoreServerNameOk returns a tuple with the RestoreServerName field value
// and a boolean to check if the value has been set.
func (o *BackupRestoreRequest) GetRestoreServerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RestoreServerName, true
}

// SetRestoreServerName sets field value
func (o *BackupRestoreRequest) SetRestoreServerName(v string) {
	o.RestoreServerName = v
}

// GetRestoreTargetId returns the RestoreTargetId field value
func (o *BackupRestoreRequest) GetRestoreTargetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RestoreTargetId
}

// GetRestoreTargetIdOk returns a tuple with the RestoreTargetId field value
// and a boolean to check if the value has been set.
func (o *BackupRestoreRequest) GetRestoreTargetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RestoreTargetId, true
}

// SetRestoreTargetId sets field value
func (o *BackupRestoreRequest) SetRestoreTargetId(v string) {
	o.RestoreTargetId = v
}

// GetSecurityGroups returns the SecurityGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupRestoreRequest) GetSecurityGroups() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupRestoreRequest) GetSecurityGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.SecurityGroups) {
		return nil, false
	}
	return o.SecurityGroups, true
}

// HasSecurityGroups returns a boolean if a field has been set.
func (o *BackupRestoreRequest) HasSecurityGroups() bool {
	if o != nil && !IsNil(o.SecurityGroups) {
		return true
	}

	return false
}

// SetSecurityGroups gets a reference to the given []string and assigns it to the SecurityGroups field.
func (o *BackupRestoreRequest) SetSecurityGroups(v []string) {
	o.SecurityGroups = v
}

// GetServerTypeId returns the ServerTypeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupRestoreRequest) GetServerTypeId() string {
	if o == nil || IsNil(o.ServerTypeId.Get()) {
		var ret string
		return ret
	}
	return *o.ServerTypeId.Get()
}

// GetServerTypeIdOk returns a tuple with the ServerTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupRestoreRequest) GetServerTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerTypeId.Get(), o.ServerTypeId.IsSet()
}

// HasServerTypeId returns a boolean if a field has been set.
func (o *BackupRestoreRequest) HasServerTypeId() bool {
	if o != nil && o.ServerTypeId.IsSet() {
		return true
	}

	return false
}

// SetServerTypeId gets a reference to the given NullableString and assigns it to the ServerTypeId field.
func (o *BackupRestoreRequest) SetServerTypeId(v string) {
	o.ServerTypeId.Set(&v)
}
// SetServerTypeIdNil sets the value for ServerTypeId to be an explicit nil
func (o *BackupRestoreRequest) SetServerTypeIdNil() {
	o.ServerTypeId.Set(nil)
}

// UnsetServerTypeId ensures that no value is present for ServerTypeId, not even an explicit nil
func (o *BackupRestoreRequest) UnsetServerTypeId() {
	o.ServerTypeId.Unset()
}

func (o BackupRestoreRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupRestoreRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Networks != nil {
		toSerialize["networks"] = o.Networks
	}
	if o.RestoreRegion.IsSet() {
		toSerialize["restore_region"] = o.RestoreRegion.Get()
	}
	toSerialize["restore_server_name"] = o.RestoreServerName
	toSerialize["restore_target_id"] = o.RestoreTargetId
	if o.SecurityGroups != nil {
		toSerialize["security_groups"] = o.SecurityGroups
	}
	if o.ServerTypeId.IsSet() {
		toSerialize["server_type_id"] = o.ServerTypeId.Get()
	}
	return toSerialize, nil
}

func (o *BackupRestoreRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"restore_server_name",
		"restore_target_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBackupRestoreRequest := _BackupRestoreRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBackupRestoreRequest)

	if err != nil {
		return err
	}

	*o = BackupRestoreRequest(varBackupRestoreRequest)

	return err
}

type NullableBackupRestoreRequest struct {
	value *BackupRestoreRequest
	isSet bool
}

func (v NullableBackupRestoreRequest) Get() *BackupRestoreRequest {
	return v.value
}

func (v *NullableBackupRestoreRequest) Set(val *BackupRestoreRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupRestoreRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupRestoreRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupRestoreRequest(val *BackupRestoreRequest) *NullableBackupRestoreRequest {
	return &NullableBackupRestoreRequest{value: val, isSet: true}
}

func (v NullableBackupRestoreRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupRestoreRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


