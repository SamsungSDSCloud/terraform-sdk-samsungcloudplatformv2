/*
OSSCP backup Project

OSSCP backup Project

API version: 0.0.1.dev530
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backup

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the BackupDetailResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupDetailResponse{}

// BackupDetailResponse struct for BackupDetailResponse
type BackupDetailResponse struct {
	BackupAgentId NullableString `json:"backup_agent_id,omitempty"`
	// Created At
	CreatedAt time.Time `json:"created_at"`
	// Created By
	CreatedBy string `json:"created_by"`
	EncryptEnabled NullableBool `json:"encrypt_enabled,omitempty"`
	FilesystemPaths []string `json:"filesystem_paths,omitempty"`
	// ID
	Id string `json:"id"`
	// Modified At
	ModifiedAt time.Time `json:"modified_at"`
	// Modified By
	ModifiedBy string `json:"modified_by"`
	// Backup name
	Name string `json:"name"`
	// Backup policy category
	PolicyCategory string `json:"policy_category"`
	// Backup policy type
	PolicyType string `json:"policy_type"`
	Region NullableString `json:"region,omitempty"`
	// Backup retention period
	RetentionPeriod string `json:"retention_period"`
	// Backup role type
	RoleType string `json:"role_type"`
	// Backup server category
	ServerCategory string `json:"server_category"`
	// Backup server name
	ServerName string `json:"server_name"`
	ServerOsType NullableString `json:"server_os_type,omitempty"`
	ServerRegion NullableString `json:"server_region"`
	// Backup server UUID
	ServerUuid string `json:"server_uuid"`
	// Backup state
	State string `json:"state"`
}

type _BackupDetailResponse BackupDetailResponse

// NewBackupDetailResponse instantiates a new BackupDetailResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupDetailResponse(createdAt time.Time, createdBy string, id string, modifiedAt time.Time, modifiedBy string, name string, policyCategory string, policyType string, retentionPeriod string, roleType string, serverCategory string, serverName string, serverRegion NullableString, serverUuid string, state string) *BackupDetailResponse {
	this := BackupDetailResponse{}
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.Id = id
	this.ModifiedAt = modifiedAt
	this.ModifiedBy = modifiedBy
	this.Name = name
	this.PolicyCategory = policyCategory
	this.PolicyType = policyType
	this.RetentionPeriod = retentionPeriod
	this.RoleType = roleType
	this.ServerCategory = serverCategory
	this.ServerName = serverName
	this.ServerRegion = serverRegion
	this.ServerUuid = serverUuid
	this.State = state
	return &this
}

// NewBackupDetailResponseWithDefaults instantiates a new BackupDetailResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupDetailResponseWithDefaults() *BackupDetailResponse {
	this := BackupDetailResponse{}
	return &this
}

// GetBackupAgentId returns the BackupAgentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupDetailResponse) GetBackupAgentId() string {
	if o == nil || IsNil(o.BackupAgentId.Get()) {
		var ret string
		return ret
	}
	return *o.BackupAgentId.Get()
}

// GetBackupAgentIdOk returns a tuple with the BackupAgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupDetailResponse) GetBackupAgentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackupAgentId.Get(), o.BackupAgentId.IsSet()
}

// HasBackupAgentId returns a boolean if a field has been set.
func (o *BackupDetailResponse) HasBackupAgentId() bool {
	if o != nil && o.BackupAgentId.IsSet() {
		return true
	}

	return false
}

// SetBackupAgentId gets a reference to the given NullableString and assigns it to the BackupAgentId field.
func (o *BackupDetailResponse) SetBackupAgentId(v string) {
	o.BackupAgentId.Set(&v)
}
// SetBackupAgentIdNil sets the value for BackupAgentId to be an explicit nil
func (o *BackupDetailResponse) SetBackupAgentIdNil() {
	o.BackupAgentId.Set(nil)
}

// UnsetBackupAgentId ensures that no value is present for BackupAgentId, not even an explicit nil
func (o *BackupDetailResponse) UnsetBackupAgentId() {
	o.BackupAgentId.Unset()
}

// GetCreatedAt returns the CreatedAt field value
func (o *BackupDetailResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BackupDetailResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BackupDetailResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *BackupDetailResponse) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *BackupDetailResponse) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *BackupDetailResponse) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetEncryptEnabled returns the EncryptEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupDetailResponse) GetEncryptEnabled() bool {
	if o == nil || IsNil(o.EncryptEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.EncryptEnabled.Get()
}

// GetEncryptEnabledOk returns a tuple with the EncryptEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupDetailResponse) GetEncryptEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EncryptEnabled.Get(), o.EncryptEnabled.IsSet()
}

// HasEncryptEnabled returns a boolean if a field has been set.
func (o *BackupDetailResponse) HasEncryptEnabled() bool {
	if o != nil && o.EncryptEnabled.IsSet() {
		return true
	}

	return false
}

// SetEncryptEnabled gets a reference to the given NullableBool and assigns it to the EncryptEnabled field.
func (o *BackupDetailResponse) SetEncryptEnabled(v bool) {
	o.EncryptEnabled.Set(&v)
}
// SetEncryptEnabledNil sets the value for EncryptEnabled to be an explicit nil
func (o *BackupDetailResponse) SetEncryptEnabledNil() {
	o.EncryptEnabled.Set(nil)
}

// UnsetEncryptEnabled ensures that no value is present for EncryptEnabled, not even an explicit nil
func (o *BackupDetailResponse) UnsetEncryptEnabled() {
	o.EncryptEnabled.Unset()
}

// GetFilesystemPaths returns the FilesystemPaths field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupDetailResponse) GetFilesystemPaths() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.FilesystemPaths
}

// GetFilesystemPathsOk returns a tuple with the FilesystemPaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupDetailResponse) GetFilesystemPathsOk() ([]string, bool) {
	if o == nil || IsNil(o.FilesystemPaths) {
		return nil, false
	}
	return o.FilesystemPaths, true
}

// HasFilesystemPaths returns a boolean if a field has been set.
func (o *BackupDetailResponse) HasFilesystemPaths() bool {
	if o != nil && !IsNil(o.FilesystemPaths) {
		return true
	}

	return false
}

// SetFilesystemPaths gets a reference to the given []string and assigns it to the FilesystemPaths field.
func (o *BackupDetailResponse) SetFilesystemPaths(v []string) {
	o.FilesystemPaths = v
}

// GetId returns the Id field value
func (o *BackupDetailResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BackupDetailResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BackupDetailResponse) SetId(v string) {
	o.Id = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *BackupDetailResponse) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *BackupDetailResponse) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *BackupDetailResponse) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetModifiedBy returns the ModifiedBy field value
func (o *BackupDetailResponse) GetModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value
// and a boolean to check if the value has been set.
func (o *BackupDetailResponse) GetModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedBy, true
}

// SetModifiedBy sets field value
func (o *BackupDetailResponse) SetModifiedBy(v string) {
	o.ModifiedBy = v
}

// GetName returns the Name field value
func (o *BackupDetailResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BackupDetailResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BackupDetailResponse) SetName(v string) {
	o.Name = v
}

// GetPolicyCategory returns the PolicyCategory field value
func (o *BackupDetailResponse) GetPolicyCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PolicyCategory
}

// GetPolicyCategoryOk returns a tuple with the PolicyCategory field value
// and a boolean to check if the value has been set.
func (o *BackupDetailResponse) GetPolicyCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PolicyCategory, true
}

// SetPolicyCategory sets field value
func (o *BackupDetailResponse) SetPolicyCategory(v string) {
	o.PolicyCategory = v
}

// GetPolicyType returns the PolicyType field value
func (o *BackupDetailResponse) GetPolicyType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PolicyType
}

// GetPolicyTypeOk returns a tuple with the PolicyType field value
// and a boolean to check if the value has been set.
func (o *BackupDetailResponse) GetPolicyTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PolicyType, true
}

// SetPolicyType sets field value
func (o *BackupDetailResponse) SetPolicyType(v string) {
	o.PolicyType = v
}

// GetRegion returns the Region field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupDetailResponse) GetRegion() string {
	if o == nil || IsNil(o.Region.Get()) {
		var ret string
		return ret
	}
	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupDetailResponse) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// HasRegion returns a boolean if a field has been set.
func (o *BackupDetailResponse) HasRegion() bool {
	if o != nil && o.Region.IsSet() {
		return true
	}

	return false
}

// SetRegion gets a reference to the given NullableString and assigns it to the Region field.
func (o *BackupDetailResponse) SetRegion(v string) {
	o.Region.Set(&v)
}
// SetRegionNil sets the value for Region to be an explicit nil
func (o *BackupDetailResponse) SetRegionNil() {
	o.Region.Set(nil)
}

// UnsetRegion ensures that no value is present for Region, not even an explicit nil
func (o *BackupDetailResponse) UnsetRegion() {
	o.Region.Unset()
}

// GetRetentionPeriod returns the RetentionPeriod field value
func (o *BackupDetailResponse) GetRetentionPeriod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RetentionPeriod
}

// GetRetentionPeriodOk returns a tuple with the RetentionPeriod field value
// and a boolean to check if the value has been set.
func (o *BackupDetailResponse) GetRetentionPeriodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RetentionPeriod, true
}

// SetRetentionPeriod sets field value
func (o *BackupDetailResponse) SetRetentionPeriod(v string) {
	o.RetentionPeriod = v
}

// GetRoleType returns the RoleType field value
func (o *BackupDetailResponse) GetRoleType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleType
}

// GetRoleTypeOk returns a tuple with the RoleType field value
// and a boolean to check if the value has been set.
func (o *BackupDetailResponse) GetRoleTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleType, true
}

// SetRoleType sets field value
func (o *BackupDetailResponse) SetRoleType(v string) {
	o.RoleType = v
}

// GetServerCategory returns the ServerCategory field value
func (o *BackupDetailResponse) GetServerCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerCategory
}

// GetServerCategoryOk returns a tuple with the ServerCategory field value
// and a boolean to check if the value has been set.
func (o *BackupDetailResponse) GetServerCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerCategory, true
}

// SetServerCategory sets field value
func (o *BackupDetailResponse) SetServerCategory(v string) {
	o.ServerCategory = v
}

// GetServerName returns the ServerName field value
func (o *BackupDetailResponse) GetServerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value
// and a boolean to check if the value has been set.
func (o *BackupDetailResponse) GetServerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerName, true
}

// SetServerName sets field value
func (o *BackupDetailResponse) SetServerName(v string) {
	o.ServerName = v
}

// GetServerOsType returns the ServerOsType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupDetailResponse) GetServerOsType() string {
	if o == nil || IsNil(o.ServerOsType.Get()) {
		var ret string
		return ret
	}
	return *o.ServerOsType.Get()
}

// GetServerOsTypeOk returns a tuple with the ServerOsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupDetailResponse) GetServerOsTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerOsType.Get(), o.ServerOsType.IsSet()
}

// HasServerOsType returns a boolean if a field has been set.
func (o *BackupDetailResponse) HasServerOsType() bool {
	if o != nil && o.ServerOsType.IsSet() {
		return true
	}

	return false
}

// SetServerOsType gets a reference to the given NullableString and assigns it to the ServerOsType field.
func (o *BackupDetailResponse) SetServerOsType(v string) {
	o.ServerOsType.Set(&v)
}
// SetServerOsTypeNil sets the value for ServerOsType to be an explicit nil
func (o *BackupDetailResponse) SetServerOsTypeNil() {
	o.ServerOsType.Set(nil)
}

// UnsetServerOsType ensures that no value is present for ServerOsType, not even an explicit nil
func (o *BackupDetailResponse) UnsetServerOsType() {
	o.ServerOsType.Unset()
}

// GetServerRegion returns the ServerRegion field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BackupDetailResponse) GetServerRegion() string {
	if o == nil || o.ServerRegion.Get() == nil {
		var ret string
		return ret
	}

	return *o.ServerRegion.Get()
}

// GetServerRegionOk returns a tuple with the ServerRegion field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupDetailResponse) GetServerRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerRegion.Get(), o.ServerRegion.IsSet()
}

// SetServerRegion sets field value
func (o *BackupDetailResponse) SetServerRegion(v string) {
	o.ServerRegion.Set(&v)
}

// GetServerUuid returns the ServerUuid field value
func (o *BackupDetailResponse) GetServerUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerUuid
}

// GetServerUuidOk returns a tuple with the ServerUuid field value
// and a boolean to check if the value has been set.
func (o *BackupDetailResponse) GetServerUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerUuid, true
}

// SetServerUuid sets field value
func (o *BackupDetailResponse) SetServerUuid(v string) {
	o.ServerUuid = v
}

// GetState returns the State field value
func (o *BackupDetailResponse) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *BackupDetailResponse) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *BackupDetailResponse) SetState(v string) {
	o.State = v
}

func (o BackupDetailResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupDetailResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BackupAgentId.IsSet() {
		toSerialize["backup_agent_id"] = o.BackupAgentId.Get()
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	if o.EncryptEnabled.IsSet() {
		toSerialize["encrypt_enabled"] = o.EncryptEnabled.Get()
	}
	if o.FilesystemPaths != nil {
		toSerialize["filesystem_paths"] = o.FilesystemPaths
	}
	toSerialize["id"] = o.Id
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["modified_by"] = o.ModifiedBy
	toSerialize["name"] = o.Name
	toSerialize["policy_category"] = o.PolicyCategory
	toSerialize["policy_type"] = o.PolicyType
	if o.Region.IsSet() {
		toSerialize["region"] = o.Region.Get()
	}
	toSerialize["retention_period"] = o.RetentionPeriod
	toSerialize["role_type"] = o.RoleType
	toSerialize["server_category"] = o.ServerCategory
	toSerialize["server_name"] = o.ServerName
	if o.ServerOsType.IsSet() {
		toSerialize["server_os_type"] = o.ServerOsType.Get()
	}
	toSerialize["server_region"] = o.ServerRegion.Get()
	toSerialize["server_uuid"] = o.ServerUuid
	toSerialize["state"] = o.State
	return toSerialize, nil
}

func (o *BackupDetailResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"created_by",
		"id",
		"modified_at",
		"modified_by",
		"name",
		"policy_category",
		"policy_type",
		"retention_period",
		"role_type",
		"server_category",
		"server_name",
		"server_region",
		"server_uuid",
		"state",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBackupDetailResponse := _BackupDetailResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBackupDetailResponse)

	if err != nil {
		return err
	}

	*o = BackupDetailResponse(varBackupDetailResponse)

	return err
}

type NullableBackupDetailResponse struct {
	value *BackupDetailResponse
	isSet bool
}

func (v NullableBackupDetailResponse) Get() *BackupDetailResponse {
	return v.value
}

func (v *NullableBackupDetailResponse) Set(val *BackupDetailResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupDetailResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupDetailResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupDetailResponse(val *BackupDetailResponse) *NullableBackupDetailResponse {
	return &NullableBackupDetailResponse{value: val, isSet: true}
}

func (v NullableBackupDetailResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupDetailResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


