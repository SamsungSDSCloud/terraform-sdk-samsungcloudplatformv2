/*
OSSCP backup Project

OSSCP backup Project

API version: 0.0.1.dev530
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backup

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the InstallFilePathResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstallFilePathResponse{}

// InstallFilePathResponse struct for InstallFilePathResponse
type InstallFilePathResponse struct {
	// Install file path
	InstallFilePath string `json:"install_file_path"`
}

type _InstallFilePathResponse InstallFilePathResponse

// NewInstallFilePathResponse instantiates a new InstallFilePathResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstallFilePathResponse(installFilePath string) *InstallFilePathResponse {
	this := InstallFilePathResponse{}
	this.InstallFilePath = installFilePath
	return &this
}

// NewInstallFilePathResponseWithDefaults instantiates a new InstallFilePathResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstallFilePathResponseWithDefaults() *InstallFilePathResponse {
	this := InstallFilePathResponse{}
	return &this
}

// GetInstallFilePath returns the InstallFilePath field value
func (o *InstallFilePathResponse) GetInstallFilePath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstallFilePath
}

// GetInstallFilePathOk returns a tuple with the InstallFilePath field value
// and a boolean to check if the value has been set.
func (o *InstallFilePathResponse) GetInstallFilePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstallFilePath, true
}

// SetInstallFilePath sets field value
func (o *InstallFilePathResponse) SetInstallFilePath(v string) {
	o.InstallFilePath = v
}

func (o InstallFilePathResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstallFilePathResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["install_file_path"] = o.InstallFilePath
	return toSerialize, nil
}

func (o *InstallFilePathResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"install_file_path",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInstallFilePathResponse := _InstallFilePathResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInstallFilePathResponse)

	if err != nil {
		return err
	}

	*o = InstallFilePathResponse(varInstallFilePathResponse)

	return err
}

type NullableInstallFilePathResponse struct {
	value *InstallFilePathResponse
	isSet bool
}

func (v NullableInstallFilePathResponse) Get() *InstallFilePathResponse {
	return v.value
}

func (v *NullableInstallFilePathResponse) Set(val *InstallFilePathResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableInstallFilePathResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableInstallFilePathResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstallFilePathResponse(val *InstallFilePathResponse) *NullableInstallFilePathResponse {
	return &NullableInstallFilePathResponse{value: val, isSet: true}
}

func (v NullableInstallFilePathResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstallFilePathResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


