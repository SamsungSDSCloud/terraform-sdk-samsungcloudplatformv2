/*
OSSCP backup Project

OSSCP backup Project

API version: 0.0.1.dev530
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backup

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the BackupHistoryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupHistoryResponse{}

// BackupHistoryResponse struct for BackupHistoryResponse
type BackupHistoryResponse struct {
	BackupEndTime NullableTime `json:"backup_end_time"`
	BackupJobGuid NullableString `json:"backup_job_guid"`
	// Backup history state
	BackupJobState string `json:"backup_job_state"`
	BackupStartTime NullableTime `json:"backup_start_time"`
	// Schedule ID
	ScheduleId string `json:"schedule_id"`
	// Schedule name
	ScheduleName string `json:"schedule_name"`
}

type _BackupHistoryResponse BackupHistoryResponse

// NewBackupHistoryResponse instantiates a new BackupHistoryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupHistoryResponse(backupEndTime NullableTime, backupJobGuid NullableString, backupJobState string, backupStartTime NullableTime, scheduleId string, scheduleName string) *BackupHistoryResponse {
	this := BackupHistoryResponse{}
	this.BackupEndTime = backupEndTime
	this.BackupJobGuid = backupJobGuid
	this.BackupJobState = backupJobState
	this.BackupStartTime = backupStartTime
	this.ScheduleId = scheduleId
	this.ScheduleName = scheduleName
	return &this
}

// NewBackupHistoryResponseWithDefaults instantiates a new BackupHistoryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupHistoryResponseWithDefaults() *BackupHistoryResponse {
	this := BackupHistoryResponse{}
	return &this
}

// GetBackupEndTime returns the BackupEndTime field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *BackupHistoryResponse) GetBackupEndTime() time.Time {
	if o == nil || o.BackupEndTime.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.BackupEndTime.Get()
}

// GetBackupEndTimeOk returns a tuple with the BackupEndTime field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupHistoryResponse) GetBackupEndTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackupEndTime.Get(), o.BackupEndTime.IsSet()
}

// SetBackupEndTime sets field value
func (o *BackupHistoryResponse) SetBackupEndTime(v time.Time) {
	o.BackupEndTime.Set(&v)
}

// GetBackupJobGuid returns the BackupJobGuid field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BackupHistoryResponse) GetBackupJobGuid() string {
	if o == nil || o.BackupJobGuid.Get() == nil {
		var ret string
		return ret
	}

	return *o.BackupJobGuid.Get()
}

// GetBackupJobGuidOk returns a tuple with the BackupJobGuid field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupHistoryResponse) GetBackupJobGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackupJobGuid.Get(), o.BackupJobGuid.IsSet()
}

// SetBackupJobGuid sets field value
func (o *BackupHistoryResponse) SetBackupJobGuid(v string) {
	o.BackupJobGuid.Set(&v)
}

// GetBackupJobState returns the BackupJobState field value
func (o *BackupHistoryResponse) GetBackupJobState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackupJobState
}

// GetBackupJobStateOk returns a tuple with the BackupJobState field value
// and a boolean to check if the value has been set.
func (o *BackupHistoryResponse) GetBackupJobStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackupJobState, true
}

// SetBackupJobState sets field value
func (o *BackupHistoryResponse) SetBackupJobState(v string) {
	o.BackupJobState = v
}

// GetBackupStartTime returns the BackupStartTime field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *BackupHistoryResponse) GetBackupStartTime() time.Time {
	if o == nil || o.BackupStartTime.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.BackupStartTime.Get()
}

// GetBackupStartTimeOk returns a tuple with the BackupStartTime field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupHistoryResponse) GetBackupStartTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackupStartTime.Get(), o.BackupStartTime.IsSet()
}

// SetBackupStartTime sets field value
func (o *BackupHistoryResponse) SetBackupStartTime(v time.Time) {
	o.BackupStartTime.Set(&v)
}

// GetScheduleId returns the ScheduleId field value
func (o *BackupHistoryResponse) GetScheduleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScheduleId
}

// GetScheduleIdOk returns a tuple with the ScheduleId field value
// and a boolean to check if the value has been set.
func (o *BackupHistoryResponse) GetScheduleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScheduleId, true
}

// SetScheduleId sets field value
func (o *BackupHistoryResponse) SetScheduleId(v string) {
	o.ScheduleId = v
}

// GetScheduleName returns the ScheduleName field value
func (o *BackupHistoryResponse) GetScheduleName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScheduleName
}

// GetScheduleNameOk returns a tuple with the ScheduleName field value
// and a boolean to check if the value has been set.
func (o *BackupHistoryResponse) GetScheduleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScheduleName, true
}

// SetScheduleName sets field value
func (o *BackupHistoryResponse) SetScheduleName(v string) {
	o.ScheduleName = v
}

func (o BackupHistoryResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupHistoryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["backup_end_time"] = o.BackupEndTime.Get()
	toSerialize["backup_job_guid"] = o.BackupJobGuid.Get()
	toSerialize["backup_job_state"] = o.BackupJobState
	toSerialize["backup_start_time"] = o.BackupStartTime.Get()
	toSerialize["schedule_id"] = o.ScheduleId
	toSerialize["schedule_name"] = o.ScheduleName
	return toSerialize, nil
}

func (o *BackupHistoryResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"backup_end_time",
		"backup_job_guid",
		"backup_job_state",
		"backup_start_time",
		"schedule_id",
		"schedule_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBackupHistoryResponse := _BackupHistoryResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBackupHistoryResponse)

	if err != nil {
		return err
	}

	*o = BackupHistoryResponse(varBackupHistoryResponse)

	return err
}

type NullableBackupHistoryResponse struct {
	value *BackupHistoryResponse
	isSet bool
}

func (v NullableBackupHistoryResponse) Get() *BackupHistoryResponse {
	return v.value
}

func (v *NullableBackupHistoryResponse) Set(val *BackupHistoryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupHistoryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupHistoryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupHistoryResponse(val *BackupHistoryResponse) *NullableBackupHistoryResponse {
	return &NullableBackupHistoryResponse{value: val, isSet: true}
}

func (v NullableBackupHistoryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupHistoryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


