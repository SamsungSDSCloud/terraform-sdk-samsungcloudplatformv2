/*
OSSCP backup Project

OSSCP backup Project

API version: 0.0.1.dev530
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backup

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BackupAgentTargetResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupAgentTargetResponse{}

// BackupAgentTargetResponse struct for BackupAgentTargetResponse
type BackupAgentTargetResponse struct {
	// Server's Backup Agent IP
	ServerBackupAgentIp string `json:"server_backup_agent_ip"`
	// Backup Agent target server name
	ServerName string `json:"server_name"`
	// Backup server state
	ServerState string `json:"server_state"`
	// Backup Agent target server UUID
	ServerUuid string `json:"server_uuid"`
}

type _BackupAgentTargetResponse BackupAgentTargetResponse

// NewBackupAgentTargetResponse instantiates a new BackupAgentTargetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupAgentTargetResponse(serverBackupAgentIp string, serverName string, serverState string, serverUuid string) *BackupAgentTargetResponse {
	this := BackupAgentTargetResponse{}
	this.ServerBackupAgentIp = serverBackupAgentIp
	this.ServerName = serverName
	this.ServerState = serverState
	this.ServerUuid = serverUuid
	return &this
}

// NewBackupAgentTargetResponseWithDefaults instantiates a new BackupAgentTargetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupAgentTargetResponseWithDefaults() *BackupAgentTargetResponse {
	this := BackupAgentTargetResponse{}
	return &this
}

// GetServerBackupAgentIp returns the ServerBackupAgentIp field value
func (o *BackupAgentTargetResponse) GetServerBackupAgentIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerBackupAgentIp
}

// GetServerBackupAgentIpOk returns a tuple with the ServerBackupAgentIp field value
// and a boolean to check if the value has been set.
func (o *BackupAgentTargetResponse) GetServerBackupAgentIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerBackupAgentIp, true
}

// SetServerBackupAgentIp sets field value
func (o *BackupAgentTargetResponse) SetServerBackupAgentIp(v string) {
	o.ServerBackupAgentIp = v
}

// GetServerName returns the ServerName field value
func (o *BackupAgentTargetResponse) GetServerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value
// and a boolean to check if the value has been set.
func (o *BackupAgentTargetResponse) GetServerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerName, true
}

// SetServerName sets field value
func (o *BackupAgentTargetResponse) SetServerName(v string) {
	o.ServerName = v
}

// GetServerState returns the ServerState field value
func (o *BackupAgentTargetResponse) GetServerState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerState
}

// GetServerStateOk returns a tuple with the ServerState field value
// and a boolean to check if the value has been set.
func (o *BackupAgentTargetResponse) GetServerStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerState, true
}

// SetServerState sets field value
func (o *BackupAgentTargetResponse) SetServerState(v string) {
	o.ServerState = v
}

// GetServerUuid returns the ServerUuid field value
func (o *BackupAgentTargetResponse) GetServerUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerUuid
}

// GetServerUuidOk returns a tuple with the ServerUuid field value
// and a boolean to check if the value has been set.
func (o *BackupAgentTargetResponse) GetServerUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerUuid, true
}

// SetServerUuid sets field value
func (o *BackupAgentTargetResponse) SetServerUuid(v string) {
	o.ServerUuid = v
}

func (o BackupAgentTargetResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupAgentTargetResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["server_backup_agent_ip"] = o.ServerBackupAgentIp
	toSerialize["server_name"] = o.ServerName
	toSerialize["server_state"] = o.ServerState
	toSerialize["server_uuid"] = o.ServerUuid
	return toSerialize, nil
}

func (o *BackupAgentTargetResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"server_backup_agent_ip",
		"server_name",
		"server_state",
		"server_uuid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBackupAgentTargetResponse := _BackupAgentTargetResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBackupAgentTargetResponse)

	if err != nil {
		return err
	}

	*o = BackupAgentTargetResponse(varBackupAgentTargetResponse)

	return err
}

type NullableBackupAgentTargetResponse struct {
	value *BackupAgentTargetResponse
	isSet bool
}

func (v NullableBackupAgentTargetResponse) Get() *BackupAgentTargetResponse {
	return v.value
}

func (v *NullableBackupAgentTargetResponse) Set(val *BackupAgentTargetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupAgentTargetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupAgentTargetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupAgentTargetResponse(val *BackupAgentTargetResponse) *NullableBackupAgentTargetResponse {
	return &NullableBackupAgentTargetResponse{value: val, isSet: true}
}

func (v NullableBackupAgentTargetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupAgentTargetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


