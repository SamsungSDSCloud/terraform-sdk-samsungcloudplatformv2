/*
OSSCP backup Project

OSSCP backup Project

API version: 0.0.1.dev530
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backup

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BackupTargetResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupTargetResponse{}

// BackupTargetResponse struct for BackupTargetResponse
type BackupTargetResponse struct {
	ServerGuid NullableString `json:"server_guid"`
	// Backup server name
	ServerName string `json:"server_name"`
	ServerOsVersion NullableString `json:"server_os_version"`
	ServerType NullableString `json:"server_type"`
	// Backup server UUID
	ServerUuid string `json:"server_uuid"`
}

type _BackupTargetResponse BackupTargetResponse

// NewBackupTargetResponse instantiates a new BackupTargetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupTargetResponse(serverGuid NullableString, serverName string, serverOsVersion NullableString, serverType NullableString, serverUuid string) *BackupTargetResponse {
	this := BackupTargetResponse{}
	this.ServerGuid = serverGuid
	this.ServerName = serverName
	this.ServerOsVersion = serverOsVersion
	this.ServerType = serverType
	this.ServerUuid = serverUuid
	return &this
}

// NewBackupTargetResponseWithDefaults instantiates a new BackupTargetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupTargetResponseWithDefaults() *BackupTargetResponse {
	this := BackupTargetResponse{}
	return &this
}

// GetServerGuid returns the ServerGuid field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BackupTargetResponse) GetServerGuid() string {
	if o == nil || o.ServerGuid.Get() == nil {
		var ret string
		return ret
	}

	return *o.ServerGuid.Get()
}

// GetServerGuidOk returns a tuple with the ServerGuid field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupTargetResponse) GetServerGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerGuid.Get(), o.ServerGuid.IsSet()
}

// SetServerGuid sets field value
func (o *BackupTargetResponse) SetServerGuid(v string) {
	o.ServerGuid.Set(&v)
}

// GetServerName returns the ServerName field value
func (o *BackupTargetResponse) GetServerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value
// and a boolean to check if the value has been set.
func (o *BackupTargetResponse) GetServerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerName, true
}

// SetServerName sets field value
func (o *BackupTargetResponse) SetServerName(v string) {
	o.ServerName = v
}

// GetServerOsVersion returns the ServerOsVersion field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BackupTargetResponse) GetServerOsVersion() string {
	if o == nil || o.ServerOsVersion.Get() == nil {
		var ret string
		return ret
	}

	return *o.ServerOsVersion.Get()
}

// GetServerOsVersionOk returns a tuple with the ServerOsVersion field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupTargetResponse) GetServerOsVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerOsVersion.Get(), o.ServerOsVersion.IsSet()
}

// SetServerOsVersion sets field value
func (o *BackupTargetResponse) SetServerOsVersion(v string) {
	o.ServerOsVersion.Set(&v)
}

// GetServerType returns the ServerType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BackupTargetResponse) GetServerType() string {
	if o == nil || o.ServerType.Get() == nil {
		var ret string
		return ret
	}

	return *o.ServerType.Get()
}

// GetServerTypeOk returns a tuple with the ServerType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupTargetResponse) GetServerTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerType.Get(), o.ServerType.IsSet()
}

// SetServerType sets field value
func (o *BackupTargetResponse) SetServerType(v string) {
	o.ServerType.Set(&v)
}

// GetServerUuid returns the ServerUuid field value
func (o *BackupTargetResponse) GetServerUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerUuid
}

// GetServerUuidOk returns a tuple with the ServerUuid field value
// and a boolean to check if the value has been set.
func (o *BackupTargetResponse) GetServerUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerUuid, true
}

// SetServerUuid sets field value
func (o *BackupTargetResponse) SetServerUuid(v string) {
	o.ServerUuid = v
}

func (o BackupTargetResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupTargetResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["server_guid"] = o.ServerGuid.Get()
	toSerialize["server_name"] = o.ServerName
	toSerialize["server_os_version"] = o.ServerOsVersion.Get()
	toSerialize["server_type"] = o.ServerType.Get()
	toSerialize["server_uuid"] = o.ServerUuid
	return toSerialize, nil
}

func (o *BackupTargetResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"server_guid",
		"server_name",
		"server_os_version",
		"server_type",
		"server_uuid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBackupTargetResponse := _BackupTargetResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBackupTargetResponse)

	if err != nil {
		return err
	}

	*o = BackupTargetResponse(varBackupTargetResponse)

	return err
}

type NullableBackupTargetResponse struct {
	value *BackupTargetResponse
	isSet bool
}

func (v NullableBackupTargetResponse) Get() *BackupTargetResponse {
	return v.value
}

func (v *NullableBackupTargetResponse) Set(val *BackupTargetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupTargetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupTargetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupTargetResponse(val *BackupTargetResponse) *NullableBackupTargetResponse {
	return &NullableBackupTargetResponse{value: val, isSet: true}
}

func (v NullableBackupTargetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupTargetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


