/*
OSSCP Quota Project

OSSCP Quota Project

API version: 0.0.1.dev92
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package quota

import (
	"encoding/json"
	"fmt"
)

// RequestStateEnum the model 'RequestStateEnum'
type RequestStateEnum string

// List of RequestStateEnum
const (
	REQUESTSTATEENUM_BEFORE_APPROVE   RequestStateEnum = "BEFORE_APPROVE"
	REQUESTSTATEENUM_PARTIAL_APPROVED RequestStateEnum = "PARTIAL_APPROVED"
	REQUESTSTATEENUM_REFUSED          RequestStateEnum = "REFUSED"
	REQUESTSTATEENUM_HOLDING          RequestStateEnum = "HOLDING"
	REQUESTSTATEENUM_APPROVED         RequestStateEnum = "APPROVED"
	REQUESTSTATEENUM_AUTO_REDUCED     RequestStateEnum = "AUTO_REDUCED"
)

// All allowed values of RequestStateEnum enum
var AllowedRequestStateEnumEnumValues = []RequestStateEnum{
	"BEFORE_APPROVE",
	"PARTIAL_APPROVED",
	"REFUSED",
	"HOLDING",
	"APPROVED",
	"AUTO_REDUCED",
}

func (v *RequestStateEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := RequestStateEnum(value)
	for _, existing := range AllowedRequestStateEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid RequestStateEnum", value)
}

// NewRequestStateEnumFromValue returns a pointer to a valid RequestStateEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRequestStateEnumFromValue(v string) (*RequestStateEnum, error) {
	ev := RequestStateEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for RequestStateEnum: valid values are %v", v, AllowedRequestStateEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RequestStateEnum) IsValid() bool {
	for _, existing := range AllowedRequestStateEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to RequestStateEnum value
func (v RequestStateEnum) Ptr() *RequestStateEnum {
	return &v
}

type NullableRequestStateEnum struct {
	value *RequestStateEnum
	isSet bool
}

func (v NullableRequestStateEnum) Get() *RequestStateEnum {
	return v.value
}

func (v *NullableRequestStateEnum) Set(val *RequestStateEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestStateEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestStateEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestStateEnum(val *RequestStateEnum) *NullableRequestStateEnum {
	return &NullableRequestStateEnum{value: val, isSet: true}
}

func (v NullableRequestStateEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestStateEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
