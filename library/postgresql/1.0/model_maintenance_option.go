/*
OSSCP Scp-dbaas Project

OSSCP Scp-dbaas Project

API version: 0.0.1.dev2150
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package postgresql

import (
	"encoding/json"
)

// checks if the MaintenanceOption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MaintenanceOption{}

// MaintenanceOption struct for MaintenanceOption
type MaintenanceOption struct {
	// Period in hours
	PeriodHour *string `json:"period_hour,omitempty" validate:"regexp=^(0\\\\.5|[1-5]\\\\.5|[1-9]|1[0-9]|2[0-4])$"`
	// Starting day of week
	StartingDayOfWeek *DayOfWeek `json:"starting_day_of_week,omitempty"`
	// Starting time
	StartingTime *string `json:"starting_time,omitempty"`
}

// NewMaintenanceOption instantiates a new MaintenanceOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaintenanceOption() *MaintenanceOption {
	this := MaintenanceOption{}
	return &this
}

// NewMaintenanceOptionWithDefaults instantiates a new MaintenanceOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaintenanceOptionWithDefaults() *MaintenanceOption {
	this := MaintenanceOption{}
	return &this
}

// GetPeriodHour returns the PeriodHour field value if set, zero value otherwise.
func (o *MaintenanceOption) GetPeriodHour() string {
	if o == nil || IsNil(o.PeriodHour) {
		var ret string
		return ret
	}
	return *o.PeriodHour
}

// GetPeriodHourOk returns a tuple with the PeriodHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceOption) GetPeriodHourOk() (*string, bool) {
	if o == nil || IsNil(o.PeriodHour) {
		return nil, false
	}
	return o.PeriodHour, true
}

// HasPeriodHour returns a boolean if a field has been set.
func (o *MaintenanceOption) HasPeriodHour() bool {
	if o != nil && !IsNil(o.PeriodHour) {
		return true
	}

	return false
}

// SetPeriodHour gets a reference to the given string and assigns it to the PeriodHour field.
func (o *MaintenanceOption) SetPeriodHour(v string) {
	o.PeriodHour = &v
}

// GetStartingDayOfWeek returns the StartingDayOfWeek field value if set, zero value otherwise.
func (o *MaintenanceOption) GetStartingDayOfWeek() DayOfWeek {
	if o == nil || IsNil(o.StartingDayOfWeek) {
		var ret DayOfWeek
		return ret
	}
	return *o.StartingDayOfWeek
}

// GetStartingDayOfWeekOk returns a tuple with the StartingDayOfWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceOption) GetStartingDayOfWeekOk() (*DayOfWeek, bool) {
	if o == nil || IsNil(o.StartingDayOfWeek) {
		return nil, false
	}
	return o.StartingDayOfWeek, true
}

// HasStartingDayOfWeek returns a boolean if a field has been set.
func (o *MaintenanceOption) HasStartingDayOfWeek() bool {
	if o != nil && !IsNil(o.StartingDayOfWeek) {
		return true
	}

	return false
}

// SetStartingDayOfWeek gets a reference to the given DayOfWeek and assigns it to the StartingDayOfWeek field.
func (o *MaintenanceOption) SetStartingDayOfWeek(v DayOfWeek) {
	o.StartingDayOfWeek = &v
}

// GetStartingTime returns the StartingTime field value if set, zero value otherwise.
func (o *MaintenanceOption) GetStartingTime() string {
	if o == nil || IsNil(o.StartingTime) {
		var ret string
		return ret
	}
	return *o.StartingTime
}

// GetStartingTimeOk returns a tuple with the StartingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceOption) GetStartingTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartingTime) {
		return nil, false
	}
	return o.StartingTime, true
}

// HasStartingTime returns a boolean if a field has been set.
func (o *MaintenanceOption) HasStartingTime() bool {
	if o != nil && !IsNil(o.StartingTime) {
		return true
	}

	return false
}

// SetStartingTime gets a reference to the given string and assigns it to the StartingTime field.
func (o *MaintenanceOption) SetStartingTime(v string) {
	o.StartingTime = &v
}

func (o MaintenanceOption) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MaintenanceOption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PeriodHour) {
		toSerialize["period_hour"] = o.PeriodHour
	}
	if !IsNil(o.StartingDayOfWeek) {
		toSerialize["starting_day_of_week"] = o.StartingDayOfWeek
	}
	if !IsNil(o.StartingTime) {
		toSerialize["starting_time"] = o.StartingTime
	}
	return toSerialize, nil
}

type NullableMaintenanceOption struct {
	value *MaintenanceOption
	isSet bool
}

func (v NullableMaintenanceOption) Get() *MaintenanceOption {
	return v.value
}

func (v *NullableMaintenanceOption) Set(val *MaintenanceOption) {
	v.value = val
	v.isSet = true
}

func (v NullableMaintenanceOption) IsSet() bool {
	return v.isSet
}

func (v *NullableMaintenanceOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaintenanceOption(val *MaintenanceOption) *NullableMaintenanceOption {
	return &NullableMaintenanceOption{value: val, isSet: true}
}

func (v NullableMaintenanceOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaintenanceOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


